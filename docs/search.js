window.pdocSearch = (function(){
/** elasticlunr - http://weixsong.github.io * Copyright (C) 2017 Oliver Nightingale * Copyright (C) 2017 Wei Song * MIT Licensed */!function(){function e(e){if(null===e||"object"!=typeof e)return e;var t=e.constructor();for(var n in e)e.hasOwnProperty(n)&&(t[n]=e[n]);return t}var t=function(e){var n=new t.Index;return n.pipeline.add(t.trimmer,t.stopWordFilter,t.stemmer),e&&e.call(n,n),n};t.version="0.9.5",lunr=t,t.utils={},t.utils.warn=function(e){return function(t){e.console&&console.warn&&console.warn(t)}}(this),t.utils.toString=function(e){return void 0===e||null===e?"":e.toString()},t.EventEmitter=function(){this.events={}},t.EventEmitter.prototype.addListener=function(){var e=Array.prototype.slice.call(arguments),t=e.pop(),n=e;if("function"!=typeof t)throw new TypeError("last argument must be a function");n.forEach(function(e){this.hasHandler(e)||(this.events[e]=[]),this.events[e].push(t)},this)},t.EventEmitter.prototype.removeListener=function(e,t){if(this.hasHandler(e)){var n=this.events[e].indexOf(t);-1!==n&&(this.events[e].splice(n,1),0==this.events[e].length&&delete this.events[e])}},t.EventEmitter.prototype.emit=function(e){if(this.hasHandler(e)){var t=Array.prototype.slice.call(arguments,1);this.events[e].forEach(function(e){e.apply(void 0,t)},this)}},t.EventEmitter.prototype.hasHandler=function(e){return e in this.events},t.tokenizer=function(e){if(!arguments.length||null===e||void 0===e)return[];if(Array.isArray(e)){var n=e.filter(function(e){return null===e||void 0===e?!1:!0});n=n.map(function(e){return t.utils.toString(e).toLowerCase()});var i=[];return n.forEach(function(e){var n=e.split(t.tokenizer.seperator);i=i.concat(n)},this),i}return e.toString().trim().toLowerCase().split(t.tokenizer.seperator)},t.tokenizer.defaultSeperator=/[\s\-]+/,t.tokenizer.seperator=t.tokenizer.defaultSeperator,t.tokenizer.setSeperator=function(e){null!==e&&void 0!==e&&"object"==typeof e&&(t.tokenizer.seperator=e)},t.tokenizer.resetSeperator=function(){t.tokenizer.seperator=t.tokenizer.defaultSeperator},t.tokenizer.getSeperator=function(){return t.tokenizer.seperator},t.Pipeline=function(){this._queue=[]},t.Pipeline.registeredFunctions={},t.Pipeline.registerFunction=function(e,n){n in t.Pipeline.registeredFunctions&&t.utils.warn("Overwriting existing registered function: "+n),e.label=n,t.Pipeline.registeredFunctions[n]=e},t.Pipeline.getRegisteredFunction=function(e){return e in t.Pipeline.registeredFunctions!=!0?null:t.Pipeline.registeredFunctions[e]},t.Pipeline.warnIfFunctionNotRegistered=function(e){var n=e.label&&e.label in this.registeredFunctions;n||t.utils.warn("Function is not registered with pipeline. This may cause problems when serialising the index.\n",e)},t.Pipeline.load=function(e){var n=new t.Pipeline;return e.forEach(function(e){var i=t.Pipeline.getRegisteredFunction(e);if(!i)throw new Error("Cannot load un-registered function: "+e);n.add(i)}),n},t.Pipeline.prototype.add=function(){var e=Array.prototype.slice.call(arguments);e.forEach(function(e){t.Pipeline.warnIfFunctionNotRegistered(e),this._queue.push(e)},this)},t.Pipeline.prototype.after=function(e,n){t.Pipeline.warnIfFunctionNotRegistered(n);var i=this._queue.indexOf(e);if(-1===i)throw new Error("Cannot find existingFn");this._queue.splice(i+1,0,n)},t.Pipeline.prototype.before=function(e,n){t.Pipeline.warnIfFunctionNotRegistered(n);var i=this._queue.indexOf(e);if(-1===i)throw new Error("Cannot find existingFn");this._queue.splice(i,0,n)},t.Pipeline.prototype.remove=function(e){var t=this._queue.indexOf(e);-1!==t&&this._queue.splice(t,1)},t.Pipeline.prototype.run=function(e){for(var t=[],n=e.length,i=this._queue.length,o=0;n>o;o++){for(var r=e[o],s=0;i>s&&(r=this._queue[s](r,o,e),void 0!==r&&null!==r);s++);void 0!==r&&null!==r&&t.push(r)}return t},t.Pipeline.prototype.reset=function(){this._queue=[]},t.Pipeline.prototype.get=function(){return this._queue},t.Pipeline.prototype.toJSON=function(){return this._queue.map(function(e){return t.Pipeline.warnIfFunctionNotRegistered(e),e.label})},t.Index=function(){this._fields=[],this._ref="id",this.pipeline=new t.Pipeline,this.documentStore=new t.DocumentStore,this.index={},this.eventEmitter=new t.EventEmitter,this._idfCache={},this.on("add","remove","update",function(){this._idfCache={}}.bind(this))},t.Index.prototype.on=function(){var e=Array.prototype.slice.call(arguments);return this.eventEmitter.addListener.apply(this.eventEmitter,e)},t.Index.prototype.off=function(e,t){return this.eventEmitter.removeListener(e,t)},t.Index.load=function(e){e.version!==t.version&&t.utils.warn("version mismatch: current "+t.version+" importing "+e.version);var n=new this;n._fields=e.fields,n._ref=e.ref,n.documentStore=t.DocumentStore.load(e.documentStore),n.pipeline=t.Pipeline.load(e.pipeline),n.index={};for(var i in e.index)n.index[i]=t.InvertedIndex.load(e.index[i]);return n},t.Index.prototype.addField=function(e){return this._fields.push(e),this.index[e]=new t.InvertedIndex,this},t.Index.prototype.setRef=function(e){return this._ref=e,this},t.Index.prototype.saveDocument=function(e){return this.documentStore=new t.DocumentStore(e),this},t.Index.prototype.addDoc=function(e,n){if(e){var n=void 0===n?!0:n,i=e[this._ref];this.documentStore.addDoc(i,e),this._fields.forEach(function(n){var o=this.pipeline.run(t.tokenizer(e[n]));this.documentStore.addFieldLength(i,n,o.length);var r={};o.forEach(function(e){e in r?r[e]+=1:r[e]=1},this);for(var s in r){var u=r[s];u=Math.sqrt(u),this.index[n].addToken(s,{ref:i,tf:u})}},this),n&&this.eventEmitter.emit("add",e,this)}},t.Index.prototype.removeDocByRef=function(e){if(e&&this.documentStore.isDocStored()!==!1&&this.documentStore.hasDoc(e)){var t=this.documentStore.getDoc(e);this.removeDoc(t,!1)}},t.Index.prototype.removeDoc=function(e,n){if(e){var n=void 0===n?!0:n,i=e[this._ref];this.documentStore.hasDoc(i)&&(this.documentStore.removeDoc(i),this._fields.forEach(function(n){var o=this.pipeline.run(t.tokenizer(e[n]));o.forEach(function(e){this.index[n].removeToken(e,i)},this)},this),n&&this.eventEmitter.emit("remove",e,this))}},t.Index.prototype.updateDoc=function(e,t){var t=void 0===t?!0:t;this.removeDocByRef(e[this._ref],!1),this.addDoc(e,!1),t&&this.eventEmitter.emit("update",e,this)},t.Index.prototype.idf=function(e,t){var n="@"+t+"/"+e;if(Object.prototype.hasOwnProperty.call(this._idfCache,n))return this._idfCache[n];var i=this.index[t].getDocFreq(e),o=1+Math.log(this.documentStore.length/(i+1));return this._idfCache[n]=o,o},t.Index.prototype.getFields=function(){return this._fields.slice()},t.Index.prototype.search=function(e,n){if(!e)return[];e="string"==typeof e?{any:e}:JSON.parse(JSON.stringify(e));var i=null;null!=n&&(i=JSON.stringify(n));for(var o=new t.Configuration(i,this.getFields()).get(),r={},s=Object.keys(e),u=0;u<s.length;u++){var a=s[u];r[a]=this.pipeline.run(t.tokenizer(e[a]))}var l={};for(var c in o){var d=r[c]||r.any;if(d){var f=this.fieldSearch(d,c,o),h=o[c].boost;for(var p in f)f[p]=f[p]*h;for(var p in f)p in l?l[p]+=f[p]:l[p]=f[p]}}var v,g=[];for(var p in l)v={ref:p,score:l[p]},this.documentStore.hasDoc(p)&&(v.doc=this.documentStore.getDoc(p)),g.push(v);return g.sort(function(e,t){return t.score-e.score}),g},t.Index.prototype.fieldSearch=function(e,t,n){var i=n[t].bool,o=n[t].expand,r=n[t].boost,s=null,u={};return 0!==r?(e.forEach(function(e){var n=[e];1==o&&(n=this.index[t].expandToken(e));var r={};n.forEach(function(n){var o=this.index[t].getDocs(n),a=this.idf(n,t);if(s&&"AND"==i){var l={};for(var c in s)c in o&&(l[c]=o[c]);o=l}n==e&&this.fieldSearchStats(u,n,o);for(var c in o){var d=this.index[t].getTermFrequency(n,c),f=this.documentStore.getFieldLength(c,t),h=1;0!=f&&(h=1/Math.sqrt(f));var p=1;n!=e&&(p=.15*(1-(n.length-e.length)/n.length));var v=d*a*h*p;c in r?r[c]+=v:r[c]=v}},this),s=this.mergeScores(s,r,i)},this),s=this.coordNorm(s,u,e.length)):void 0},t.Index.prototype.mergeScores=function(e,t,n){if(!e)return t;if("AND"==n){var i={};for(var o in t)o in e&&(i[o]=e[o]+t[o]);return i}for(var o in t)o in e?e[o]+=t[o]:e[o]=t[o];return e},t.Index.prototype.fieldSearchStats=function(e,t,n){for(var i in n)i in e?e[i].push(t):e[i]=[t]},t.Index.prototype.coordNorm=function(e,t,n){for(var i in e)if(i in t){var o=t[i].length;e[i]=e[i]*o/n}return e},t.Index.prototype.toJSON=function(){var e={};return this._fields.forEach(function(t){e[t]=this.index[t].toJSON()},this),{version:t.version,fields:this._fields,ref:this._ref,documentStore:this.documentStore.toJSON(),index:e,pipeline:this.pipeline.toJSON()}},t.Index.prototype.use=function(e){var t=Array.prototype.slice.call(arguments,1);t.unshift(this),e.apply(this,t)},t.DocumentStore=function(e){this._save=null===e||void 0===e?!0:e,this.docs={},this.docInfo={},this.length=0},t.DocumentStore.load=function(e){var t=new this;return t.length=e.length,t.docs=e.docs,t.docInfo=e.docInfo,t._save=e.save,t},t.DocumentStore.prototype.isDocStored=function(){return this._save},t.DocumentStore.prototype.addDoc=function(t,n){this.hasDoc(t)||this.length++,this.docs[t]=this._save===!0?e(n):null},t.DocumentStore.prototype.getDoc=function(e){return this.hasDoc(e)===!1?null:this.docs[e]},t.DocumentStore.prototype.hasDoc=function(e){return e in this.docs},t.DocumentStore.prototype.removeDoc=function(e){this.hasDoc(e)&&(delete this.docs[e],delete this.docInfo[e],this.length--)},t.DocumentStore.prototype.addFieldLength=function(e,t,n){null!==e&&void 0!==e&&0!=this.hasDoc(e)&&(this.docInfo[e]||(this.docInfo[e]={}),this.docInfo[e][t]=n)},t.DocumentStore.prototype.updateFieldLength=function(e,t,n){null!==e&&void 0!==e&&0!=this.hasDoc(e)&&this.addFieldLength(e,t,n)},t.DocumentStore.prototype.getFieldLength=function(e,t){return null===e||void 0===e?0:e in this.docs&&t in this.docInfo[e]?this.docInfo[e][t]:0},t.DocumentStore.prototype.toJSON=function(){return{docs:this.docs,docInfo:this.docInfo,length:this.length,save:this._save}},t.stemmer=function(){var e={ational:"ate",tional:"tion",enci:"ence",anci:"ance",izer:"ize",bli:"ble",alli:"al",entli:"ent",eli:"e",ousli:"ous",ization:"ize",ation:"ate",ator:"ate",alism:"al",iveness:"ive",fulness:"ful",ousness:"ous",aliti:"al",iviti:"ive",biliti:"ble",logi:"log"},t={icate:"ic",ative:"",alize:"al",iciti:"ic",ical:"ic",ful:"",ness:""},n="[^aeiou]",i="[aeiouy]",o=n+"[^aeiouy]*",r=i+"[aeiou]*",s="^("+o+")?"+r+o,u="^("+o+")?"+r+o+"("+r+")?$",a="^("+o+")?"+r+o+r+o,l="^("+o+")?"+i,c=new RegExp(s),d=new RegExp(a),f=new RegExp(u),h=new RegExp(l),p=/^(.+?)(ss|i)es$/,v=/^(.+?)([^s])s$/,g=/^(.+?)eed$/,m=/^(.+?)(ed|ing)$/,y=/.$/,S=/(at|bl|iz)$/,x=new RegExp("([^aeiouylsz])\\1$"),w=new RegExp("^"+o+i+"[^aeiouwxy]$"),I=/^(.+?[^aeiou])y$/,b=/^(.+?)(ational|tional|enci|anci|izer|bli|alli|entli|eli|ousli|ization|ation|ator|alism|iveness|fulness|ousness|aliti|iviti|biliti|logi)$/,E=/^(.+?)(icate|ative|alize|iciti|ical|ful|ness)$/,D=/^(.+?)(al|ance|ence|er|ic|able|ible|ant|ement|ment|ent|ou|ism|ate|iti|ous|ive|ize)$/,F=/^(.+?)(s|t)(ion)$/,_=/^(.+?)e$/,P=/ll$/,k=new RegExp("^"+o+i+"[^aeiouwxy]$"),z=function(n){var i,o,r,s,u,a,l;if(n.length<3)return n;if(r=n.substr(0,1),"y"==r&&(n=r.toUpperCase()+n.substr(1)),s=p,u=v,s.test(n)?n=n.replace(s,"$1$2"):u.test(n)&&(n=n.replace(u,"$1$2")),s=g,u=m,s.test(n)){var z=s.exec(n);s=c,s.test(z[1])&&(s=y,n=n.replace(s,""))}else if(u.test(n)){var z=u.exec(n);i=z[1],u=h,u.test(i)&&(n=i,u=S,a=x,l=w,u.test(n)?n+="e":a.test(n)?(s=y,n=n.replace(s,"")):l.test(n)&&(n+="e"))}if(s=I,s.test(n)){var z=s.exec(n);i=z[1],n=i+"i"}if(s=b,s.test(n)){var z=s.exec(n);i=z[1],o=z[2],s=c,s.test(i)&&(n=i+e[o])}if(s=E,s.test(n)){var z=s.exec(n);i=z[1],o=z[2],s=c,s.test(i)&&(n=i+t[o])}if(s=D,u=F,s.test(n)){var z=s.exec(n);i=z[1],s=d,s.test(i)&&(n=i)}else if(u.test(n)){var z=u.exec(n);i=z[1]+z[2],u=d,u.test(i)&&(n=i)}if(s=_,s.test(n)){var z=s.exec(n);i=z[1],s=d,u=f,a=k,(s.test(i)||u.test(i)&&!a.test(i))&&(n=i)}return s=P,u=d,s.test(n)&&u.test(n)&&(s=y,n=n.replace(s,"")),"y"==r&&(n=r.toLowerCase()+n.substr(1)),n};return z}(),t.Pipeline.registerFunction(t.stemmer,"stemmer"),t.stopWordFilter=function(e){return e&&t.stopWordFilter.stopWords[e]!==!0?e:void 0},t.clearStopWords=function(){t.stopWordFilter.stopWords={}},t.addStopWords=function(e){null!=e&&Array.isArray(e)!==!1&&e.forEach(function(e){t.stopWordFilter.stopWords[e]=!0},this)},t.resetStopWords=function(){t.stopWordFilter.stopWords=t.defaultStopWords},t.defaultStopWords={"":!0,a:!0,able:!0,about:!0,across:!0,after:!0,all:!0,almost:!0,also:!0,am:!0,among:!0,an:!0,and:!0,any:!0,are:!0,as:!0,at:!0,be:!0,because:!0,been:!0,but:!0,by:!0,can:!0,cannot:!0,could:!0,dear:!0,did:!0,"do":!0,does:!0,either:!0,"else":!0,ever:!0,every:!0,"for":!0,from:!0,get:!0,got:!0,had:!0,has:!0,have:!0,he:!0,her:!0,hers:!0,him:!0,his:!0,how:!0,however:!0,i:!0,"if":!0,"in":!0,into:!0,is:!0,it:!0,its:!0,just:!0,least:!0,let:!0,like:!0,likely:!0,may:!0,me:!0,might:!0,most:!0,must:!0,my:!0,neither:!0,no:!0,nor:!0,not:!0,of:!0,off:!0,often:!0,on:!0,only:!0,or:!0,other:!0,our:!0,own:!0,rather:!0,said:!0,say:!0,says:!0,she:!0,should:!0,since:!0,so:!0,some:!0,than:!0,that:!0,the:!0,their:!0,them:!0,then:!0,there:!0,these:!0,they:!0,"this":!0,tis:!0,to:!0,too:!0,twas:!0,us:!0,wants:!0,was:!0,we:!0,were:!0,what:!0,when:!0,where:!0,which:!0,"while":!0,who:!0,whom:!0,why:!0,will:!0,"with":!0,would:!0,yet:!0,you:!0,your:!0},t.stopWordFilter.stopWords=t.defaultStopWords,t.Pipeline.registerFunction(t.stopWordFilter,"stopWordFilter"),t.trimmer=function(e){if(null===e||void 0===e)throw new Error("token should not be undefined");return e.replace(/^\W+/,"").replace(/\W+$/,"")},t.Pipeline.registerFunction(t.trimmer,"trimmer"),t.InvertedIndex=function(){this.root={docs:{},df:0}},t.InvertedIndex.load=function(e){var t=new this;return t.root=e.root,t},t.InvertedIndex.prototype.addToken=function(e,t,n){for(var n=n||this.root,i=0;i<=e.length-1;){var o=e[i];o in n||(n[o]={docs:{},df:0}),i+=1,n=n[o]}var r=t.ref;n.docs[r]?n.docs[r]={tf:t.tf}:(n.docs[r]={tf:t.tf},n.df+=1)},t.InvertedIndex.prototype.hasToken=function(e){if(!e)return!1;for(var t=this.root,n=0;n<e.length;n++){if(!t[e[n]])return!1;t=t[e[n]]}return!0},t.InvertedIndex.prototype.getNode=function(e){if(!e)return null;for(var t=this.root,n=0;n<e.length;n++){if(!t[e[n]])return null;t=t[e[n]]}return t},t.InvertedIndex.prototype.getDocs=function(e){var t=this.getNode(e);return null==t?{}:t.docs},t.InvertedIndex.prototype.getTermFrequency=function(e,t){var n=this.getNode(e);return null==n?0:t in n.docs?n.docs[t].tf:0},t.InvertedIndex.prototype.getDocFreq=function(e){var t=this.getNode(e);return null==t?0:t.df},t.InvertedIndex.prototype.removeToken=function(e,t){if(e){var n=this.getNode(e);null!=n&&t in n.docs&&(delete n.docs[t],n.df-=1)}},t.InvertedIndex.prototype.expandToken=function(e,t,n){if(null==e||""==e)return[];var t=t||[];if(void 0==n&&(n=this.getNode(e),null==n))return t;n.df>0&&t.push(e);for(var i in n)"docs"!==i&&"df"!==i&&this.expandToken(e+i,t,n[i]);return t},t.InvertedIndex.prototype.toJSON=function(){return{root:this.root}},t.Configuration=function(e,n){var e=e||"";if(void 0==n||null==n)throw new Error("fields should not be null");this.config={};var i;try{i=JSON.parse(e),this.buildUserConfig(i,n)}catch(o){t.utils.warn("user configuration parse failed, will use default configuration"),this.buildDefaultConfig(n)}},t.Configuration.prototype.buildDefaultConfig=function(e){this.reset(),e.forEach(function(e){this.config[e]={boost:1,bool:"OR",expand:!1}},this)},t.Configuration.prototype.buildUserConfig=function(e,n){var i="OR",o=!1;if(this.reset(),"bool"in e&&(i=e.bool||i),"expand"in e&&(o=e.expand||o),"fields"in e)for(var r in e.fields)if(n.indexOf(r)>-1){var s=e.fields[r],u=o;void 0!=s.expand&&(u=s.expand),this.config[r]={boost:s.boost||0===s.boost?s.boost:1,bool:s.bool||i,expand:u}}else t.utils.warn("field name in user configuration not found in index instance fields");else this.addAllFields2UserConfig(i,o,n)},t.Configuration.prototype.addAllFields2UserConfig=function(e,t,n){n.forEach(function(n){this.config[n]={boost:1,bool:e,expand:t}},this)},t.Configuration.prototype.get=function(){return this.config},t.Configuration.prototype.reset=function(){this.config={}},lunr.SortedSet=function(){this.length=0,this.elements=[]},lunr.SortedSet.load=function(e){var t=new this;return t.elements=e,t.length=e.length,t},lunr.SortedSet.prototype.add=function(){var e,t;for(e=0;e<arguments.length;e++)t=arguments[e],~this.indexOf(t)||this.elements.splice(this.locationFor(t),0,t);this.length=this.elements.length},lunr.SortedSet.prototype.toArray=function(){return this.elements.slice()},lunr.SortedSet.prototype.map=function(e,t){return this.elements.map(e,t)},lunr.SortedSet.prototype.forEach=function(e,t){return this.elements.forEach(e,t)},lunr.SortedSet.prototype.indexOf=function(e){for(var t=0,n=this.elements.length,i=n-t,o=t+Math.floor(i/2),r=this.elements[o];i>1;){if(r===e)return o;e>r&&(t=o),r>e&&(n=o),i=n-t,o=t+Math.floor(i/2),r=this.elements[o]}return r===e?o:-1},lunr.SortedSet.prototype.locationFor=function(e){for(var t=0,n=this.elements.length,i=n-t,o=t+Math.floor(i/2),r=this.elements[o];i>1;)e>r&&(t=o),r>e&&(n=o),i=n-t,o=t+Math.floor(i/2),r=this.elements[o];return r>e?o:e>r?o+1:void 0},lunr.SortedSet.prototype.intersect=function(e){for(var t=new lunr.SortedSet,n=0,i=0,o=this.length,r=e.length,s=this.elements,u=e.elements;;){if(n>o-1||i>r-1)break;s[n]!==u[i]?s[n]<u[i]?n++:s[n]>u[i]&&i++:(t.add(s[n]),n++,i++)}return t},lunr.SortedSet.prototype.clone=function(){var e=new lunr.SortedSet;return e.elements=this.toArray(),e.length=e.elements.length,e},lunr.SortedSet.prototype.union=function(e){var t,n,i;this.length>=e.length?(t=this,n=e):(t=e,n=this),i=t.clone();for(var o=0,r=n.toArray();o<r.length;o++)i.add(r[o]);return i},lunr.SortedSet.prototype.toJSON=function(){return this.toArray()},function(e,t){"function"==typeof define&&define.amd?define(t):"object"==typeof exports?module.exports=t():e.elasticlunr=t()}(this,function(){return t})}();
    /** pdoc search index */const docs = {"version": "0.9.5", "fields": ["qualname", "fullname", "annotation", "default_value", "signature", "bases", "doc"], "ref": "fullname", "documentStore": {"docs": {"ifri_mini_ml_lib": {"fullname": "ifri_mini_ml_lib", "modulename": "ifri_mini_ml_lib", "kind": "module", "doc": "<h1 id=\"ifri-mini-ml-library\">IFRI Mini ML Library</h1>\n\n<p>A concise and educational implementation of machine learning algorithms.</p>\n\n<h2 id=\"features\">Features</h2>\n\n<ul>\n<li><strong>Classification</strong>: Decision Trees, KNN, Logistic Regression</li>\n<li><strong>Clustering</strong>: K-Means, DBSCAN, Hierarchical</li>\n<li><strong>Regression</strong>: Linear, Polynomial, SVR</li>\n<li><strong>Neural Networks</strong>: MLP Classifier and Regressor</li>\n<li><strong>Preprocessing</strong>: Scalers, Encoders, PCA, t-SNE</li>\n<li><strong>Model Selection</strong>: Cross-validation, Grid Search, Bayesian Search</li>\n<li><strong>Association Rules</strong>: Apriori, Eclat, FP-Growth</li>\n<li><strong>Metrics</strong>: Accuracy, Precision, Recall, F1 Score, Silhouette Score, Inertia</li>\n</ul>\n"}, "ifri_mini_ml_lib.association_rules": {"fullname": "ifri_mini_ml_lib.association_rules", "modulename": "ifri_mini_ml_lib.association_rules", "kind": "module", "doc": "<p></p>\n"}, "ifri_mini_ml_lib.association_rules.Apriori": {"fullname": "ifri_mini_ml_lib.association_rules.Apriori", "modulename": "ifri_mini_ml_lib.association_rules", "qualname": "Apriori", "kind": "class", "doc": "<p>The Apriori algorithm is used to discover interesting association rules\nin large transactional datasets. For more details: \n<a href=\"http://www.vldb.org/conf/1994/P487.PDF\">Agrawal, R., &amp; Srikant, R. (1994, September) </a></p>\n\n<p>Args:\n    min_support(float): Minimum support threshold for considering an itemset\n    min_confidence(float): Minimum confidence threshold for a rule</p>\n\n<p>Examples:</p>\n\n<div class=\"pdoc-code codehilite\">\n<pre><span></span><code><span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">transactions</span> <span class=\"o\">=</span> <span class=\"p\">[</span>\n<span class=\"gp\">... </span>    <span class=\"p\">{</span><span class=\"s1\">&#39;bread&#39;</span><span class=\"p\">,</span> <span class=\"s1\">&#39;milk&#39;</span><span class=\"p\">,</span> <span class=\"s1\">&#39;butter&#39;</span><span class=\"p\">},</span>\n<span class=\"gp\">... </span>    <span class=\"p\">{</span><span class=\"s1\">&#39;bread&#39;</span><span class=\"p\">,</span> <span class=\"s1\">&#39;jam&#39;</span><span class=\"p\">,</span> <span class=\"s1\">&#39;eggs&#39;</span><span class=\"p\">},</span>\n<span class=\"gp\">... </span>    <span class=\"p\">{</span><span class=\"s1\">&#39;milk&#39;</span><span class=\"p\">,</span> <span class=\"s1\">&#39;butter&#39;</span><span class=\"p\">,</span> <span class=\"s1\">&#39;cheese&#39;</span><span class=\"p\">},</span>\n<span class=\"gp\">... </span>    <span class=\"p\">{</span><span class=\"s1\">&#39;bread&#39;</span><span class=\"p\">,</span> <span class=\"s1\">&#39;milk&#39;</span><span class=\"p\">,</span> <span class=\"s1\">&#39;butter&#39;</span><span class=\"p\">,</span> <span class=\"s1\">&#39;cheese&#39;</span><span class=\"p\">},</span>\n<span class=\"gp\">... </span>    <span class=\"p\">{</span><span class=\"s1\">&#39;bread&#39;</span><span class=\"p\">,</span> <span class=\"s1\">&#39;jam&#39;</span><span class=\"p\">,</span> <span class=\"s1\">&#39;milk&#39;</span><span class=\"p\">}</span>\n<span class=\"gp\">... </span><span class=\"p\">]</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"kn\">from</span><span class=\"w\"> </span><span class=\"nn\">ifri_mini_ml_lib.association_rules</span><span class=\"w\"> </span><span class=\"kn\">import</span> <span class=\"n\">Apriori</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">apriori</span> <span class=\"o\">=</span> <span class=\"n\">Apriori</span><span class=\"p\">(</span><span class=\"n\">min_support</span><span class=\"o\">=</span><span class=\"mf\">0.4</span><span class=\"p\">,</span> <span class=\"n\">min_confidence</span><span class=\"o\">=</span><span class=\"mf\">0.6</span><span class=\"p\">)</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">apriori</span><span class=\"o\">.</span><span class=\"n\">fit</span><span class=\"p\">(</span><span class=\"n\">transactions</span><span class=\"p\">)</span> <span class=\"c1\"># Frequents itemsets + Rules generation</span>\n<span class=\"go\">&lt;ifri_mini_ml_lib.association_rules.apriori.Apriori object&gt;</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">frequent_itemsets</span> <span class=\"o\">=</span> <span class=\"n\">apriori</span><span class=\"o\">.</span><span class=\"n\">get_frequent_itemsets</span><span class=\"p\">()</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"c1\"># Displaying frequent itemsets of size 1</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"k\">for</span> <span class=\"n\">item</span> <span class=\"ow\">in</span> <span class=\"n\">frequent_itemsets</span><span class=\"p\">[</span><span class=\"mi\">1</span><span class=\"p\">]:</span>\n<span class=\"gp\">... </span>    <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"sa\">f</span><span class=\"s2\">&quot;Item: </span><span class=\"si\">{</span><span class=\"nb\">list</span><span class=\"p\">(</span><span class=\"n\">item</span><span class=\"p\">)[</span><span class=\"mi\">0</span><span class=\"p\">]</span><span class=\"si\">}</span><span class=\"s2\">&quot;</span><span class=\"p\">)</span>\n<span class=\"go\">Item: bread</span>\n<span class=\"go\">Item: milk</span>\n<span class=\"go\">Item: butter</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">rules</span> <span class=\"o\">=</span> <span class=\"n\">apriori</span><span class=\"o\">.</span><span class=\"n\">get_rules</span><span class=\"p\">()</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"c1\"># Displaying some association rules</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"k\">if</span> <span class=\"n\">rules</span><span class=\"p\">:</span>\n<span class=\"gp\">... </span>    <span class=\"k\">for</span> <span class=\"n\">rule</span> <span class=\"ow\">in</span> <span class=\"n\">rules</span><span class=\"p\">[:</span><span class=\"mi\">2</span><span class=\"p\">]:</span>\n<span class=\"gp\">... </span>        <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"sa\">f</span><span class=\"s2\">&quot;</span><span class=\"si\">{</span><span class=\"nb\">set</span><span class=\"p\">(</span><span class=\"n\">rule</span><span class=\"p\">[</span><span class=\"s1\">&#39;antecedent&#39;</span><span class=\"p\">])</span><span class=\"si\">}</span><span class=\"s2\"> -&gt; </span><span class=\"si\">{</span><span class=\"nb\">set</span><span class=\"p\">(</span><span class=\"n\">rule</span><span class=\"p\">[</span><span class=\"s1\">&#39;consequent&#39;</span><span class=\"p\">])</span><span class=\"si\">}</span><span class=\"s2\">, &quot;</span>\n<span class=\"gp\">... </span>              <span class=\"sa\">f</span><span class=\"s2\">&quot;Support: </span><span class=\"si\">{</span><span class=\"n\">rule</span><span class=\"p\">[</span><span class=\"s1\">&#39;support&#39;</span><span class=\"p\">]</span><span class=\"si\">:</span><span class=\"s2\">.2f</span><span class=\"si\">}</span><span class=\"s2\">, Confidence: </span><span class=\"si\">{</span><span class=\"n\">rule</span><span class=\"p\">[</span><span class=\"s1\">&#39;confidence&#39;</span><span class=\"p\">]</span><span class=\"si\">:</span><span class=\"s2\">.2f</span><span class=\"si\">}</span><span class=\"s2\">&quot;</span><span class=\"p\">)</span>\n<span class=\"go\">{&#39;milk&#39;} -&gt; {&#39;bread&#39;}, Support: 0.60, Confidence: 0.75</span>\n<span class=\"go\">{&#39;bread&#39;} -&gt; {&#39;milk&#39;}, Support: 0.60, Confidence: 0.75</span>\n</code></pre>\n</div>\n"}, "ifri_mini_ml_lib.association_rules.Apriori.__init__": {"fullname": "ifri_mini_ml_lib.association_rules.Apriori.__init__", "modulename": "ifri_mini_ml_lib.association_rules", "qualname": "Apriori.__init__", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">min_support</span><span class=\"p\">:</span> <span class=\"nb\">float</span>, </span><span class=\"param\"><span class=\"n\">min_confidence</span><span class=\"p\">:</span> <span class=\"nb\">float</span></span>)</span>"}, "ifri_mini_ml_lib.association_rules.Apriori.min_support": {"fullname": "ifri_mini_ml_lib.association_rules.Apriori.min_support", "modulename": "ifri_mini_ml_lib.association_rules", "qualname": "Apriori.min_support", "kind": "variable", "doc": "<p></p>\n"}, "ifri_mini_ml_lib.association_rules.Apriori.min_confidence": {"fullname": "ifri_mini_ml_lib.association_rules.Apriori.min_confidence", "modulename": "ifri_mini_ml_lib.association_rules", "qualname": "Apriori.min_confidence", "kind": "variable", "doc": "<p></p>\n"}, "ifri_mini_ml_lib.association_rules.Apriori.frequent_itemsets_": {"fullname": "ifri_mini_ml_lib.association_rules.Apriori.frequent_itemsets_", "modulename": "ifri_mini_ml_lib.association_rules", "qualname": "Apriori.frequent_itemsets_", "kind": "variable", "doc": "<p></p>\n"}, "ifri_mini_ml_lib.association_rules.Apriori.rules_": {"fullname": "ifri_mini_ml_lib.association_rules.Apriori.rules_", "modulename": "ifri_mini_ml_lib.association_rules", "qualname": "Apriori.rules_", "kind": "variable", "doc": "<p></p>\n"}, "ifri_mini_ml_lib.association_rules.Apriori.fit": {"fullname": "ifri_mini_ml_lib.association_rules.Apriori.fit", "modulename": "ifri_mini_ml_lib.association_rules", "qualname": "Apriori.fit", "kind": "function", "doc": "<p>Main method for learning frequent itemsets and rules.</p>\n\n<p>Args:\n    transactions: Input data (list[set])</p>\n\n<p>Returns:\n    self: The current instance for method chaining</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">transactions</span><span class=\"p\">:</span> <span class=\"nb\">list</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "ifri_mini_ml_lib.association_rules.Apriori.get_frequent_itemsets": {"fullname": "ifri_mini_ml_lib.association_rules.Apriori.get_frequent_itemsets", "modulename": "ifri_mini_ml_lib.association_rules", "qualname": "Apriori.get_frequent_itemsets", "kind": "function", "doc": "<p>Retrieve the discovered frequent itemsets.</p>\n\n<p>Returns:\n    dict: Dictionary of frequent itemsets where keys are sizes\n        and values are sets of itemsets</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "ifri_mini_ml_lib.association_rules.Apriori.get_rules": {"fullname": "ifri_mini_ml_lib.association_rules.Apriori.get_rules", "modulename": "ifri_mini_ml_lib.association_rules", "qualname": "Apriori.get_rules", "kind": "function", "doc": "<p>Retrieve the generated association rules.</p>\n\n<p>Returns:\n    List of association rules</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "ifri_mini_ml_lib.association_rules.Eclat": {"fullname": "ifri_mini_ml_lib.association_rules.Eclat", "modulename": "ifri_mini_ml_lib.association_rules", "qualname": "Eclat", "kind": "class", "doc": "<p>The ECLAT (<strong>Equivalence Class Clustering and bottom-up Lattice Traversal</strong>) algorithm is a depth-first search algorithm that uses a vertical database\nstructure. Rather than explicitly listing all transactions, each item is associated \nwith its coverage (or list of transactions containing that item). The intersection \napproach is used to calculate the support of itemsets. This algorithm is particularly \nefficient for small datasets and requires less space and time than the Apriori \nalgorithm to generate frequent patterns.</p>\n\n<p>For details on algorithm consult \n<a href=\"https://sci2s.ugr.es/keel/pdf/algorithm/articulo/2000%20-%20IEEETKDE%20-%20Zaki%20-%20(Eclat)%20ScalableAlgorithms%20for%20Association%20Mining%20.pdf\">research paper </a>.</p>\n\n<p>Args:\n    min_support (float): Minimum support threshold (between 0 and 1) for frequent itemsets.\n    min_confidence (float): Minimum confidence threshold (between 0 and 1) for association rules.</p>\n\n<p>Examples:</p>\n\n<div class=\"pdoc-code codehilite\">\n<pre><span></span><code><span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">transactions</span> <span class=\"o\">=</span> <span class=\"p\">[</span>\n<span class=\"gp\">... </span>    <span class=\"p\">{</span><span class=\"s1\">&#39;bread&#39;</span><span class=\"p\">,</span> <span class=\"s1\">&#39;milk&#39;</span><span class=\"p\">,</span> <span class=\"s1\">&#39;butter&#39;</span><span class=\"p\">},</span>\n<span class=\"gp\">... </span>    <span class=\"p\">{</span><span class=\"s1\">&#39;bread&#39;</span><span class=\"p\">,</span> <span class=\"s1\">&#39;jam&#39;</span><span class=\"p\">,</span> <span class=\"s1\">&#39;eggs&#39;</span><span class=\"p\">},</span>\n<span class=\"gp\">... </span>    <span class=\"p\">{</span><span class=\"s1\">&#39;milk&#39;</span><span class=\"p\">,</span> <span class=\"s1\">&#39;butter&#39;</span><span class=\"p\">,</span> <span class=\"s1\">&#39;cheese&#39;</span><span class=\"p\">},</span>\n<span class=\"gp\">... </span>    <span class=\"p\">{</span><span class=\"s1\">&#39;bread&#39;</span><span class=\"p\">,</span> <span class=\"s1\">&#39;milk&#39;</span><span class=\"p\">,</span> <span class=\"s1\">&#39;butter&#39;</span><span class=\"p\">,</span> <span class=\"s1\">&#39;cheese&#39;</span><span class=\"p\">},</span>\n<span class=\"gp\">... </span>    <span class=\"p\">{</span><span class=\"s1\">&#39;bread&#39;</span><span class=\"p\">,</span> <span class=\"s1\">&#39;jam&#39;</span><span class=\"p\">,</span> <span class=\"s1\">&#39;milk&#39;</span><span class=\"p\">}</span>\n<span class=\"gp\">... </span><span class=\"p\">]</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"kn\">from</span><span class=\"w\"> </span><span class=\"nn\">ifri_mini_ml_lib.association_rules</span><span class=\"w\"> </span><span class=\"kn\">import</span> <span class=\"n\">Eclat</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">eclat</span> <span class=\"o\">=</span> <span class=\"n\">Eclat</span><span class=\"p\">(</span><span class=\"n\">min_support</span><span class=\"o\">=</span><span class=\"mf\">0.4</span><span class=\"p\">,</span> <span class=\"n\">min_confidence</span><span class=\"o\">=</span><span class=\"mf\">0.6</span><span class=\"p\">)</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">eclat</span><span class=\"o\">.</span><span class=\"n\">fit</span><span class=\"p\">(</span><span class=\"n\">transactions</span><span class=\"p\">)</span> <span class=\"c1\"># Frequents itemsets + Rules generation</span>\n<span class=\"go\">&lt;ifri_mini_ml_lib.association_rules.eclat.Eclat object&gt;</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">frequent_itemsets</span> <span class=\"o\">=</span> <span class=\"n\">eclat</span><span class=\"o\">.</span><span class=\"n\">get_frequent_itemsets</span><span class=\"p\">()</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"c1\"># Displaying frequent itemsets of size 1</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"k\">for</span> <span class=\"n\">itemset</span><span class=\"p\">,</span> <span class=\"n\">tidset</span> <span class=\"ow\">in</span> <span class=\"n\">frequent_itemsets</span><span class=\"p\">[</span><span class=\"mi\">1</span><span class=\"p\">]</span><span class=\"o\">.</span><span class=\"n\">items</span><span class=\"p\">():</span>\n<span class=\"gp\">... </span>    <span class=\"n\">item</span> <span class=\"o\">=</span> <span class=\"nb\">list</span><span class=\"p\">(</span><span class=\"n\">itemset</span><span class=\"p\">)[</span><span class=\"mi\">0</span><span class=\"p\">]</span>\n<span class=\"gp\">... </span>    <span class=\"n\">support</span> <span class=\"o\">=</span> <span class=\"nb\">len</span><span class=\"p\">(</span><span class=\"n\">tidset</span><span class=\"p\">)</span> <span class=\"o\">/</span> <span class=\"nb\">len</span><span class=\"p\">(</span><span class=\"n\">transactions</span><span class=\"p\">)</span>\n<span class=\"gp\">... </span>    <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"sa\">f</span><span class=\"s2\">&quot;Item: </span><span class=\"si\">{</span><span class=\"n\">item</span><span class=\"si\">}</span><span class=\"s2\">, Support: </span><span class=\"si\">{</span><span class=\"n\">support</span><span class=\"si\">:</span><span class=\"s2\">.2f</span><span class=\"si\">}</span><span class=\"s2\">&quot;</span><span class=\"p\">)</span>\n<span class=\"go\">Item: bread, Support: 0.80</span>\n<span class=\"go\">Item: milk, Support: 0.80</span>\n<span class=\"go\">Item: butter, Support: 0.60</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">rules</span> <span class=\"o\">=</span> <span class=\"n\">eclat</span><span class=\"o\">.</span><span class=\"n\">get_rules</span><span class=\"p\">()</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"c1\"># Displaying some association rules</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"k\">if</span> <span class=\"n\">rules</span><span class=\"p\">:</span>\n<span class=\"gp\">... </span>    <span class=\"k\">for</span> <span class=\"n\">rule</span> <span class=\"ow\">in</span> <span class=\"n\">rules</span><span class=\"p\">[:</span><span class=\"mi\">2</span><span class=\"p\">]:</span>\n<span class=\"gp\">... </span>        <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"sa\">f</span><span class=\"s2\">&quot;</span><span class=\"si\">{</span><span class=\"nb\">set</span><span class=\"p\">(</span><span class=\"n\">rule</span><span class=\"p\">[</span><span class=\"s1\">&#39;antecedent&#39;</span><span class=\"p\">])</span><span class=\"si\">}</span><span class=\"s2\"> -&gt; </span><span class=\"si\">{</span><span class=\"nb\">set</span><span class=\"p\">(</span><span class=\"n\">rule</span><span class=\"p\">[</span><span class=\"s1\">&#39;consequent&#39;</span><span class=\"p\">])</span><span class=\"si\">}</span><span class=\"s2\">, &quot;</span>\n<span class=\"gp\">... </span>              <span class=\"sa\">f</span><span class=\"s2\">&quot;Confidence: </span><span class=\"si\">{</span><span class=\"n\">rule</span><span class=\"p\">[</span><span class=\"s1\">&#39;confidence&#39;</span><span class=\"p\">]</span><span class=\"si\">:</span><span class=\"s2\">.2f</span><span class=\"si\">}</span><span class=\"s2\">, Lift: </span><span class=\"si\">{</span><span class=\"n\">rule</span><span class=\"p\">[</span><span class=\"s1\">&#39;lift&#39;</span><span class=\"p\">]</span><span class=\"si\">:</span><span class=\"s2\">.2f</span><span class=\"si\">}</span><span class=\"s2\">&quot;</span><span class=\"p\">)</span>\n<span class=\"go\">{&#39;milk&#39;} -&gt; {&#39;bread&#39;}, Confidence: 0.75, Lift: 0.94</span>\n<span class=\"go\">{&#39;bread&#39;} -&gt; {&#39;milk&#39;}, Confidence: 0.75, Lift: 0.94</span>\n</code></pre>\n</div>\n"}, "ifri_mini_ml_lib.association_rules.Eclat.__init__": {"fullname": "ifri_mini_ml_lib.association_rules.Eclat.__init__", "modulename": "ifri_mini_ml_lib.association_rules", "qualname": "Eclat.__init__", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">min_support</span><span class=\"p\">:</span> <span class=\"nb\">float</span>, </span><span class=\"param\"><span class=\"n\">min_confidence</span><span class=\"p\">:</span> <span class=\"nb\">float</span></span>)</span>"}, "ifri_mini_ml_lib.association_rules.Eclat.min_support": {"fullname": "ifri_mini_ml_lib.association_rules.Eclat.min_support", "modulename": "ifri_mini_ml_lib.association_rules", "qualname": "Eclat.min_support", "kind": "variable", "doc": "<p></p>\n"}, "ifri_mini_ml_lib.association_rules.Eclat.min_confidence": {"fullname": "ifri_mini_ml_lib.association_rules.Eclat.min_confidence", "modulename": "ifri_mini_ml_lib.association_rules", "qualname": "Eclat.min_confidence", "kind": "variable", "doc": "<p></p>\n"}, "ifri_mini_ml_lib.association_rules.Eclat.frequent_itemsets": {"fullname": "ifri_mini_ml_lib.association_rules.Eclat.frequent_itemsets", "modulename": "ifri_mini_ml_lib.association_rules", "qualname": "Eclat.frequent_itemsets", "kind": "variable", "doc": "<p></p>\n"}, "ifri_mini_ml_lib.association_rules.Eclat.frequent_TIDsets": {"fullname": "ifri_mini_ml_lib.association_rules.Eclat.frequent_TIDsets", "modulename": "ifri_mini_ml_lib.association_rules", "qualname": "Eclat.frequent_TIDsets", "kind": "variable", "doc": "<p></p>\n"}, "ifri_mini_ml_lib.association_rules.Eclat.rules_": {"fullname": "ifri_mini_ml_lib.association_rules.Eclat.rules_", "modulename": "ifri_mini_ml_lib.association_rules", "qualname": "Eclat.rules_", "kind": "variable", "doc": "<p></p>\n"}, "ifri_mini_ml_lib.association_rules.Eclat.n_transactions": {"fullname": "ifri_mini_ml_lib.association_rules.Eclat.n_transactions", "modulename": "ifri_mini_ml_lib.association_rules", "qualname": "Eclat.n_transactions", "kind": "variable", "doc": "<p></p>\n"}, "ifri_mini_ml_lib.association_rules.Eclat.fit": {"fullname": "ifri_mini_ml_lib.association_rules.Eclat.fit", "modulename": "ifri_mini_ml_lib.association_rules", "qualname": "Eclat.fit", "kind": "function", "doc": "<p>Main method for learning frequent itemsets.</p>\n\n<p>Args:\n    transactions: List of transactions (each transaction is a set of items)</p>\n\n<p>Returns:\n    self: The current instance for method chaining</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">transactions</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "ifri_mini_ml_lib.association_rules.Eclat.get_single_items_TIDset": {"fullname": "ifri_mini_ml_lib.association_rules.Eclat.get_single_items_TIDset", "modulename": "ifri_mini_ml_lib.association_rules", "qualname": "Eclat.get_single_items_TIDset", "kind": "function", "doc": "<p>Build TIDsets for individual items</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">items</span>, </span><span class=\"param\"><span class=\"n\">transactions</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "ifri_mini_ml_lib.association_rules.Eclat.get_frequent_itemsets": {"fullname": "ifri_mini_ml_lib.association_rules.Eclat.get_frequent_itemsets", "modulename": "ifri_mini_ml_lib.association_rules", "qualname": "Eclat.get_frequent_itemsets", "kind": "function", "doc": "<p>Retrieve the discovered frequent itemsets.</p>\n\n<p>Returns:\n    dict: Dictionary of frequent itemsets where keys are sizes\n        and values are sets of itemsets</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "ifri_mini_ml_lib.association_rules.Eclat.get_rules": {"fullname": "ifri_mini_ml_lib.association_rules.Eclat.get_rules", "modulename": "ifri_mini_ml_lib.association_rules", "qualname": "Eclat.get_rules", "kind": "function", "doc": "<p>Accessor to retrieve the generated association rules.</p>\n\n<p>Returns:\n    List of association rules</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "ifri_mini_ml_lib.association_rules.FPGrowth": {"fullname": "ifri_mini_ml_lib.association_rules.FPGrowth", "modulename": "ifri_mini_ml_lib.association_rules", "qualname": "FPGrowth", "kind": "class", "doc": "<p>FP-Growth is an efficient algorithm for extracting frequent itemsets that\nconstructs a compact data structure (FP-Tree) and extracts patterns without\ngenerating candidates, unlike Apriori or Eclat. For more details consult the following\n<a href=\"https://dl.acm.org/doi/10.1145/342009.335372\">link </a>.</p>\n\n<p>Args:\n    min_support (float): Minimum support threshold (between 0 and 1) for frequent itemsets.\n    min_confidence (float): Minimum confidence threshold (between 0 and 1) for association rules.</p>\n\n<p>Examples:</p>\n\n<pre><code>&gt;&gt;&gt; transactions = [\n...     {'bread', 'milk', 'butter'},\n...     {'bread', 'jam', 'eggs'},\n...     {'milk', 'butter', 'cheese'},\n...     {'bread', 'milk', 'butter', 'cheese'},\n...     {'bread', 'jam', 'milk'}\n... ]\n&gt;&gt;&gt; from ifri_mini_ml_lib.association_rules import FPGrowth\n&gt;&gt;&gt; fp_growth = FPGrowth(min_support=0.4, min_confidence=0.6)\n&gt;&gt;&gt; fp_growth.fit(transactions) # Frequents itemsets + Rules generation\n&lt;ifri_mini_ml_lib.association_rules.fp_growth.FPGrowth object&gt;\n&gt;&gt;&gt; frequent_itemsets = fp_growth.get_frequent_itemsets()\n&gt;&gt;&gt; for itemset_data in frequent_itemsets[:3]:\n...     print(f\"Itemset: {set(itemset_data['itemset'])}, Support: {itemset_data['support']:.2f}\")\nItemset: {'bread'}, Support: 0.80\nItemset: {'milk'}, Support: 0.80\nItemset: {'butter'}, Support: 0.60\n&gt;&gt;&gt; rules = fp_growth.get_rules()\n&gt;&gt;&gt; # Displaying some association rules\n&gt;&gt;&gt; if rules:\n...     for rule in rules[:2]:\n...         print(f\"{set(rule['antecedent'])} -&gt; {set(rule['consequent'])}, \"\n...               f\"Confidence: {rule['confidence']:.2f}, Lift: {rule['lift']:.2f}\")\n{'milk'} -&gt; {'bread'}, Confidence: 0.75, Lift: 0.94\n{'bread'} -&gt; {'milk'}, Confidence: 0.75, Lift: 0.94\n</code></pre>\n"}, "ifri_mini_ml_lib.association_rules.FPGrowth.__init__": {"fullname": "ifri_mini_ml_lib.association_rules.FPGrowth.__init__", "modulename": "ifri_mini_ml_lib.association_rules", "qualname": "FPGrowth.__init__", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">min_support</span><span class=\"p\">:</span> <span class=\"nb\">float</span>, </span><span class=\"param\"><span class=\"n\">min_confidence</span><span class=\"p\">:</span> <span class=\"nb\">float</span></span>)</span>"}, "ifri_mini_ml_lib.association_rules.FPGrowth.min_support": {"fullname": "ifri_mini_ml_lib.association_rules.FPGrowth.min_support", "modulename": "ifri_mini_ml_lib.association_rules", "qualname": "FPGrowth.min_support", "kind": "variable", "doc": "<p></p>\n"}, "ifri_mini_ml_lib.association_rules.FPGrowth.min_confidence": {"fullname": "ifri_mini_ml_lib.association_rules.FPGrowth.min_confidence", "modulename": "ifri_mini_ml_lib.association_rules", "qualname": "FPGrowth.min_confidence", "kind": "variable", "doc": "<p></p>\n"}, "ifri_mini_ml_lib.association_rules.FPGrowth.frequent_itemsets_dict": {"fullname": "ifri_mini_ml_lib.association_rules.FPGrowth.frequent_itemsets_dict", "modulename": "ifri_mini_ml_lib.association_rules", "qualname": "FPGrowth.frequent_itemsets_dict", "kind": "variable", "doc": "<p></p>\n"}, "ifri_mini_ml_lib.association_rules.FPGrowth.rules_": {"fullname": "ifri_mini_ml_lib.association_rules.FPGrowth.rules_", "modulename": "ifri_mini_ml_lib.association_rules", "qualname": "FPGrowth.rules_", "kind": "variable", "doc": "<p></p>\n"}, "ifri_mini_ml_lib.association_rules.FPGrowth.header_table": {"fullname": "ifri_mini_ml_lib.association_rules.FPGrowth.header_table", "modulename": "ifri_mini_ml_lib.association_rules", "qualname": "FPGrowth.header_table", "kind": "variable", "doc": "<p></p>\n"}, "ifri_mini_ml_lib.association_rules.FPGrowth.n_transactions": {"fullname": "ifri_mini_ml_lib.association_rules.FPGrowth.n_transactions", "modulename": "ifri_mini_ml_lib.association_rules", "qualname": "FPGrowth.n_transactions", "kind": "variable", "doc": "<p></p>\n"}, "ifri_mini_ml_lib.association_rules.FPGrowth.fit": {"fullname": "ifri_mini_ml_lib.association_rules.FPGrowth.fit", "modulename": "ifri_mini_ml_lib.association_rules", "qualname": "FPGrowth.fit", "kind": "function", "doc": "<p>Builds the FP-Tree and extracts frequent itemsets.</p>\n\n<p>Args:\n    transactions: List of transactions (each transaction is a set of items)</p>\n\n<p>Returns:\n    self: The current instance for method chaining</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">transactions</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "ifri_mini_ml_lib.association_rules.FPGrowth.get_frequent_itemsets": {"fullname": "ifri_mini_ml_lib.association_rules.FPGrowth.get_frequent_itemsets", "modulename": "ifri_mini_ml_lib.association_rules", "qualname": "FPGrowth.get_frequent_itemsets", "kind": "function", "doc": "<p>Retrieve the discovered frequent itemsets.</p>\n\n<p>Returns:\n    List: List of frequent itemsets with their supports</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "ifri_mini_ml_lib.association_rules.FPGrowth.get_rules": {"fullname": "ifri_mini_ml_lib.association_rules.FPGrowth.get_rules", "modulename": "ifri_mini_ml_lib.association_rules", "qualname": "FPGrowth.get_rules", "kind": "function", "doc": "<p>Retrieve the generated association rules.</p>\n\n<p>Returns:\n    List of association rules</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "ifri_mini_ml_lib.association_rules.DataAdapter": {"fullname": "ifri_mini_ml_lib.association_rules.DataAdapter", "modulename": "ifri_mini_ml_lib.association_rules", "qualname": "DataAdapter", "kind": "class", "doc": "<p>Utility class for converting different data formats into transactions\nfor association rule mining algorithms.</p>\n\n<p>Examples:</p>\n\n<div class=\"pdoc-code codehilite\">\n<pre><span></span><code><span class=\"gp\">&gt;&gt;&gt; </span><span class=\"c1\"># Converting from a pandas DataFrame</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"kn\">import</span><span class=\"w\"> </span><span class=\"nn\">pandas</span><span class=\"w\"> </span><span class=\"k\">as</span><span class=\"w\"> </span><span class=\"nn\">pd</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"kn\">from</span><span class=\"w\"> </span><span class=\"nn\">ifri_mini_ml_lib.association_rules.utils</span><span class=\"w\"> </span><span class=\"kn\">import</span> <span class=\"n\">DataAdapter</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"c1\"># Create a sample DataFrame</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">df</span> <span class=\"o\">=</span> <span class=\"n\">pd</span><span class=\"o\">.</span><span class=\"n\">DataFrame</span><span class=\"p\">({</span>\n<span class=\"gp\">... </span>    <span class=\"s1\">&#39;item1&#39;</span><span class=\"p\">:</span> <span class=\"p\">[</span><span class=\"mi\">1</span><span class=\"p\">,</span> <span class=\"mi\">0</span><span class=\"p\">,</span> <span class=\"mi\">1</span><span class=\"p\">,</span> <span class=\"mi\">1</span><span class=\"p\">,</span> <span class=\"mi\">0</span><span class=\"p\">],</span>\n<span class=\"gp\">... </span>    <span class=\"s1\">&#39;item2&#39;</span><span class=\"p\">:</span> <span class=\"p\">[</span><span class=\"mi\">1</span><span class=\"p\">,</span> <span class=\"mi\">1</span><span class=\"p\">,</span> <span class=\"mi\">0</span><span class=\"p\">,</span> <span class=\"mi\">1</span><span class=\"p\">,</span> <span class=\"mi\">1</span><span class=\"p\">],</span>\n<span class=\"gp\">... </span>    <span class=\"s1\">&#39;item3&#39;</span><span class=\"p\">:</span> <span class=\"p\">[</span><span class=\"mi\">0</span><span class=\"p\">,</span> <span class=\"mi\">1</span><span class=\"p\">,</span> <span class=\"mi\">1</span><span class=\"p\">,</span> <span class=\"mi\">1</span><span class=\"p\">,</span> <span class=\"mi\">0</span><span class=\"p\">]</span>\n<span class=\"gp\">... </span><span class=\"p\">})</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"c1\"># Convert to transactions (binary mode)</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">transactions</span> <span class=\"o\">=</span> <span class=\"n\">DataAdapter</span><span class=\"o\">.</span><span class=\"n\">convert_to_transactions</span><span class=\"p\">(</span><span class=\"n\">df</span><span class=\"p\">,</span> <span class=\"n\">binary_mode</span><span class=\"o\">=</span><span class=\"kc\">True</span><span class=\"p\">)</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"k\">for</span> <span class=\"n\">t</span> <span class=\"ow\">in</span> <span class=\"n\">transactions</span><span class=\"p\">:</span>\n<span class=\"gp\">... </span>    <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"nb\">sorted</span><span class=\"p\">(</span><span class=\"n\">t</span><span class=\"p\">))</span>\n<span class=\"go\">[&#39;item1&#39;, &#39;item2&#39;]</span>\n<span class=\"go\">[&#39;item2&#39;, &#39;item3&#39;]</span>\n<span class=\"go\">[&#39;item1&#39;, &#39;item3&#39;]</span>\n<span class=\"go\">[&#39;item1&#39;, &#39;item2&#39;, &#39;item3&#39;]</span>\n<span class=\"go\">[&#39;item2&#39;]</span>\n</code></pre>\n</div>\n\n<div class=\"pdoc-code codehilite\">\n<pre><span></span><code><span class=\"gp\">&gt;&gt;&gt; </span><span class=\"c1\"># Converting non-binary data</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">df_cat</span> <span class=\"o\">=</span> <span class=\"n\">pd</span><span class=\"o\">.</span><span class=\"n\">DataFrame</span><span class=\"p\">({</span>\n<span class=\"gp\">... </span>    <span class=\"s1\">&#39;color&#39;</span><span class=\"p\">:</span> <span class=\"p\">[</span><span class=\"s1\">&#39;red&#39;</span><span class=\"p\">,</span> <span class=\"s1\">&#39;blue&#39;</span><span class=\"p\">,</span> <span class=\"s1\">&#39;green&#39;</span><span class=\"p\">,</span> <span class=\"s1\">&#39;red&#39;</span><span class=\"p\">,</span> <span class=\"s1\">&#39;blue&#39;</span><span class=\"p\">],</span>\n<span class=\"gp\">... </span>    <span class=\"s1\">&#39;size&#39;</span><span class=\"p\">:</span> <span class=\"p\">[</span><span class=\"s1\">&#39;large&#39;</span><span class=\"p\">,</span> <span class=\"s1\">&#39;medium&#39;</span><span class=\"p\">,</span> <span class=\"s1\">&#39;small&#39;</span><span class=\"p\">,</span> <span class=\"s1\">&#39;medium&#39;</span><span class=\"p\">,</span> <span class=\"s1\">&#39;large&#39;</span><span class=\"p\">]</span>\n<span class=\"gp\">... </span><span class=\"p\">})</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"c1\"># Convert to transactions (categorical data)</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">transactions</span> <span class=\"o\">=</span> <span class=\"n\">DataAdapter</span><span class=\"o\">.</span><span class=\"n\">convert_to_transactions</span><span class=\"p\">(</span><span class=\"n\">df_cat</span><span class=\"p\">,</span> <span class=\"n\">binary_mode</span><span class=\"o\">=</span><span class=\"kc\">False</span><span class=\"p\">)</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"k\">for</span> <span class=\"n\">t</span> <span class=\"ow\">in</span> <span class=\"n\">transactions</span><span class=\"p\">[:</span><span class=\"mi\">2</span><span class=\"p\">]:</span>\n<span class=\"gp\">... </span>    <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"nb\">sorted</span><span class=\"p\">(</span><span class=\"n\">t</span><span class=\"p\">))</span>\n<span class=\"go\">[&#39;color_red&#39;, &#39;size_large&#39;]</span>\n<span class=\"go\">[&#39;color_blue&#39;, &#39;size_medium&#39;]</span>\n</code></pre>\n</div>\n\n<div class=\"pdoc-code codehilite\">\n<pre><span></span><code><span class=\"gp\">&gt;&gt;&gt; </span><span class=\"c1\"># Converting from a list of sets</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">list_data</span> <span class=\"o\">=</span> <span class=\"p\">[</span>\n<span class=\"gp\">... </span>    <span class=\"p\">{</span><span class=\"s1\">&#39;bread&#39;</span><span class=\"p\">,</span> <span class=\"s1\">&#39;milk&#39;</span><span class=\"p\">},</span>\n<span class=\"gp\">... </span>    <span class=\"p\">{</span><span class=\"s1\">&#39;bread&#39;</span><span class=\"p\">,</span> <span class=\"s1\">&#39;diaper&#39;</span><span class=\"p\">,</span> <span class=\"s1\">&#39;beer&#39;</span><span class=\"p\">},</span>\n<span class=\"gp\">... </span>    <span class=\"p\">{</span><span class=\"s1\">&#39;milk&#39;</span><span class=\"p\">,</span> <span class=\"s1\">&#39;diaper&#39;</span><span class=\"p\">,</span> <span class=\"s1\">&#39;beer&#39;</span><span class=\"p\">},</span>\n<span class=\"gp\">... </span>    <span class=\"p\">{</span><span class=\"s1\">&#39;bread&#39;</span><span class=\"p\">,</span> <span class=\"s1\">&#39;milk&#39;</span><span class=\"p\">,</span> <span class=\"s1\">&#39;diaper&#39;</span><span class=\"p\">},</span>\n<span class=\"gp\">... </span>    <span class=\"p\">{</span><span class=\"s1\">&#39;bread&#39;</span><span class=\"p\">,</span> <span class=\"s1\">&#39;milk&#39;</span><span class=\"p\">,</span> <span class=\"s1\">&#39;beer&#39;</span><span class=\"p\">}</span>\n<span class=\"gp\">... </span><span class=\"p\">]</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">transactions</span> <span class=\"o\">=</span> <span class=\"n\">DataAdapter</span><span class=\"o\">.</span><span class=\"n\">_convert_from_list</span><span class=\"p\">(</span><span class=\"n\">list_data</span><span class=\"p\">)</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"nb\">len</span><span class=\"p\">(</span><span class=\"n\">transactions</span><span class=\"p\">),</span> <span class=\"s2\">&quot;transactions loaded&quot;</span><span class=\"p\">)</span>\n<span class=\"go\">5 transactions loaded</span>\n</code></pre>\n</div>\n"}, "ifri_mini_ml_lib.association_rules.DataAdapter.convert_to_transactions": {"fullname": "ifri_mini_ml_lib.association_rules.DataAdapter.convert_to_transactions", "modulename": "ifri_mini_ml_lib.association_rules", "qualname": "DataAdapter.convert_to_transactions", "kind": "function", "doc": "<p>Converts different data types into transactions for association rule mining.</p>\n\n<p>Args:\n    data: Data source (DataFrame, NumPy array or list)\n    binary_mode: If True, considers 1/True values as item presence\n    columns: List of columns to consider (only for DataFrame)\n    separator: Separator used to join attribute names and their values</p>\n\n<p>Returns:\n    List of transactions where each transaction is a set of items</p>\n\n<p>Raises:\n    TypeError: If the data type is not supported\n    ValueError: If data is empty or malformed</p>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"n\">data</span><span class=\"p\">:</span> <span class=\"n\">Union</span><span class=\"p\">[</span><span class=\"n\">pandas</span><span class=\"o\">.</span><span class=\"n\">core</span><span class=\"o\">.</span><span class=\"n\">frame</span><span class=\"o\">.</span><span class=\"n\">DataFrame</span><span class=\"p\">,</span> <span class=\"n\">numpy</span><span class=\"o\">.</span><span class=\"n\">ndarray</span><span class=\"p\">,</span> <span class=\"n\">List</span><span class=\"p\">]</span>,</span><span class=\"param\">\t<span class=\"n\">binary_mode</span><span class=\"p\">:</span> <span class=\"nb\">bool</span> <span class=\"o\">=</span> <span class=\"kc\">False</span>,</span><span class=\"param\">\t<span class=\"n\">columns</span><span class=\"p\">:</span> <span class=\"n\">Optional</span><span class=\"p\">[</span><span class=\"n\">List</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">]]</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">separator</span><span class=\"p\">:</span> <span class=\"nb\">str</span> <span class=\"o\">=</span> <span class=\"s1\">&#39;_&#39;</span></span><span class=\"return-annotation\">) -> <span class=\"n\">List</span><span class=\"p\">[</span><span class=\"n\">Set</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">]]</span>:</span></span>", "funcdef": "def"}, "ifri_mini_ml_lib.association_rules.DataAdapter.load_csv_to_transactions": {"fullname": "ifri_mini_ml_lib.association_rules.DataAdapter.load_csv_to_transactions", "modulename": "ifri_mini_ml_lib.association_rules", "qualname": "DataAdapter.load_csv_to_transactions", "kind": "function", "doc": "<p>Loads a CSV file and converts it directly into transactions.</p>\n\n<p>Args:\n    file_path: Path to the CSV file\n    header: Header row number (None = no header)\n    separator: Column separator in the CSV file</p>\n\n<p>Returns:\n    List of transactions</p>\n\n<p>Raises:\n    FileNotFoundError: If the file doesn't exist\n    ValueError: If the file is empty or malformed</p>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"n\">file_path</span><span class=\"p\">:</span> <span class=\"nb\">str</span>,</span><span class=\"param\">\t<span class=\"n\">header</span><span class=\"p\">:</span> <span class=\"n\">Optional</span><span class=\"p\">[</span><span class=\"nb\">int</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">separator</span><span class=\"p\">:</span> <span class=\"nb\">str</span> <span class=\"o\">=</span> <span class=\"s1\">&#39;,&#39;</span></span><span class=\"return-annotation\">) -> <span class=\"n\">List</span><span class=\"p\">[</span><span class=\"n\">Set</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">]]</span>:</span></span>", "funcdef": "def"}, "ifri_mini_ml_lib.classification": {"fullname": "ifri_mini_ml_lib.classification", "modulename": "ifri_mini_ml_lib.classification", "kind": "module", "doc": "<p></p>\n"}, "ifri_mini_ml_lib.classification.DecisionTree": {"fullname": "ifri_mini_ml_lib.classification.DecisionTree", "modulename": "ifri_mini_ml_lib.classification", "qualname": "DecisionTree", "kind": "class", "doc": "<p>A decision tree classifier with regularization parameters to prevent overfitting.</p>\n\n<p>Description:\nThis implementation supports both classification tasks using information gain\n(entropy) as the splitting criterion. It includes several regularization\ntechniques like max depth, minimum samples per split, and minimum samples per leaf.</p>\n\n<p>Args:\n    max_depth (int, optional): Maximum depth of the tree. Defaults to None (no limit).\n    min_samples_split (int): Minimum number of samples required to split a node. Defaults to 2.\n    min_samples_leaf (int): Minimum number of samples required at each leaf node. Defaults to 1.\n    min_impurity_decrease (float): Minimum impurity decrease required for a split. Defaults to 0.0.</p>\n"}, "ifri_mini_ml_lib.classification.DecisionTree.__init__": {"fullname": "ifri_mini_ml_lib.classification.DecisionTree.__init__", "modulename": "ifri_mini_ml_lib.classification", "qualname": "DecisionTree.__init__", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"n\">max_depth</span><span class=\"o\">=</span><span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">min_samples_split</span><span class=\"o\">=</span><span class=\"mi\">2</span>,</span><span class=\"param\">\t<span class=\"n\">min_samples_leaf</span><span class=\"o\">=</span><span class=\"mi\">1</span>,</span><span class=\"param\">\t<span class=\"n\">min_impurity_decrease</span><span class=\"o\">=</span><span class=\"mf\">0.0</span></span>)</span>"}, "ifri_mini_ml_lib.classification.DecisionTree.max_depth": {"fullname": "ifri_mini_ml_lib.classification.DecisionTree.max_depth", "modulename": "ifri_mini_ml_lib.classification", "qualname": "DecisionTree.max_depth", "kind": "variable", "doc": "<p></p>\n"}, "ifri_mini_ml_lib.classification.DecisionTree.min_samples_split": {"fullname": "ifri_mini_ml_lib.classification.DecisionTree.min_samples_split", "modulename": "ifri_mini_ml_lib.classification", "qualname": "DecisionTree.min_samples_split", "kind": "variable", "doc": "<p></p>\n"}, "ifri_mini_ml_lib.classification.DecisionTree.min_samples_leaf": {"fullname": "ifri_mini_ml_lib.classification.DecisionTree.min_samples_leaf", "modulename": "ifri_mini_ml_lib.classification", "qualname": "DecisionTree.min_samples_leaf", "kind": "variable", "doc": "<p></p>\n"}, "ifri_mini_ml_lib.classification.DecisionTree.min_impurity_decrease": {"fullname": "ifri_mini_ml_lib.classification.DecisionTree.min_impurity_decrease", "modulename": "ifri_mini_ml_lib.classification", "qualname": "DecisionTree.min_impurity_decrease", "kind": "variable", "doc": "<p></p>\n"}, "ifri_mini_ml_lib.classification.DecisionTree.tree": {"fullname": "ifri_mini_ml_lib.classification.DecisionTree.tree", "modulename": "ifri_mini_ml_lib.classification", "qualname": "DecisionTree.tree", "kind": "variable", "doc": "<p></p>\n"}, "ifri_mini_ml_lib.classification.DecisionTree.fit": {"fullname": "ifri_mini_ml_lib.classification.DecisionTree.fit", "modulename": "ifri_mini_ml_lib.classification", "qualname": "DecisionTree.fit", "kind": "function", "doc": "<p>Builds the decision tree from the training data (X, y).</p>\n\n<p>Description:\nRecursively builds the decision tree by finding the best splits according to \ninformation gain while respecting the regularization constraints.</p>\n\n<p>Args:\n    X (ndarray): Training data of shape (n_samples, n_features)\n    y (ndarray): Target values of shape (n_samples,)\n    depth (int): Current depth of the tree (used internally during recursion)</p>\n\n<p>Returns:\n    dict: The constructed decision tree node (either a decision node or a leaf value)</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">X</span>, </span><span class=\"param\"><span class=\"n\">y</span>, </span><span class=\"param\"><span class=\"n\">depth</span><span class=\"o\">=</span><span class=\"mi\">0</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "ifri_mini_ml_lib.classification.DecisionTree.predict": {"fullname": "ifri_mini_ml_lib.classification.DecisionTree.predict", "modulename": "ifri_mini_ml_lib.classification", "qualname": "DecisionTree.predict", "kind": "function", "doc": "<p>Predicts class labels for samples in X.</p>\n\n<p>Args:\n    X (ndarray): Input samples of shape (n_samples, n_features)</p>\n\n<p>Returns:\n    ndarray: Predicted class labels</p>\n\n<p>Raises:\n    ValueError: If the model hasn't been trained yet</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">X</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "ifri_mini_ml_lib.classification.KNN": {"fullname": "ifri_mini_ml_lib.classification.KNN", "modulename": "ifri_mini_ml_lib.classification", "qualname": "KNN", "kind": "class", "doc": "<p>K-Nearest Neighbors (KNN) algorithm for classification and regression.</p>\n\n<p>Description:\n    Implements the KNN algorithm which can be used for both classification\n    and regression tasks. The algorithm finds the k closest training examples\n    to make predictions for new data points.</p>\n\n<p>Args:\n    k (int, optional): Number of nearest neighbors to consider. Default is 3.\n    task (str, optional): Type of task - either 'classification' or 'regression'.\n                        Default is 'classification'.</p>\n\n<p>Examples:</p>\n\n<blockquote>\n  <blockquote>\n    <blockquote>\n      <h1 id=\"for-classification\">For classification</h1>\n      \n      <p>knn = KNN(k=5, task='classification')\n      knn.fit(X_train, y_train)\n      predictions = knn.predict(X_test)</p>\n\n<pre><code>&gt;&gt;&gt; # For regression\n&gt;&gt;&gt; knn_reg = KNN(k=3, task='regression')\n&gt;&gt;&gt; knn_reg.fit(X_train, y_train)\n&gt;&gt;&gt; predictions = knn_reg.predict(X_test)\n</code></pre>\n    </blockquote>\n  </blockquote>\n</blockquote>\n"}, "ifri_mini_ml_lib.classification.KNN.__init__": {"fullname": "ifri_mini_ml_lib.classification.KNN.__init__", "modulename": "ifri_mini_ml_lib.classification", "qualname": "KNN.__init__", "kind": "function", "doc": "<p>Initializes the KNN classifier/regressor.</p>\n\n<p>Args:\n    k (int): Number of neighbors to use.\n    task (str): Type of task ('classification' or 'regression').</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">k</span><span class=\"o\">=</span><span class=\"mi\">3</span>, </span><span class=\"param\"><span class=\"n\">task</span><span class=\"o\">=</span><span class=\"s1\">&#39;classification&#39;</span></span>)</span>"}, "ifri_mini_ml_lib.classification.KNN.k": {"fullname": "ifri_mini_ml_lib.classification.KNN.k", "modulename": "ifri_mini_ml_lib.classification", "qualname": "KNN.k", "kind": "variable", "doc": "<p></p>\n"}, "ifri_mini_ml_lib.classification.KNN.task": {"fullname": "ifri_mini_ml_lib.classification.KNN.task", "modulename": "ifri_mini_ml_lib.classification", "qualname": "KNN.task", "kind": "variable", "doc": "<p></p>\n"}, "ifri_mini_ml_lib.classification.KNN.fit": {"fullname": "ifri_mini_ml_lib.classification.KNN.fit", "modulename": "ifri_mini_ml_lib.classification", "qualname": "KNN.fit", "kind": "function", "doc": "<p>Stores the training dataset for later predictions.</p>\n\n<p>Description:\n    This method doesn't actually \"train\" the model in the traditional sense\n    since KNN is a lazy learner. It simply stores the training data\n    to use during the prediction phase.</p>\n\n<p>Args:\n    X (array-like): Training samples of shape (n_samples, n_features).\n    y (array-like): Target values of shape (n_samples,).</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">X</span>, </span><span class=\"param\"><span class=\"n\">y</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "ifri_mini_ml_lib.classification.KNN.predict": {"fullname": "ifri_mini_ml_lib.classification.KNN.predict", "modulename": "ifri_mini_ml_lib.classification", "qualname": "KNN.predict", "kind": "function", "doc": "<p>Predicts the target values for the provided data.</p>\n\n<p>Description:\n    For each input sample, finds the k-nearest neighbors in the training set\n    and returns either the most common class (classification) or the\n    average value (regression).</p>\n\n<p>Args:\n    X (array-like): Test samples of shape (n_samples, n_features).</p>\n\n<p>Returns:\n    list: Predicted target values for each input sample.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">X</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "ifri_mini_ml_lib.classification.LogisticRegression": {"fullname": "ifri_mini_ml_lib.classification.LogisticRegression", "modulename": "ifri_mini_ml_lib.classification", "qualname": "LogisticRegression", "kind": "class", "doc": "<p>Binary logistic regression classifier implemented with gradient descent optimization.</p>\n\n<p>Description:\n    Implements logistic regression with optional polynomial feature expansion,\n    momentum-based gradient descent, and early stopping. The model includes\n    numerical stability improvements and handles edge cases.</p>\n\n<p>Attributes:\n    learning_rate (float): Step size for gradient descent updates.\n    max_iter (int): Maximum number of training iterations.\n    tol (float): Tolerance for early stopping based on loss change.\n    weights (np.ndarray): Learned weight vector (coefficients).\n    bias (float): Learned bias term (intercept).\n    loss_history (list): Records loss values during training.</p>\n\n<p>Examples:\n     # Basic usage\n     model = LogisticRegression(learning_rate=0.01, max_iter=1000)\n     model.fit(X_train, y_train)\n     predictions = model.predict(X_test)</p>\n\n<pre><code> # With probability outputs\n probabilities = model.predict_proba(X_test)\n</code></pre>\n"}, "ifri_mini_ml_lib.classification.LogisticRegression.__init__": {"fullname": "ifri_mini_ml_lib.classification.LogisticRegression.__init__", "modulename": "ifri_mini_ml_lib.classification", "qualname": "LogisticRegression.__init__", "kind": "function", "doc": "<p>Initializes the logistic regression model with training parameters.</p>\n\n<p>Args:\n    learning_rate (float, optional): Learning rate for gradient descent. \n                                   Default is 0.01.\n    max_iter (int, optional): Maximum training iterations. Default is 1000.\n    tol (float, optional): Minimum loss change to continue training. \n                         Default is 1e-4.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">learning_rate</span><span class=\"o\">=</span><span class=\"mf\">0.01</span>, </span><span class=\"param\"><span class=\"n\">max_iter</span><span class=\"o\">=</span><span class=\"mi\">1000</span>, </span><span class=\"param\"><span class=\"n\">tol</span><span class=\"o\">=</span><span class=\"mf\">0.0001</span>, </span><span class=\"param\"><span class=\"n\">momentum</span><span class=\"o\">=</span><span class=\"mf\">0.9</span></span>)</span>"}, "ifri_mini_ml_lib.classification.LogisticRegression.learning_rate": {"fullname": "ifri_mini_ml_lib.classification.LogisticRegression.learning_rate", "modulename": "ifri_mini_ml_lib.classification", "qualname": "LogisticRegression.learning_rate", "kind": "variable", "doc": "<p></p>\n"}, "ifri_mini_ml_lib.classification.LogisticRegression.momentum": {"fullname": "ifri_mini_ml_lib.classification.LogisticRegression.momentum", "modulename": "ifri_mini_ml_lib.classification", "qualname": "LogisticRegression.momentum", "kind": "variable", "doc": "<p></p>\n"}, "ifri_mini_ml_lib.classification.LogisticRegression.max_iter": {"fullname": "ifri_mini_ml_lib.classification.LogisticRegression.max_iter", "modulename": "ifri_mini_ml_lib.classification", "qualname": "LogisticRegression.max_iter", "kind": "variable", "doc": "<p></p>\n"}, "ifri_mini_ml_lib.classification.LogisticRegression.tol": {"fullname": "ifri_mini_ml_lib.classification.LogisticRegression.tol", "modulename": "ifri_mini_ml_lib.classification", "qualname": "LogisticRegression.tol", "kind": "variable", "doc": "<p></p>\n"}, "ifri_mini_ml_lib.classification.LogisticRegression.weights": {"fullname": "ifri_mini_ml_lib.classification.LogisticRegression.weights", "modulename": "ifri_mini_ml_lib.classification", "qualname": "LogisticRegression.weights", "kind": "variable", "doc": "<p></p>\n"}, "ifri_mini_ml_lib.classification.LogisticRegression.bias": {"fullname": "ifri_mini_ml_lib.classification.LogisticRegression.bias", "modulename": "ifri_mini_ml_lib.classification", "qualname": "LogisticRegression.bias", "kind": "variable", "doc": "<p></p>\n"}, "ifri_mini_ml_lib.classification.LogisticRegression.loss_history": {"fullname": "ifri_mini_ml_lib.classification.LogisticRegression.loss_history", "modulename": "ifri_mini_ml_lib.classification", "qualname": "LogisticRegression.loss_history", "kind": "variable", "doc": "<p></p>\n"}, "ifri_mini_ml_lib.classification.LogisticRegression.fit": {"fullname": "ifri_mini_ml_lib.classification.LogisticRegression.fit", "modulename": "ifri_mini_ml_lib.classification", "qualname": "LogisticRegression.fit", "kind": "function", "doc": "<p>Trains the logistic regression model on input data.</p>\n\n<p>Description:\n    Performs gradient descent optimization with momentum to learn the\n    model parameters. Includes polynomial feature expansion, early\n    stopping, and special handling for edge cases.</p>\n\n<p>Args:\n    X (np.ndarray): Training data of shape (n_samples, n_features).\n    y (np.ndarray): Target labels of shape (n_samples,).</p>\n\n<p>Notes:\n    - Automatically adds polynomial features for non-linear relationships\n    - Uses momentum for faster convergence\n    - Implements early stopping based on loss change\n    - Includes special cases for unnormalized data</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">X</span>, </span><span class=\"param\"><span class=\"n\">y</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "ifri_mini_ml_lib.classification.LogisticRegression.predict_proba": {"fullname": "ifri_mini_ml_lib.classification.LogisticRegression.predict_proba", "modulename": "ifri_mini_ml_lib.classification", "qualname": "LogisticRegression.predict_proba", "kind": "function", "doc": "<p>Predicts class probabilities for input samples.</p>\n\n<p>Args:\n    X (np.ndarray): Input data of shape (n_samples, n_features).</p>\n\n<p>Returns:\n    np.ndarray: Probability estimates for class 1, shape (n_samples,).</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">X</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "ifri_mini_ml_lib.classification.LogisticRegression.predict": {"fullname": "ifri_mini_ml_lib.classification.LogisticRegression.predict", "modulename": "ifri_mini_ml_lib.classification", "qualname": "LogisticRegression.predict", "kind": "function", "doc": "<p>Predicts class labels for input samples.</p>\n\n<p>Description:\n    Converts probability estimates to binary predictions using the\n    specified threshold. Includes special handling for edge cases.</p>\n\n<p>Args:\n    X (np.ndarray): Input data of shape (n_samples, n_features).\n    threshold (float, optional): Decision threshold. Default is 0.5.</p>\n\n<p>Returns:\n    np.ndarray: Predicted class labels (0 or 1).</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">X</span>, </span><span class=\"param\"><span class=\"n\">threshold</span><span class=\"o\">=</span><span class=\"mf\">0.5</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "ifri_mini_ml_lib.clustering": {"fullname": "ifri_mini_ml_lib.clustering", "modulename": "ifri_mini_ml_lib.clustering", "kind": "module", "doc": "<p></p>\n"}, "ifri_mini_ml_lib.clustering.KMeans": {"fullname": "ifri_mini_ml_lib.clustering.KMeans", "modulename": "ifri_mini_ml_lib.clustering", "qualname": "KMeans", "kind": "class", "doc": "<p>KMeans Class: Custom implementation of the K-Means unsupervised clustering algorithm.</p>\n\n<h2 id=\"description\">Description:</h2>\n\n<p>Custom implementation of the K-Means unsupervised clustering algorithm.<br />\nIt partitions data into k clusters by minimizing intra-cluster distances, iteratively assigning points to the nearest centroid and updating centroids accordingly.</p>\n\n<p>Arguments:\n    n_clusters (int): Number of clusters to form.\n    max_iter (int): Maximum iterations for convergence.\n    tol (float): Threshold to declare convergence based on centroid movement.\n    init (str): Centroid initialization method ('random' or 'k-means++').\n    random_state (int or None): Seed for reproducibility.</p>\n\n<p>Example:</p>\n\n<div class=\"pdoc-code codehilite\">\n<pre><span></span><code><span class=\"gp\">&gt;&gt;&gt; </span><span class=\"kn\">from</span><span class=\"w\"> </span><span class=\"nn\">ifri_mini_ml_lib.clustering</span><span class=\"w\"> </span><span class=\"kn\">import</span> <span class=\"n\">KMeans</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">kmeans</span> <span class=\"o\">=</span> <span class=\"n\">KMeans</span><span class=\"p\">(</span><span class=\"n\">n_clusters</span><span class=\"o\">=</span><span class=\"mi\">3</span><span class=\"p\">,</span> <span class=\"n\">max_iter</span><span class=\"o\">=</span><span class=\"mi\">300</span><span class=\"p\">,</span> <span class=\"n\">tol</span><span class=\"o\">=</span><span class=\"mf\">1e-4</span><span class=\"p\">,</span> <span class=\"n\">init</span><span class=\"o\">=</span><span class=\"s1\">&#39;k-means++&#39;</span><span class=\"p\">,</span> <span class=\"n\">random_state</span><span class=\"o\">=</span><span class=\"mi\">42</span><span class=\"p\">)</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">kmeans</span><span class=\"o\">.</span><span class=\"n\">fit</span><span class=\"p\">(</span><span class=\"n\">X</span><span class=\"p\">)</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">labels</span> <span class=\"o\">=</span> <span class=\"n\">kmeans</span><span class=\"o\">.</span><span class=\"n\">predict</span><span class=\"p\">(</span><span class=\"n\">X</span><span class=\"p\">)</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">kmeans</span><span class=\"o\">.</span><span class=\"n\">plot_clusters</span><span class=\"p\">(</span><span class=\"n\">X</span><span class=\"p\">)</span>\n</code></pre>\n</div>\n"}, "ifri_mini_ml_lib.clustering.KMeans.__init__": {"fullname": "ifri_mini_ml_lib.clustering.KMeans.__init__", "modulename": "ifri_mini_ml_lib.clustering", "qualname": "KMeans.__init__", "kind": "function", "doc": "<h2 id=\"description\">Description:</h2>\n\n<p>Initializes the KMeans clustering model with the specified parameters.</p>\n\n<h2 id=\"arguments\">Arguments:</h2>\n\n<ul>\n<li>n_clusters (int): Number of clusters to form. Default is 3.</li>\n<li>max_iter (int): Maximum number of iterations allowed. Default is 300.</li>\n<li>tol (float): Convergence tolerance based on centroid movement. Default is 1e-4.</li>\n<li>init (str): Method to initialize centroids ('random' or 'k-means++'). Default is 'random'.</li>\n<li>random_state (int or None): Seed for random number generator. Default is None.</li>\n</ul>\n\n<h2 id=\"functions\">Functions:</h2>\n\n<ul>\n<li>Stores parameters and initializes centroids and labels attributes.</li>\n</ul>\n\n<h2 id=\"example\">Example:</h2>\n\n<p>kmeans = KMeans(n_clusters=5, init='k-means++', random_state=0)</p>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"n\">n_clusters</span><span class=\"o\">=</span><span class=\"mi\">3</span>,</span><span class=\"param\">\t<span class=\"n\">max_iter</span><span class=\"o\">=</span><span class=\"mi\">300</span>,</span><span class=\"param\">\t<span class=\"n\">tol</span><span class=\"o\">=</span><span class=\"mf\">0.0001</span>,</span><span class=\"param\">\t<span class=\"n\">init</span><span class=\"o\">=</span><span class=\"s1\">&#39;random&#39;</span>,</span><span class=\"param\">\t<span class=\"n\">random_state</span><span class=\"o\">=</span><span class=\"kc\">None</span></span>)</span>"}, "ifri_mini_ml_lib.clustering.KMeans.n_clusters": {"fullname": "ifri_mini_ml_lib.clustering.KMeans.n_clusters", "modulename": "ifri_mini_ml_lib.clustering", "qualname": "KMeans.n_clusters", "kind": "variable", "doc": "<p></p>\n"}, "ifri_mini_ml_lib.clustering.KMeans.max_iter": {"fullname": "ifri_mini_ml_lib.clustering.KMeans.max_iter", "modulename": "ifri_mini_ml_lib.clustering", "qualname": "KMeans.max_iter", "kind": "variable", "doc": "<p></p>\n"}, "ifri_mini_ml_lib.clustering.KMeans.tol": {"fullname": "ifri_mini_ml_lib.clustering.KMeans.tol", "modulename": "ifri_mini_ml_lib.clustering", "qualname": "KMeans.tol", "kind": "variable", "doc": "<p></p>\n"}, "ifri_mini_ml_lib.clustering.KMeans.init": {"fullname": "ifri_mini_ml_lib.clustering.KMeans.init", "modulename": "ifri_mini_ml_lib.clustering", "qualname": "KMeans.init", "kind": "variable", "doc": "<p></p>\n"}, "ifri_mini_ml_lib.clustering.KMeans.random_state": {"fullname": "ifri_mini_ml_lib.clustering.KMeans.random_state", "modulename": "ifri_mini_ml_lib.clustering", "qualname": "KMeans.random_state", "kind": "variable", "doc": "<p></p>\n"}, "ifri_mini_ml_lib.clustering.KMeans.centroids": {"fullname": "ifri_mini_ml_lib.clustering.KMeans.centroids", "modulename": "ifri_mini_ml_lib.clustering", "qualname": "KMeans.centroids", "kind": "variable", "doc": "<p></p>\n"}, "ifri_mini_ml_lib.clustering.KMeans.labels": {"fullname": "ifri_mini_ml_lib.clustering.KMeans.labels", "modulename": "ifri_mini_ml_lib.clustering", "qualname": "KMeans.labels", "kind": "variable", "doc": "<p></p>\n"}, "ifri_mini_ml_lib.clustering.KMeans.fit": {"fullname": "ifri_mini_ml_lib.clustering.KMeans.fit", "modulename": "ifri_mini_ml_lib.clustering", "qualname": "KMeans.fit", "kind": "function", "doc": "<h2 id=\"description\">Description:</h2>\n\n<p>Fits the KMeans model to data X by iteratively assigning points to clusters and updating centroids until convergence or max iterations.</p>\n\n<h2 id=\"arguments\">Arguments:</h2>\n\n<ul>\n<li>X (ndarray): Input data array of shape (n_samples, n_features).</li>\n</ul>\n\n<h2 id=\"functions\">Functions:</h2>\n\n<ul>\n<li>Initializes centroids.</li>\n<li>Assigns each point to nearest centroid.</li>\n<li>Updates centroids as mean of assigned points.</li>\n<li>Stops when centroid shifts are below tolerance or max_iter reached.</li>\n</ul>\n\n<h2 id=\"example\">Example:</h2>\n\n<p>kmeans.fit(X)</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">X</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "ifri_mini_ml_lib.clustering.KMeans.predict": {"fullname": "ifri_mini_ml_lib.clustering.KMeans.predict", "modulename": "ifri_mini_ml_lib.clustering", "qualname": "KMeans.predict", "kind": "function", "doc": "<h2 id=\"description\">Description:</h2>\n\n<p>Predicts the nearest cluster index for each sample in X based on trained centroids.</p>\n\n<h2 id=\"arguments\">Arguments:</h2>\n\n<ul>\n<li>X (ndarray): New data samples to predict, shape (n_samples, n_features).</li>\n</ul>\n\n<h2 id=\"functions\">Functions:</h2>\n\n<ul>\n<li>Computes distances to centroids.</li>\n<li>Returns index of closest centroid for each sample.</li>\n</ul>\n\n<h2 id=\"example\">Example:</h2>\n\n<p>labels = kmeans.predict(X_new)</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">X</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "ifri_mini_ml_lib.clustering.KMeans.fit_predict": {"fullname": "ifri_mini_ml_lib.clustering.KMeans.fit_predict", "modulename": "ifri_mini_ml_lib.clustering", "qualname": "KMeans.fit_predict", "kind": "function", "doc": "<h2 id=\"description\">Description:</h2>\n\n<p>Convenience method that fits the model to X and returns the cluster labels.</p>\n\n<h2 id=\"arguments\">Arguments:</h2>\n\n<ul>\n<li>X (ndarray): Input data array.</li>\n</ul>\n\n<h2 id=\"functions\">Functions:</h2>\n\n<ul>\n<li>Calls fit(X) then predict(X).</li>\n</ul>\n\n<h2 id=\"example\">Example:</h2>\n\n<p>labels = kmeans.fit_predict(X)</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">X</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "ifri_mini_ml_lib.clustering.KMeans.plot_clusters": {"fullname": "ifri_mini_ml_lib.clustering.KMeans.plot_clusters", "modulename": "ifri_mini_ml_lib.clustering", "qualname": "KMeans.plot_clusters", "kind": "function", "doc": "<h2 id=\"description\">Description:</h2>\n\n<p>Visualizes the clusters for KMeans, supporting 1D, 2D, and 3D data.\nFor higher dimensions, PCA is applied to reduce to 3D.</p>\n\n<h2 id=\"arguments\">Arguments:</h2>\n\n<ul>\n<li>X (ndarray): Data array.</li>\n</ul>\n\n<h2 id=\"functions\">Functions:</h2>\n\n<ul>\n<li>Plots points colored by cluster assignment.</li>\n<li>Marks centroids with a distinct symbol ('x').</li>\n<li>Uses PCA for dimensionality reduction if &gt; 3D.</li>\n</ul>\n\n<p>Exemple: </p>\n\n<ul>\n<li>kmeans.plot_clusters(data)</li>\n</ul>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">X</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "ifri_mini_ml_lib.clustering.DBSCAN": {"fullname": "ifri_mini_ml_lib.clustering.DBSCAN", "modulename": "ifri_mini_ml_lib.clustering", "qualname": "DBSCAN", "kind": "class", "doc": "<h2 id=\"description\">Description:</h2>\n\n<p>DBSCAN (Density-Based Spatial Clustering of Applications with Noise) is a clustering algorithm that identifies clusters based on the density of points. It groups nearby points (defined by epsilon and min_samples) and labels outliers as noise.</p>\n\n<p>Arguments:\n    eps (float): The maximum radius to consider two points as neighbors.\n    min_samples (int): The minimum number of points to form a cluster.</p>\n\n<p>Example:</p>\n\n<div class=\"pdoc-code codehilite\">\n<pre><span></span><code><span class=\"gp\">&gt;&gt;&gt; </span><span class=\"kn\">from</span><span class=\"w\"> </span><span class=\"nn\">ifri_mini_ml_lib.clustering</span><span class=\"w\"> </span><span class=\"kn\">import</span> <span class=\"n\">DBSCAN</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">dbscan</span> <span class=\"o\">=</span> <span class=\"n\">DBSCAN</span><span class=\"p\">(</span><span class=\"n\">eps</span><span class=\"o\">=</span><span class=\"mf\">0.5</span><span class=\"p\">,</span> <span class=\"n\">min_samples</span><span class=\"o\">=</span><span class=\"mi\">5</span><span class=\"p\">)</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">labels</span> <span class=\"o\">=</span> <span class=\"n\">dbscan</span><span class=\"o\">.</span><span class=\"n\">fit_predict</span><span class=\"p\">(</span><span class=\"n\">data</span><span class=\"p\">)</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">dbscan</span><span class=\"o\">.</span><span class=\"n\">plot_clusters</span><span class=\"p\">(</span><span class=\"n\">data</span><span class=\"p\">)</span>\n</code></pre>\n</div>\n"}, "ifri_mini_ml_lib.clustering.DBSCAN.__init__": {"fullname": "ifri_mini_ml_lib.clustering.DBSCAN.__init__", "modulename": "ifri_mini_ml_lib.clustering", "qualname": "DBSCAN.__init__", "kind": "function", "doc": "<p>Initializes the DBSCAN parameters.</p>\n\n<p>Arguments:\n    eps (float): The maximum radius to consider two points as neighbors.\n    min_samples (int): The minimum number of points to form a cluster.</p>\n\n<p>Example:</p>\n\n<div class=\"pdoc-code codehilite\">\n<pre><span></span><code><span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">dbscan</span> <span class=\"o\">=</span> <span class=\"n\">DBSCAN</span><span class=\"p\">(</span><span class=\"n\">eps</span><span class=\"o\">=</span><span class=\"mf\">0.5</span><span class=\"p\">,</span> <span class=\"n\">min_samples</span><span class=\"o\">=</span><span class=\"mi\">5</span><span class=\"p\">)</span>\n</code></pre>\n</div>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">eps</span><span class=\"o\">=</span><span class=\"mf\">0.5</span>, </span><span class=\"param\"><span class=\"n\">min_samples</span><span class=\"o\">=</span><span class=\"mi\">5</span></span>)</span>"}, "ifri_mini_ml_lib.clustering.DBSCAN.eps": {"fullname": "ifri_mini_ml_lib.clustering.DBSCAN.eps", "modulename": "ifri_mini_ml_lib.clustering", "qualname": "DBSCAN.eps", "kind": "variable", "doc": "<p></p>\n"}, "ifri_mini_ml_lib.clustering.DBSCAN.min_samples": {"fullname": "ifri_mini_ml_lib.clustering.DBSCAN.min_samples", "modulename": "ifri_mini_ml_lib.clustering", "qualname": "DBSCAN.min_samples", "kind": "variable", "doc": "<p></p>\n"}, "ifri_mini_ml_lib.clustering.DBSCAN.labels": {"fullname": "ifri_mini_ml_lib.clustering.DBSCAN.labels", "modulename": "ifri_mini_ml_lib.clustering", "qualname": "DBSCAN.labels", "kind": "variable", "doc": "<p></p>\n"}, "ifri_mini_ml_lib.clustering.DBSCAN.fit_predict": {"fullname": "ifri_mini_ml_lib.clustering.DBSCAN.fit_predict", "modulename": "ifri_mini_ml_lib.clustering", "qualname": "DBSCAN.fit_predict", "kind": "function", "doc": "<p>Performs DBSCAN clustering on the provided data.</p>\n\n<p>Arguments:\n    data (numpy.ndarray): The data to cluster (n_samples, n_features).</p>\n\n<p>Example:</p>\n\n<div class=\"pdoc-code codehilite\">\n<pre><span></span><code><span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">labels</span> <span class=\"o\">=</span> <span class=\"n\">dbscan</span><span class=\"o\">.</span><span class=\"n\">fit_predict</span><span class=\"p\">(</span><span class=\"n\">data</span><span class=\"p\">)</span>\n</code></pre>\n</div>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">data</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "ifri_mini_ml_lib.clustering.DBSCAN.plot_clusters": {"fullname": "ifri_mini_ml_lib.clustering.DBSCAN.plot_clusters", "modulename": "ifri_mini_ml_lib.clustering", "qualname": "DBSCAN.plot_clusters", "kind": "function", "doc": "<p>Plots the resulting clusters after calling fit_predict().\nSupports 1D, 2D and 3D data natively. For data with more than 3 features, applies PCA reduction to 3D.</p>\n\n<p>Arguments:\n    data (numpy.ndarray): Input data (n_samples, n_features &gt;= 1).</p>\n\n<p>Example:</p>\n\n<div class=\"pdoc-code codehilite\">\n<pre><span></span><code><span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">dbscan</span><span class=\"o\">.</span><span class=\"n\">plot_clusters</span><span class=\"p\">(</span><span class=\"n\">data</span><span class=\"p\">)</span>\n</code></pre>\n</div>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">data</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "ifri_mini_ml_lib.clustering.HierarchicalClustering": {"fullname": "ifri_mini_ml_lib.clustering.HierarchicalClustering", "modulename": "ifri_mini_ml_lib.clustering", "qualname": "HierarchicalClustering", "kind": "class", "doc": "<h2 id=\"description\">Description:</h2>\n\n<p>HierarchicalClustering performs hierarchical clustering using either the agglomerative (bottom-up)\nor divisive (top-down) approach.</p>\n\n<p>Arguments:\n    n_clusters (int or None): Desired number of clusters (required for divisive method).\n    linkage (str): Linkage criterion to use for merging clusters ('single', 'complete', 'average').\n    method (str): Clustering strategy ('agglomerative' or 'divisive').</p>\n\n<p>Example:</p>\n\n<div class=\"pdoc-code codehilite\">\n<pre><span></span><code><span class=\"gp\">&gt;&gt;&gt; </span><span class=\"kn\">from</span><span class=\"w\"> </span><span class=\"nn\">ifri_mini_ml_lib.clustering</span><span class=\"w\"> </span><span class=\"kn\">import</span> <span class=\"n\">HierarchicalClustering</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">hierarchical</span> <span class=\"o\">=</span> <span class=\"n\">HierarchicalClustering</span><span class=\"p\">(</span><span class=\"n\">n_clusters</span><span class=\"o\">=</span><span class=\"mi\">3</span><span class=\"p\">,</span> <span class=\"n\">linkage</span><span class=\"o\">=</span><span class=\"s1\">&#39;complete&#39;</span><span class=\"p\">,</span> <span class=\"n\">method</span><span class=\"o\">=</span><span class=\"s1\">&#39;agglomerative&#39;</span><span class=\"p\">)</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">labels</span> <span class=\"o\">=</span> <span class=\"n\">hierarchical</span><span class=\"o\">.</span><span class=\"n\">fit_predict</span><span class=\"p\">(</span><span class=\"n\">data</span><span class=\"p\">)</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">hierarchical</span><span class=\"o\">.</span><span class=\"n\">plot_clusters</span><span class=\"p\">(</span><span class=\"n\">data</span><span class=\"p\">,</span> <span class=\"n\">labels</span><span class=\"p\">)</span>\n</code></pre>\n</div>\n"}, "ifri_mini_ml_lib.clustering.HierarchicalClustering.__init__": {"fullname": "ifri_mini_ml_lib.clustering.HierarchicalClustering.__init__", "modulename": "ifri_mini_ml_lib.clustering", "qualname": "HierarchicalClustering.__init__", "kind": "function", "doc": "<p>Initializes the hierarchical clustering parameters.</p>\n\n<p>Arguments:\n    n_clusters (int, optional): Desired number of clusters (required for the divisive method).\n        If None, agglomerative clustering proceeds until all points are merged.\n    linkage (str, optional): Linkage criterion to use ('single', 'complete', 'average').\n    method (str, optional): Clustering method to apply ('agglomerative' or 'divisive').</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">n_clusters</span><span class=\"o\">=</span><span class=\"kc\">None</span>, </span><span class=\"param\"><span class=\"n\">linkage</span><span class=\"o\">=</span><span class=\"s1\">&#39;single&#39;</span>, </span><span class=\"param\"><span class=\"n\">method</span><span class=\"o\">=</span><span class=\"s1\">&#39;agglomerative&#39;</span></span>)</span>"}, "ifri_mini_ml_lib.clustering.HierarchicalClustering.n_clusters": {"fullname": "ifri_mini_ml_lib.clustering.HierarchicalClustering.n_clusters", "modulename": "ifri_mini_ml_lib.clustering", "qualname": "HierarchicalClustering.n_clusters", "kind": "variable", "doc": "<p></p>\n"}, "ifri_mini_ml_lib.clustering.HierarchicalClustering.linkage": {"fullname": "ifri_mini_ml_lib.clustering.HierarchicalClustering.linkage", "modulename": "ifri_mini_ml_lib.clustering", "qualname": "HierarchicalClustering.linkage", "kind": "variable", "doc": "<p></p>\n"}, "ifri_mini_ml_lib.clustering.HierarchicalClustering.method": {"fullname": "ifri_mini_ml_lib.clustering.HierarchicalClustering.method", "modulename": "ifri_mini_ml_lib.clustering", "qualname": "HierarchicalClustering.method", "kind": "variable", "doc": "<p></p>\n"}, "ifri_mini_ml_lib.clustering.HierarchicalClustering.labels": {"fullname": "ifri_mini_ml_lib.clustering.HierarchicalClustering.labels", "modulename": "ifri_mini_ml_lib.clustering", "qualname": "HierarchicalClustering.labels", "kind": "variable", "doc": "<p></p>\n"}, "ifri_mini_ml_lib.clustering.HierarchicalClustering.linked_matrix": {"fullname": "ifri_mini_ml_lib.clustering.HierarchicalClustering.linked_matrix", "modulename": "ifri_mini_ml_lib.clustering", "qualname": "HierarchicalClustering.linked_matrix", "kind": "variable", "doc": "<p></p>\n"}, "ifri_mini_ml_lib.clustering.HierarchicalClustering.fit_predict": {"fullname": "ifri_mini_ml_lib.clustering.HierarchicalClustering.fit_predict", "modulename": "ifri_mini_ml_lib.clustering", "qualname": "HierarchicalClustering.fit_predict", "kind": "function", "doc": "<p>Performs hierarchical clustering on the given data.</p>\n\n<p>Arguments:\n    data (numpy.ndarray): Data to be clustered (n_samples, n_features).\n    kmeans (KMeans, optional): KMeans instance, required for the divisive method</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">data</span>, </span><span class=\"param\"><span class=\"n\">kmeans</span><span class=\"o\">=</span><span class=\"kc\">None</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "ifri_mini_ml_lib.clustering.HierarchicalClustering.plot_dendrogram": {"fullname": "ifri_mini_ml_lib.clustering.HierarchicalClustering.plot_dendrogram", "modulename": "ifri_mini_ml_lib.clustering", "qualname": "HierarchicalClustering.plot_dendrogram", "kind": "function", "doc": "<p>Plots a dendrogram based on the linkage matrix constructed during hierarchical clustering.\nThe main branches corresponding to the final clusters are colored differently for better visualization.</p>\n\n<p>Arguments:\n    data (numpy.ndarray): The dataset used for clustering.</p>\n\n<p>Example:</p>\n\n<div class=\"pdoc-code codehilite\">\n<pre><span></span><code><span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">hierarchical</span> <span class=\"o\">=</span> <span class=\"n\">HierarchicalClustering</span><span class=\"p\">(</span><span class=\"n\">n_clusters</span><span class=\"o\">=</span><span class=\"mi\">3</span><span class=\"p\">,</span> <span class=\"n\">linkage</span><span class=\"o\">=</span><span class=\"s1\">&#39;complete&#39;</span><span class=\"p\">,</span> <span class=\"n\">method</span><span class=\"o\">=</span><span class=\"s1\">&#39;agglomerative&#39;</span><span class=\"p\">)</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">labels</span> <span class=\"o\">=</span> <span class=\"n\">hierarchical</span><span class=\"o\">.</span><span class=\"n\">fit_predict</span><span class=\"p\">(</span><span class=\"n\">data</span><span class=\"p\">)</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">hierarchical</span><span class=\"o\">.</span><span class=\"n\">plot_dendrogram</span><span class=\"p\">(</span><span class=\"n\">data</span><span class=\"p\">)</span>\n</code></pre>\n</div>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">labels</span><span class=\"o\">=</span><span class=\"kc\">None</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "ifri_mini_ml_lib.clustering.HierarchicalClustering.plot_clusters": {"fullname": "ifri_mini_ml_lib.clustering.HierarchicalClustering.plot_clusters", "modulename": "ifri_mini_ml_lib.clustering", "qualname": "HierarchicalClustering.plot_clusters", "kind": "function", "doc": "<p>Plots a scatter plot of the data points colored by their cluster labels,\nsupporting 1D, 2D, and 3D data. For higher dimensions, PCA is applied to reduce to 3D.</p>\n\n<p>Arguments:\n    data (numpy.ndarray): Data array.</p>\n\n<p>Example:</p>\n\n<div class=\"pdoc-code codehilite\">\n<pre><span></span><code><span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">hierarchical</span><span class=\"o\">.</span><span class=\"n\">plot_clusters</span><span class=\"p\">(</span><span class=\"n\">data</span><span class=\"p\">)</span>\n</code></pre>\n</div>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">data</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "ifri_mini_ml_lib.metrics": {"fullname": "ifri_mini_ml_lib.metrics", "modulename": "ifri_mini_ml_lib.metrics", "kind": "module", "doc": "<p></p>\n"}, "ifri_mini_ml_lib.metrics.bias_evaluation": {"fullname": "ifri_mini_ml_lib.metrics.bias_evaluation", "modulename": "ifri_mini_ml_lib.metrics.bias_evaluation", "kind": "module", "doc": "<p></p>\n"}, "ifri_mini_ml_lib.metrics.bias_evaluation.selection_rate": {"fullname": "ifri_mini_ml_lib.metrics.bias_evaluation.selection_rate", "modulename": "ifri_mini_ml_lib.metrics.bias_evaluation", "qualname": "selection_rate", "kind": "function", "doc": "<p>Description:\n    Computes the fraction of predicted labels equal to the positive outcome (pos_label).</p>\n\n<p>Args:\n    y_true (np.ndarray or None): Not used here but kept for API consistency.\n    y_pred (np.ndarray): Predicted labels.\n    pos_label (Any): The label considered as the positive class. Default is 1.\n    sample_weight (np.ndarray or None): Optional sample weights.</p>\n\n<p>Returns:\n    float: The selection rate (i.e., proportion of positive predictions).</p>\n\n<p>Example:\n    selection_rate(None, np.array([1, 0, 1, 1]), pos_label=1)</p>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"n\">y_true</span><span class=\"p\">:</span> <span class=\"n\">Optional</span><span class=\"p\">[</span><span class=\"n\">numpy</span><span class=\"o\">.</span><span class=\"n\">ndarray</span><span class=\"p\">]</span>,</span><span class=\"param\">\t<span class=\"n\">y_pred</span><span class=\"p\">:</span> <span class=\"n\">numpy</span><span class=\"o\">.</span><span class=\"n\">ndarray</span>,</span><span class=\"param\">\t<span class=\"o\">*</span>,</span><span class=\"param\">\t<span class=\"n\">pos_label</span><span class=\"p\">:</span> <span class=\"n\">Any</span> <span class=\"o\">=</span> <span class=\"mi\">1</span>,</span><span class=\"param\">\t<span class=\"n\">sample_weight</span><span class=\"p\">:</span> <span class=\"n\">Optional</span><span class=\"p\">[</span><span class=\"n\">numpy</span><span class=\"o\">.</span><span class=\"n\">ndarray</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"kc\">None</span></span><span class=\"return-annotation\">) -> <span class=\"nb\">float</span>:</span></span>", "funcdef": "def"}, "ifri_mini_ml_lib.metrics.bias_evaluation.selection_rate_per_group": {"fullname": "ifri_mini_ml_lib.metrics.bias_evaluation.selection_rate_per_group", "modulename": "ifri_mini_ml_lib.metrics.bias_evaluation", "qualname": "selection_rate_per_group", "kind": "function", "doc": "<p>Description:\n    Computes selection rate for each group in the sensitive feature.</p>\n\n<p>Args:\n    y_true (np.ndarray or None): Not used.\n    y_pred (np.ndarray): Predicted labels.\n    sensitive_features (np.ndarray): Group identifiers for each sample.\n    pos_label (Any): The positive label to count as selected.\n    sample_weight (np.ndarray or None): Optional weights per sample.</p>\n\n<p>Returns:\n    Dict[Any, float]: A dictionary with groups as keys and their selection rate as values.</p>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"n\">y_true</span><span class=\"p\">:</span> <span class=\"n\">Optional</span><span class=\"p\">[</span><span class=\"n\">numpy</span><span class=\"o\">.</span><span class=\"n\">ndarray</span><span class=\"p\">]</span>,</span><span class=\"param\">\t<span class=\"n\">y_pred</span><span class=\"p\">:</span> <span class=\"n\">numpy</span><span class=\"o\">.</span><span class=\"n\">ndarray</span>,</span><span class=\"param\">\t<span class=\"n\">sensitive_features</span><span class=\"p\">:</span> <span class=\"n\">numpy</span><span class=\"o\">.</span><span class=\"n\">ndarray</span>,</span><span class=\"param\">\t<span class=\"n\">pos_label</span><span class=\"p\">:</span> <span class=\"n\">Any</span>,</span><span class=\"param\">\t<span class=\"n\">sample_weight</span><span class=\"p\">:</span> <span class=\"n\">Optional</span><span class=\"p\">[</span><span class=\"n\">numpy</span><span class=\"o\">.</span><span class=\"n\">ndarray</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"kc\">None</span></span><span class=\"return-annotation\">) -> <span class=\"n\">Dict</span><span class=\"p\">[</span><span class=\"n\">Any</span><span class=\"p\">,</span> <span class=\"nb\">float</span><span class=\"p\">]</span>:</span></span>", "funcdef": "def"}, "ifri_mini_ml_lib.metrics.bias_evaluation.demographic_parity_ratio": {"fullname": "ifri_mini_ml_lib.metrics.bias_evaluation.demographic_parity_ratio", "modulename": "ifri_mini_ml_lib.metrics.bias_evaluation", "qualname": "demographic_parity_ratio", "kind": "function", "doc": "<p>Description:\n    Computes the demographic parity ratio (min rate / max rate).</p>\n\n<p>Args:\n    y_pred (np.ndarray): Predicted labels.\n    sensitive_features (np.ndarray): Group identifiers.\n    pos_label (Any): Positive label to use.\n    sample_weight (np.ndarray or None): Optional weights.</p>\n\n<p>Returns:\n    Tuple[float, Dict[Any, float]]: Ratio and rates per group.</p>\n\n<p>Example:\n    demographic_parity_ratio(np.array([1, 0, 1]), np.array(['A', 'B', 'A']))</p>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"n\">y_pred</span><span class=\"p\">:</span> <span class=\"n\">numpy</span><span class=\"o\">.</span><span class=\"n\">ndarray</span>,</span><span class=\"param\">\t<span class=\"n\">sensitive_features</span><span class=\"p\">:</span> <span class=\"n\">numpy</span><span class=\"o\">.</span><span class=\"n\">ndarray</span>,</span><span class=\"param\">\t<span class=\"n\">pos_label</span><span class=\"p\">:</span> <span class=\"n\">Any</span> <span class=\"o\">=</span> <span class=\"mi\">1</span>,</span><span class=\"param\">\t<span class=\"n\">sample_weight</span><span class=\"p\">:</span> <span class=\"n\">Optional</span><span class=\"p\">[</span><span class=\"n\">numpy</span><span class=\"o\">.</span><span class=\"n\">ndarray</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"kc\">None</span></span><span class=\"return-annotation\">) -> <span class=\"n\">Tuple</span><span class=\"p\">[</span><span class=\"nb\">float</span><span class=\"p\">,</span> <span class=\"n\">Dict</span><span class=\"p\">[</span><span class=\"n\">Any</span><span class=\"p\">,</span> <span class=\"nb\">float</span><span class=\"p\">]]</span>:</span></span>", "funcdef": "def"}, "ifri_mini_ml_lib.metrics.bias_evaluation.demographic_parity_difference": {"fullname": "ifri_mini_ml_lib.metrics.bias_evaluation.demographic_parity_difference", "modulename": "ifri_mini_ml_lib.metrics.bias_evaluation", "qualname": "demographic_parity_difference", "kind": "function", "doc": "<p>Description:\n    Computes the demographic parity difference (|max - min| selection rates).</p>\n\n<p>Args:\n    y_pred (np.ndarray): Predicted labels.\n    sensitive_features (np.ndarray): Group identifiers.\n    pos_label (Any): Positive class label.\n    sample_weight (np.ndarray or None): Optional sample weights.</p>\n\n<p>Returns:\n    Tuple[float, Dict[Any, float]]: Difference and selection rates per group.</p>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"n\">y_pred</span><span class=\"p\">:</span> <span class=\"n\">numpy</span><span class=\"o\">.</span><span class=\"n\">ndarray</span>,</span><span class=\"param\">\t<span class=\"n\">sensitive_features</span><span class=\"p\">:</span> <span class=\"n\">numpy</span><span class=\"o\">.</span><span class=\"n\">ndarray</span>,</span><span class=\"param\">\t<span class=\"n\">pos_label</span><span class=\"p\">:</span> <span class=\"n\">Any</span> <span class=\"o\">=</span> <span class=\"mi\">1</span>,</span><span class=\"param\">\t<span class=\"n\">sample_weight</span><span class=\"p\">:</span> <span class=\"n\">Optional</span><span class=\"p\">[</span><span class=\"n\">numpy</span><span class=\"o\">.</span><span class=\"n\">ndarray</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"kc\">None</span></span><span class=\"return-annotation\">) -> <span class=\"n\">Tuple</span><span class=\"p\">[</span><span class=\"nb\">float</span><span class=\"p\">,</span> <span class=\"n\">Dict</span><span class=\"p\">[</span><span class=\"n\">Any</span><span class=\"p\">,</span> <span class=\"nb\">float</span><span class=\"p\">]]</span>:</span></span>", "funcdef": "def"}, "ifri_mini_ml_lib.metrics.bias_evaluation.tpr_fpr_by_group": {"fullname": "ifri_mini_ml_lib.metrics.bias_evaluation.tpr_fpr_by_group", "modulename": "ifri_mini_ml_lib.metrics.bias_evaluation", "qualname": "tpr_fpr_by_group", "kind": "function", "doc": "<p>Description:\n    Computes True Positive Rate (TPR) and False Positive Rate (FPR) for each group.</p>\n\n<p>Args:\n    y_true (np.ndarray): Ground truth labels.\n    y_pred (np.ndarray): Predicted labels.\n    sensitive_features (np.ndarray): Group identifiers.\n    pos_label (Any): Label considered as positive class.</p>\n\n<p>Returns:\n    Tuple[Dict[Any, float], Dict[Any, float]]: TPR and FPR per group.</p>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"n\">y_true</span><span class=\"p\">:</span> <span class=\"n\">numpy</span><span class=\"o\">.</span><span class=\"n\">ndarray</span>,</span><span class=\"param\">\t<span class=\"n\">y_pred</span><span class=\"p\">:</span> <span class=\"n\">numpy</span><span class=\"o\">.</span><span class=\"n\">ndarray</span>,</span><span class=\"param\">\t<span class=\"n\">sensitive_features</span><span class=\"p\">:</span> <span class=\"n\">numpy</span><span class=\"o\">.</span><span class=\"n\">ndarray</span>,</span><span class=\"param\">\t<span class=\"n\">pos_label</span><span class=\"p\">:</span> <span class=\"n\">Any</span> <span class=\"o\">=</span> <span class=\"mi\">1</span></span><span class=\"return-annotation\">) -> <span class=\"n\">Tuple</span><span class=\"p\">[</span><span class=\"n\">Dict</span><span class=\"p\">[</span><span class=\"n\">Any</span><span class=\"p\">,</span> <span class=\"nb\">float</span><span class=\"p\">],</span> <span class=\"n\">Dict</span><span class=\"p\">[</span><span class=\"n\">Any</span><span class=\"p\">,</span> <span class=\"nb\">float</span><span class=\"p\">]]</span>:</span></span>", "funcdef": "def"}, "ifri_mini_ml_lib.metrics.bias_evaluation.equalized_odds_ratio": {"fullname": "ifri_mini_ml_lib.metrics.bias_evaluation.equalized_odds_ratio", "modulename": "ifri_mini_ml_lib.metrics.bias_evaluation", "qualname": "equalized_odds_ratio", "kind": "function", "doc": "<p>Description:\n    Computes the Equalized Odds Ratio (min/max of TPR and FPR between groups).</p>\n\n<p>Args:\n    y_true (np.ndarray): Ground truth labels.\n    y_pred (np.ndarray): Predicted labels.\n    sensitive_features (np.ndarray): Group identifiers.\n    pos_label (Any): Positive class.</p>\n\n<p>Returns:\n    Tuple[float, Dict[Any, float], Dict[Any, float]]: EOR, TPR per group, FPR per group.</p>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"n\">y_true</span><span class=\"p\">:</span> <span class=\"n\">numpy</span><span class=\"o\">.</span><span class=\"n\">ndarray</span>,</span><span class=\"param\">\t<span class=\"n\">y_pred</span><span class=\"p\">:</span> <span class=\"n\">numpy</span><span class=\"o\">.</span><span class=\"n\">ndarray</span>,</span><span class=\"param\">\t<span class=\"n\">sensitive_features</span><span class=\"p\">:</span> <span class=\"n\">numpy</span><span class=\"o\">.</span><span class=\"n\">ndarray</span>,</span><span class=\"param\">\t<span class=\"n\">pos_label</span><span class=\"p\">:</span> <span class=\"n\">Any</span> <span class=\"o\">=</span> <span class=\"mi\">1</span></span><span class=\"return-annotation\">) -> <span class=\"n\">Tuple</span><span class=\"p\">[</span><span class=\"nb\">float</span><span class=\"p\">,</span> <span class=\"n\">Dict</span><span class=\"p\">[</span><span class=\"n\">Any</span><span class=\"p\">,</span> <span class=\"nb\">float</span><span class=\"p\">],</span> <span class=\"n\">Dict</span><span class=\"p\">[</span><span class=\"n\">Any</span><span class=\"p\">,</span> <span class=\"nb\">float</span><span class=\"p\">]]</span>:</span></span>", "funcdef": "def"}, "ifri_mini_ml_lib.metrics.bias_evaluation.equalized_odds_difference": {"fullname": "ifri_mini_ml_lib.metrics.bias_evaluation.equalized_odds_difference", "modulename": "ifri_mini_ml_lib.metrics.bias_evaluation", "qualname": "equalized_odds_difference", "kind": "function", "doc": "<p>Description:\n    Computes the maximum difference of TPR and FPR between groups.</p>\n\n<p>Args:\n    y_true (np.ndarray): Ground truth.\n    y_pred (np.ndarray): Predictions.\n    sensitive_features (np.ndarray): Group labels.\n    pos_label (Any): Positive label.</p>\n\n<p>Returns:\n    Tuple[float, Dict[Any, float], Dict[Any, float]]: Difference, TPR per group, FPR per group.</p>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"n\">y_true</span><span class=\"p\">:</span> <span class=\"n\">numpy</span><span class=\"o\">.</span><span class=\"n\">ndarray</span>,</span><span class=\"param\">\t<span class=\"n\">y_pred</span><span class=\"p\">:</span> <span class=\"n\">numpy</span><span class=\"o\">.</span><span class=\"n\">ndarray</span>,</span><span class=\"param\">\t<span class=\"n\">sensitive_features</span><span class=\"p\">:</span> <span class=\"n\">numpy</span><span class=\"o\">.</span><span class=\"n\">ndarray</span>,</span><span class=\"param\">\t<span class=\"n\">pos_label</span><span class=\"p\">:</span> <span class=\"n\">Any</span> <span class=\"o\">=</span> <span class=\"mi\">1</span></span><span class=\"return-annotation\">) -> <span class=\"n\">Tuple</span><span class=\"p\">[</span><span class=\"nb\">float</span><span class=\"p\">,</span> <span class=\"n\">Dict</span><span class=\"p\">[</span><span class=\"n\">Any</span><span class=\"p\">,</span> <span class=\"nb\">float</span><span class=\"p\">],</span> <span class=\"n\">Dict</span><span class=\"p\">[</span><span class=\"n\">Any</span><span class=\"p\">,</span> <span class=\"nb\">float</span><span class=\"p\">]]</span>:</span></span>", "funcdef": "def"}, "ifri_mini_ml_lib.metrics.evaluation_metrics": {"fullname": "ifri_mini_ml_lib.metrics.evaluation_metrics", "modulename": "ifri_mini_ml_lib.metrics.evaluation_metrics", "kind": "module", "doc": "<p></p>\n"}, "ifri_mini_ml_lib.metrics.evaluation_metrics.evaluate_model": {"fullname": "ifri_mini_ml_lib.metrics.evaluation_metrics.evaluate_model", "modulename": "ifri_mini_ml_lib.metrics.evaluation_metrics", "qualname": "evaluate_model", "kind": "function", "doc": "<p>Compute : MSE, RMSE, MAE, MAPE, R\u00b2</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">y_true</span>, </span><span class=\"param\"><span class=\"n\">y_pred</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "ifri_mini_ml_lib.metrics.evaluation_metrics.confusion_matrix": {"fullname": "ifri_mini_ml_lib.metrics.evaluation_metrics.confusion_matrix", "modulename": "ifri_mini_ml_lib.metrics.evaluation_metrics", "qualname": "confusion_matrix", "kind": "function", "doc": "<p>Computes the confusion matrix.</p>\n\n<p>Args:\n    y_true (list[int]): List of actual (true) labels.\n    y_pred (list[int]): List of predicted labels.\n    classes (list[int], optional): List of possible classes. \n                                   If None, classes are inferred from the data.</p>\n\n<p>Returns:\n    dict: Confusion matrix as a nested dictionary in the form:\n          {true_class: {predicted_class: count}}.\n          Example: {0: {0: 50, 1: 10}, 1: {0: 5, 1: 100}}.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">y_true</span>, </span><span class=\"param\"><span class=\"n\">y_pred</span>, </span><span class=\"param\"><span class=\"n\">classes</span><span class=\"o\">=</span><span class=\"kc\">None</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "ifri_mini_ml_lib.metrics.evaluation_metrics.accuracy": {"fullname": "ifri_mini_ml_lib.metrics.evaluation_metrics.accuracy", "modulename": "ifri_mini_ml_lib.metrics.evaluation_metrics", "qualname": "accuracy", "kind": "function", "doc": "<p>Calculates the accuracy of predictions.</p>\n\n<p>Args:\n    y_true (list[int]): List of true labels.\n    y_pred (list[int]): List of predicted labels.</p>\n\n<p>Returns:\n    float: Accuracy score (correct predictions / total predictions).</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">y_true</span>, </span><span class=\"param\"><span class=\"n\">y_pred</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "ifri_mini_ml_lib.metrics.evaluation_metrics.precision": {"fullname": "ifri_mini_ml_lib.metrics.evaluation_metrics.precision", "modulename": "ifri_mini_ml_lib.metrics.evaluation_metrics", "qualname": "precision", "kind": "function", "doc": "<p>Calculates precision for a specific class.</p>\n\n<p>Args:\n    y_true (list[int]): List of true labels.\n    y_pred (list[int]): List of predicted labels.\n    positive_class (int, optional): The class considered as positive (default is 1).</p>\n\n<p>Returns:\n    float: Precision score = True Positives / (True Positives + False Positives).\n           Returns 0 if there are no predicted positives.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">y_true</span>, </span><span class=\"param\"><span class=\"n\">y_pred</span>, </span><span class=\"param\"><span class=\"n\">positive_class</span><span class=\"o\">=</span><span class=\"mi\">1</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "ifri_mini_ml_lib.metrics.evaluation_metrics.recall": {"fullname": "ifri_mini_ml_lib.metrics.evaluation_metrics.recall", "modulename": "ifri_mini_ml_lib.metrics.evaluation_metrics", "qualname": "recall", "kind": "function", "doc": "<p>Calculates recall (sensitivity) for a specific class.</p>\n\n<p>Args:\n    y_true (list[int]): List of true labels.\n    y_pred (list[int]): List of predicted labels.\n    positive_class (int, optional): The class considered as positive (default is 1).</p>\n\n<p>Returns:\n    float: Recall score = True Positives / (True Positives + False Negatives).\n           Returns 0 if there are no actual positives.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">y_true</span>, </span><span class=\"param\"><span class=\"n\">y_pred</span>, </span><span class=\"param\"><span class=\"n\">positive_class</span><span class=\"o\">=</span><span class=\"mi\">1</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "ifri_mini_ml_lib.metrics.evaluation_metrics.f1_score": {"fullname": "ifri_mini_ml_lib.metrics.evaluation_metrics.f1_score", "modulename": "ifri_mini_ml_lib.metrics.evaluation_metrics", "qualname": "f1_score", "kind": "function", "doc": "<p>Calculates the F1-score for a specific class.</p>\n\n<p>Args:\n    y_true (list[int]): List of true labels.\n    y_pred (list[int]): List of predicted labels.\n    positive_class (int, optional): The class considered as positive (default is 1).</p>\n\n<p>Returns:\n    float: F1-score = 2 * (precision * recall) / (precision + recall).\n           Returns 0 if both precision and recall are 0.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">y_true</span>, </span><span class=\"param\"><span class=\"n\">y_pred</span>, </span><span class=\"param\"><span class=\"n\">positive_class</span><span class=\"o\">=</span><span class=\"mi\">1</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "ifri_mini_ml_lib.metrics.evaluation_metrics.calculate_inertia": {"fullname": "ifri_mini_ml_lib.metrics.evaluation_metrics.calculate_inertia", "modulename": "ifri_mini_ml_lib.metrics.evaluation_metrics", "qualname": "calculate_inertia", "kind": "function", "doc": "<p>Computes the inertia of a clustering model.  Inertia measures the sum of squared distances\nfrom each data point to its cluster's centroid, providing an indication of cluster density\nand separation.  Lower inertia generally indicates better clustering.</p>\n\n<p>Arguments:\n    data (numpy.ndarray): Input data array, shape (n_samples, n_features).\n    labels (numpy.ndarray): Cluster labels for each data point, shape (n_samples,).\n    centroids (numpy.ndarray): Cluster centers, shape (n_clusters, n_features).</p>\n\n<p>Returns:\n    float: Total inertia of the clustering.</p>\n\n<p>Example:</p>\n\n<blockquote>\n  <blockquote>\n    <blockquote>\n      <p>inertia = calculate_inertia(data, labels, centroids)\n      print(f\"Inertia: {inertia}\")</p>\n    </blockquote>\n  </blockquote>\n</blockquote>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">data</span>, </span><span class=\"param\"><span class=\"n\">labels</span>, </span><span class=\"param\"><span class=\"n\">centroids</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "ifri_mini_ml_lib.metrics.evaluation_metrics.calculate_silhouette": {"fullname": "ifri_mini_ml_lib.metrics.evaluation_metrics.calculate_silhouette", "modulename": "ifri_mini_ml_lib.metrics.evaluation_metrics", "qualname": "calculate_silhouette", "kind": "function", "doc": "<p>Computes the average silhouette score for a clustering model. The silhouette score measures\nhow well each data point fits within its assigned cluster compared to other clusters.\nIt ranges from -1 to 1, where higher values indicate better clustering.</p>\n\n<p>Arguments:\n    data (numpy.ndarray): Input data array, shape (n_samples, n_features).\n    labels (numpy.ndarray): Cluster labels for each data point, shape (n_samples,).</p>\n\n<p>Returns:\n    float: Average silhouette score.</p>\n\n<p>Example:</p>\n\n<div class=\"pdoc-code codehilite\">\n<pre><span></span><code><span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">silhouette_avg</span> <span class=\"o\">=</span> <span class=\"n\">calculate_silhouette</span><span class=\"p\">(</span><span class=\"n\">data</span><span class=\"p\">,</span> <span class=\"n\">labels</span><span class=\"p\">)</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"sa\">f</span><span class=\"s2\">&quot;Silhouette Score: </span><span class=\"si\">{</span><span class=\"n\">silhouette_avg</span><span class=\"si\">}</span><span class=\"s2\">&quot;</span><span class=\"p\">)</span>\n</code></pre>\n</div>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">data</span>, </span><span class=\"param\"><span class=\"n\">labels</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "ifri_mini_ml_lib.model_selection": {"fullname": "ifri_mini_ml_lib.model_selection", "modulename": "ifri_mini_ml_lib.model_selection", "kind": "module", "doc": "<p></p>\n"}, "ifri_mini_ml_lib.model_selection.BaggingClassifier": {"fullname": "ifri_mini_ml_lib.model_selection.BaggingClassifier", "modulename": "ifri_mini_ml_lib.model_selection", "qualname": "BaggingClassifier", "kind": "class", "doc": "<p>Description:\n    BaggingClassifier is an implementation of the Bagging (Bootstrap Aggregating) technique for classification tasks.\n    It trains multiple copies of a base classifier on bootstrap samples of the training set, and \n    aggregates predictions using majority voting.</p>\n\n<p>Args:\n    base_model (object): A classification model implementing <code>fit()</code> and <code>predict()</code> methods.\n    n_estimators (int): Number of models to train. Default is 10.\n    random_state (int, optional): Seed for reproducibility. Default is None.\n    pretrained_models (list, optional): A list of already trained models to use instead of training new ones.</p>\n\n<p>Returns:\n    None</p>\n\n<p>Example:\n    Case 1 - base model which need fitting</p>\n\n<blockquote>\n  <blockquote>\n    <blockquote>\n      <p>model = BaggingClassifier(base_model=DecisionTreeClassifier(), n_estimators=5, random_state=123)\n      model.fit(X_train, y_train)\n      y_pred = model.predict(X_test)</p>\n\n<pre><code>Case 2 - base models already trained which don't need fitting\n&gt;&gt;&gt; trained_models = [trained_model1, trained_model2, trained_model3]\n&gt;&gt;&gt; model = BaggingClassifier(pretrained_models=trained_models)\n&gt;&gt;&gt; y_pred = model.predict(X_test)\n</code></pre>\n    </blockquote>\n  </blockquote>\n</blockquote>\n"}, "ifri_mini_ml_lib.model_selection.BaggingClassifier.__init__": {"fullname": "ifri_mini_ml_lib.model_selection.BaggingClassifier.__init__", "modulename": "ifri_mini_ml_lib.model_selection", "qualname": "BaggingClassifier.__init__", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"n\">base_model</span><span class=\"o\">=</span><span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">n_estimators</span><span class=\"o\">=</span><span class=\"mi\">10</span>,</span><span class=\"param\">\t<span class=\"n\">random_state</span><span class=\"o\">=</span><span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">pretrained_models</span><span class=\"o\">=</span><span class=\"kc\">None</span></span>)</span>"}, "ifri_mini_ml_lib.model_selection.BaggingClassifier.base_model": {"fullname": "ifri_mini_ml_lib.model_selection.BaggingClassifier.base_model", "modulename": "ifri_mini_ml_lib.model_selection", "qualname": "BaggingClassifier.base_model", "kind": "variable", "doc": "<p></p>\n"}, "ifri_mini_ml_lib.model_selection.BaggingClassifier.n_estimators": {"fullname": "ifri_mini_ml_lib.model_selection.BaggingClassifier.n_estimators", "modulename": "ifri_mini_ml_lib.model_selection", "qualname": "BaggingClassifier.n_estimators", "kind": "variable", "doc": "<p></p>\n"}, "ifri_mini_ml_lib.model_selection.BaggingClassifier.random_state": {"fullname": "ifri_mini_ml_lib.model_selection.BaggingClassifier.random_state", "modulename": "ifri_mini_ml_lib.model_selection", "qualname": "BaggingClassifier.random_state", "kind": "variable", "doc": "<p></p>\n"}, "ifri_mini_ml_lib.model_selection.BaggingClassifier.models": {"fullname": "ifri_mini_ml_lib.model_selection.BaggingClassifier.models", "modulename": "ifri_mini_ml_lib.model_selection", "qualname": "BaggingClassifier.models", "kind": "variable", "doc": "<p></p>\n"}, "ifri_mini_ml_lib.model_selection.BaggingClassifier.pretrained": {"fullname": "ifri_mini_ml_lib.model_selection.BaggingClassifier.pretrained", "modulename": "ifri_mini_ml_lib.model_selection", "qualname": "BaggingClassifier.pretrained", "kind": "variable", "doc": "<p></p>\n"}, "ifri_mini_ml_lib.model_selection.BaggingClassifier.fit": {"fullname": "ifri_mini_ml_lib.model_selection.BaggingClassifier.fit", "modulename": "ifri_mini_ml_lib.model_selection", "qualname": "BaggingClassifier.fit", "kind": "function", "doc": "<p>Description:\n    Trains multiple instances of the base model on bootstrap samples of the training data.</p>\n\n<p>Args:\n    X (array-like): Feature matrix of shape (n_samples, n_features).\n    y (array-like): Target vector of shape (n_samples,).</p>\n\n<p>Returns:\n    None</p>\n\n<p>Example:</p>\n\n<blockquote>\n  <blockquote>\n    <blockquote>\n      <p>model.fit(X_train, y_train)</p>\n    </blockquote>\n  </blockquote>\n</blockquote>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">X</span>, </span><span class=\"param\"><span class=\"n\">y</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "ifri_mini_ml_lib.model_selection.BaggingClassifier.predict": {"fullname": "ifri_mini_ml_lib.model_selection.BaggingClassifier.predict", "modulename": "ifri_mini_ml_lib.model_selection", "qualname": "BaggingClassifier.predict", "kind": "function", "doc": "<p>Description:\n    Predicts target classes for given input samples using majority voting across all models.</p>\n\n<p>Args:\n    X (array-like): Feature matrix of shape (n_samples, n_features).</p>\n\n<p>Returns:\n    np.ndarray: Predicted class labels for all samples.</p>\n\n<p>Example:</p>\n\n<blockquote>\n  <blockquote>\n    <blockquote>\n      <p>y_pred = model.predict(X_test)</p>\n    </blockquote>\n  </blockquote>\n</blockquote>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">X</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "ifri_mini_ml_lib.model_selection.BaggingRegressor": {"fullname": "ifri_mini_ml_lib.model_selection.BaggingRegressor", "modulename": "ifri_mini_ml_lib.model_selection", "qualname": "BaggingRegressor", "kind": "class", "doc": "<p>Description:\n    BaggingRegressor is an implementation of the Bagging (Bootstrap Aggregating) technique for regression tasks.\n    It trains multiple copies of a base model on different bootstrap samples of the training set, and \n    aggregates predictions by averaging them.</p>\n\n<p>Args:\n    base_model (object): A regression model implementing <code>fit()</code> and <code>predict()</code> methods.\n    n_estimators (int): Number of models to train. Default is 10.\n    random_state (int, optional): Seed for reproducibility. Default is None.\n    pretrained_models (list, optional): A list of already trained models to use instead of training new ones.</p>\n\n<p>Returns:\n    None</p>\n\n<p>Example:\n    Case 1 - base model which need fitting</p>\n\n<blockquote>\n  <blockquote>\n    <blockquote>\n      <p>model = BaggingRegressor(base_model=DecisionTreeRegressor(), n_estimators=5, random_state=123)\n      model.fit(X_train, y_train)\n      y_pred = model.predict(X_test)</p>\n\n<pre><code>Case 2 - base models already trained which don't need fitting\n&gt;&gt;&gt; trained_models = [trained_model1, trained_model2, trained_model3]\n&gt;&gt;&gt; model = BaggingRegressor(pretrained_models=trained_models)\n&gt;&gt;&gt; y_pred = model.predict(X_test)\n</code></pre>\n    </blockquote>\n  </blockquote>\n</blockquote>\n"}, "ifri_mini_ml_lib.model_selection.BaggingRegressor.__init__": {"fullname": "ifri_mini_ml_lib.model_selection.BaggingRegressor.__init__", "modulename": "ifri_mini_ml_lib.model_selection", "qualname": "BaggingRegressor.__init__", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"n\">base_model</span><span class=\"o\">=</span><span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">n_estimators</span><span class=\"o\">=</span><span class=\"mi\">10</span>,</span><span class=\"param\">\t<span class=\"n\">random_state</span><span class=\"o\">=</span><span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">pretrained_models</span><span class=\"o\">=</span><span class=\"kc\">None</span></span>)</span>"}, "ifri_mini_ml_lib.model_selection.BaggingRegressor.base_model": {"fullname": "ifri_mini_ml_lib.model_selection.BaggingRegressor.base_model", "modulename": "ifri_mini_ml_lib.model_selection", "qualname": "BaggingRegressor.base_model", "kind": "variable", "doc": "<p></p>\n"}, "ifri_mini_ml_lib.model_selection.BaggingRegressor.n_estimators": {"fullname": "ifri_mini_ml_lib.model_selection.BaggingRegressor.n_estimators", "modulename": "ifri_mini_ml_lib.model_selection", "qualname": "BaggingRegressor.n_estimators", "kind": "variable", "doc": "<p></p>\n"}, "ifri_mini_ml_lib.model_selection.BaggingRegressor.random_state": {"fullname": "ifri_mini_ml_lib.model_selection.BaggingRegressor.random_state", "modulename": "ifri_mini_ml_lib.model_selection", "qualname": "BaggingRegressor.random_state", "kind": "variable", "doc": "<p></p>\n"}, "ifri_mini_ml_lib.model_selection.BaggingRegressor.models": {"fullname": "ifri_mini_ml_lib.model_selection.BaggingRegressor.models", "modulename": "ifri_mini_ml_lib.model_selection", "qualname": "BaggingRegressor.models", "kind": "variable", "doc": "<p></p>\n"}, "ifri_mini_ml_lib.model_selection.BaggingRegressor.pretrained": {"fullname": "ifri_mini_ml_lib.model_selection.BaggingRegressor.pretrained", "modulename": "ifri_mini_ml_lib.model_selection", "qualname": "BaggingRegressor.pretrained", "kind": "variable", "doc": "<p></p>\n"}, "ifri_mini_ml_lib.model_selection.BaggingRegressor.fit": {"fullname": "ifri_mini_ml_lib.model_selection.BaggingRegressor.fit", "modulename": "ifri_mini_ml_lib.model_selection", "qualname": "BaggingRegressor.fit", "kind": "function", "doc": "<p>Description:\n    Trains multiple instances of the base model on bootstrap samples of the training data.</p>\n\n<p>Args:\n    X (array-like): Feature matrix of shape (n_samples, n_features).\n    y (array-like): Target vector of shape (n_samples,).</p>\n\n<p>Returns:\n    None</p>\n\n<p>Example:</p>\n\n<blockquote>\n  <blockquote>\n    <blockquote>\n      <p>model.fit(X_train, y_train)</p>\n    </blockquote>\n  </blockquote>\n</blockquote>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">X</span>, </span><span class=\"param\"><span class=\"n\">y</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "ifri_mini_ml_lib.model_selection.BaggingRegressor.predict": {"fullname": "ifri_mini_ml_lib.model_selection.BaggingRegressor.predict", "modulename": "ifri_mini_ml_lib.model_selection", "qualname": "BaggingRegressor.predict", "kind": "function", "doc": "<p>Description:\n    Predicts target values for given input samples by averaging the predictions of all models.</p>\n\n<p>Args:\n    X (array-like): Feature matrix of shape (n_samples, n_features).</p>\n\n<p>Returns:\n    np.ndarray: Averaged predictions for all samples.</p>\n\n<p>Example:</p>\n\n<blockquote>\n  <blockquote>\n    <blockquote>\n      <p>y_pred = model.predict(X_test)</p>\n    </blockquote>\n  </blockquote>\n</blockquote>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">X</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "ifri_mini_ml_lib.model_selection.BayesianSearchCV": {"fullname": "ifri_mini_ml_lib.model_selection.BayesianSearchCV", "modulename": "ifri_mini_ml_lib.model_selection", "qualname": "BayesianSearchCV", "kind": "class", "doc": "<p>Bayesian optimization with cross-validation for hyperparameter search.\nUses a Gaussian process to model the objective function and Expected Improvement for acquisition.</p>\n"}, "ifri_mini_ml_lib.model_selection.BayesianSearchCV.__init__": {"fullname": "ifri_mini_ml_lib.model_selection.BayesianSearchCV.__init__", "modulename": "ifri_mini_ml_lib.model_selection", "qualname": "BayesianSearchCV.__init__", "kind": "function", "doc": "<p>Description:\n    Initialize the Bayesian search optimization.</p>\n\n<p>Args:\n    estimator: ML model to optimize (must implement fit and predict methods)\n    param_bounds: Dictionary of hyperparameter bounds, where keys are parameter \n                 names and values are tuples (min_bound, max_bound)\n    scoring: Evaluation metric function\n    stratified: Whether to use stratified CV (default: None)\n    n_iter: Number of optimization iterations after initialization (default: 20)\n    init_points: Number of random points for initialization (default: 5)\n    cv: Number of cross-validation folds (default: 5)\n    param_types: Types of parameters for casting (default: None)</p>\n\n<p>Returns:\n    None</p>\n\n<p>Example:</p>\n\n<blockquote>\n  <blockquote>\n    <blockquote>\n      <p>from ifri_mini_lib.supervised.classification import SVC\n      from ifri_mini_lib.metrics import accuracy_score\n      model = SVC()\n      param_bounds = {'C': (0.1, 100), 'gamma': (0.001, 1.0)}\n      bo = BayesianSearchCV(model, param_bounds, accuracy_score, n_iter=30)</p>\n    </blockquote>\n  </blockquote>\n</blockquote>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"n\">estimator</span>,</span><span class=\"param\">\t<span class=\"n\">param_bounds</span>,</span><span class=\"param\">\t<span class=\"n\">scoring</span>,</span><span class=\"param\">\t<span class=\"n\">maximize</span>,</span><span class=\"param\">\t<span class=\"n\">stratified</span><span class=\"o\">=</span><span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">n_iter</span><span class=\"o\">=</span><span class=\"mi\">20</span>,</span><span class=\"param\">\t<span class=\"n\">init_points</span><span class=\"o\">=</span><span class=\"mi\">5</span>,</span><span class=\"param\">\t<span class=\"n\">cv</span><span class=\"o\">=</span><span class=\"mi\">5</span>,</span><span class=\"param\">\t<span class=\"n\">param_types</span><span class=\"o\">=</span><span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">random_state</span><span class=\"o\">=</span><span class=\"mi\">42</span></span>)</span>"}, "ifri_mini_ml_lib.model_selection.BayesianSearchCV.estimator": {"fullname": "ifri_mini_ml_lib.model_selection.BayesianSearchCV.estimator", "modulename": "ifri_mini_ml_lib.model_selection", "qualname": "BayesianSearchCV.estimator", "kind": "variable", "doc": "<p></p>\n"}, "ifri_mini_ml_lib.model_selection.BayesianSearchCV.param_bounds": {"fullname": "ifri_mini_ml_lib.model_selection.BayesianSearchCV.param_bounds", "modulename": "ifri_mini_ml_lib.model_selection", "qualname": "BayesianSearchCV.param_bounds", "kind": "variable", "doc": "<p></p>\n"}, "ifri_mini_ml_lib.model_selection.BayesianSearchCV.n_iter": {"fullname": "ifri_mini_ml_lib.model_selection.BayesianSearchCV.n_iter", "modulename": "ifri_mini_ml_lib.model_selection", "qualname": "BayesianSearchCV.n_iter", "kind": "variable", "doc": "<p></p>\n"}, "ifri_mini_ml_lib.model_selection.BayesianSearchCV.init_points": {"fullname": "ifri_mini_ml_lib.model_selection.BayesianSearchCV.init_points", "modulename": "ifri_mini_ml_lib.model_selection", "qualname": "BayesianSearchCV.init_points", "kind": "variable", "doc": "<p></p>\n"}, "ifri_mini_ml_lib.model_selection.BayesianSearchCV.cv": {"fullname": "ifri_mini_ml_lib.model_selection.BayesianSearchCV.cv", "modulename": "ifri_mini_ml_lib.model_selection", "qualname": "BayesianSearchCV.cv", "kind": "variable", "doc": "<p></p>\n"}, "ifri_mini_ml_lib.model_selection.BayesianSearchCV.scoring": {"fullname": "ifri_mini_ml_lib.model_selection.BayesianSearchCV.scoring", "modulename": "ifri_mini_ml_lib.model_selection", "qualname": "BayesianSearchCV.scoring", "kind": "variable", "doc": "<p></p>\n"}, "ifri_mini_ml_lib.model_selection.BayesianSearchCV.stratified": {"fullname": "ifri_mini_ml_lib.model_selection.BayesianSearchCV.stratified", "modulename": "ifri_mini_ml_lib.model_selection", "qualname": "BayesianSearchCV.stratified", "kind": "variable", "doc": "<p></p>\n"}, "ifri_mini_ml_lib.model_selection.BayesianSearchCV.param_types": {"fullname": "ifri_mini_ml_lib.model_selection.BayesianSearchCV.param_types", "modulename": "ifri_mini_ml_lib.model_selection", "qualname": "BayesianSearchCV.param_types", "kind": "variable", "doc": "<p></p>\n"}, "ifri_mini_ml_lib.model_selection.BayesianSearchCV.random_state": {"fullname": "ifri_mini_ml_lib.model_selection.BayesianSearchCV.random_state", "modulename": "ifri_mini_ml_lib.model_selection", "qualname": "BayesianSearchCV.random_state", "kind": "variable", "doc": "<p></p>\n"}, "ifri_mini_ml_lib.model_selection.BayesianSearchCV.X_obs": {"fullname": "ifri_mini_ml_lib.model_selection.BayesianSearchCV.X_obs", "modulename": "ifri_mini_ml_lib.model_selection", "qualname": "BayesianSearchCV.X_obs", "kind": "variable", "doc": "<p></p>\n"}, "ifri_mini_ml_lib.model_selection.BayesianSearchCV.y_obs": {"fullname": "ifri_mini_ml_lib.model_selection.BayesianSearchCV.y_obs", "modulename": "ifri_mini_ml_lib.model_selection", "qualname": "BayesianSearchCV.y_obs", "kind": "variable", "doc": "<p></p>\n"}, "ifri_mini_ml_lib.model_selection.BayesianSearchCV.gp": {"fullname": "ifri_mini_ml_lib.model_selection.BayesianSearchCV.gp", "modulename": "ifri_mini_ml_lib.model_selection", "qualname": "BayesianSearchCV.gp", "kind": "variable", "doc": "<p></p>\n"}, "ifri_mini_ml_lib.model_selection.BayesianSearchCV.maximize": {"fullname": "ifri_mini_ml_lib.model_selection.BayesianSearchCV.maximize", "modulename": "ifri_mini_ml_lib.model_selection", "qualname": "BayesianSearchCV.maximize", "kind": "variable", "doc": "<p></p>\n"}, "ifri_mini_ml_lib.model_selection.BayesianSearchCV.history_": {"fullname": "ifri_mini_ml_lib.model_selection.BayesianSearchCV.history_", "modulename": "ifri_mini_ml_lib.model_selection", "qualname": "BayesianSearchCV.history_", "kind": "variable", "doc": "<p></p>\n"}, "ifri_mini_ml_lib.model_selection.BayesianSearchCV.fit": {"fullname": "ifri_mini_ml_lib.model_selection.BayesianSearchCV.fit", "modulename": "ifri_mini_ml_lib.model_selection", "qualname": "BayesianSearchCV.fit", "kind": "function", "doc": "<p>Description:\n    Run Bayesian optimization to find optimal hyperparameters.</p>\n\n<p>Args:\n    X: Input data, array of shape (n_samples, n_features)\n    y: Target values, array of shape (n_samples,)</p>\n\n<p>Returns:\n    self: The instance itself</p>\n\n<p>Example:</p>\n\n<blockquote>\n  <blockquote>\n    <blockquote>\n      <p>bo.fit(X_train, y_train)\n      best_params = bo.best_params_\n      best_score = bo.best_score_</p>\n    </blockquote>\n  </blockquote>\n</blockquote>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">X</span>, </span><span class=\"param\"><span class=\"n\">y</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "ifri_mini_ml_lib.model_selection.BayesianSearchCV.get_best_params": {"fullname": "ifri_mini_ml_lib.model_selection.BayesianSearchCV.get_best_params", "modulename": "ifri_mini_ml_lib.model_selection", "qualname": "BayesianSearchCV.get_best_params", "kind": "function", "doc": "<p>Description:\n    Return the best hyperparameters found during optimization.</p>\n\n<p>Args:\n    None</p>\n\n<p>Returns:\n    dict: Dictionary with best hyperparameter values</p>\n\n<p>Example:</p>\n\n<blockquote>\n  <blockquote>\n    <blockquote>\n      <p>best_params = bo.get_best_params()\n      print(best_params)\n          {'C': 10.0, 'gamma': 0.01}</p>\n    </blockquote>\n  </blockquote>\n</blockquote>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "ifri_mini_ml_lib.model_selection.GridSearchCV": {"fullname": "ifri_mini_ml_lib.model_selection.GridSearchCV", "modulename": "ifri_mini_ml_lib.model_selection", "qualname": "GridSearchCV", "kind": "class", "doc": "<p>Grid search implementation with cross-validation for hyperparameter optimization.</p>\n\n<p>This class allows to test different combinations of hyperparameters on a machine learning model\nusing cross-validation to avoid overfitting and select the best hyperparameter combination.</p>\n\n<p>Args:\n    model: ML model to optimize (must implement fit and predict methods)\n    param_grid: Dictionary of hyperparameters to test, where keys are parameter \n                names and values are lists of parameter values to try\n    scoring: Evaluation function (e.g., accuracy_score, mean_squared_error, f1)\n    k: Number of folds for cross-validation (default: 5)\n    stratified: Whether to use stratified k-fold validation (default: False)</p>\n\n<p>Returns:\n    None</p>\n\n<p>Example:</p>\n\n<blockquote>\n  <blockquote>\n    <blockquote>\n      <p>from ifri_mini_lib.supervised.classification import SVC\n      from ifri_mini_lib.metrics import accuracy_score\n      model = SVC()\n      param_grid = {'C': [0.1, 1, 10], 'kernel': ['linear', 'rbf']}\n      grid_search = GridSearchCV(model, param_grid, accuracy_score, k=5)</p>\n    </blockquote>\n  </blockquote>\n</blockquote>\n"}, "ifri_mini_ml_lib.model_selection.GridSearchCV.__init__": {"fullname": "ifri_mini_ml_lib.model_selection.GridSearchCV.__init__", "modulename": "ifri_mini_ml_lib.model_selection", "qualname": "GridSearchCV.__init__", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">model</span>, </span><span class=\"param\"><span class=\"n\">param_grid</span>, </span><span class=\"param\"><span class=\"n\">scoring</span>, </span><span class=\"param\"><span class=\"n\">k</span><span class=\"o\">=</span><span class=\"mi\">5</span>, </span><span class=\"param\"><span class=\"n\">stratified</span><span class=\"o\">=</span><span class=\"kc\">False</span></span>)</span>"}, "ifri_mini_ml_lib.model_selection.GridSearchCV.model": {"fullname": "ifri_mini_ml_lib.model_selection.GridSearchCV.model", "modulename": "ifri_mini_ml_lib.model_selection", "qualname": "GridSearchCV.model", "kind": "variable", "doc": "<p></p>\n"}, "ifri_mini_ml_lib.model_selection.GridSearchCV.param_grid": {"fullname": "ifri_mini_ml_lib.model_selection.GridSearchCV.param_grid", "modulename": "ifri_mini_ml_lib.model_selection", "qualname": "GridSearchCV.param_grid", "kind": "variable", "doc": "<p></p>\n"}, "ifri_mini_ml_lib.model_selection.GridSearchCV.k": {"fullname": "ifri_mini_ml_lib.model_selection.GridSearchCV.k", "modulename": "ifri_mini_ml_lib.model_selection", "qualname": "GridSearchCV.k", "kind": "variable", "doc": "<p></p>\n"}, "ifri_mini_ml_lib.model_selection.GridSearchCV.scoring": {"fullname": "ifri_mini_ml_lib.model_selection.GridSearchCV.scoring", "modulename": "ifri_mini_ml_lib.model_selection", "qualname": "GridSearchCV.scoring", "kind": "variable", "doc": "<p></p>\n"}, "ifri_mini_ml_lib.model_selection.GridSearchCV.stratified": {"fullname": "ifri_mini_ml_lib.model_selection.GridSearchCV.stratified", "modulename": "ifri_mini_ml_lib.model_selection", "qualname": "GridSearchCV.stratified", "kind": "variable", "doc": "<p></p>\n"}, "ifri_mini_ml_lib.model_selection.GridSearchCV.best_params_": {"fullname": "ifri_mini_ml_lib.model_selection.GridSearchCV.best_params_", "modulename": "ifri_mini_ml_lib.model_selection", "qualname": "GridSearchCV.best_params_", "kind": "variable", "doc": "<p></p>\n"}, "ifri_mini_ml_lib.model_selection.GridSearchCV.best_score_": {"fullname": "ifri_mini_ml_lib.model_selection.GridSearchCV.best_score_", "modulename": "ifri_mini_ml_lib.model_selection", "qualname": "GridSearchCV.best_score_", "kind": "variable", "doc": "<p></p>\n"}, "ifri_mini_ml_lib.model_selection.GridSearchCV.best_estimator_": {"fullname": "ifri_mini_ml_lib.model_selection.GridSearchCV.best_estimator_", "modulename": "ifri_mini_ml_lib.model_selection", "qualname": "GridSearchCV.best_estimator_", "kind": "variable", "doc": "<p></p>\n"}, "ifri_mini_ml_lib.model_selection.GridSearchCV.fit": {"fullname": "ifri_mini_ml_lib.model_selection.GridSearchCV.fit", "modulename": "ifri_mini_ml_lib.model_selection", "qualname": "GridSearchCV.fit", "kind": "function", "doc": "<p>Description:\n    Run grid search with cross-validation on the given data.\n    Tests all possible combinations of hyperparameters and finds the best set.</p>\n\n<p>Args:\n    X: Input features array of shape (n_samples, n_features)\n    y: Target values array of shape (n_samples,)</p>\n\n<p>Returns:\n    self: The instance itself, allowing for method chaining</p>\n\n<p>Example:</p>\n\n<blockquote>\n  <blockquote>\n    <blockquote>\n      <p>grid_search.fit(X_train, y_train)\n      best_params = grid_search.best_params_\n      best_score = grid_search.best_score_\n      best_model = grid_search.best_estimator_</p>\n    </blockquote>\n  </blockquote>\n</blockquote>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">X</span>, </span><span class=\"param\"><span class=\"n\">y</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "ifri_mini_ml_lib.model_selection.RandomSearchCV": {"fullname": "ifri_mini_ml_lib.model_selection.RandomSearchCV", "modulename": "ifri_mini_ml_lib.model_selection", "qualname": "RandomSearchCV", "kind": "class", "doc": "<p>Description:\n    A manual implementation of Random Search combined with Cross-Validation.\n    This class randomly samples a subset of all hyperparameter combinations\n    and evaluates each using k-fold cross-validation. It selects the model\n    with the best average score based on the provided scoring function.</p>\n\n<p>Args:\n    model (object): The machine learning model to optimize (must implement <code>fit</code>, <code>predict</code>, <code>set_params</code>).</p>\n\n<pre><code>param_grid (dict): Dictionary of hyperparameters to explore. \n                   Format: {'param1': [v1, v2], 'param2': [v1, v2, v3]}.\n\nscoring (callable): Scoring function to evaluate model performance. \n                    Example: ifri_mini_lib.metrics.accuracy_score or custom function.\n\nn_iter (int, optional): Number of random parameter combinations to try. Default is 10.\n\nk (int, optional): Number of folds for k-fold cross-validation. Default is 5.\n\nstratified (bool, optional): Whether to use stratified k-folds (useful for classification). Default is False.\nrandom_state (int or None, optional): Random seed for reproducibility.\n</code></pre>\n\n<p>Attributes:\n    best_params_ (dict): The best set of hyperparameters found during search.\n    best_score_ (float): The best cross-validated score obtained.\n    best_estimator_ (object): A clone of the model with the best hyperparameters.</p>\n\n<p>Example:</p>\n\n<blockquote>\n  <blockquote>\n    <blockquote>\n      <p>from ifri_mini_lib.supervised.classification import DecisionTreeClassifier\n      from ifri_mini_lib.metrics import accuracy_score</p>\n\n<pre><code>&gt;&gt;&gt; param_grid = {\n    'max_depth': [3, 5, 7],\n    'min_samples_split': [2, 4, 6]\n    }\n\n&gt;&gt;&gt; search = RandomSearchCV_Scratch(\n    model=DecisionTreeClassifier(),\n    param_grid=param_grid,\n    scoring=accuracy_score,\n    n_iter=5,\n    k=3,\n    stratified=True,\n    random_state=42\n    )\n\n&gt;&gt;&gt; search.fit(X_train, y_train)\n&gt;&gt;&gt; best_model = search.best_estimator_\n&gt;&gt;&gt; predictions = best_model.predict(X_test)\n</code></pre>\n    </blockquote>\n  </blockquote>\n</blockquote>\n"}, "ifri_mini_ml_lib.model_selection.RandomSearchCV.__init__": {"fullname": "ifri_mini_ml_lib.model_selection.RandomSearchCV.__init__", "modulename": "ifri_mini_ml_lib.model_selection", "qualname": "RandomSearchCV.__init__", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"n\">model</span>,</span><span class=\"param\">\t<span class=\"n\">param_grid</span>,</span><span class=\"param\">\t<span class=\"n\">scoring</span>,</span><span class=\"param\">\t<span class=\"n\">n_iter</span><span class=\"o\">=</span><span class=\"mi\">10</span>,</span><span class=\"param\">\t<span class=\"n\">k</span><span class=\"o\">=</span><span class=\"mi\">5</span>,</span><span class=\"param\">\t<span class=\"n\">stratified</span><span class=\"o\">=</span><span class=\"kc\">False</span>,</span><span class=\"param\">\t<span class=\"n\">random_state</span><span class=\"o\">=</span><span class=\"kc\">None</span></span>)</span>"}, "ifri_mini_ml_lib.model_selection.RandomSearchCV.model": {"fullname": "ifri_mini_ml_lib.model_selection.RandomSearchCV.model", "modulename": "ifri_mini_ml_lib.model_selection", "qualname": "RandomSearchCV.model", "kind": "variable", "doc": "<p></p>\n"}, "ifri_mini_ml_lib.model_selection.RandomSearchCV.param_grid": {"fullname": "ifri_mini_ml_lib.model_selection.RandomSearchCV.param_grid", "modulename": "ifri_mini_ml_lib.model_selection", "qualname": "RandomSearchCV.param_grid", "kind": "variable", "doc": "<p></p>\n"}, "ifri_mini_ml_lib.model_selection.RandomSearchCV.n_iter": {"fullname": "ifri_mini_ml_lib.model_selection.RandomSearchCV.n_iter", "modulename": "ifri_mini_ml_lib.model_selection", "qualname": "RandomSearchCV.n_iter", "kind": "variable", "doc": "<p></p>\n"}, "ifri_mini_ml_lib.model_selection.RandomSearchCV.k": {"fullname": "ifri_mini_ml_lib.model_selection.RandomSearchCV.k", "modulename": "ifri_mini_ml_lib.model_selection", "qualname": "RandomSearchCV.k", "kind": "variable", "doc": "<p></p>\n"}, "ifri_mini_ml_lib.model_selection.RandomSearchCV.scoring": {"fullname": "ifri_mini_ml_lib.model_selection.RandomSearchCV.scoring", "modulename": "ifri_mini_ml_lib.model_selection", "qualname": "RandomSearchCV.scoring", "kind": "variable", "doc": "<p></p>\n"}, "ifri_mini_ml_lib.model_selection.RandomSearchCV.stratified": {"fullname": "ifri_mini_ml_lib.model_selection.RandomSearchCV.stratified", "modulename": "ifri_mini_ml_lib.model_selection", "qualname": "RandomSearchCV.stratified", "kind": "variable", "doc": "<p></p>\n"}, "ifri_mini_ml_lib.model_selection.RandomSearchCV.random_state": {"fullname": "ifri_mini_ml_lib.model_selection.RandomSearchCV.random_state", "modulename": "ifri_mini_ml_lib.model_selection", "qualname": "RandomSearchCV.random_state", "kind": "variable", "doc": "<p></p>\n"}, "ifri_mini_ml_lib.model_selection.RandomSearchCV.best_params_": {"fullname": "ifri_mini_ml_lib.model_selection.RandomSearchCV.best_params_", "modulename": "ifri_mini_ml_lib.model_selection", "qualname": "RandomSearchCV.best_params_", "kind": "variable", "doc": "<p></p>\n"}, "ifri_mini_ml_lib.model_selection.RandomSearchCV.best_score_": {"fullname": "ifri_mini_ml_lib.model_selection.RandomSearchCV.best_score_", "modulename": "ifri_mini_ml_lib.model_selection", "qualname": "RandomSearchCV.best_score_", "kind": "variable", "doc": "<p></p>\n"}, "ifri_mini_ml_lib.model_selection.RandomSearchCV.best_estimator_": {"fullname": "ifri_mini_ml_lib.model_selection.RandomSearchCV.best_estimator_", "modulename": "ifri_mini_ml_lib.model_selection", "qualname": "RandomSearchCV.best_estimator_", "kind": "variable", "doc": "<p></p>\n"}, "ifri_mini_ml_lib.model_selection.RandomSearchCV.fit": {"fullname": "ifri_mini_ml_lib.model_selection.RandomSearchCV.fit", "modulename": "ifri_mini_ml_lib.model_selection", "qualname": "RandomSearchCV.fit", "kind": "function", "doc": "<p>Description:\n    Runs the random search with cross-validation over the given dataset.\n    Randomly selects hyperparameter combinations and evaluates them.</p>\n\n<p>Args:\n    X (array-like): Feature matrix.\n    y (array-like): Target vector.</p>\n\n<p>Returns:\n    None</p>\n\n<p>Example:</p>\n\n<blockquote>\n  <blockquote>\n    <blockquote>\n      <p>search.fit(X_train, y_train)</p>\n    </blockquote>\n  </blockquote>\n</blockquote>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">X</span>, </span><span class=\"param\"><span class=\"n\">y</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "ifri_mini_ml_lib.neural_networks": {"fullname": "ifri_mini_ml_lib.neural_networks", "modulename": "ifri_mini_ml_lib.neural_networks", "kind": "module", "doc": "<p></p>\n"}, "ifri_mini_ml_lib.neural_networks.MLPClassifier": {"fullname": "ifri_mini_ml_lib.neural_networks.MLPClassifier", "modulename": "ifri_mini_ml_lib.neural_networks", "qualname": "MLPClassifier", "kind": "class", "doc": "<p>Multi-Layer Perceptron with different activation functions and optimizers</p>\n"}, "ifri_mini_ml_lib.neural_networks.MLPClassifier.__init__": {"fullname": "ifri_mini_ml_lib.neural_networks.MLPClassifier.__init__", "modulename": "ifri_mini_ml_lib.neural_networks", "qualname": "MLPClassifier.__init__", "kind": "function", "doc": "<p>Initialize an MLP network</p>\n\n<h2 id=\"parameters\">Parameters:</h2>\n\n<p>hidden_layer_sizes : tuple\n    The sizes of hidden layers\nactivation : str\n    Activation function ('sigmoid', 'relu', 'tanh', 'leaky_relu')\nsolver : str\n    Optimization algorithm ('sgd', 'adam', 'rmsprop', 'momentum')\nalpha : float\n    L2 regularization parameter\nbatch_size : int\n    Batch size for training\nlearning_rate : float\n    Learning rate\nmax_iter : int\n    Maximum number of iterations\nshuffle : bool\n    If True, shuffle data at each epoch\nrandom_state : int or None\n    Seed for reproducibility\nbeta1 : float\n    Parameter for Adam (exponential decay of first moment)\nbeta2 : float\n    Parameter for Adam (exponential decay of second moment)\nepsilon : float\n    Value to avoid division by zero\nmomentum : float\n    Parameter for momentum optimizer\ntol : float\n    Tolerance for early stopping\nearly_stopping : bool\n    If True, use early stopping based on validation\nvalidation_fraction : float\n    Fraction of training data to use as validation\nn_iter_no_change : int\n    Number of iterations with no improvement for early stopping</p>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"n\">hidden_layer_sizes</span><span class=\"p\">:</span> <span class=\"n\">Tuple</span><span class=\"p\">[</span><span class=\"nb\">int</span><span class=\"p\">,</span> <span class=\"o\">...</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"p\">(</span><span class=\"mi\">100</span><span class=\"p\">,)</span>,</span><span class=\"param\">\t<span class=\"n\">activation</span><span class=\"p\">:</span> <span class=\"nb\">str</span> <span class=\"o\">=</span> <span class=\"s1\">&#39;relu&#39;</span>,</span><span class=\"param\">\t<span class=\"n\">solver</span><span class=\"p\">:</span> <span class=\"nb\">str</span> <span class=\"o\">=</span> <span class=\"s1\">&#39;sgd&#39;</span>,</span><span class=\"param\">\t<span class=\"n\">alpha</span><span class=\"p\">:</span> <span class=\"nb\">float</span> <span class=\"o\">=</span> <span class=\"mf\">0.0001</span>,</span><span class=\"param\">\t<span class=\"n\">batch_size</span><span class=\"p\">:</span> <span class=\"nb\">int</span> <span class=\"o\">=</span> <span class=\"mi\">32</span>,</span><span class=\"param\">\t<span class=\"n\">learning_rate</span><span class=\"p\">:</span> <span class=\"nb\">float</span> <span class=\"o\">=</span> <span class=\"mf\">0.001</span>,</span><span class=\"param\">\t<span class=\"n\">max_iter</span><span class=\"p\">:</span> <span class=\"nb\">int</span> <span class=\"o\">=</span> <span class=\"mi\">200</span>,</span><span class=\"param\">\t<span class=\"n\">shuffle</span><span class=\"p\">:</span> <span class=\"nb\">bool</span> <span class=\"o\">=</span> <span class=\"kc\">True</span>,</span><span class=\"param\">\t<span class=\"n\">random_state</span><span class=\"p\">:</span> <span class=\"n\">Optional</span><span class=\"p\">[</span><span class=\"nb\">int</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">beta1</span><span class=\"p\">:</span> <span class=\"nb\">float</span> <span class=\"o\">=</span> <span class=\"mf\">0.9</span>,</span><span class=\"param\">\t<span class=\"n\">beta2</span><span class=\"p\">:</span> <span class=\"nb\">float</span> <span class=\"o\">=</span> <span class=\"mf\">0.999</span>,</span><span class=\"param\">\t<span class=\"n\">epsilon</span><span class=\"p\">:</span> <span class=\"nb\">float</span> <span class=\"o\">=</span> <span class=\"mf\">1e-08</span>,</span><span class=\"param\">\t<span class=\"n\">momentum</span><span class=\"p\">:</span> <span class=\"nb\">float</span> <span class=\"o\">=</span> <span class=\"mf\">0.9</span>,</span><span class=\"param\">\t<span class=\"n\">tol</span><span class=\"p\">:</span> <span class=\"nb\">float</span> <span class=\"o\">=</span> <span class=\"mf\">0.0001</span>,</span><span class=\"param\">\t<span class=\"n\">early_stopping</span><span class=\"p\">:</span> <span class=\"nb\">bool</span> <span class=\"o\">=</span> <span class=\"kc\">False</span>,</span><span class=\"param\">\t<span class=\"n\">validation_fraction</span><span class=\"p\">:</span> <span class=\"nb\">float</span> <span class=\"o\">=</span> <span class=\"mf\">0.1</span>,</span><span class=\"param\">\t<span class=\"n\">n_iter_no_change</span><span class=\"p\">:</span> <span class=\"nb\">int</span> <span class=\"o\">=</span> <span class=\"mi\">10</span></span>)</span>"}, "ifri_mini_ml_lib.neural_networks.MLPClassifier.hidden_layer_sizes": {"fullname": "ifri_mini_ml_lib.neural_networks.MLPClassifier.hidden_layer_sizes", "modulename": "ifri_mini_ml_lib.neural_networks", "qualname": "MLPClassifier.hidden_layer_sizes", "kind": "variable", "doc": "<p></p>\n"}, "ifri_mini_ml_lib.neural_networks.MLPClassifier.activation": {"fullname": "ifri_mini_ml_lib.neural_networks.MLPClassifier.activation", "modulename": "ifri_mini_ml_lib.neural_networks", "qualname": "MLPClassifier.activation", "kind": "variable", "doc": "<p></p>\n"}, "ifri_mini_ml_lib.neural_networks.MLPClassifier.solver": {"fullname": "ifri_mini_ml_lib.neural_networks.MLPClassifier.solver", "modulename": "ifri_mini_ml_lib.neural_networks", "qualname": "MLPClassifier.solver", "kind": "variable", "doc": "<p></p>\n"}, "ifri_mini_ml_lib.neural_networks.MLPClassifier.alpha": {"fullname": "ifri_mini_ml_lib.neural_networks.MLPClassifier.alpha", "modulename": "ifri_mini_ml_lib.neural_networks", "qualname": "MLPClassifier.alpha", "kind": "variable", "doc": "<p></p>\n"}, "ifri_mini_ml_lib.neural_networks.MLPClassifier.batch_size": {"fullname": "ifri_mini_ml_lib.neural_networks.MLPClassifier.batch_size", "modulename": "ifri_mini_ml_lib.neural_networks", "qualname": "MLPClassifier.batch_size", "kind": "variable", "doc": "<p></p>\n"}, "ifri_mini_ml_lib.neural_networks.MLPClassifier.learning_rate": {"fullname": "ifri_mini_ml_lib.neural_networks.MLPClassifier.learning_rate", "modulename": "ifri_mini_ml_lib.neural_networks", "qualname": "MLPClassifier.learning_rate", "kind": "variable", "doc": "<p></p>\n"}, "ifri_mini_ml_lib.neural_networks.MLPClassifier.max_iter": {"fullname": "ifri_mini_ml_lib.neural_networks.MLPClassifier.max_iter", "modulename": "ifri_mini_ml_lib.neural_networks", "qualname": "MLPClassifier.max_iter", "kind": "variable", "doc": "<p></p>\n"}, "ifri_mini_ml_lib.neural_networks.MLPClassifier.shuffle": {"fullname": "ifri_mini_ml_lib.neural_networks.MLPClassifier.shuffle", "modulename": "ifri_mini_ml_lib.neural_networks", "qualname": "MLPClassifier.shuffle", "kind": "variable", "doc": "<p></p>\n"}, "ifri_mini_ml_lib.neural_networks.MLPClassifier.beta1": {"fullname": "ifri_mini_ml_lib.neural_networks.MLPClassifier.beta1", "modulename": "ifri_mini_ml_lib.neural_networks", "qualname": "MLPClassifier.beta1", "kind": "variable", "doc": "<p></p>\n"}, "ifri_mini_ml_lib.neural_networks.MLPClassifier.beta2": {"fullname": "ifri_mini_ml_lib.neural_networks.MLPClassifier.beta2", "modulename": "ifri_mini_ml_lib.neural_networks", "qualname": "MLPClassifier.beta2", "kind": "variable", "doc": "<p></p>\n"}, "ifri_mini_ml_lib.neural_networks.MLPClassifier.epsilon": {"fullname": "ifri_mini_ml_lib.neural_networks.MLPClassifier.epsilon", "modulename": "ifri_mini_ml_lib.neural_networks", "qualname": "MLPClassifier.epsilon", "kind": "variable", "doc": "<p></p>\n"}, "ifri_mini_ml_lib.neural_networks.MLPClassifier.momentum": {"fullname": "ifri_mini_ml_lib.neural_networks.MLPClassifier.momentum", "modulename": "ifri_mini_ml_lib.neural_networks", "qualname": "MLPClassifier.momentum", "kind": "variable", "doc": "<p></p>\n"}, "ifri_mini_ml_lib.neural_networks.MLPClassifier.tol": {"fullname": "ifri_mini_ml_lib.neural_networks.MLPClassifier.tol", "modulename": "ifri_mini_ml_lib.neural_networks", "qualname": "MLPClassifier.tol", "kind": "variable", "doc": "<p></p>\n"}, "ifri_mini_ml_lib.neural_networks.MLPClassifier.early_stopping": {"fullname": "ifri_mini_ml_lib.neural_networks.MLPClassifier.early_stopping", "modulename": "ifri_mini_ml_lib.neural_networks", "qualname": "MLPClassifier.early_stopping", "kind": "variable", "doc": "<p></p>\n"}, "ifri_mini_ml_lib.neural_networks.MLPClassifier.validation_fraction": {"fullname": "ifri_mini_ml_lib.neural_networks.MLPClassifier.validation_fraction", "modulename": "ifri_mini_ml_lib.neural_networks", "qualname": "MLPClassifier.validation_fraction", "kind": "variable", "doc": "<p></p>\n"}, "ifri_mini_ml_lib.neural_networks.MLPClassifier.n_iter_no_change": {"fullname": "ifri_mini_ml_lib.neural_networks.MLPClassifier.n_iter_no_change", "modulename": "ifri_mini_ml_lib.neural_networks", "qualname": "MLPClassifier.n_iter_no_change", "kind": "variable", "doc": "<p></p>\n"}, "ifri_mini_ml_lib.neural_networks.MLPClassifier.activation_functions": {"fullname": "ifri_mini_ml_lib.neural_networks.MLPClassifier.activation_functions", "modulename": "ifri_mini_ml_lib.neural_networks", "qualname": "MLPClassifier.activation_functions", "kind": "variable", "doc": "<p></p>\n"}, "ifri_mini_ml_lib.neural_networks.MLPClassifier.activation_derivatives": {"fullname": "ifri_mini_ml_lib.neural_networks.MLPClassifier.activation_derivatives", "modulename": "ifri_mini_ml_lib.neural_networks", "qualname": "MLPClassifier.activation_derivatives", "kind": "variable", "doc": "<p></p>\n"}, "ifri_mini_ml_lib.neural_networks.MLPClassifier.activation_func": {"fullname": "ifri_mini_ml_lib.neural_networks.MLPClassifier.activation_func", "modulename": "ifri_mini_ml_lib.neural_networks", "qualname": "MLPClassifier.activation_func", "kind": "variable", "doc": "<p></p>\n"}, "ifri_mini_ml_lib.neural_networks.MLPClassifier.activation_derivative": {"fullname": "ifri_mini_ml_lib.neural_networks.MLPClassifier.activation_derivative", "modulename": "ifri_mini_ml_lib.neural_networks", "qualname": "MLPClassifier.activation_derivative", "kind": "variable", "doc": "<p></p>\n"}, "ifri_mini_ml_lib.neural_networks.MLPClassifier.weights": {"fullname": "ifri_mini_ml_lib.neural_networks.MLPClassifier.weights", "modulename": "ifri_mini_ml_lib.neural_networks", "qualname": "MLPClassifier.weights", "kind": "variable", "doc": "<p></p>\n"}, "ifri_mini_ml_lib.neural_networks.MLPClassifier.biases": {"fullname": "ifri_mini_ml_lib.neural_networks.MLPClassifier.biases", "modulename": "ifri_mini_ml_lib.neural_networks", "qualname": "MLPClassifier.biases", "kind": "variable", "doc": "<p></p>\n"}, "ifri_mini_ml_lib.neural_networks.MLPClassifier.n_layers": {"fullname": "ifri_mini_ml_lib.neural_networks.MLPClassifier.n_layers", "modulename": "ifri_mini_ml_lib.neural_networks", "qualname": "MLPClassifier.n_layers", "kind": "variable", "doc": "<p></p>\n"}, "ifri_mini_ml_lib.neural_networks.MLPClassifier.n_outputs": {"fullname": "ifri_mini_ml_lib.neural_networks.MLPClassifier.n_outputs", "modulename": "ifri_mini_ml_lib.neural_networks", "qualname": "MLPClassifier.n_outputs", "kind": "variable", "doc": "<p></p>\n"}, "ifri_mini_ml_lib.neural_networks.MLPClassifier.velocity_weights": {"fullname": "ifri_mini_ml_lib.neural_networks.MLPClassifier.velocity_weights", "modulename": "ifri_mini_ml_lib.neural_networks", "qualname": "MLPClassifier.velocity_weights", "kind": "variable", "doc": "<p></p>\n"}, "ifri_mini_ml_lib.neural_networks.MLPClassifier.velocity_biases": {"fullname": "ifri_mini_ml_lib.neural_networks.MLPClassifier.velocity_biases", "modulename": "ifri_mini_ml_lib.neural_networks", "qualname": "MLPClassifier.velocity_biases", "kind": "variable", "doc": "<p></p>\n"}, "ifri_mini_ml_lib.neural_networks.MLPClassifier.m_weights": {"fullname": "ifri_mini_ml_lib.neural_networks.MLPClassifier.m_weights", "modulename": "ifri_mini_ml_lib.neural_networks", "qualname": "MLPClassifier.m_weights", "kind": "variable", "doc": "<p></p>\n"}, "ifri_mini_ml_lib.neural_networks.MLPClassifier.m_biases": {"fullname": "ifri_mini_ml_lib.neural_networks.MLPClassifier.m_biases", "modulename": "ifri_mini_ml_lib.neural_networks", "qualname": "MLPClassifier.m_biases", "kind": "variable", "doc": "<p></p>\n"}, "ifri_mini_ml_lib.neural_networks.MLPClassifier.v_weights": {"fullname": "ifri_mini_ml_lib.neural_networks.MLPClassifier.v_weights", "modulename": "ifri_mini_ml_lib.neural_networks", "qualname": "MLPClassifier.v_weights", "kind": "variable", "doc": "<p></p>\n"}, "ifri_mini_ml_lib.neural_networks.MLPClassifier.v_biases": {"fullname": "ifri_mini_ml_lib.neural_networks.MLPClassifier.v_biases", "modulename": "ifri_mini_ml_lib.neural_networks", "qualname": "MLPClassifier.v_biases", "kind": "variable", "doc": "<p></p>\n"}, "ifri_mini_ml_lib.neural_networks.MLPClassifier.t": {"fullname": "ifri_mini_ml_lib.neural_networks.MLPClassifier.t", "modulename": "ifri_mini_ml_lib.neural_networks", "qualname": "MLPClassifier.t", "kind": "variable", "doc": "<p></p>\n"}, "ifri_mini_ml_lib.neural_networks.MLPClassifier.loss_history": {"fullname": "ifri_mini_ml_lib.neural_networks.MLPClassifier.loss_history", "modulename": "ifri_mini_ml_lib.neural_networks", "qualname": "MLPClassifier.loss_history", "kind": "variable", "doc": "<p></p>\n"}, "ifri_mini_ml_lib.neural_networks.MLPClassifier.val_loss_history": {"fullname": "ifri_mini_ml_lib.neural_networks.MLPClassifier.val_loss_history", "modulename": "ifri_mini_ml_lib.neural_networks", "qualname": "MLPClassifier.val_loss_history", "kind": "variable", "doc": "<p></p>\n"}, "ifri_mini_ml_lib.neural_networks.MLPClassifier.best_loss": {"fullname": "ifri_mini_ml_lib.neural_networks.MLPClassifier.best_loss", "modulename": "ifri_mini_ml_lib.neural_networks", "qualname": "MLPClassifier.best_loss", "kind": "variable", "doc": "<p></p>\n"}, "ifri_mini_ml_lib.neural_networks.MLPClassifier.no_improvement_count": {"fullname": "ifri_mini_ml_lib.neural_networks.MLPClassifier.no_improvement_count", "modulename": "ifri_mini_ml_lib.neural_networks", "qualname": "MLPClassifier.no_improvement_count", "kind": "variable", "doc": "<p></p>\n"}, "ifri_mini_ml_lib.neural_networks.MLPClassifier.trained": {"fullname": "ifri_mini_ml_lib.neural_networks.MLPClassifier.trained", "modulename": "ifri_mini_ml_lib.neural_networks", "qualname": "MLPClassifier.trained", "kind": "variable", "doc": "<p></p>\n"}, "ifri_mini_ml_lib.neural_networks.MLPClassifier.classes_": {"fullname": "ifri_mini_ml_lib.neural_networks.MLPClassifier.classes_", "modulename": "ifri_mini_ml_lib.neural_networks", "qualname": "MLPClassifier.classes_", "kind": "variable", "doc": "<p></p>\n"}, "ifri_mini_ml_lib.neural_networks.MLPClassifier.fit": {"fullname": "ifri_mini_ml_lib.neural_networks.MLPClassifier.fit", "modulename": "ifri_mini_ml_lib.neural_networks", "qualname": "MLPClassifier.fit", "kind": "function", "doc": "<p>Train the MLP on the provided data</p>\n\n<h2 id=\"parameters\">Parameters:</h2>\n\n<p>X : np.ndarray of shape (n_samples, n_features)\n    Training data\ny : np.ndarray of shape (n_samples,)\n    Target labels</p>\n\n<h2 id=\"returns\">Returns:</h2>\n\n<p>self : object\n    The trained MLP</p>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"bp\">self</span>,</span><span class=\"param\">\t<span class=\"n\">X</span><span class=\"p\">:</span> <span class=\"n\">numpy</span><span class=\"o\">.</span><span class=\"n\">ndarray</span>,</span><span class=\"param\">\t<span class=\"n\">y</span><span class=\"p\">:</span> <span class=\"n\">numpy</span><span class=\"o\">.</span><span class=\"n\">ndarray</span></span><span class=\"return-annotation\">) -> <span class=\"n\">ifri_mini_ml_lib</span><span class=\"o\">.</span><span class=\"n\">neural_networks</span><span class=\"o\">.</span><span class=\"n\">mlp_classifier</span><span class=\"o\">.</span><span class=\"n\">MLPClassifier</span>:</span></span>", "funcdef": "def"}, "ifri_mini_ml_lib.neural_networks.MLPClassifier.predict": {"fullname": "ifri_mini_ml_lib.neural_networks.MLPClassifier.predict", "modulename": "ifri_mini_ml_lib.neural_networks", "qualname": "MLPClassifier.predict", "kind": "function", "doc": "<p>Predict classes for samples X</p>\n\n<h2 id=\"parameters\">Parameters:</h2>\n\n<p>X : np.ndarray of shape (n_samples, n_features)\n    Data for which to make predictions</p>\n\n<h2 id=\"returns\">Returns:</h2>\n\n<p>y_pred : np.ndarray of shape (n_samples,)\n    Predicted classes</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">X</span><span class=\"p\">:</span> <span class=\"n\">numpy</span><span class=\"o\">.</span><span class=\"n\">ndarray</span></span><span class=\"return-annotation\">) -> <span class=\"n\">numpy</span><span class=\"o\">.</span><span class=\"n\">ndarray</span>:</span></span>", "funcdef": "def"}, "ifri_mini_ml_lib.neural_networks.MLPClassifier.predict_proba": {"fullname": "ifri_mini_ml_lib.neural_networks.MLPClassifier.predict_proba", "modulename": "ifri_mini_ml_lib.neural_networks", "qualname": "MLPClassifier.predict_proba", "kind": "function", "doc": "<p>Predict probabilities for each class</p>\n\n<h2 id=\"parameters\">Parameters:</h2>\n\n<p>X : np.ndarray of shape (n_samples, n_features)\n    Data for which to make predictions</p>\n\n<h2 id=\"returns\">Returns:</h2>\n\n<p>probas : np.ndarray of shape (n_samples, n_classes)\n    Probabilities for each class</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">X</span><span class=\"p\">:</span> <span class=\"n\">numpy</span><span class=\"o\">.</span><span class=\"n\">ndarray</span></span><span class=\"return-annotation\">) -> <span class=\"n\">numpy</span><span class=\"o\">.</span><span class=\"n\">ndarray</span>:</span></span>", "funcdef": "def"}, "ifri_mini_ml_lib.neural_networks.MLPClassifier.score": {"fullname": "ifri_mini_ml_lib.neural_networks.MLPClassifier.score", "modulename": "ifri_mini_ml_lib.neural_networks", "qualname": "MLPClassifier.score", "kind": "function", "doc": "<p>Return the accuracy of the model on the provided data</p>\n\n<h2 id=\"parameters\">Parameters:</h2>\n\n<p>X : np.ndarray of shape (n_samples, n_features)\n    Test data\ny : np.ndarray of shape (n_samples,)\n    True labels</p>\n\n<h2 id=\"returns\">Returns:</h2>\n\n<p>accuracy : float\n    Model accuracy</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">X</span><span class=\"p\">:</span> <span class=\"n\">numpy</span><span class=\"o\">.</span><span class=\"n\">ndarray</span>, </span><span class=\"param\"><span class=\"n\">y</span><span class=\"p\">:</span> <span class=\"n\">numpy</span><span class=\"o\">.</span><span class=\"n\">ndarray</span></span><span class=\"return-annotation\">) -> <span class=\"nb\">float</span>:</span></span>", "funcdef": "def"}, "ifri_mini_ml_lib.neural_networks.MLPRegressor": {"fullname": "ifri_mini_ml_lib.neural_networks.MLPRegressor", "modulename": "ifri_mini_ml_lib.neural_networks", "qualname": "MLPRegressor", "kind": "class", "doc": "<p>Multi-Layer Perceptron for regression tasks with various activation functions and optimizers</p>\n"}, "ifri_mini_ml_lib.neural_networks.MLPRegressor.__init__": {"fullname": "ifri_mini_ml_lib.neural_networks.MLPRegressor.__init__", "modulename": "ifri_mini_ml_lib.neural_networks", "qualname": "MLPRegressor.__init__", "kind": "function", "doc": "<p>Initialize an MLP regressor</p>\n\n<h2 id=\"parameters\">Parameters:</h2>\n\n<p>hidden_layer_sizes : tuple\n    The sizes of the hidden layers\nactivation : str\n    Activation function ('sigmoid', 'relu', 'tanh', 'leaky_relu')\nsolver : str\n    Optimization algorithm ('sgd', 'adam', 'rmsprop', 'momentum')\nalpha : float\n    L2 regularization parameter\nbatch_size : int\n    Size of mini-batches for training\nlearning_rate : float\n    Learning rate\nmax_iter : int\n    Maximum number of iterations\nshuffle : bool\n    If True, shuffle the data at each epoch\nrandom_state : int or None\n    Seed for reproducibility\nbeta1 : float\n    Parameter for Adam (exponential decay rate for first moment)\nbeta2 : float\n    Parameter for Adam (exponential decay rate for second moment)\nepsilon : float\n    Value to avoid division by zero\nmomentum : float\n    Parameter for momentum optimizer\ntol : float\n    Tolerance for early stopping\nearly_stopping : bool\n    If True, use early stopping based on validation\nvalidation_fraction : float\n    Fraction of training data to use as validation\nn_iter_no_change : int\n    Number of iterations with no improvement for early stopping</p>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"n\">hidden_layer_sizes</span><span class=\"p\">:</span> <span class=\"n\">Tuple</span><span class=\"p\">[</span><span class=\"nb\">int</span><span class=\"p\">,</span> <span class=\"o\">...</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"p\">(</span><span class=\"mi\">100</span><span class=\"p\">,)</span>,</span><span class=\"param\">\t<span class=\"n\">activation</span><span class=\"p\">:</span> <span class=\"nb\">str</span> <span class=\"o\">=</span> <span class=\"s1\">&#39;relu&#39;</span>,</span><span class=\"param\">\t<span class=\"n\">solver</span><span class=\"p\">:</span> <span class=\"nb\">str</span> <span class=\"o\">=</span> <span class=\"s1\">&#39;sgd&#39;</span>,</span><span class=\"param\">\t<span class=\"n\">alpha</span><span class=\"p\">:</span> <span class=\"nb\">float</span> <span class=\"o\">=</span> <span class=\"mf\">0.0001</span>,</span><span class=\"param\">\t<span class=\"n\">batch_size</span><span class=\"p\">:</span> <span class=\"nb\">int</span> <span class=\"o\">=</span> <span class=\"mi\">32</span>,</span><span class=\"param\">\t<span class=\"n\">learning_rate</span><span class=\"p\">:</span> <span class=\"nb\">float</span> <span class=\"o\">=</span> <span class=\"mf\">0.001</span>,</span><span class=\"param\">\t<span class=\"n\">max_iter</span><span class=\"p\">:</span> <span class=\"nb\">int</span> <span class=\"o\">=</span> <span class=\"mi\">200</span>,</span><span class=\"param\">\t<span class=\"n\">shuffle</span><span class=\"p\">:</span> <span class=\"nb\">bool</span> <span class=\"o\">=</span> <span class=\"kc\">True</span>,</span><span class=\"param\">\t<span class=\"n\">random_state</span><span class=\"p\">:</span> <span class=\"n\">Optional</span><span class=\"p\">[</span><span class=\"nb\">int</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">beta1</span><span class=\"p\">:</span> <span class=\"nb\">float</span> <span class=\"o\">=</span> <span class=\"mf\">0.9</span>,</span><span class=\"param\">\t<span class=\"n\">beta2</span><span class=\"p\">:</span> <span class=\"nb\">float</span> <span class=\"o\">=</span> <span class=\"mf\">0.999</span>,</span><span class=\"param\">\t<span class=\"n\">epsilon</span><span class=\"p\">:</span> <span class=\"nb\">float</span> <span class=\"o\">=</span> <span class=\"mf\">1e-08</span>,</span><span class=\"param\">\t<span class=\"n\">momentum</span><span class=\"p\">:</span> <span class=\"nb\">float</span> <span class=\"o\">=</span> <span class=\"mf\">0.9</span>,</span><span class=\"param\">\t<span class=\"n\">tol</span><span class=\"p\">:</span> <span class=\"nb\">float</span> <span class=\"o\">=</span> <span class=\"mf\">0.0001</span>,</span><span class=\"param\">\t<span class=\"n\">early_stopping</span><span class=\"p\">:</span> <span class=\"nb\">bool</span> <span class=\"o\">=</span> <span class=\"kc\">False</span>,</span><span class=\"param\">\t<span class=\"n\">validation_fraction</span><span class=\"p\">:</span> <span class=\"nb\">float</span> <span class=\"o\">=</span> <span class=\"mf\">0.1</span>,</span><span class=\"param\">\t<span class=\"n\">n_iter_no_change</span><span class=\"p\">:</span> <span class=\"nb\">int</span> <span class=\"o\">=</span> <span class=\"mi\">10</span></span>)</span>"}, "ifri_mini_ml_lib.neural_networks.MLPRegressor.hidden_layer_sizes": {"fullname": "ifri_mini_ml_lib.neural_networks.MLPRegressor.hidden_layer_sizes", "modulename": "ifri_mini_ml_lib.neural_networks", "qualname": "MLPRegressor.hidden_layer_sizes", "kind": "variable", "doc": "<p></p>\n"}, "ifri_mini_ml_lib.neural_networks.MLPRegressor.activation": {"fullname": "ifri_mini_ml_lib.neural_networks.MLPRegressor.activation", "modulename": "ifri_mini_ml_lib.neural_networks", "qualname": "MLPRegressor.activation", "kind": "variable", "doc": "<p></p>\n"}, "ifri_mini_ml_lib.neural_networks.MLPRegressor.solver": {"fullname": "ifri_mini_ml_lib.neural_networks.MLPRegressor.solver", "modulename": "ifri_mini_ml_lib.neural_networks", "qualname": "MLPRegressor.solver", "kind": "variable", "doc": "<p></p>\n"}, "ifri_mini_ml_lib.neural_networks.MLPRegressor.alpha": {"fullname": "ifri_mini_ml_lib.neural_networks.MLPRegressor.alpha", "modulename": "ifri_mini_ml_lib.neural_networks", "qualname": "MLPRegressor.alpha", "kind": "variable", "doc": "<p></p>\n"}, "ifri_mini_ml_lib.neural_networks.MLPRegressor.batch_size": {"fullname": "ifri_mini_ml_lib.neural_networks.MLPRegressor.batch_size", "modulename": "ifri_mini_ml_lib.neural_networks", "qualname": "MLPRegressor.batch_size", "kind": "variable", "doc": "<p></p>\n"}, "ifri_mini_ml_lib.neural_networks.MLPRegressor.learning_rate": {"fullname": "ifri_mini_ml_lib.neural_networks.MLPRegressor.learning_rate", "modulename": "ifri_mini_ml_lib.neural_networks", "qualname": "MLPRegressor.learning_rate", "kind": "variable", "doc": "<p></p>\n"}, "ifri_mini_ml_lib.neural_networks.MLPRegressor.max_iter": {"fullname": "ifri_mini_ml_lib.neural_networks.MLPRegressor.max_iter", "modulename": "ifri_mini_ml_lib.neural_networks", "qualname": "MLPRegressor.max_iter", "kind": "variable", "doc": "<p></p>\n"}, "ifri_mini_ml_lib.neural_networks.MLPRegressor.shuffle": {"fullname": "ifri_mini_ml_lib.neural_networks.MLPRegressor.shuffle", "modulename": "ifri_mini_ml_lib.neural_networks", "qualname": "MLPRegressor.shuffle", "kind": "variable", "doc": "<p></p>\n"}, "ifri_mini_ml_lib.neural_networks.MLPRegressor.beta1": {"fullname": "ifri_mini_ml_lib.neural_networks.MLPRegressor.beta1", "modulename": "ifri_mini_ml_lib.neural_networks", "qualname": "MLPRegressor.beta1", "kind": "variable", "doc": "<p></p>\n"}, "ifri_mini_ml_lib.neural_networks.MLPRegressor.beta2": {"fullname": "ifri_mini_ml_lib.neural_networks.MLPRegressor.beta2", "modulename": "ifri_mini_ml_lib.neural_networks", "qualname": "MLPRegressor.beta2", "kind": "variable", "doc": "<p></p>\n"}, "ifri_mini_ml_lib.neural_networks.MLPRegressor.epsilon": {"fullname": "ifri_mini_ml_lib.neural_networks.MLPRegressor.epsilon", "modulename": "ifri_mini_ml_lib.neural_networks", "qualname": "MLPRegressor.epsilon", "kind": "variable", "doc": "<p></p>\n"}, "ifri_mini_ml_lib.neural_networks.MLPRegressor.momentum": {"fullname": "ifri_mini_ml_lib.neural_networks.MLPRegressor.momentum", "modulename": "ifri_mini_ml_lib.neural_networks", "qualname": "MLPRegressor.momentum", "kind": "variable", "doc": "<p></p>\n"}, "ifri_mini_ml_lib.neural_networks.MLPRegressor.tol": {"fullname": "ifri_mini_ml_lib.neural_networks.MLPRegressor.tol", "modulename": "ifri_mini_ml_lib.neural_networks", "qualname": "MLPRegressor.tol", "kind": "variable", "doc": "<p></p>\n"}, "ifri_mini_ml_lib.neural_networks.MLPRegressor.early_stopping": {"fullname": "ifri_mini_ml_lib.neural_networks.MLPRegressor.early_stopping", "modulename": "ifri_mini_ml_lib.neural_networks", "qualname": "MLPRegressor.early_stopping", "kind": "variable", "doc": "<p></p>\n"}, "ifri_mini_ml_lib.neural_networks.MLPRegressor.validation_fraction": {"fullname": "ifri_mini_ml_lib.neural_networks.MLPRegressor.validation_fraction", "modulename": "ifri_mini_ml_lib.neural_networks", "qualname": "MLPRegressor.validation_fraction", "kind": "variable", "doc": "<p></p>\n"}, "ifri_mini_ml_lib.neural_networks.MLPRegressor.n_iter_no_change": {"fullname": "ifri_mini_ml_lib.neural_networks.MLPRegressor.n_iter_no_change", "modulename": "ifri_mini_ml_lib.neural_networks", "qualname": "MLPRegressor.n_iter_no_change", "kind": "variable", "doc": "<p></p>\n"}, "ifri_mini_ml_lib.neural_networks.MLPRegressor.activation_functions": {"fullname": "ifri_mini_ml_lib.neural_networks.MLPRegressor.activation_functions", "modulename": "ifri_mini_ml_lib.neural_networks", "qualname": "MLPRegressor.activation_functions", "kind": "variable", "doc": "<p></p>\n"}, "ifri_mini_ml_lib.neural_networks.MLPRegressor.activation_derivatives": {"fullname": "ifri_mini_ml_lib.neural_networks.MLPRegressor.activation_derivatives", "modulename": "ifri_mini_ml_lib.neural_networks", "qualname": "MLPRegressor.activation_derivatives", "kind": "variable", "doc": "<p></p>\n"}, "ifri_mini_ml_lib.neural_networks.MLPRegressor.activation_func": {"fullname": "ifri_mini_ml_lib.neural_networks.MLPRegressor.activation_func", "modulename": "ifri_mini_ml_lib.neural_networks", "qualname": "MLPRegressor.activation_func", "kind": "variable", "doc": "<p></p>\n"}, "ifri_mini_ml_lib.neural_networks.MLPRegressor.activation_derivative": {"fullname": "ifri_mini_ml_lib.neural_networks.MLPRegressor.activation_derivative", "modulename": "ifri_mini_ml_lib.neural_networks", "qualname": "MLPRegressor.activation_derivative", "kind": "variable", "doc": "<p></p>\n"}, "ifri_mini_ml_lib.neural_networks.MLPRegressor.weights": {"fullname": "ifri_mini_ml_lib.neural_networks.MLPRegressor.weights", "modulename": "ifri_mini_ml_lib.neural_networks", "qualname": "MLPRegressor.weights", "kind": "variable", "doc": "<p></p>\n"}, "ifri_mini_ml_lib.neural_networks.MLPRegressor.biases": {"fullname": "ifri_mini_ml_lib.neural_networks.MLPRegressor.biases", "modulename": "ifri_mini_ml_lib.neural_networks", "qualname": "MLPRegressor.biases", "kind": "variable", "doc": "<p></p>\n"}, "ifri_mini_ml_lib.neural_networks.MLPRegressor.n_layers": {"fullname": "ifri_mini_ml_lib.neural_networks.MLPRegressor.n_layers", "modulename": "ifri_mini_ml_lib.neural_networks", "qualname": "MLPRegressor.n_layers", "kind": "variable", "doc": "<p></p>\n"}, "ifri_mini_ml_lib.neural_networks.MLPRegressor.n_outputs": {"fullname": "ifri_mini_ml_lib.neural_networks.MLPRegressor.n_outputs", "modulename": "ifri_mini_ml_lib.neural_networks", "qualname": "MLPRegressor.n_outputs", "kind": "variable", "doc": "<p></p>\n"}, "ifri_mini_ml_lib.neural_networks.MLPRegressor.velocity_weights": {"fullname": "ifri_mini_ml_lib.neural_networks.MLPRegressor.velocity_weights", "modulename": "ifri_mini_ml_lib.neural_networks", "qualname": "MLPRegressor.velocity_weights", "kind": "variable", "doc": "<p></p>\n"}, "ifri_mini_ml_lib.neural_networks.MLPRegressor.velocity_biases": {"fullname": "ifri_mini_ml_lib.neural_networks.MLPRegressor.velocity_biases", "modulename": "ifri_mini_ml_lib.neural_networks", "qualname": "MLPRegressor.velocity_biases", "kind": "variable", "doc": "<p></p>\n"}, "ifri_mini_ml_lib.neural_networks.MLPRegressor.m_weights": {"fullname": "ifri_mini_ml_lib.neural_networks.MLPRegressor.m_weights", "modulename": "ifri_mini_ml_lib.neural_networks", "qualname": "MLPRegressor.m_weights", "kind": "variable", "doc": "<p></p>\n"}, "ifri_mini_ml_lib.neural_networks.MLPRegressor.m_biases": {"fullname": "ifri_mini_ml_lib.neural_networks.MLPRegressor.m_biases", "modulename": "ifri_mini_ml_lib.neural_networks", "qualname": "MLPRegressor.m_biases", "kind": "variable", "doc": "<p></p>\n"}, "ifri_mini_ml_lib.neural_networks.MLPRegressor.v_weights": {"fullname": "ifri_mini_ml_lib.neural_networks.MLPRegressor.v_weights", "modulename": "ifri_mini_ml_lib.neural_networks", "qualname": "MLPRegressor.v_weights", "kind": "variable", "doc": "<p></p>\n"}, "ifri_mini_ml_lib.neural_networks.MLPRegressor.v_biases": {"fullname": "ifri_mini_ml_lib.neural_networks.MLPRegressor.v_biases", "modulename": "ifri_mini_ml_lib.neural_networks", "qualname": "MLPRegressor.v_biases", "kind": "variable", "doc": "<p></p>\n"}, "ifri_mini_ml_lib.neural_networks.MLPRegressor.t": {"fullname": "ifri_mini_ml_lib.neural_networks.MLPRegressor.t", "modulename": "ifri_mini_ml_lib.neural_networks", "qualname": "MLPRegressor.t", "kind": "variable", "doc": "<p></p>\n"}, "ifri_mini_ml_lib.neural_networks.MLPRegressor.loss_history": {"fullname": "ifri_mini_ml_lib.neural_networks.MLPRegressor.loss_history", "modulename": "ifri_mini_ml_lib.neural_networks", "qualname": "MLPRegressor.loss_history", "kind": "variable", "doc": "<p></p>\n"}, "ifri_mini_ml_lib.neural_networks.MLPRegressor.val_loss_history": {"fullname": "ifri_mini_ml_lib.neural_networks.MLPRegressor.val_loss_history", "modulename": "ifri_mini_ml_lib.neural_networks", "qualname": "MLPRegressor.val_loss_history", "kind": "variable", "doc": "<p></p>\n"}, "ifri_mini_ml_lib.neural_networks.MLPRegressor.best_loss": {"fullname": "ifri_mini_ml_lib.neural_networks.MLPRegressor.best_loss", "modulename": "ifri_mini_ml_lib.neural_networks", "qualname": "MLPRegressor.best_loss", "kind": "variable", "doc": "<p></p>\n"}, "ifri_mini_ml_lib.neural_networks.MLPRegressor.no_improvement_count": {"fullname": "ifri_mini_ml_lib.neural_networks.MLPRegressor.no_improvement_count", "modulename": "ifri_mini_ml_lib.neural_networks", "qualname": "MLPRegressor.no_improvement_count", "kind": "variable", "doc": "<p></p>\n"}, "ifri_mini_ml_lib.neural_networks.MLPRegressor.trained": {"fullname": "ifri_mini_ml_lib.neural_networks.MLPRegressor.trained", "modulename": "ifri_mini_ml_lib.neural_networks", "qualname": "MLPRegressor.trained", "kind": "variable", "doc": "<p></p>\n"}, "ifri_mini_ml_lib.neural_networks.MLPRegressor.fit": {"fullname": "ifri_mini_ml_lib.neural_networks.MLPRegressor.fit", "modulename": "ifri_mini_ml_lib.neural_networks", "qualname": "MLPRegressor.fit", "kind": "function", "doc": "<p>Train the MLP on the provided data</p>\n\n<h2 id=\"parameters\">Parameters:</h2>\n\n<p>X : np.ndarray of shape (n_samples, n_features)\n    Training data\ny : np.ndarray of shape (n_samples,) or (n_samples, n_outputs)\n    Target values</p>\n\n<h2 id=\"returns\">Returns:</h2>\n\n<p>self : object\n    Trained MLP</p>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"bp\">self</span>,</span><span class=\"param\">\t<span class=\"n\">X</span><span class=\"p\">:</span> <span class=\"n\">numpy</span><span class=\"o\">.</span><span class=\"n\">ndarray</span>,</span><span class=\"param\">\t<span class=\"n\">y</span><span class=\"p\">:</span> <span class=\"n\">numpy</span><span class=\"o\">.</span><span class=\"n\">ndarray</span></span><span class=\"return-annotation\">) -> <span class=\"n\">ifri_mini_ml_lib</span><span class=\"o\">.</span><span class=\"n\">neural_networks</span><span class=\"o\">.</span><span class=\"n\">mlp_regressor</span><span class=\"o\">.</span><span class=\"n\">MLPRegressor</span>:</span></span>", "funcdef": "def"}, "ifri_mini_ml_lib.neural_networks.MLPRegressor.predict": {"fullname": "ifri_mini_ml_lib.neural_networks.MLPRegressor.predict", "modulename": "ifri_mini_ml_lib.neural_networks", "qualname": "MLPRegressor.predict", "kind": "function", "doc": "<p>Predict target values for samples in X</p>\n\n<h2 id=\"parameters\">Parameters:</h2>\n\n<p>X : np.ndarray of shape (n_samples, n_features)\n    The data to predict</p>\n\n<h2 id=\"returns\">Returns:</h2>\n\n<p>y_pred : np.ndarray of shape (n_samples, n_outputs) or (n_samples,)\n    The predicted values</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">X</span><span class=\"p\">:</span> <span class=\"n\">numpy</span><span class=\"o\">.</span><span class=\"n\">ndarray</span></span><span class=\"return-annotation\">) -> <span class=\"n\">numpy</span><span class=\"o\">.</span><span class=\"n\">ndarray</span>:</span></span>", "funcdef": "def"}, "ifri_mini_ml_lib.neural_networks.MLPRegressor.score": {"fullname": "ifri_mini_ml_lib.neural_networks.MLPRegressor.score", "modulename": "ifri_mini_ml_lib.neural_networks", "qualname": "MLPRegressor.score", "kind": "function", "doc": "<p>Return the coefficient of determination R^2 of the prediction</p>\n\n<h2 id=\"parameters\">Parameters:</h2>\n\n<p>X : np.ndarray of shape (n_samples, n_features)\n    Test data\ny : np.ndarray of shape (n_samples,) or (n_samples, n_outputs)\n    True values</p>\n\n<h2 id=\"returns\">Returns:</h2>\n\n<p>score : float\n    R^2 score</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">X</span><span class=\"p\">:</span> <span class=\"n\">numpy</span><span class=\"o\">.</span><span class=\"n\">ndarray</span>, </span><span class=\"param\"><span class=\"n\">y</span><span class=\"p\">:</span> <span class=\"n\">numpy</span><span class=\"o\">.</span><span class=\"n\">ndarray</span></span><span class=\"return-annotation\">) -> <span class=\"nb\">float</span>:</span></span>", "funcdef": "def"}, "ifri_mini_ml_lib.preprocessing": {"fullname": "ifri_mini_ml_lib.preprocessing", "modulename": "ifri_mini_ml_lib.preprocessing", "kind": "module", "doc": "<p></p>\n"}, "ifri_mini_ml_lib.preprocessing.dimensionality_reduction": {"fullname": "ifri_mini_ml_lib.preprocessing.dimensionality_reduction", "modulename": "ifri_mini_ml_lib.preprocessing.dimensionality_reduction", "kind": "module", "doc": "<p></p>\n"}, "ifri_mini_ml_lib.preprocessing.dimensionality_reduction.PCA": {"fullname": "ifri_mini_ml_lib.preprocessing.dimensionality_reduction.PCA", "modulename": "ifri_mini_ml_lib.preprocessing.dimensionality_reduction", "qualname": "PCA", "kind": "class", "doc": "<p>Implementation of Principal Component Analysis (PCA) for dimensionality reduction.</p>\n\n<p>Attributes:\n    n_component (int): Number of principal components to retain\n    Mean (np.ndarray): Mean of the features computed during training\n    std (np.ndarray): Standard deviation of the features computed during training\n    cov (np.ndarray): Computed covariance matrix\n    eigen_values (np.ndarray): Sorted eigenvalues\n    eigen_vectors (np.ndarray): Sorted eigenvectors\n    components (np.ndarray): Selected principal components</p>\n"}, "ifri_mini_ml_lib.preprocessing.dimensionality_reduction.PCA.__init__": {"fullname": "ifri_mini_ml_lib.preprocessing.dimensionality_reduction.PCA.__init__", "modulename": "ifri_mini_ml_lib.preprocessing.dimensionality_reduction", "qualname": "PCA.__init__", "kind": "function", "doc": "<p>Description:\n    Initializes the PCA model.</p>\n\n<p>Args:\n    n_component (int): Number of principal components to keep</p>\n\n<p>Example:</p>\n\n<blockquote>\n  <blockquote>\n    <blockquote>\n      <p>model = PCA(n_component=2)</p>\n    </blockquote>\n  </blockquote>\n</blockquote>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">n_component</span><span class=\"p\">:</span> <span class=\"nb\">int</span></span>)</span>"}, "ifri_mini_ml_lib.preprocessing.dimensionality_reduction.PCA.n_component": {"fullname": "ifri_mini_ml_lib.preprocessing.dimensionality_reduction.PCA.n_component", "modulename": "ifri_mini_ml_lib.preprocessing.dimensionality_reduction", "qualname": "PCA.n_component", "kind": "variable", "doc": "<p></p>\n"}, "ifri_mini_ml_lib.preprocessing.dimensionality_reduction.PCA.mean": {"fullname": "ifri_mini_ml_lib.preprocessing.dimensionality_reduction.PCA.mean", "modulename": "ifri_mini_ml_lib.preprocessing.dimensionality_reduction", "qualname": "PCA.mean", "kind": "variable", "doc": "<p></p>\n"}, "ifri_mini_ml_lib.preprocessing.dimensionality_reduction.PCA.cov": {"fullname": "ifri_mini_ml_lib.preprocessing.dimensionality_reduction.PCA.cov", "modulename": "ifri_mini_ml_lib.preprocessing.dimensionality_reduction", "qualname": "PCA.cov", "kind": "variable", "doc": "<p></p>\n"}, "ifri_mini_ml_lib.preprocessing.dimensionality_reduction.PCA.eigen_values": {"fullname": "ifri_mini_ml_lib.preprocessing.dimensionality_reduction.PCA.eigen_values", "modulename": "ifri_mini_ml_lib.preprocessing.dimensionality_reduction", "qualname": "PCA.eigen_values", "kind": "variable", "doc": "<p></p>\n"}, "ifri_mini_ml_lib.preprocessing.dimensionality_reduction.PCA.eigen_vectors": {"fullname": "ifri_mini_ml_lib.preprocessing.dimensionality_reduction.PCA.eigen_vectors", "modulename": "ifri_mini_ml_lib.preprocessing.dimensionality_reduction", "qualname": "PCA.eigen_vectors", "kind": "variable", "doc": "<p></p>\n"}, "ifri_mini_ml_lib.preprocessing.dimensionality_reduction.PCA.components": {"fullname": "ifri_mini_ml_lib.preprocessing.dimensionality_reduction.PCA.components", "modulename": "ifri_mini_ml_lib.preprocessing.dimensionality_reduction", "qualname": "PCA.components", "kind": "variable", "doc": "<p></p>\n"}, "ifri_mini_ml_lib.preprocessing.dimensionality_reduction.PCA.fit": {"fullname": "ifri_mini_ml_lib.preprocessing.dimensionality_reduction.PCA.fit", "modulename": "ifri_mini_ml_lib.preprocessing.dimensionality_reduction", "qualname": "PCA.fit", "kind": "function", "doc": "<p>Description:\n    Model training (calculation of statistics and components).</p>\n\n<p>Args:\n    X (np.ndarray): 2D data matrix (shape: [n_samples, n_features])</p>\n\n<p>Returns:\n    PCA: Trained instance</p>\n\n<p>Example:</p>\n\n<blockquote>\n  <blockquote>\n    <blockquote>\n      <p>data = np.array([[1, 2], [3, 4], [5, 6]])\n      model.fit(data)</p>\n    </blockquote>\n  </blockquote>\n</blockquote>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"bp\">self</span>,</span><span class=\"param\">\t<span class=\"n\">X</span><span class=\"p\">:</span> <span class=\"n\">numpy</span><span class=\"o\">.</span><span class=\"n\">ndarray</span></span><span class=\"return-annotation\">) -> <span class=\"n\">ifri_mini_ml_lib</span><span class=\"o\">.</span><span class=\"n\">preprocessing</span><span class=\"o\">.</span><span class=\"n\">dimensionality_reduction</span><span class=\"o\">.</span><span class=\"n\">pca</span><span class=\"o\">.</span><span class=\"n\">PCA</span>:</span></span>", "funcdef": "def"}, "ifri_mini_ml_lib.preprocessing.dimensionality_reduction.PCA.transform": {"fullname": "ifri_mini_ml_lib.preprocessing.dimensionality_reduction.PCA.transform", "modulename": "ifri_mini_ml_lib.preprocessing.dimensionality_reduction", "qualname": "PCA.transform", "kind": "function", "doc": "<p>Description:\n    Projection of data into the reduced space.</p>\n\n<p>Args:\n    X (np.ndarray): Data to transform (shape: [n_samples, n_features])</p>\n\n<p>Returns:\n    np.ndarray: Projected data (shape: [n_samples, n_component])</p>\n\n<p>Example:</p>\n\n<blockquote>\n  <blockquote>\n    <blockquote>\n      <p>transformed_data = model.transform(data)\n      print(transformed_data.shape)\n          (3, 2)</p>\n    </blockquote>\n  </blockquote>\n</blockquote>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">X</span><span class=\"p\">:</span> <span class=\"n\">numpy</span><span class=\"o\">.</span><span class=\"n\">ndarray</span></span><span class=\"return-annotation\">) -> <span class=\"n\">numpy</span><span class=\"o\">.</span><span class=\"n\">ndarray</span>:</span></span>", "funcdef": "def"}, "ifri_mini_ml_lib.preprocessing.dimensionality_reduction.PCA.fit_transform": {"fullname": "ifri_mini_ml_lib.preprocessing.dimensionality_reduction.PCA.fit_transform", "modulename": "ifri_mini_ml_lib.preprocessing.dimensionality_reduction", "qualname": "PCA.fit_transform", "kind": "function", "doc": "<p>Description:\n    One-step learning + projection.</p>\n\n<p>Args:\n    X (np.ndarray): Input data</p>\n\n<p>Returns:\n    np.ndarray: Projected data</p>\n\n<p>Example:</p>\n\n<blockquote>\n  <blockquote>\n    <blockquote>\n      <p>result = model.fit_transform(data)</p>\n    </blockquote>\n  </blockquote>\n</blockquote>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">X</span><span class=\"p\">:</span> <span class=\"n\">numpy</span><span class=\"o\">.</span><span class=\"n\">ndarray</span></span><span class=\"return-annotation\">) -> <span class=\"n\">numpy</span><span class=\"o\">.</span><span class=\"n\">ndarray</span>:</span></span>", "funcdef": "def"}, "ifri_mini_ml_lib.preprocessing.dimensionality_reduction.PCA.plot_cov_matrix": {"fullname": "ifri_mini_ml_lib.preprocessing.dimensionality_reduction.PCA.plot_cov_matrix", "modulename": "ifri_mini_ml_lib.preprocessing.dimensionality_reduction", "qualname": "PCA.plot_cov_matrix", "kind": "function", "doc": "<p>Description:\n    Displays the covariance matrix with annotations.</p>\n\n<p>Example:</p>\n\n<blockquote>\n  <blockquote>\n    <blockquote>\n      <p>model.plot_cov_matrix()</p>\n    </blockquote>\n  </blockquote>\n</blockquote>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span></span><span class=\"return-annotation\">) -> <span class=\"kc\">None</span>:</span></span>", "funcdef": "def"}, "ifri_mini_ml_lib.preprocessing.dimensionality_reduction.PCA.explained_variances": {"fullname": "ifri_mini_ml_lib.preprocessing.dimensionality_reduction.PCA.explained_variances", "modulename": "ifri_mini_ml_lib.preprocessing.dimensionality_reduction", "qualname": "PCA.explained_variances", "kind": "function", "doc": "<p>Description:\n    Returns the sorted eigenvalues.</p>\n\n<p>Returns:\n    np.ndarray: Vector of eigenvalues</p>\n\n<p>Example:</p>\n\n<blockquote>\n  <blockquote>\n    <blockquote>\n      <p>print(model.explained_variances())</p>\n    </blockquote>\n  </blockquote>\n</blockquote>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span></span><span class=\"return-annotation\">) -> <span class=\"n\">numpy</span><span class=\"o\">.</span><span class=\"n\">ndarray</span>:</span></span>", "funcdef": "def"}, "ifri_mini_ml_lib.preprocessing.dimensionality_reduction.PCA.explained_variances_ratio": {"fullname": "ifri_mini_ml_lib.preprocessing.dimensionality_reduction.PCA.explained_variances_ratio", "modulename": "ifri_mini_ml_lib.preprocessing.dimensionality_reduction", "qualname": "PCA.explained_variances_ratio", "kind": "function", "doc": "<p>Description:\n    Calculates the ratio of variance explained by component.</p>\n\n<p>Returns:\n    np.ndarray: Vector of ratios (sum to 1)</p>\n\n<p>Example:</p>\n\n<blockquote>\n  <blockquote>\n    <blockquote>\n      <p>print(model.explained_variances_ratio())</p>\n    </blockquote>\n  </blockquote>\n</blockquote>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span></span><span class=\"return-annotation\">) -> <span class=\"n\">numpy</span><span class=\"o\">.</span><span class=\"n\">ndarray</span>:</span></span>", "funcdef": "def"}, "ifri_mini_ml_lib.preprocessing.dimensionality_reduction.PCA.plot_cumulative_explained_variance_ratio": {"fullname": "ifri_mini_ml_lib.preprocessing.dimensionality_reduction.PCA.plot_cumulative_explained_variance_ratio", "modulename": "ifri_mini_ml_lib.preprocessing.dimensionality_reduction", "qualname": "PCA.plot_cumulative_explained_variance_ratio", "kind": "function", "doc": "<p>Description:\n    Displays the cumulative explained variance ratio plot.</p>\n\n<p>Example:</p>\n\n<blockquote>\n  <blockquote>\n    <blockquote>\n      <p>model.plot_cumulative_explained_variance_ratio()</p>\n    </blockquote>\n  </blockquote>\n</blockquote>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span></span><span class=\"return-annotation\">) -> <span class=\"kc\">None</span>:</span></span>", "funcdef": "def"}, "ifri_mini_ml_lib.preprocessing.dimensionality_reduction.TSNE": {"fullname": "ifri_mini_ml_lib.preprocessing.dimensionality_reduction.TSNE", "modulename": "ifri_mini_ml_lib.preprocessing.dimensionality_reduction", "qualname": "TSNE", "kind": "class", "doc": "<p>Implementation of the t-Distributed Stochastic Neighbor Embedding (t-SNE) algorithm\nfor dimensionality reduction and data visualization.</p>\n\n<p>Attributes:\n    n_components (int): Dimension of the projection space (2 or 3)\n    perplexity (float): Effective number of local neighbors (typically between 5 and 50)\n    early_exaggeration (float): Initial exaggeration factor for optimization\n    learning_rate (float): Learning rate for gradient descent\n    n_iter (int): Maximum number of iterations\n    embedding_ (np.ndarray): Projection result (shape: [n_samples, n_components])\n    kl_divergence_ (float): Last KL divergence value\n    n_iter_ (int): Actual number of iterations performed</p>\n"}, "ifri_mini_ml_lib.preprocessing.dimensionality_reduction.TSNE.__init__": {"fullname": "ifri_mini_ml_lib.preprocessing.dimensionality_reduction.TSNE.__init__", "modulename": "ifri_mini_ml_lib.preprocessing.dimensionality_reduction", "qualname": "TSNE.__init__", "kind": "function", "doc": "<p>Description:\n    Initializes the t-SNE parameters.</p>\n\n<p>Args:\n    n_components (int): Output dimension (default: 2)\n    perplexity (float): Perplexity (default: 30.0)\n    early_exaggeration (float): Initial exaggeration factor (default: 12.0)\n    learning_rate (float): Learning rate (default: 200.0)\n    init (str): Initialization method ('pca' or 'random') (default: 'pca')\n    n_iter (int): Maximum number of iterations (default: 1000)\n    min_grad_norm (float): Gradient norm stopping threshold (default: 1e-7)\n    random_state (int): Reproducibility seed (default: None)\n    verbose (int): Verbosity level (0 or 1) (default: 0)</p>\n\n<p>Example:</p>\n\n<blockquote>\n  <blockquote>\n    <blockquote>\n      <p>tsne = TSNE(n_components=2, perplexity=20)</p>\n    </blockquote>\n  </blockquote>\n</blockquote>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"n\">n_components</span><span class=\"o\">=</span><span class=\"mi\">2</span>,</span><span class=\"param\">\t<span class=\"n\">perplexity</span><span class=\"o\">=</span><span class=\"mf\">30.0</span>,</span><span class=\"param\">\t<span class=\"n\">early_exaggeration</span><span class=\"o\">=</span><span class=\"mf\">12.0</span>,</span><span class=\"param\">\t<span class=\"n\">learning_rate</span><span class=\"o\">=</span><span class=\"mf\">200.0</span>,</span><span class=\"param\">\t<span class=\"n\">n_iter</span><span class=\"o\">=</span><span class=\"mi\">1000</span>,</span><span class=\"param\">\t<span class=\"n\">init</span><span class=\"o\">=</span><span class=\"s1\">&#39;pca&#39;</span>,</span><span class=\"param\">\t<span class=\"n\">min_grad_norm</span><span class=\"o\">=</span><span class=\"mf\">1e-07</span>,</span><span class=\"param\">\t<span class=\"n\">random_state</span><span class=\"o\">=</span><span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">verbose</span><span class=\"o\">=</span><span class=\"mi\">0</span></span>)</span>"}, "ifri_mini_ml_lib.preprocessing.dimensionality_reduction.TSNE.n_components": {"fullname": "ifri_mini_ml_lib.preprocessing.dimensionality_reduction.TSNE.n_components", "modulename": "ifri_mini_ml_lib.preprocessing.dimensionality_reduction", "qualname": "TSNE.n_components", "kind": "variable", "doc": "<p></p>\n"}, "ifri_mini_ml_lib.preprocessing.dimensionality_reduction.TSNE.perplexity": {"fullname": "ifri_mini_ml_lib.preprocessing.dimensionality_reduction.TSNE.perplexity", "modulename": "ifri_mini_ml_lib.preprocessing.dimensionality_reduction", "qualname": "TSNE.perplexity", "kind": "variable", "doc": "<p></p>\n"}, "ifri_mini_ml_lib.preprocessing.dimensionality_reduction.TSNE.early_exaggeration": {"fullname": "ifri_mini_ml_lib.preprocessing.dimensionality_reduction.TSNE.early_exaggeration", "modulename": "ifri_mini_ml_lib.preprocessing.dimensionality_reduction", "qualname": "TSNE.early_exaggeration", "kind": "variable", "doc": "<p></p>\n"}, "ifri_mini_ml_lib.preprocessing.dimensionality_reduction.TSNE.learning_rate": {"fullname": "ifri_mini_ml_lib.preprocessing.dimensionality_reduction.TSNE.learning_rate", "modulename": "ifri_mini_ml_lib.preprocessing.dimensionality_reduction", "qualname": "TSNE.learning_rate", "kind": "variable", "doc": "<p></p>\n"}, "ifri_mini_ml_lib.preprocessing.dimensionality_reduction.TSNE.n_iter": {"fullname": "ifri_mini_ml_lib.preprocessing.dimensionality_reduction.TSNE.n_iter", "modulename": "ifri_mini_ml_lib.preprocessing.dimensionality_reduction", "qualname": "TSNE.n_iter", "kind": "variable", "doc": "<p></p>\n"}, "ifri_mini_ml_lib.preprocessing.dimensionality_reduction.TSNE.init": {"fullname": "ifri_mini_ml_lib.preprocessing.dimensionality_reduction.TSNE.init", "modulename": "ifri_mini_ml_lib.preprocessing.dimensionality_reduction", "qualname": "TSNE.init", "kind": "variable", "doc": "<p></p>\n"}, "ifri_mini_ml_lib.preprocessing.dimensionality_reduction.TSNE.min_grad_norm": {"fullname": "ifri_mini_ml_lib.preprocessing.dimensionality_reduction.TSNE.min_grad_norm", "modulename": "ifri_mini_ml_lib.preprocessing.dimensionality_reduction", "qualname": "TSNE.min_grad_norm", "kind": "variable", "doc": "<p></p>\n"}, "ifri_mini_ml_lib.preprocessing.dimensionality_reduction.TSNE.random_state": {"fullname": "ifri_mini_ml_lib.preprocessing.dimensionality_reduction.TSNE.random_state", "modulename": "ifri_mini_ml_lib.preprocessing.dimensionality_reduction", "qualname": "TSNE.random_state", "kind": "variable", "doc": "<p></p>\n"}, "ifri_mini_ml_lib.preprocessing.dimensionality_reduction.TSNE.verbose": {"fullname": "ifri_mini_ml_lib.preprocessing.dimensionality_reduction.TSNE.verbose", "modulename": "ifri_mini_ml_lib.preprocessing.dimensionality_reduction", "qualname": "TSNE.verbose", "kind": "variable", "doc": "<p></p>\n"}, "ifri_mini_ml_lib.preprocessing.dimensionality_reduction.TSNE.embedding_": {"fullname": "ifri_mini_ml_lib.preprocessing.dimensionality_reduction.TSNE.embedding_", "modulename": "ifri_mini_ml_lib.preprocessing.dimensionality_reduction", "qualname": "TSNE.embedding_", "kind": "variable", "doc": "<p></p>\n"}, "ifri_mini_ml_lib.preprocessing.dimensionality_reduction.TSNE.kl_divergence_": {"fullname": "ifri_mini_ml_lib.preprocessing.dimensionality_reduction.TSNE.kl_divergence_", "modulename": "ifri_mini_ml_lib.preprocessing.dimensionality_reduction", "qualname": "TSNE.kl_divergence_", "kind": "variable", "doc": "<p></p>\n"}, "ifri_mini_ml_lib.preprocessing.dimensionality_reduction.TSNE.n_iter_": {"fullname": "ifri_mini_ml_lib.preprocessing.dimensionality_reduction.TSNE.n_iter_", "modulename": "ifri_mini_ml_lib.preprocessing.dimensionality_reduction", "qualname": "TSNE.n_iter_", "kind": "variable", "doc": "<p></p>\n"}, "ifri_mini_ml_lib.preprocessing.dimensionality_reduction.TSNE.rng": {"fullname": "ifri_mini_ml_lib.preprocessing.dimensionality_reduction.TSNE.rng", "modulename": "ifri_mini_ml_lib.preprocessing.dimensionality_reduction", "qualname": "TSNE.rng", "kind": "variable", "doc": "<p></p>\n"}, "ifri_mini_ml_lib.preprocessing.dimensionality_reduction.TSNE.fit": {"fullname": "ifri_mini_ml_lib.preprocessing.dimensionality_reduction.TSNE.fit", "modulename": "ifri_mini_ml_lib.preprocessing.dimensionality_reduction", "qualname": "TSNE.fit", "kind": "function", "doc": "<p>Description:\n    Training the t-SNE model.</p>\n\n<p>Args:\n    X (np.ndarray): Data to project (shape: [n_samples, n_features])</p>\n\n<p>Returns:\n    TSNE: Trained instance</p>\n\n<p>Raises:\n    ValueError: If n_samples &lt; 3 * perplexity</p>\n\n<p>Example:</p>\n\n<blockquote>\n  <blockquote>\n    <blockquote>\n      <p>data = np.random.rand(100, 10)\n      tsne.fit(data)</p>\n    </blockquote>\n  </blockquote>\n</blockquote>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"bp\">self</span>,</span><span class=\"param\">\t<span class=\"n\">X</span><span class=\"p\">:</span> <span class=\"n\">numpy</span><span class=\"o\">.</span><span class=\"n\">ndarray</span></span><span class=\"return-annotation\">) -> <span class=\"n\">ifri_mini_ml_lib</span><span class=\"o\">.</span><span class=\"n\">preprocessing</span><span class=\"o\">.</span><span class=\"n\">dimensionality_reduction</span><span class=\"o\">.</span><span class=\"n\">t_sne</span><span class=\"o\">.</span><span class=\"n\">TSNE</span>:</span></span>", "funcdef": "def"}, "ifri_mini_ml_lib.preprocessing.dimensionality_reduction.TSNE.fit_transform": {"fullname": "ifri_mini_ml_lib.preprocessing.dimensionality_reduction.TSNE.fit_transform", "modulename": "ifri_mini_ml_lib.preprocessing.dimensionality_reduction", "qualname": "TSNE.fit_transform", "kind": "function", "doc": "<p>Description:\n    One-step data training and projection.</p>\n\n<p>Args:\n    X (np.ndarray): Data to transform</p>\n\n<p>Returns:\n    np.ndarray: Projected data (shape: [n_samples, n_components])</p>\n\n<p>Example:</p>\n\n<blockquote>\n  <blockquote>\n    <blockquote>\n      <p>embedding = tsne.fit_transform(data)</p>\n    </blockquote>\n  </blockquote>\n</blockquote>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">X</span><span class=\"p\">:</span> <span class=\"n\">numpy</span><span class=\"o\">.</span><span class=\"n\">ndarray</span></span><span class=\"return-annotation\">) -> <span class=\"n\">numpy</span><span class=\"o\">.</span><span class=\"n\">ndarray</span>:</span></span>", "funcdef": "def"}, "ifri_mini_ml_lib.preprocessing.dimensionality_reduction.TSNE.generate_test_data": {"fullname": "ifri_mini_ml_lib.preprocessing.dimensionality_reduction.TSNE.generate_test_data", "modulename": "ifri_mini_ml_lib.preprocessing.dimensionality_reduction", "qualname": "TSNE.generate_test_data", "kind": "function", "doc": "<p>Description:\n    Generates test data for visualization.</p>\n\n<p>Args:\n    n_samples (int): Number of samples (default: 300)\n    case (str): Data type ('blobs', 'swiss_roll', or other) (default: 'blobs')\n    random_state (int): Random seed (default: None)</p>\n\n<p>Returns:\n    tuple: (X, y) data and labels</p>\n\n<p>Example:</p>\n\n<blockquote>\n  <blockquote>\n    <blockquote>\n      <p>X, y = TSNE.generate_test_data(case='swiss_roll')</p>\n    </blockquote>\n  </blockquote>\n</blockquote>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">n_samples</span><span class=\"o\">=</span><span class=\"mi\">300</span>, </span><span class=\"param\"><span class=\"n\">case</span><span class=\"o\">=</span><span class=\"s1\">&#39;blobs&#39;</span>, </span><span class=\"param\"><span class=\"n\">random_state</span><span class=\"o\">=</span><span class=\"kc\">None</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "ifri_mini_ml_lib.preprocessing.dimensionality_reduction.TSNE.plot_results": {"fullname": "ifri_mini_ml_lib.preprocessing.dimensionality_reduction.TSNE.plot_results", "modulename": "ifri_mini_ml_lib.preprocessing.dimensionality_reduction", "qualname": "TSNE.plot_results", "kind": "function", "doc": "<p>Description:\n    Views the projection results.</p>\n\n<p>Args:\n    X (np.ndarray): Projected data (2D or 3D)\n    y (np.ndarray): Labels for coloring\n    title (str): Plot title\n    ax (matplotlib.axes.Axes): Optional axis for the plot</p>\n\n<p>Example:</p>\n\n<blockquote>\n  <blockquote>\n    <blockquote>\n      <p>TSNE.plot_results(embedding, y, 't-SNE Projection')</p>\n    </blockquote>\n  </blockquote>\n</blockquote>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">X</span>, </span><span class=\"param\"><span class=\"n\">y</span>, </span><span class=\"param\"><span class=\"n\">title</span>, </span><span class=\"param\"><span class=\"n\">ax</span><span class=\"o\">=</span><span class=\"kc\">None</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "ifri_mini_ml_lib.preprocessing.preparation": {"fullname": "ifri_mini_ml_lib.preprocessing.preparation", "modulename": "ifri_mini_ml_lib.preprocessing.preparation", "kind": "module", "doc": "<p></p>\n"}, "ifri_mini_ml_lib.preprocessing.preparation.MinMaxScaler": {"fullname": "ifri_mini_ml_lib.preprocessing.preparation.MinMaxScaler", "modulename": "ifri_mini_ml_lib.preprocessing.preparation", "qualname": "MinMaxScaler", "kind": "class", "doc": "<p>Implementation of Min-Max scaling for data normalization.</p>\n\n<p>Scales features to a specified range by transforming each feature based on\nminimum and maximum values learned during fitting. The default target range\nis [0, 1], but can be customized during initialization.</p>\n\n<p>This scaler is sensitive to outliers since extreme values affect the min/max\ncalculations. For robust scaling, consider using RobustScaler instead.</p>\n"}, "ifri_mini_ml_lib.preprocessing.preparation.MinMaxScaler.__init__": {"fullname": "ifri_mini_ml_lib.preprocessing.preparation.MinMaxScaler.__init__", "modulename": "ifri_mini_ml_lib.preprocessing.preparation", "qualname": "MinMaxScaler.__init__", "kind": "function", "doc": "<p>Initialize the MinMaxScaler with desired feature range.</p>\n\n<p>Args:\n    feature_range (tuple): Desired range of transformed data (min, max). \n                          Default: (0, 1)</p>\n\n<p>Returns:\n    MinMaxScaler: Initialized scaler instance</p>\n\n<p>Example:</p>\n\n<blockquote>\n  <blockquote>\n    <blockquote>\n      <p>scaler = MinMaxScaler(feature_range=(0, 1))\n      scaler = MinMaxScaler(feature_range=(-1, 1))  # Custom range</p>\n    </blockquote>\n  </blockquote>\n</blockquote>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">feature_range</span><span class=\"o\">=</span><span class=\"p\">(</span><span class=\"mi\">0</span><span class=\"p\">,</span> <span class=\"mi\">1</span><span class=\"p\">)</span></span>)</span>"}, "ifri_mini_ml_lib.preprocessing.preparation.MinMaxScaler.min_": {"fullname": "ifri_mini_ml_lib.preprocessing.preparation.MinMaxScaler.min_", "modulename": "ifri_mini_ml_lib.preprocessing.preparation", "qualname": "MinMaxScaler.min_", "kind": "variable", "doc": "<p></p>\n"}, "ifri_mini_ml_lib.preprocessing.preparation.MinMaxScaler.max_": {"fullname": "ifri_mini_ml_lib.preprocessing.preparation.MinMaxScaler.max_", "modulename": "ifri_mini_ml_lib.preprocessing.preparation", "qualname": "MinMaxScaler.max_", "kind": "variable", "doc": "<p></p>\n"}, "ifri_mini_ml_lib.preprocessing.preparation.MinMaxScaler.columns": {"fullname": "ifri_mini_ml_lib.preprocessing.preparation.MinMaxScaler.columns", "modulename": "ifri_mini_ml_lib.preprocessing.preparation", "qualname": "MinMaxScaler.columns", "kind": "variable", "doc": "<p></p>\n"}, "ifri_mini_ml_lib.preprocessing.preparation.MinMaxScaler.fit": {"fullname": "ifri_mini_ml_lib.preprocessing.preparation.MinMaxScaler.fit", "modulename": "ifri_mini_ml_lib.preprocessing.preparation", "qualname": "MinMaxScaler.fit", "kind": "function", "doc": "<p>Compute minimum and maximum values from training data for later scaling.</p>\n\n<p>Args:\n    X (array-like): Training data to compute min/max values from. \n                   Can be list, numpy.ndarray, pandas.DataFrame, or pandas.Series\n                   Shape should be (n_samples, n_features)</p>\n\n<p>Returns:\n    self: Fitted scaler object</p>\n\n<p>Example:</p>\n\n<blockquote>\n  <blockquote>\n    <blockquote>\n      <p>scaler.fit(training_data)\n      scaler.fit([[1, 2], [3, 4]])  # With list input</p>\n    </blockquote>\n  </blockquote>\n</blockquote>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">X</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "ifri_mini_ml_lib.preprocessing.preparation.MinMaxScaler.transform": {"fullname": "ifri_mini_ml_lib.preprocessing.preparation.MinMaxScaler.transform", "modulename": "ifri_mini_ml_lib.preprocessing.preparation", "qualname": "MinMaxScaler.transform", "kind": "function", "doc": "<p>Scale features using previously computed min/max values.</p>\n\n<p>Args:\n    X (array-like): Data to be transformed (same shape as fit data)</p>\n\n<p>Returns:\n    array-like: Transformed data in specified range [range_min, range_max]\n               Returns same type as input (DataFrame, Series or array)</p>\n\n<p>Raises:\n    ValueError: If fit() hasn't been called first</p>\n\n<p>Example:</p>\n\n<blockquote>\n  <blockquote>\n    <blockquote>\n      <p>scaled_data = scaler.transform(new_data)\n      scaler.transform([[1, 2], [3, 4]])  # With list input</p>\n    </blockquote>\n  </blockquote>\n</blockquote>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">X</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "ifri_mini_ml_lib.preprocessing.preparation.MinMaxScaler.fit_transform": {"fullname": "ifri_mini_ml_lib.preprocessing.preparation.MinMaxScaler.fit_transform", "modulename": "ifri_mini_ml_lib.preprocessing.preparation", "qualname": "MinMaxScaler.fit_transform", "kind": "function", "doc": "<p>Fit to data, then transform it in one step.</p>\n\n<p>Args:\n    X (array-like): Data to fit and transform</p>\n\n<p>Returns:\n    array-like: Transformed data in specified range</p>\n\n<p>Example:</p>\n\n<blockquote>\n  <blockquote>\n    <blockquote>\n      <p>scaled_data = scaler.fit_transform(data)</p>\n    </blockquote>\n  </blockquote>\n</blockquote>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">X</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "ifri_mini_ml_lib.preprocessing.preparation.MinMaxScaler.inverse_transform": {"fullname": "ifri_mini_ml_lib.preprocessing.preparation.MinMaxScaler.inverse_transform", "modulename": "ifri_mini_ml_lib.preprocessing.preparation", "qualname": "MinMaxScaler.inverse_transform", "kind": "function", "doc": "<p>Transform scaled data back to original scale.</p>\n\n<p>Args:\n    X_scaled (array-like): Scaled data to transform back to original scale</p>\n\n<p>Returns:\n    array-like: Data in original scale (same type as input)</p>\n\n<p>Raises:\n    ValueError: If fit() hasn't been called first</p>\n\n<p>Example:</p>\n\n<blockquote>\n  <blockquote>\n    <blockquote>\n      <p>original_data = scaler.inverse_transform(scaled_data)</p>\n    </blockquote>\n  </blockquote>\n</blockquote>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">X_scaled</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "ifri_mini_ml_lib.preprocessing.preparation.MissingValueHandler": {"fullname": "ifri_mini_ml_lib.preprocessing.preparation.MissingValueHandler", "modulename": "ifri_mini_ml_lib.preprocessing.preparation", "qualname": "MissingValueHandler", "kind": "class", "doc": "<p>Class to handle missing values in datasets using various techniques\n(deletion, statistical imputation, default value, KNN, and regression).</p>\n"}, "ifri_mini_ml_lib.preprocessing.preparation.MissingValueHandler.remove_missing": {"fullname": "ifri_mini_ml_lib.preprocessing.preparation.MissingValueHandler.remove_missing", "modulename": "ifri_mini_ml_lib.preprocessing.preparation", "qualname": "MissingValueHandler.remove_missing", "kind": "function", "doc": "<p>Description:\n    Removes rows or columns containing too many missing values.</p>\n\n<p>Args:\n    X (pd.DataFrame | np.ndarray): Input data.\n    threshold (float): Proportion threshold of NaN allowed before deletion (between 0 and 1).\n    axis (int): Axis to process (0 for rows, 1 for columns).</p>\n\n<p>Returns:\n    pd.DataFrame: Data after deletion.</p>\n\n<p>Example:</p>\n\n<blockquote>\n  <blockquote>\n    <blockquote>\n      <p>handler.remove_missing(df, threshold=0.4, axis=0)</p>\n    </blockquote>\n  </blockquote>\n</blockquote>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">X</span>, </span><span class=\"param\"><span class=\"n\">threshold</span><span class=\"o\">=</span><span class=\"mf\">0.5</span>, </span><span class=\"param\"><span class=\"n\">axis</span><span class=\"o\">=</span><span class=\"mi\">0</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "ifri_mini_ml_lib.preprocessing.preparation.MissingValueHandler.impute_statistical": {"fullname": "ifri_mini_ml_lib.preprocessing.preparation.MissingValueHandler.impute_statistical", "modulename": "ifri_mini_ml_lib.preprocessing.preparation", "qualname": "MissingValueHandler.impute_statistical", "kind": "function", "doc": "<p>Description:\n    Imputes missing values using a statistical strategy.</p>\n\n<p>Args:\n    X (pd.DataFrame | np.ndarray): Input data.\n    strategy (str): Imputation method ('mean', 'median' or 'mode').</p>\n\n<p>Returns:\n    pd.DataFrame: Imputed data.</p>\n\n<p>Example:</p>\n\n<blockquote>\n  <blockquote>\n    <blockquote>\n      <p>handler.impute_statistical(df, strategy=\"median\")</p>\n    </blockquote>\n  </blockquote>\n</blockquote>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">X</span>, </span><span class=\"param\"><span class=\"n\">strategy</span><span class=\"o\">=</span><span class=\"s1\">&#39;mean&#39;</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "ifri_mini_ml_lib.preprocessing.preparation.MissingValueHandler.impute_default": {"fullname": "ifri_mini_ml_lib.preprocessing.preparation.MissingValueHandler.impute_default", "modulename": "ifri_mini_ml_lib.preprocessing.preparation", "qualname": "MissingValueHandler.impute_default", "kind": "function", "doc": "<p>Description:\n    Replaces all missing values with a constant value.</p>\n\n<p>Args:\n    X (pd.DataFrame | np.ndarray): Input data.\n    value (int | float): Value used to replace NaN.</p>\n\n<p>Returns:\n    pd.DataFrame: Imputed data.</p>\n\n<p>Example:</p>\n\n<blockquote>\n  <blockquote>\n    <blockquote>\n      <p>handler.impute_default(df, value=-1)</p>\n    </blockquote>\n  </blockquote>\n</blockquote>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">X</span>, </span><span class=\"param\"><span class=\"n\">value</span><span class=\"o\">=</span><span class=\"mi\">0</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "ifri_mini_ml_lib.preprocessing.preparation.MissingValueHandler.impute_knn": {"fullname": "ifri_mini_ml_lib.preprocessing.preparation.MissingValueHandler.impute_knn", "modulename": "ifri_mini_ml_lib.preprocessing.preparation", "qualname": "MissingValueHandler.impute_knn", "kind": "function", "doc": "<p>Description:\n    Imputes missing values using k-nearest neighbors.</p>\n\n<p>Args:\n    X (pd.DataFrame | np.ndarray): Input data.\n    k (int): Number of neighbors to consider.</p>\n\n<p>Returns:\n    pd.DataFrame: Imputed data.</p>\n\n<p>Example:</p>\n\n<blockquote>\n  <blockquote>\n    <blockquote>\n      <p>handler.impute_knn(df, k=5)</p>\n    </blockquote>\n  </blockquote>\n</blockquote>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">X</span>, </span><span class=\"param\"><span class=\"n\">k</span><span class=\"o\">=</span><span class=\"mi\">3</span>, </span><span class=\"param\"><span class=\"n\">task</span><span class=\"o\">=</span><span class=\"s1\">&#39;regression&#39;</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "ifri_mini_ml_lib.preprocessing.preparation.MissingValueHandler.impute_regression": {"fullname": "ifri_mini_ml_lib.preprocessing.preparation.MissingValueHandler.impute_regression", "modulename": "ifri_mini_ml_lib.preprocessing.preparation", "qualname": "MissingValueHandler.impute_regression", "kind": "function", "doc": "<p>Description:\n    Imputes a target column by predicting it with a regression model\n    based on other columns.</p>\n\n<p>Args:\n    X (pd.DataFrame | np.ndarray): Input data.\n    target_col (str): Name of column to impute.</p>\n\n<p>Returns:\n    pd.DataFrame: Imputed data.</p>\n\n<p>Raises:\n    ValueError: If target column doesn't exist in DataFrame.</p>\n\n<p>Example:</p>\n\n<blockquote>\n  <blockquote>\n    <blockquote>\n      <p>handler.impute_regression(df, target_col='Age')</p>\n    </blockquote>\n  </blockquote>\n</blockquote>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">X</span>, </span><span class=\"param\"><span class=\"n\">target_col</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "ifri_mini_ml_lib.preprocessing.preparation.StandardScaler": {"fullname": "ifri_mini_ml_lib.preprocessing.preparation.StandardScaler", "modulename": "ifri_mini_ml_lib.preprocessing.preparation", "qualname": "StandardScaler", "kind": "class", "doc": "<p>Description:\n    A custom implementation of a standard scaler similar to scikit-learn's StandardScaler.</p>\n\n<pre><code>This class centers and scales input data so that each feature has a mean of 0 and a standard deviation of 1.\nIt supports both NumPy arrays and pandas DataFrames.\n</code></pre>\n\n<p>Attributes:\n    mean_ (np.ndarray): Mean of each feature in the training data.\n    std_ (np.ndarray): Standard deviation of each feature in the training data.\n    is_dataframe (bool): Whether the input was a pandas DataFrame.\n    columns (Index or None): Column names of the DataFrame if applicable.</p>\n"}, "ifri_mini_ml_lib.preprocessing.preparation.StandardScaler.__init__": {"fullname": "ifri_mini_ml_lib.preprocessing.preparation.StandardScaler.__init__", "modulename": "ifri_mini_ml_lib.preprocessing.preparation", "qualname": "StandardScaler.__init__", "kind": "function", "doc": "<p>Description:\n    Initializes the StandardScaler with default attributes.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">()</span>"}, "ifri_mini_ml_lib.preprocessing.preparation.StandardScaler.mean_": {"fullname": "ifri_mini_ml_lib.preprocessing.preparation.StandardScaler.mean_", "modulename": "ifri_mini_ml_lib.preprocessing.preparation", "qualname": "StandardScaler.mean_", "kind": "variable", "doc": "<p></p>\n"}, "ifri_mini_ml_lib.preprocessing.preparation.StandardScaler.std_": {"fullname": "ifri_mini_ml_lib.preprocessing.preparation.StandardScaler.std_", "modulename": "ifri_mini_ml_lib.preprocessing.preparation", "qualname": "StandardScaler.std_", "kind": "variable", "doc": "<p></p>\n"}, "ifri_mini_ml_lib.preprocessing.preparation.StandardScaler.is_dataframe": {"fullname": "ifri_mini_ml_lib.preprocessing.preparation.StandardScaler.is_dataframe", "modulename": "ifri_mini_ml_lib.preprocessing.preparation", "qualname": "StandardScaler.is_dataframe", "kind": "variable", "doc": "<p></p>\n"}, "ifri_mini_ml_lib.preprocessing.preparation.StandardScaler.columns": {"fullname": "ifri_mini_ml_lib.preprocessing.preparation.StandardScaler.columns", "modulename": "ifri_mini_ml_lib.preprocessing.preparation", "qualname": "StandardScaler.columns", "kind": "variable", "doc": "<p></p>\n"}, "ifri_mini_ml_lib.preprocessing.preparation.StandardScaler.fit": {"fullname": "ifri_mini_ml_lib.preprocessing.preparation.StandardScaler.fit", "modulename": "ifri_mini_ml_lib.preprocessing.preparation", "qualname": "StandardScaler.fit", "kind": "function", "doc": "<p>Description:\n    Computes the mean and standard deviation of each feature from the input data.</p>\n\n<p>Args:\n    X (np.ndarray or pd.DataFrame): Input data where each row is a sample.</p>\n\n<p>Example:\n    scaler = StandardScaler()\n    scaler.fit(data)</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">X</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "ifri_mini_ml_lib.preprocessing.preparation.StandardScaler.transform": {"fullname": "ifri_mini_ml_lib.preprocessing.preparation.StandardScaler.transform", "modulename": "ifri_mini_ml_lib.preprocessing.preparation", "qualname": "StandardScaler.transform", "kind": "function", "doc": "<p>Description:\n    Applies standardization to the input data using the previously computed mean and std.</p>\n\n<p>Args:\n    X (np.ndarray or pd.DataFrame): Input data to standardize.</p>\n\n<p>Returns:\n    np.ndarray or pd.DataFrame: Standardized data.</p>\n\n<p>Raises:\n    ValueError: If fit was not called before transform.</p>\n\n<p>Example:\n    X_scaled = scaler.transform(data)</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">X</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "ifri_mini_ml_lib.preprocessing.preparation.StandardScaler.fit_transform": {"fullname": "ifri_mini_ml_lib.preprocessing.preparation.StandardScaler.fit_transform", "modulename": "ifri_mini_ml_lib.preprocessing.preparation", "qualname": "StandardScaler.fit_transform", "kind": "function", "doc": "<p>Description:\n    Fits the scaler to the data and then transforms it.</p>\n\n<p>Args:\n    X (np.ndarray or pd.DataFrame): Input data to fit and transform.</p>\n\n<p>Returns:\n    np.ndarray or pd.DataFrame: Standardized data.</p>\n\n<p>Example:\n    X_scaled = scaler.fit_transform(data)</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">X</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "ifri_mini_ml_lib.preprocessing.preparation.StandardScaler.inverse_transform": {"fullname": "ifri_mini_ml_lib.preprocessing.preparation.StandardScaler.inverse_transform", "modulename": "ifri_mini_ml_lib.preprocessing.preparation", "qualname": "StandardScaler.inverse_transform", "kind": "function", "doc": "<p>Description:\n    Reverses the standardization process and returns data to its original scale.</p>\n\n<p>Args:\n    X_scaled (np.ndarray or pd.DataFrame): Standardized data.</p>\n\n<p>Returns:\n    np.ndarray or pd.DataFrame: Data restored to original scale.</p>\n\n<p>Raises:\n    ValueError: If fit was not called before inverse_transform.</p>\n\n<p>Example:\n    original_data = scaler.inverse_transform(X_scaled)</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">X_scaled</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "ifri_mini_ml_lib.preprocessing.preparation.CategoricalEncoder": {"fullname": "ifri_mini_ml_lib.preprocessing.preparation.CategoricalEncoder", "modulename": "ifri_mini_ml_lib.preprocessing.preparation", "qualname": "CategoricalEncoder", "kind": "class", "doc": "<p>A flexible categorical encoder that supports multiple encoding techniques for categorical variables.</p>\n\n<p>Description:\n    This class provides functionality to encode categorical variables using various techniques:\n    - Label Encoding: Assigns each unique category an integer value\n    - Ordinal Encoding: Similar to label encoding but categories are sorted first\n    - Frequency Encoding: Replaces categories with their frequency in the dataset\n    - Target Encoding: Replaces categories with the mean of the target variable for that category\n    - One-Hot Encoding: Creates binary columns for each category</p>\n\n<p>Args:\n    encoding_type (str): Type of encoding to apply. Options: 'onehot', 'label', 'ordinal', 'frequency', 'target'.\n                        Default is 'onehot'.\n    target_column (str): Name of the target column (required for target encoding). Default is None.</p>\n"}, "ifri_mini_ml_lib.preprocessing.preparation.CategoricalEncoder.__init__": {"fullname": "ifri_mini_ml_lib.preprocessing.preparation.CategoricalEncoder.__init__", "modulename": "ifri_mini_ml_lib.preprocessing.preparation", "qualname": "CategoricalEncoder.__init__", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">encoding_type</span><span class=\"o\">=</span><span class=\"s1\">&#39;onehot&#39;</span>, </span><span class=\"param\"><span class=\"n\">target_column</span><span class=\"o\">=</span><span class=\"kc\">None</span></span>)</span>"}, "ifri_mini_ml_lib.preprocessing.preparation.CategoricalEncoder.encoding_type": {"fullname": "ifri_mini_ml_lib.preprocessing.preparation.CategoricalEncoder.encoding_type", "modulename": "ifri_mini_ml_lib.preprocessing.preparation", "qualname": "CategoricalEncoder.encoding_type", "kind": "variable", "doc": "<p></p>\n"}, "ifri_mini_ml_lib.preprocessing.preparation.CategoricalEncoder.target_column": {"fullname": "ifri_mini_ml_lib.preprocessing.preparation.CategoricalEncoder.target_column", "modulename": "ifri_mini_ml_lib.preprocessing.preparation", "qualname": "CategoricalEncoder.target_column", "kind": "variable", "doc": "<p></p>\n"}, "ifri_mini_ml_lib.preprocessing.preparation.CategoricalEncoder.mapping": {"fullname": "ifri_mini_ml_lib.preprocessing.preparation.CategoricalEncoder.mapping", "modulename": "ifri_mini_ml_lib.preprocessing.preparation", "qualname": "CategoricalEncoder.mapping", "kind": "variable", "doc": "<p></p>\n"}, "ifri_mini_ml_lib.preprocessing.preparation.CategoricalEncoder.fit": {"fullname": "ifri_mini_ml_lib.preprocessing.preparation.CategoricalEncoder.fit", "modulename": "ifri_mini_ml_lib.preprocessing.preparation", "qualname": "CategoricalEncoder.fit", "kind": "function", "doc": "<p>Learn the encoding mappings from the data.</p>\n\n<p>Description:\n    Computes and stores the necessary encoding information based on the training data.</p>\n\n<p>Args:\n    X (pd.DataFrame): Input data containing categorical features to encode\n    y (pd.Series, optional): Target variable (required for target encoding)</p>\n\n<p>Raises:\n    ValueError: If target encoding is selected but no target variable is provided</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">X</span>, </span><span class=\"param\"><span class=\"n\">y</span><span class=\"o\">=</span><span class=\"kc\">None</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "ifri_mini_ml_lib.preprocessing.preparation.CategoricalEncoder.transform": {"fullname": "ifri_mini_ml_lib.preprocessing.preparation.CategoricalEncoder.transform", "modulename": "ifri_mini_ml_lib.preprocessing.preparation", "qualname": "CategoricalEncoder.transform", "kind": "function", "doc": "<p>Apply the encoding to new data using the learned mappings.</p>\n\n<p>Description:\n    Transforms the input data by applying the encoding learned during fit().</p>\n\n<p>Args:\n    X (pd.DataFrame): Data to be encoded</p>\n\n<p>Returns:\n    pd.DataFrame: Transformed data with categorical features encoded according to the specified method</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">X</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "ifri_mini_ml_lib.preprocessing.preparation.CategoricalEncoder.fit_transform": {"fullname": "ifri_mini_ml_lib.preprocessing.preparation.CategoricalEncoder.fit_transform", "modulename": "ifri_mini_ml_lib.preprocessing.preparation", "qualname": "CategoricalEncoder.fit_transform", "kind": "function", "doc": "<p>Learn the encoding and apply it to the training data in one step.</p>\n\n<p>Description:\n    Convenience method that combines fit() and transform() operations.</p>\n\n<p>Args:\n    X (pd.DataFrame): Training data to fit and transform\n    y (pd.Series, optional): Target variable (required for target encoding)</p>\n\n<p>Returns:\n    pd.DataFrame: Transformed data with categorical features encoded</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">X</span>, </span><span class=\"param\"><span class=\"n\">y</span><span class=\"o\">=</span><span class=\"kc\">None</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "ifri_mini_ml_lib.preprocessing.preparation.DataSplitter": {"fullname": "ifri_mini_ml_lib.preprocessing.preparation.DataSplitter", "modulename": "ifri_mini_ml_lib.preprocessing.preparation", "qualname": "DataSplitter", "kind": "class", "doc": "<p></p>\n"}, "ifri_mini_ml_lib.preprocessing.preparation.DataSplitter.__init__": {"fullname": "ifri_mini_ml_lib.preprocessing.preparation.DataSplitter.__init__", "modulename": "ifri_mini_ml_lib.preprocessing.preparation", "qualname": "DataSplitter.__init__", "kind": "function", "doc": "<p>Initialize the DataSplitter with an optional random seed.</p>\n\n<p>Args:\n    seed (int, optional): Random seed for reproducible splits. Defaults to None.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">seed</span><span class=\"o\">=</span><span class=\"kc\">None</span></span>)</span>"}, "ifri_mini_ml_lib.preprocessing.preparation.DataSplitter.seed": {"fullname": "ifri_mini_ml_lib.preprocessing.preparation.DataSplitter.seed", "modulename": "ifri_mini_ml_lib.preprocessing.preparation", "qualname": "DataSplitter.seed", "kind": "variable", "doc": "<p></p>\n"}, "ifri_mini_ml_lib.preprocessing.preparation.DataSplitter.train_test_split": {"fullname": "ifri_mini_ml_lib.preprocessing.preparation.DataSplitter.train_test_split", "modulename": "ifri_mini_ml_lib.preprocessing.preparation", "qualname": "DataSplitter.train_test_split", "kind": "function", "doc": "<p>Split data randomly into train and test sets, with optional validation set.</p>\n\n<p>Args:\n    X (pd.DataFrame): Feature data\n    y (pd.Series, optional): Target data. Defaults to None.\n    test_size (float, optional): Proportion of dataset to include in test split. Defaults to 0.2.\n    val_set (bool, optional): Whether to create validation set. Defaults to False.\n    val_size (float, optional): Proportion of train set to include in validation split. Defaults to 0.2.</p>\n\n<p>Returns:\n    If y is None:\n        X_train, X_test or X_train, X_val, X_test if val_set=True\n    If y is provided:\n        X_train, X_test, y_train, y_test or \n        X_train, X_val, X_test, y_train, y_val, y_test if val_set=True</p>\n\n<p>Example:</p>\n\n<blockquote>\n  <blockquote>\n    <blockquote>\n      <p>splitter = DataSplitter(seed=42)\n      X_train, X_test = splitter.train_test_split(X)\n      X_train, X_val, X_test, y_train, y_val, y_test = splitter.train_test_split(\n          ...     X, y, test_size=0.3, val_set=True, val_size=0.1)</p>\n    </blockquote>\n  </blockquote>\n</blockquote>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">X</span>, </span><span class=\"param\"><span class=\"n\">y</span><span class=\"o\">=</span><span class=\"kc\">None</span>, </span><span class=\"param\"><span class=\"n\">test_size</span><span class=\"o\">=</span><span class=\"mf\">0.2</span>, </span><span class=\"param\"><span class=\"n\">val_set</span><span class=\"o\">=</span><span class=\"kc\">False</span>, </span><span class=\"param\"><span class=\"n\">val_size</span><span class=\"o\">=</span><span class=\"mf\">0.2</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "ifri_mini_ml_lib.preprocessing.preparation.DataSplitter.stratified_train_test_split": {"fullname": "ifri_mini_ml_lib.preprocessing.preparation.DataSplitter.stratified_train_test_split", "modulename": "ifri_mini_ml_lib.preprocessing.preparation", "qualname": "DataSplitter.stratified_train_test_split", "kind": "function", "doc": "<p>Split data into train and test sets preserving class distribution, with optional validation set.</p>\n\n<p>Args:\n    X (pd.DataFrame): Feature data\n    y (pd.Series): Target data (required for stratified split)\n    test_size (float, optional): Proportion of dataset to include in test split. Defaults to 0.2.\n    val_set (bool, optional): Whether to create validation set. Defaults to False.\n    val_size (float, optional): Proportion of train set to include in validation split. Defaults to 0.2.</p>\n\n<p>Returns:\n    If val_set=False:\n        X_train, X_test, y_train, y_test\n    If val_set=True:\n        X_train, X_val, X_test, y_train, y_val, y_test</p>\n\n<p>Example:</p>\n\n<blockquote>\n  <blockquote>\n    <blockquote>\n      <p>splitter = DataSplitter(seed=42)\n      X_train, X_test, y_train, y_test = splitter.stratified_train_test_split(X, y)\n      X_train, X_val, X_test, y_train, y_val, y_test = splitter.stratified_train_test_split(\n          ...     X, y, val_set=True, val_size=0.1)</p>\n    </blockquote>\n  </blockquote>\n</blockquote>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">X</span>, </span><span class=\"param\"><span class=\"n\">y</span>, </span><span class=\"param\"><span class=\"n\">test_size</span><span class=\"o\">=</span><span class=\"mf\">0.2</span>, </span><span class=\"param\"><span class=\"n\">val_set</span><span class=\"o\">=</span><span class=\"kc\">False</span>, </span><span class=\"param\"><span class=\"n\">val_size</span><span class=\"o\">=</span><span class=\"mf\">0.2</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "ifri_mini_ml_lib.preprocessing.preparation.DataSplitter.temporal_train_test_split": {"fullname": "ifri_mini_ml_lib.preprocessing.preparation.DataSplitter.temporal_train_test_split", "modulename": "ifri_mini_ml_lib.preprocessing.preparation", "qualname": "DataSplitter.temporal_train_test_split", "kind": "function", "doc": "<p>Split time series data into train and test sets (and optionally validation),\npreserving temporal order.</p>\n\n<p>Args:\n    X (pd.DataFrame): Feature data (time-ordered)\n    y (pd.Series, optional): Target data (time-ordered)\n    test_size (float, optional): Proportion of dataset to include in test split. Defaults to 0.2.\n    val_set (bool, optional): Whether to create validation set. Defaults to False.\n    val_size (float, optional): Proportion of train set to include in validation split. Defaults to 0.2.</p>\n\n<p>Returns:\n    If y is None:\n        X_train, X_test or X_train, X_val, X_test if val_set=True\n    If y is provided:\n        X_train, X_test, y_train, y_test or \n        X_train, X_val, X_test, y_train, y_val, y_test if val_set=True</p>\n\n<p>Example:</p>\n\n<blockquote>\n  <blockquote>\n    <blockquote>\n      <p>splitter = DataSplitter()\n      X_train, X_test = splitter.temporal_train_test_split(X)\n      X_train, X_val, X_test, y_train, y_val, y_test = splitter.temporal_train_test_split(\n          ...     X, y, val_set=True)</p>\n    </blockquote>\n  </blockquote>\n</blockquote>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">X</span>, </span><span class=\"param\"><span class=\"n\">y</span><span class=\"o\">=</span><span class=\"kc\">None</span>, </span><span class=\"param\"><span class=\"n\">test_size</span><span class=\"o\">=</span><span class=\"mf\">0.2</span>, </span><span class=\"param\"><span class=\"n\">val_set</span><span class=\"o\">=</span><span class=\"kc\">False</span>, </span><span class=\"param\"><span class=\"n\">val_size</span><span class=\"o\">=</span><span class=\"mf\">0.2</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "ifri_mini_ml_lib.preprocessing.preparation.DataSplitter.k_fold_split": {"fullname": "ifri_mini_ml_lib.preprocessing.preparation.DataSplitter.k_fold_split", "modulename": "ifri_mini_ml_lib.preprocessing.preparation", "qualname": "DataSplitter.k_fold_split", "kind": "function", "doc": "<p>Generate k folds for cross-validation.</p>\n\n<p>Args:\n    X (pd.DataFrame): Feature data\n    y (pd.Series, optional): Target data. Defaults to None.\n    k (int, optional): Number of folds. Defaults to 5.</p>\n\n<p>Returns:\n    list: List of tuples containing train-test splits. Each tuple contains:\n        If y is None: (X_train, X_test)\n        If y is provided: (X_train, X_test, y_train, y_test)</p>\n\n<p>Example:</p>\n\n<blockquote>\n  <blockquote>\n    <blockquote>\n      <p>splitter = DataSplitter(seed=42)\n      folds = splitter.k_fold_split(X, y, k=5)\n      for X_train, X_test, y_train, y_test in folds:\n          ...     # Train and evaluate model</p>\n    </blockquote>\n  </blockquote>\n</blockquote>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">X</span>, </span><span class=\"param\"><span class=\"n\">y</span><span class=\"o\">=</span><span class=\"kc\">None</span>, </span><span class=\"param\"><span class=\"n\">k</span><span class=\"o\">=</span><span class=\"mi\">5</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "ifri_mini_ml_lib.regression": {"fullname": "ifri_mini_ml_lib.regression", "modulename": "ifri_mini_ml_lib.regression", "kind": "module", "doc": "<p></p>\n"}, "ifri_mini_ml_lib.regression.LinearRegression": {"fullname": "ifri_mini_ml_lib.regression.LinearRegression", "modulename": "ifri_mini_ml_lib.regression", "qualname": "LinearRegression", "kind": "class", "doc": "<p>Linear regression implementation.</p>\n\n<p>Args:\n    method (str): Optimization method ('least_squares' or 'gradient_descent').\n    learning_rate (float): Learning rate for gradient descent (default: 0.01).\n    epochs (int): Number of iterations for gradient descent (default: 1000).</p>\n"}, "ifri_mini_ml_lib.regression.LinearRegression.__init__": {"fullname": "ifri_mini_ml_lib.regression.LinearRegression.__init__", "modulename": "ifri_mini_ml_lib.regression", "qualname": "LinearRegression.__init__", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"n\">method</span><span class=\"p\">:</span> <span class=\"nb\">str</span> <span class=\"o\">=</span> <span class=\"s1\">&#39;least_squares&#39;</span>,</span><span class=\"param\">\t<span class=\"n\">learning_rate</span><span class=\"p\">:</span> <span class=\"nb\">float</span> <span class=\"o\">=</span> <span class=\"mf\">0.01</span>,</span><span class=\"param\">\t<span class=\"n\">epochs</span><span class=\"p\">:</span> <span class=\"nb\">int</span> <span class=\"o\">=</span> <span class=\"mi\">1000</span></span>)</span>"}, "ifri_mini_ml_lib.regression.LinearRegression.method": {"fullname": "ifri_mini_ml_lib.regression.LinearRegression.method", "modulename": "ifri_mini_ml_lib.regression", "qualname": "LinearRegression.method", "kind": "variable", "doc": "<p></p>\n"}, "ifri_mini_ml_lib.regression.LinearRegression.learning_rate": {"fullname": "ifri_mini_ml_lib.regression.LinearRegression.learning_rate", "modulename": "ifri_mini_ml_lib.regression", "qualname": "LinearRegression.learning_rate", "kind": "variable", "doc": "<p></p>\n"}, "ifri_mini_ml_lib.regression.LinearRegression.epochs": {"fullname": "ifri_mini_ml_lib.regression.LinearRegression.epochs", "modulename": "ifri_mini_ml_lib.regression", "qualname": "LinearRegression.epochs", "kind": "variable", "doc": "<p></p>\n"}, "ifri_mini_ml_lib.regression.LinearRegression.w": {"fullname": "ifri_mini_ml_lib.regression.LinearRegression.w", "modulename": "ifri_mini_ml_lib.regression", "qualname": "LinearRegression.w", "kind": "variable", "doc": "<p></p>\n"}, "ifri_mini_ml_lib.regression.LinearRegression.b": {"fullname": "ifri_mini_ml_lib.regression.LinearRegression.b", "modulename": "ifri_mini_ml_lib.regression", "qualname": "LinearRegression.b", "kind": "variable", "doc": "<p></p>\n"}, "ifri_mini_ml_lib.regression.LinearRegression.fit": {"fullname": "ifri_mini_ml_lib.regression.LinearRegression.fit", "modulename": "ifri_mini_ml_lib.regression", "qualname": "LinearRegression.fit", "kind": "function", "doc": "<p>Train the linear regression model.</p>\n\n<p>Args:\n    X (np.ndarray): Training data (shape: [n_samples, n_features]).\n    y (np.ndarray): Target values (shape: [n_samples]).</p>\n\n<p>Example:</p>\n\n<blockquote>\n  <blockquote>\n    <blockquote>\n      <p>model = LinearRegression(method=\"least_squares\")\n      model.fit([[1], [2], [3]], [2, 4, 6])</p>\n    </blockquote>\n  </blockquote>\n</blockquote>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"bp\">self</span>,</span><span class=\"param\">\t<span class=\"n\">X</span><span class=\"p\">:</span> <span class=\"n\">Union</span><span class=\"p\">[</span><span class=\"n\">List</span><span class=\"p\">,</span> <span class=\"n\">numpy</span><span class=\"o\">.</span><span class=\"n\">ndarray</span><span class=\"p\">]</span>,</span><span class=\"param\">\t<span class=\"n\">y</span><span class=\"p\">:</span> <span class=\"n\">Union</span><span class=\"p\">[</span><span class=\"n\">List</span><span class=\"p\">,</span> <span class=\"n\">numpy</span><span class=\"o\">.</span><span class=\"n\">ndarray</span><span class=\"p\">]</span></span><span class=\"return-annotation\">) -> <span class=\"n\">ifri_mini_ml_lib</span><span class=\"o\">.</span><span class=\"n\">regression</span><span class=\"o\">.</span><span class=\"n\">linear</span><span class=\"o\">.</span><span class=\"n\">LinearRegression</span>:</span></span>", "funcdef": "def"}, "ifri_mini_ml_lib.regression.LinearRegression.predict": {"fullname": "ifri_mini_ml_lib.regression.LinearRegression.predict", "modulename": "ifri_mini_ml_lib.regression", "qualname": "LinearRegression.predict", "kind": "function", "doc": "<p>Generate predictions.</p>\n\n<p>Args:\n    X (np.ndarray): Input data (shape: [n_samples, n_features]).</p>\n\n<p>Returns:\n    list: Predicted values (shape: [n_samples]).</p>\n\n<p>Example:</p>\n\n<blockquote>\n  <blockquote>\n    <blockquote>\n      <p>model.predict([[4]])\n          [8.0]</p>\n    </blockquote>\n  </blockquote>\n</blockquote>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">X</span><span class=\"p\">:</span> <span class=\"n\">Union</span><span class=\"p\">[</span><span class=\"n\">List</span><span class=\"p\">,</span> <span class=\"n\">numpy</span><span class=\"o\">.</span><span class=\"n\">ndarray</span><span class=\"p\">]</span></span><span class=\"return-annotation\">) -> <span class=\"n\">List</span><span class=\"p\">[</span><span class=\"nb\">float</span><span class=\"p\">]</span>:</span></span>", "funcdef": "def"}, "ifri_mini_ml_lib.regression.PolynomialRegression": {"fullname": "ifri_mini_ml_lib.regression.PolynomialRegression", "modulename": "ifri_mini_ml_lib.regression", "qualname": "PolynomialRegression", "kind": "class", "doc": "<p>Polynomial regression implementation.</p>\n\n<p>Args:\n    degree (int): Polynomial degree (default: 2).\n    method (str): Optimization method ('least_squares' or 'gradient_descent').\n    learning_rate (float): Learning rate for gradient descent (default: 0.01).\n    epochs (int): Number of iterations for gradient descent (default: 1000).</p>\n"}, "ifri_mini_ml_lib.regression.PolynomialRegression.__init__": {"fullname": "ifri_mini_ml_lib.regression.PolynomialRegression.__init__", "modulename": "ifri_mini_ml_lib.regression", "qualname": "PolynomialRegression.__init__", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"n\">df</span><span class=\"o\">=</span><span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">degree</span><span class=\"p\">:</span> <span class=\"nb\">int</span> <span class=\"o\">=</span> <span class=\"mi\">2</span>,</span><span class=\"param\">\t<span class=\"n\">method</span><span class=\"p\">:</span> <span class=\"nb\">str</span> <span class=\"o\">=</span> <span class=\"s1\">&#39;least_squares&#39;</span>,</span><span class=\"param\">\t<span class=\"n\">learning_rate</span><span class=\"p\">:</span> <span class=\"nb\">float</span> <span class=\"o\">=</span> <span class=\"mf\">0.01</span>,</span><span class=\"param\">\t<span class=\"n\">epochs</span><span class=\"p\">:</span> <span class=\"nb\">int</span> <span class=\"o\">=</span> <span class=\"mi\">1000</span></span>)</span>"}, "ifri_mini_ml_lib.regression.PolynomialRegression.degree": {"fullname": "ifri_mini_ml_lib.regression.PolynomialRegression.degree", "modulename": "ifri_mini_ml_lib.regression", "qualname": "PolynomialRegression.degree", "kind": "variable", "doc": "<p></p>\n"}, "ifri_mini_ml_lib.regression.PolynomialRegression.method": {"fullname": "ifri_mini_ml_lib.regression.PolynomialRegression.method", "modulename": "ifri_mini_ml_lib.regression", "qualname": "PolynomialRegression.method", "kind": "variable", "doc": "<p></p>\n"}, "ifri_mini_ml_lib.regression.PolynomialRegression.learning_rate": {"fullname": "ifri_mini_ml_lib.regression.PolynomialRegression.learning_rate", "modulename": "ifri_mini_ml_lib.regression", "qualname": "PolynomialRegression.learning_rate", "kind": "variable", "doc": "<p></p>\n"}, "ifri_mini_ml_lib.regression.PolynomialRegression.epochs": {"fullname": "ifri_mini_ml_lib.regression.PolynomialRegression.epochs", "modulename": "ifri_mini_ml_lib.regression", "qualname": "PolynomialRegression.epochs", "kind": "variable", "doc": "<p></p>\n"}, "ifri_mini_ml_lib.regression.PolynomialRegression.w": {"fullname": "ifri_mini_ml_lib.regression.PolynomialRegression.w", "modulename": "ifri_mini_ml_lib.regression", "qualname": "PolynomialRegression.w", "kind": "variable", "doc": "<p></p>\n"}, "ifri_mini_ml_lib.regression.PolynomialRegression.b": {"fullname": "ifri_mini_ml_lib.regression.PolynomialRegression.b", "modulename": "ifri_mini_ml_lib.regression", "qualname": "PolynomialRegression.b", "kind": "variable", "doc": "<p></p>\n"}, "ifri_mini_ml_lib.regression.PolynomialRegression.fit": {"fullname": "ifri_mini_ml_lib.regression.PolynomialRegression.fit", "modulename": "ifri_mini_ml_lib.regression", "qualname": "PolynomialRegression.fit", "kind": "function", "doc": "<p>Train the polynomial regression model.</p>\n\n<p>Args:\n    X (np.ndarray): Training data (shape: [n_samples, n_features]).\n    y (np.ndarray): Target values (shape: [n_samples]).</p>\n\n<p>Example:</p>\n\n<blockquote>\n  <blockquote>\n    <blockquote>\n      <p>model = PolynomialRegression(degree=2)\n      model.fit([[1], [2], [3]], [1, 4, 9])</p>\n    </blockquote>\n  </blockquote>\n</blockquote>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"bp\">self</span>,</span><span class=\"param\">\t<span class=\"n\">X</span><span class=\"p\">:</span> <span class=\"n\">Union</span><span class=\"p\">[</span><span class=\"n\">List</span><span class=\"p\">,</span> <span class=\"n\">numpy</span><span class=\"o\">.</span><span class=\"n\">ndarray</span><span class=\"p\">]</span>,</span><span class=\"param\">\t<span class=\"n\">y</span><span class=\"p\">:</span> <span class=\"n\">Union</span><span class=\"p\">[</span><span class=\"n\">List</span><span class=\"p\">,</span> <span class=\"n\">numpy</span><span class=\"o\">.</span><span class=\"n\">ndarray</span><span class=\"p\">]</span></span><span class=\"return-annotation\">) -> <span class=\"n\">ifri_mini_ml_lib</span><span class=\"o\">.</span><span class=\"n\">regression</span><span class=\"o\">.</span><span class=\"n\">polynomial</span><span class=\"o\">.</span><span class=\"n\">PolynomialRegression</span>:</span></span>", "funcdef": "def"}, "ifri_mini_ml_lib.regression.PolynomialRegression.predict": {"fullname": "ifri_mini_ml_lib.regression.PolynomialRegression.predict", "modulename": "ifri_mini_ml_lib.regression", "qualname": "PolynomialRegression.predict", "kind": "function", "doc": "<p>Generate polynomial predictions.</p>\n\n<p>Args:\n    X (np.ndarray): Input data (shape: [n_samples, n_features]).</p>\n\n<p>Returns:\n    list: Predicted values (shape: [n_samples]).</p>\n\n<p>Example:</p>\n\n<blockquote>\n  <blockquote>\n    <blockquote>\n      <p>model.predict([[4]])\n          [16.0]</p>\n    </blockquote>\n  </blockquote>\n</blockquote>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">X</span><span class=\"p\">:</span> <span class=\"n\">Union</span><span class=\"p\">[</span><span class=\"n\">List</span><span class=\"p\">,</span> <span class=\"n\">numpy</span><span class=\"o\">.</span><span class=\"n\">ndarray</span><span class=\"p\">]</span></span><span class=\"return-annotation\">) -> <span class=\"n\">List</span><span class=\"p\">[</span><span class=\"nb\">float</span><span class=\"p\">]</span>:</span></span>", "funcdef": "def"}, "ifri_mini_ml_lib.regression.SVR": {"fullname": "ifri_mini_ml_lib.regression.SVR", "modulename": "ifri_mini_ml_lib.regression", "qualname": "SVR", "kind": "class", "doc": "<p>Support Vector Regression (SVR) using various kernels and convex optimization.</p>\n\n<p>Args:\n    C_reg (float): Regularization parameter.\n    epsilon (float): Epsilon-tube within which no penalty is associated in the training loss function.\n    kernel (str): Kernel type - one of \"lin\", \"poly\", \"rbf\", \"sig\".\n    c (float): Constant used in polynomial and sigmoid kernels. Default is 1.\n    d (int): Degree of the polynomial kernel. Default is 3.\n    gamma (float): Gamma parameter for RBF and sigmoid kernels. Default is 1.\n    alpha (float): Scaling factor for the sigmoid kernel. Default is 0.01.\n    test_size (float): Proportion of the dataset to include in the test split. Default is 0.2.</p>\n\n<p>Example:\n    model = SVR(C_reg=1.0, epsilon=0.1, kernel='rbf')</p>\n"}, "ifri_mini_ml_lib.regression.SVR.__init__": {"fullname": "ifri_mini_ml_lib.regression.SVR.__init__", "modulename": "ifri_mini_ml_lib.regression", "qualname": "SVR.__init__", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"n\">C_reg</span><span class=\"p\">:</span> <span class=\"nb\">float</span>,</span><span class=\"param\">\t<span class=\"n\">epsilon</span><span class=\"p\">:</span> <span class=\"nb\">float</span>,</span><span class=\"param\">\t<span class=\"n\">kernel</span><span class=\"p\">:</span> <span class=\"nb\">str</span>,</span><span class=\"param\">\t<span class=\"n\">c</span><span class=\"p\">:</span> <span class=\"nb\">int</span> <span class=\"o\">=</span> <span class=\"mi\">1</span>,</span><span class=\"param\">\t<span class=\"n\">d</span><span class=\"p\">:</span> <span class=\"nb\">int</span> <span class=\"o\">=</span> <span class=\"mi\">3</span>,</span><span class=\"param\">\t<span class=\"n\">gamma</span><span class=\"p\">:</span> <span class=\"nb\">float</span> <span class=\"o\">=</span> <span class=\"mi\">1</span>,</span><span class=\"param\">\t<span class=\"n\">alpha</span><span class=\"p\">:</span> <span class=\"nb\">float</span> <span class=\"o\">=</span> <span class=\"mf\">0.01</span>,</span><span class=\"param\">\t<span class=\"n\">test_size</span><span class=\"p\">:</span> <span class=\"nb\">float</span> <span class=\"o\">=</span> <span class=\"mf\">0.2</span></span>)</span>"}, "ifri_mini_ml_lib.regression.SVR.kerlist": {"fullname": "ifri_mini_ml_lib.regression.SVR.kerlist", "modulename": "ifri_mini_ml_lib.regression", "qualname": "SVR.kerlist", "kind": "variable", "doc": "<p></p>\n", "default_value": "[&#x27;lin&#x27;, &#x27;poly&#x27;, &#x27;rbf&#x27;, &#x27;sig&#x27;]"}, "ifri_mini_ml_lib.regression.SVR.eps": {"fullname": "ifri_mini_ml_lib.regression.SVR.eps", "modulename": "ifri_mini_ml_lib.regression", "qualname": "SVR.eps", "kind": "variable", "doc": "<p></p>\n"}, "ifri_mini_ml_lib.regression.SVR.train_X": {"fullname": "ifri_mini_ml_lib.regression.SVR.train_X", "modulename": "ifri_mini_ml_lib.regression", "qualname": "SVR.train_X", "kind": "variable", "doc": "<p></p>\n"}, "ifri_mini_ml_lib.regression.SVR.train_y": {"fullname": "ifri_mini_ml_lib.regression.SVR.train_y", "modulename": "ifri_mini_ml_lib.regression", "qualname": "SVR.train_y", "kind": "variable", "doc": "<p></p>\n"}, "ifri_mini_ml_lib.regression.SVR.test_X": {"fullname": "ifri_mini_ml_lib.regression.SVR.test_X", "modulename": "ifri_mini_ml_lib.regression", "qualname": "SVR.test_X", "kind": "variable", "doc": "<p></p>\n"}, "ifri_mini_ml_lib.regression.SVR.test_y": {"fullname": "ifri_mini_ml_lib.regression.SVR.test_y", "modulename": "ifri_mini_ml_lib.regression", "qualname": "SVR.test_y", "kind": "variable", "doc": "<p></p>\n"}, "ifri_mini_ml_lib.regression.SVR.ker": {"fullname": "ifri_mini_ml_lib.regression.SVR.ker", "modulename": "ifri_mini_ml_lib.regression", "qualname": "SVR.ker", "kind": "variable", "doc": "<p>Kernel getter.</p>\n\n<p>Returns:\n    str: Current kernel.</p>\n"}, "ifri_mini_ml_lib.regression.SVR.linear_kernel": {"fullname": "ifri_mini_ml_lib.regression.SVR.linear_kernel", "modulename": "ifri_mini_ml_lib.regression", "qualname": "SVR.linear_kernel", "kind": "function", "doc": "<p>Computes the linear kernel.</p>\n\n<p>Args:\n    X (ndarray): First input matrix.\n    Y (ndarray, optional): Second input matrix.</p>\n\n<p>Returns:\n    ndarray: Kernel matrix.</p>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"bp\">self</span>,</span><span class=\"param\">\t<span class=\"n\">X</span><span class=\"p\">:</span> <span class=\"n\">numpy</span><span class=\"o\">.</span><span class=\"n\">ndarray</span>,</span><span class=\"param\">\t<span class=\"n\">Y</span><span class=\"p\">:</span> <span class=\"n\">Optional</span><span class=\"p\">[</span><span class=\"n\">numpy</span><span class=\"o\">.</span><span class=\"n\">ndarray</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"kc\">None</span></span><span class=\"return-annotation\">) -> <span class=\"n\">numpy</span><span class=\"o\">.</span><span class=\"n\">ndarray</span>:</span></span>", "funcdef": "def"}, "ifri_mini_ml_lib.regression.SVR.polynomial_kernel": {"fullname": "ifri_mini_ml_lib.regression.SVR.polynomial_kernel", "modulename": "ifri_mini_ml_lib.regression", "qualname": "SVR.polynomial_kernel", "kind": "function", "doc": "<p>Computes the polynomial kernel.</p>\n\n<p>Args:\n    X (ndarray): First input matrix.\n    Y (ndarray, optional): Second input matrix.</p>\n\n<p>Returns:\n    ndarray: Kernel matrix.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">X</span>, </span><span class=\"param\"><span class=\"n\">Y</span><span class=\"o\">=</span><span class=\"kc\">None</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "ifri_mini_ml_lib.regression.SVR.rbf_kernel": {"fullname": "ifri_mini_ml_lib.regression.SVR.rbf_kernel", "modulename": "ifri_mini_ml_lib.regression", "qualname": "SVR.rbf_kernel", "kind": "function", "doc": "<p>Computes the Radial Basis Function (RBF) kernel.</p>\n\n<p>Args:\n    X (ndarray): First input matrix.\n    Y (ndarray, optional): Second input matrix.</p>\n\n<p>Returns:\n    ndarray: Kernel matrix.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">X</span>, </span><span class=\"param\"><span class=\"n\">Y</span><span class=\"o\">=</span><span class=\"kc\">None</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "ifri_mini_ml_lib.regression.SVR.sigmoid_kernel": {"fullname": "ifri_mini_ml_lib.regression.SVR.sigmoid_kernel", "modulename": "ifri_mini_ml_lib.regression", "qualname": "SVR.sigmoid_kernel", "kind": "function", "doc": "<p>Computes the sigmoid kernel.</p>\n\n<p>Args:\n    X (ndarray): First input matrix.\n    Y (ndarray, optional): Second input matrix.</p>\n\n<p>Returns:\n    ndarray: Kernel matrix.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">X</span>, </span><span class=\"param\"><span class=\"n\">Y</span><span class=\"o\">=</span><span class=\"kc\">None</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "ifri_mini_ml_lib.regression.SVR.get_kernel": {"fullname": "ifri_mini_ml_lib.regression.SVR.get_kernel", "modulename": "ifri_mini_ml_lib.regression", "qualname": "SVR.get_kernel", "kind": "function", "doc": "<p>Returns the kernel function based on current settings.</p>\n\n<p>Returns:\n    function: Kernel computation function.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span></span><span class=\"return-annotation\">) -> <span class=\"n\">Optional</span><span class=\"p\">[</span><span class=\"n\">Callable</span><span class=\"p\">]</span>:</span></span>", "funcdef": "def"}, "ifri_mini_ml_lib.regression.SVR.fit": {"fullname": "ifri_mini_ml_lib.regression.SVR.fit", "modulename": "ifri_mini_ml_lib.regression", "qualname": "SVR.fit", "kind": "function", "doc": "<p>Trains the SVR model using convex optimization.</p>\n\n<p>Args:\n    X (ndarray): Training features.\n    Y (ndarray): Training targets.</p>\n\n<p>Returns:\n    None</p>\n\n<p>Example:\n    model.fit(X_train, y_train)</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">X</span><span class=\"p\">:</span> <span class=\"n\">numpy</span><span class=\"o\">.</span><span class=\"n\">ndarray</span>, </span><span class=\"param\"><span class=\"n\">Y</span><span class=\"p\">:</span> <span class=\"n\">numpy</span><span class=\"o\">.</span><span class=\"n\">ndarray</span></span><span class=\"return-annotation\">) -> <span class=\"kc\">None</span>:</span></span>", "funcdef": "def"}, "ifri_mini_ml_lib.regression.SVR.predict": {"fullname": "ifri_mini_ml_lib.regression.SVR.predict", "modulename": "ifri_mini_ml_lib.regression", "qualname": "SVR.predict", "kind": "function", "doc": "<p>Predicts target values for new data.</p>\n\n<p>Args:\n    X_test (ndarray or DataFrame): Test features.</p>\n\n<p>Returns:\n    ndarray: Predicted values.</p>\n\n<p>Example:\n    y_pred = model.predict(X_test)</p>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"bp\">self</span>,</span><span class=\"param\">\t<span class=\"n\">X_test</span><span class=\"p\">:</span> <span class=\"n\">Union</span><span class=\"p\">[</span><span class=\"n\">numpy</span><span class=\"o\">.</span><span class=\"n\">ndarray</span><span class=\"p\">,</span> <span class=\"n\">pandas</span><span class=\"o\">.</span><span class=\"n\">core</span><span class=\"o\">.</span><span class=\"n\">frame</span><span class=\"o\">.</span><span class=\"n\">DataFrame</span><span class=\"p\">]</span></span><span class=\"return-annotation\">) -> <span class=\"n\">numpy</span><span class=\"o\">.</span><span class=\"n\">ndarray</span>:</span></span>", "funcdef": "def"}, "ifri_mini_ml_lib.regression.SVR.set_params": {"fullname": "ifri_mini_ml_lib.regression.SVR.set_params", "modulename": "ifri_mini_ml_lib.regression", "qualname": "SVR.set_params", "kind": "function", "doc": "<p>Set multiple internal parameters dynamically.</p>\n\n<p>Args:\n    kwargs (dict): Dictionary of parameters to update.</p>\n\n<p>Returns:\n    None</p>\n\n<p>Example:\n    model.set_params(C_reg=2.0, gamma=0.5)</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"o\">**</span><span class=\"n\">kwargs</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}}, "docInfo": {"ifri_mini_ml_lib": {"qualname": 0, "fullname": 4, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 107}, "ifri_mini_ml_lib.association_rules": {"qualname": 0, "fullname": 6, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "ifri_mini_ml_lib.association_rules.Apriori": {"qualname": 1, "fullname": 7, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 760}, "ifri_mini_ml_lib.association_rules.Apriori.__init__": {"qualname": 3, "fullname": 9, "annotation": 0, "default_value": 0, "signature": 26, "bases": 0, "doc": 3}, "ifri_mini_ml_lib.association_rules.Apriori.min_support": {"qualname": 3, "fullname": 9, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "ifri_mini_ml_lib.association_rules.Apriori.min_confidence": {"qualname": 3, "fullname": 9, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "ifri_mini_ml_lib.association_rules.Apriori.frequent_itemsets_": {"qualname": 4, "fullname": 10, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "ifri_mini_ml_lib.association_rules.Apriori.rules_": {"qualname": 3, "fullname": 9, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "ifri_mini_ml_lib.association_rules.Apriori.fit": {"qualname": 2, "fullname": 8, "annotation": 0, "default_value": 0, "signature": 21, "bases": 0, "doc": 29}, "ifri_mini_ml_lib.association_rules.Apriori.get_frequent_itemsets": {"qualname": 4, "fullname": 10, "annotation": 0, "default_value": 0, "signature": 11, "bases": 0, "doc": 26}, "ifri_mini_ml_lib.association_rules.Apriori.get_rules": {"qualname": 3, "fullname": 9, "annotation": 0, "default_value": 0, "signature": 11, "bases": 0, "doc": 15}, "ifri_mini_ml_lib.association_rules.Eclat": {"qualname": 1, "fullname": 7, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 921}, "ifri_mini_ml_lib.association_rules.Eclat.__init__": {"qualname": 3, "fullname": 9, "annotation": 0, "default_value": 0, "signature": 26, "bases": 0, "doc": 3}, "ifri_mini_ml_lib.association_rules.Eclat.min_support": {"qualname": 3, "fullname": 9, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "ifri_mini_ml_lib.association_rules.Eclat.min_confidence": {"qualname": 3, "fullname": 9, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "ifri_mini_ml_lib.association_rules.Eclat.frequent_itemsets": {"qualname": 3, "fullname": 9, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "ifri_mini_ml_lib.association_rules.Eclat.frequent_TIDsets": {"qualname": 3, "fullname": 9, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "ifri_mini_ml_lib.association_rules.Eclat.rules_": {"qualname": 3, "fullname": 9, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "ifri_mini_ml_lib.association_rules.Eclat.n_transactions": {"qualname": 3, "fullname": 9, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "ifri_mini_ml_lib.association_rules.Eclat.fit": {"qualname": 2, "fullname": 8, "annotation": 0, "default_value": 0, "signature": 16, "bases": 0, "doc": 34}, "ifri_mini_ml_lib.association_rules.Eclat.get_single_items_TIDset": {"qualname": 5, "fullname": 11, "annotation": 0, "default_value": 0, "signature": 21, "bases": 0, "doc": 7}, "ifri_mini_ml_lib.association_rules.Eclat.get_frequent_itemsets": {"qualname": 4, "fullname": 10, "annotation": 0, "default_value": 0, "signature": 11, "bases": 0, "doc": 26}, "ifri_mini_ml_lib.association_rules.Eclat.get_rules": {"qualname": 3, "fullname": 9, "annotation": 0, "default_value": 0, "signature": 11, "bases": 0, "doc": 17}, "ifri_mini_ml_lib.association_rules.FPGrowth": {"qualname": 1, "fullname": 7, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 295}, "ifri_mini_ml_lib.association_rules.FPGrowth.__init__": {"qualname": 3, "fullname": 9, "annotation": 0, "default_value": 0, "signature": 26, "bases": 0, "doc": 3}, "ifri_mini_ml_lib.association_rules.FPGrowth.min_support": {"qualname": 3, "fullname": 9, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "ifri_mini_ml_lib.association_rules.FPGrowth.min_confidence": {"qualname": 3, "fullname": 9, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "ifri_mini_ml_lib.association_rules.FPGrowth.frequent_itemsets_dict": {"qualname": 4, "fullname": 10, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "ifri_mini_ml_lib.association_rules.FPGrowth.rules_": {"qualname": 3, "fullname": 9, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "ifri_mini_ml_lib.association_rules.FPGrowth.header_table": {"qualname": 3, "fullname": 9, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "ifri_mini_ml_lib.association_rules.FPGrowth.n_transactions": {"qualname": 3, "fullname": 9, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "ifri_mini_ml_lib.association_rules.FPGrowth.fit": {"qualname": 2, "fullname": 8, "annotation": 0, "default_value": 0, "signature": 16, "bases": 0, "doc": 36}, "ifri_mini_ml_lib.association_rules.FPGrowth.get_frequent_itemsets": {"qualname": 4, "fullname": 10, "annotation": 0, "default_value": 0, "signature": 11, "bases": 0, "doc": 19}, "ifri_mini_ml_lib.association_rules.FPGrowth.get_rules": {"qualname": 3, "fullname": 9, "annotation": 0, "default_value": 0, "signature": 11, "bases": 0, "doc": 15}, "ifri_mini_ml_lib.association_rules.DataAdapter": {"qualname": 1, "fullname": 7, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 1024}, "ifri_mini_ml_lib.association_rules.DataAdapter.convert_to_transactions": {"qualname": 4, "fullname": 10, "annotation": 0, "default_value": 0, "signature": 136, "bases": 0, "doc": 85}, "ifri_mini_ml_lib.association_rules.DataAdapter.load_csv_to_transactions": {"qualname": 5, "fullname": 11, "annotation": 0, "default_value": 0, "signature": 76, "bases": 0, "doc": 61}, "ifri_mini_ml_lib.classification": {"qualname": 0, "fullname": 5, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "ifri_mini_ml_lib.classification.DecisionTree": {"qualname": 1, "fullname": 6, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 117}, "ifri_mini_ml_lib.classification.DecisionTree.__init__": {"qualname": 3, "fullname": 8, "annotation": 0, "default_value": 0, "signature": 56, "bases": 0, "doc": 3}, "ifri_mini_ml_lib.classification.DecisionTree.max_depth": {"qualname": 3, "fullname": 8, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "ifri_mini_ml_lib.classification.DecisionTree.min_samples_split": {"qualname": 4, "fullname": 9, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "ifri_mini_ml_lib.classification.DecisionTree.min_samples_leaf": {"qualname": 4, "fullname": 9, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "ifri_mini_ml_lib.classification.DecisionTree.min_impurity_decrease": {"qualname": 4, "fullname": 9, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "ifri_mini_ml_lib.classification.DecisionTree.tree": {"qualname": 2, "fullname": 7, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "ifri_mini_ml_lib.classification.DecisionTree.fit": {"qualname": 2, "fullname": 7, "annotation": 0, "default_value": 0, "signature": 31, "bases": 0, "doc": 90}, "ifri_mini_ml_lib.classification.DecisionTree.predict": {"qualname": 2, "fullname": 7, "annotation": 0, "default_value": 0, "signature": 16, "bases": 0, "doc": 44}, "ifri_mini_ml_lib.classification.KNN": {"qualname": 1, "fullname": 6, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 156}, "ifri_mini_ml_lib.classification.KNN.__init__": {"qualname": 3, "fullname": 8, "annotation": 0, "default_value": 0, "signature": 28, "bases": 0, "doc": 28}, "ifri_mini_ml_lib.classification.KNN.k": {"qualname": 2, "fullname": 7, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "ifri_mini_ml_lib.classification.KNN.task": {"qualname": 2, "fullname": 7, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "ifri_mini_ml_lib.classification.KNN.fit": {"qualname": 2, "fullname": 7, "annotation": 0, "default_value": 0, "signature": 21, "bases": 0, "doc": 70}, "ifri_mini_ml_lib.classification.KNN.predict": {"qualname": 2, "fullname": 7, "annotation": 0, "default_value": 0, "signature": 16, "bases": 0, "doc": 69}, "ifri_mini_ml_lib.classification.LogisticRegression": {"qualname": 1, "fullname": 6, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 142}, "ifri_mini_ml_lib.classification.LogisticRegression.__init__": {"qualname": 3, "fullname": 8, "annotation": 0, "default_value": 0, "signature": 49, "bases": 0, "doc": 54}, "ifri_mini_ml_lib.classification.LogisticRegression.learning_rate": {"qualname": 3, "fullname": 8, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "ifri_mini_ml_lib.classification.LogisticRegression.momentum": {"qualname": 2, "fullname": 7, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "ifri_mini_ml_lib.classification.LogisticRegression.max_iter": {"qualname": 3, "fullname": 8, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "ifri_mini_ml_lib.classification.LogisticRegression.tol": {"qualname": 2, "fullname": 7, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "ifri_mini_ml_lib.classification.LogisticRegression.weights": {"qualname": 2, "fullname": 7, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "ifri_mini_ml_lib.classification.LogisticRegression.bias": {"qualname": 2, "fullname": 7, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "ifri_mini_ml_lib.classification.LogisticRegression.loss_history": {"qualname": 3, "fullname": 8, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "ifri_mini_ml_lib.classification.LogisticRegression.fit": {"qualname": 2, "fullname": 7, "annotation": 0, "default_value": 0, "signature": 21, "bases": 0, "doc": 93}, "ifri_mini_ml_lib.classification.LogisticRegression.predict_proba": {"qualname": 3, "fullname": 8, "annotation": 0, "default_value": 0, "signature": 16, "bases": 0, "doc": 39}, "ifri_mini_ml_lib.classification.LogisticRegression.predict": {"qualname": 2, "fullname": 7, "annotation": 0, "default_value": 0, "signature": 27, "bases": 0, "doc": 67}, "ifri_mini_ml_lib.clustering": {"qualname": 0, "fullname": 5, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "ifri_mini_ml_lib.clustering.KMeans": {"qualname": 1, "fullname": 6, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 300}, "ifri_mini_ml_lib.clustering.KMeans.__init__": {"qualname": 3, "fullname": 8, "annotation": 0, "default_value": 0, "signature": 67, "bases": 0, "doc": 137}, "ifri_mini_ml_lib.clustering.KMeans.n_clusters": {"qualname": 3, "fullname": 8, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "ifri_mini_ml_lib.clustering.KMeans.max_iter": {"qualname": 3, "fullname": 8, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "ifri_mini_ml_lib.clustering.KMeans.tol": {"qualname": 2, "fullname": 7, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "ifri_mini_ml_lib.clustering.KMeans.init": {"qualname": 2, "fullname": 7, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "ifri_mini_ml_lib.clustering.KMeans.random_state": {"qualname": 3, "fullname": 8, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "ifri_mini_ml_lib.clustering.KMeans.centroids": {"qualname": 2, "fullname": 7, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "ifri_mini_ml_lib.clustering.KMeans.labels": {"qualname": 2, "fullname": 7, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "ifri_mini_ml_lib.clustering.KMeans.fit": {"qualname": 2, "fullname": 7, "annotation": 0, "default_value": 0, "signature": 16, "bases": 0, "doc": 103}, "ifri_mini_ml_lib.clustering.KMeans.predict": {"qualname": 2, "fullname": 7, "annotation": 0, "default_value": 0, "signature": 16, "bases": 0, "doc": 79}, "ifri_mini_ml_lib.clustering.KMeans.fit_predict": {"qualname": 3, "fullname": 8, "annotation": 0, "default_value": 0, "signature": 16, "bases": 0, "doc": 62}, "ifri_mini_ml_lib.clustering.KMeans.plot_clusters": {"qualname": 3, "fullname": 8, "annotation": 0, "default_value": 0, "signature": 16, "bases": 0, "doc": 94}, "ifri_mini_ml_lib.clustering.DBSCAN": {"qualname": 1, "fullname": 6, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 207}, "ifri_mini_ml_lib.clustering.DBSCAN.__init__": {"qualname": 3, "fullname": 8, "annotation": 0, "default_value": 0, "signature": 26, "bases": 0, "doc": 92}, "ifri_mini_ml_lib.clustering.DBSCAN.eps": {"qualname": 2, "fullname": 7, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "ifri_mini_ml_lib.clustering.DBSCAN.min_samples": {"qualname": 3, "fullname": 8, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "ifri_mini_ml_lib.clustering.DBSCAN.labels": {"qualname": 2, "fullname": 7, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "ifri_mini_ml_lib.clustering.DBSCAN.fit_predict": {"qualname": 3, "fullname": 8, "annotation": 0, "default_value": 0, "signature": 16, "bases": 0, "doc": 70}, "ifri_mini_ml_lib.clustering.DBSCAN.plot_clusters": {"qualname": 3, "fullname": 8, "annotation": 0, "default_value": 0, "signature": 16, "bases": 0, "doc": 83}, "ifri_mini_ml_lib.clustering.HierarchicalClustering": {"qualname": 1, "fullname": 6, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 219}, "ifri_mini_ml_lib.clustering.HierarchicalClustering.__init__": {"qualname": 3, "fullname": 8, "annotation": 0, "default_value": 0, "signature": 43, "bases": 0, "doc": 58}, "ifri_mini_ml_lib.clustering.HierarchicalClustering.n_clusters": {"qualname": 3, "fullname": 8, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "ifri_mini_ml_lib.clustering.HierarchicalClustering.linkage": {"qualname": 2, "fullname": 7, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "ifri_mini_ml_lib.clustering.HierarchicalClustering.method": {"qualname": 2, "fullname": 7, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "ifri_mini_ml_lib.clustering.HierarchicalClustering.labels": {"qualname": 2, "fullname": 7, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "ifri_mini_ml_lib.clustering.HierarchicalClustering.linked_matrix": {"qualname": 3, "fullname": 8, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "ifri_mini_ml_lib.clustering.HierarchicalClustering.fit_predict": {"qualname": 3, "fullname": 8, "annotation": 0, "default_value": 0, "signature": 26, "bases": 0, "doc": 36}, "ifri_mini_ml_lib.clustering.HierarchicalClustering.plot_dendrogram": {"qualname": 3, "fullname": 8, "annotation": 0, "default_value": 0, "signature": 21, "bases": 0, "doc": 169}, "ifri_mini_ml_lib.clustering.HierarchicalClustering.plot_clusters": {"qualname": 3, "fullname": 8, "annotation": 0, "default_value": 0, "signature": 16, "bases": 0, "doc": 79}, "ifri_mini_ml_lib.metrics": {"qualname": 0, "fullname": 5, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "ifri_mini_ml_lib.metrics.bias_evaluation": {"qualname": 0, "fullname": 7, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "ifri_mini_ml_lib.metrics.bias_evaluation.selection_rate": {"qualname": 2, "fullname": 9, "annotation": 0, "default_value": 0, "signature": 104, "bases": 0, "doc": 97}, "ifri_mini_ml_lib.metrics.bias_evaluation.selection_rate_per_group": {"qualname": 4, "fullname": 11, "annotation": 0, "default_value": 0, "signature": 120, "bases": 0, "doc": 84}, "ifri_mini_ml_lib.metrics.bias_evaluation.demographic_parity_ratio": {"qualname": 3, "fullname": 10, "annotation": 0, "default_value": 0, "signature": 114, "bases": 0, "doc": 80}, "ifri_mini_ml_lib.metrics.bias_evaluation.demographic_parity_difference": {"qualname": 3, "fullname": 10, "annotation": 0, "default_value": 0, "signature": 114, "bases": 0, "doc": 61}, "ifri_mini_ml_lib.metrics.bias_evaluation.tpr_fpr_by_group": {"qualname": 4, "fullname": 11, "annotation": 0, "default_value": 0, "signature": 111, "bases": 0, "doc": 65}, "ifri_mini_ml_lib.metrics.bias_evaluation.equalized_odds_ratio": {"qualname": 3, "fullname": 10, "annotation": 0, "default_value": 0, "signature": 117, "bases": 0, "doc": 64}, "ifri_mini_ml_lib.metrics.bias_evaluation.equalized_odds_difference": {"qualname": 3, "fullname": 10, "annotation": 0, "default_value": 0, "signature": 117, "bases": 0, "doc": 60}, "ifri_mini_ml_lib.metrics.evaluation_metrics": {"qualname": 0, "fullname": 7, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "ifri_mini_ml_lib.metrics.evaluation_metrics.evaluate_model": {"qualname": 2, "fullname": 9, "annotation": 0, "default_value": 0, "signature": 18, "bases": 0, "doc": 9}, "ifri_mini_ml_lib.metrics.evaluation_metrics.confusion_matrix": {"qualname": 2, "fullname": 9, "annotation": 0, "default_value": 0, "signature": 28, "bases": 0, "doc": 74}, "ifri_mini_ml_lib.metrics.evaluation_metrics.accuracy": {"qualname": 1, "fullname": 8, "annotation": 0, "default_value": 0, "signature": 18, "bases": 0, "doc": 40}, "ifri_mini_ml_lib.metrics.evaluation_metrics.precision": {"qualname": 1, "fullname": 8, "annotation": 0, "default_value": 0, "signature": 29, "bases": 0, "doc": 65}, "ifri_mini_ml_lib.metrics.evaluation_metrics.recall": {"qualname": 1, "fullname": 8, "annotation": 0, "default_value": 0, "signature": 29, "bases": 0, "doc": 66}, "ifri_mini_ml_lib.metrics.evaluation_metrics.f1_score": {"qualname": 2, "fullname": 9, "annotation": 0, "default_value": 0, "signature": 29, "bases": 0, "doc": 69}, "ifri_mini_ml_lib.metrics.evaluation_metrics.calculate_inertia": {"qualname": 2, "fullname": 9, "annotation": 0, "default_value": 0, "signature": 21, "bases": 0, "doc": 118}, "ifri_mini_ml_lib.metrics.evaluation_metrics.calculate_silhouette": {"qualname": 2, "fullname": 9, "annotation": 0, "default_value": 0, "signature": 16, "bases": 0, "doc": 159}, "ifri_mini_ml_lib.model_selection": {"qualname": 0, "fullname": 6, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "ifri_mini_ml_lib.model_selection.BaggingClassifier": {"qualname": 1, "fullname": 7, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 198}, "ifri_mini_ml_lib.model_selection.BaggingClassifier.__init__": {"qualname": 3, "fullname": 9, "annotation": 0, "default_value": 0, "signature": 52, "bases": 0, "doc": 3}, "ifri_mini_ml_lib.model_selection.BaggingClassifier.base_model": {"qualname": 3, "fullname": 9, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "ifri_mini_ml_lib.model_selection.BaggingClassifier.n_estimators": {"qualname": 3, "fullname": 9, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "ifri_mini_ml_lib.model_selection.BaggingClassifier.random_state": {"qualname": 3, "fullname": 9, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "ifri_mini_ml_lib.model_selection.BaggingClassifier.models": {"qualname": 2, "fullname": 8, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "ifri_mini_ml_lib.model_selection.BaggingClassifier.pretrained": {"qualname": 2, "fullname": 8, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "ifri_mini_ml_lib.model_selection.BaggingClassifier.fit": {"qualname": 2, "fullname": 8, "annotation": 0, "default_value": 0, "signature": 21, "bases": 0, "doc": 72}, "ifri_mini_ml_lib.model_selection.BaggingClassifier.predict": {"qualname": 2, "fullname": 8, "annotation": 0, "default_value": 0, "signature": 16, "bases": 0, "doc": 69}, "ifri_mini_ml_lib.model_selection.BaggingRegressor": {"qualname": 1, "fullname": 7, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 199}, "ifri_mini_ml_lib.model_selection.BaggingRegressor.__init__": {"qualname": 3, "fullname": 9, "annotation": 0, "default_value": 0, "signature": 52, "bases": 0, "doc": 3}, "ifri_mini_ml_lib.model_selection.BaggingRegressor.base_model": {"qualname": 3, "fullname": 9, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "ifri_mini_ml_lib.model_selection.BaggingRegressor.n_estimators": {"qualname": 3, "fullname": 9, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "ifri_mini_ml_lib.model_selection.BaggingRegressor.random_state": {"qualname": 3, "fullname": 9, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "ifri_mini_ml_lib.model_selection.BaggingRegressor.models": {"qualname": 2, "fullname": 8, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "ifri_mini_ml_lib.model_selection.BaggingRegressor.pretrained": {"qualname": 2, "fullname": 8, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "ifri_mini_ml_lib.model_selection.BaggingRegressor.fit": {"qualname": 2, "fullname": 8, "annotation": 0, "default_value": 0, "signature": 21, "bases": 0, "doc": 72}, "ifri_mini_ml_lib.model_selection.BaggingRegressor.predict": {"qualname": 2, "fullname": 8, "annotation": 0, "default_value": 0, "signature": 16, "bases": 0, "doc": 69}, "ifri_mini_ml_lib.model_selection.BayesianSearchCV": {"qualname": 1, "fullname": 7, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 25}, "ifri_mini_ml_lib.model_selection.BayesianSearchCV.__init__": {"qualname": 3, "fullname": 9, "annotation": 0, "default_value": 0, "signature": 99, "bases": 0, "doc": 157}, "ifri_mini_ml_lib.model_selection.BayesianSearchCV.estimator": {"qualname": 2, "fullname": 8, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "ifri_mini_ml_lib.model_selection.BayesianSearchCV.param_bounds": {"qualname": 3, "fullname": 9, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "ifri_mini_ml_lib.model_selection.BayesianSearchCV.n_iter": {"qualname": 3, "fullname": 9, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "ifri_mini_ml_lib.model_selection.BayesianSearchCV.init_points": {"qualname": 3, "fullname": 9, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "ifri_mini_ml_lib.model_selection.BayesianSearchCV.cv": {"qualname": 2, "fullname": 8, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "ifri_mini_ml_lib.model_selection.BayesianSearchCV.scoring": {"qualname": 2, "fullname": 8, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "ifri_mini_ml_lib.model_selection.BayesianSearchCV.stratified": {"qualname": 2, "fullname": 8, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "ifri_mini_ml_lib.model_selection.BayesianSearchCV.param_types": {"qualname": 3, "fullname": 9, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "ifri_mini_ml_lib.model_selection.BayesianSearchCV.random_state": {"qualname": 3, "fullname": 9, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "ifri_mini_ml_lib.model_selection.BayesianSearchCV.X_obs": {"qualname": 3, "fullname": 9, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "ifri_mini_ml_lib.model_selection.BayesianSearchCV.y_obs": {"qualname": 3, "fullname": 9, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "ifri_mini_ml_lib.model_selection.BayesianSearchCV.gp": {"qualname": 2, "fullname": 8, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "ifri_mini_ml_lib.model_selection.BayesianSearchCV.maximize": {"qualname": 2, "fullname": 8, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "ifri_mini_ml_lib.model_selection.BayesianSearchCV.history_": {"qualname": 3, "fullname": 9, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "ifri_mini_ml_lib.model_selection.BayesianSearchCV.fit": {"qualname": 2, "fullname": 8, "annotation": 0, "default_value": 0, "signature": 21, "bases": 0, "doc": 74}, "ifri_mini_ml_lib.model_selection.BayesianSearchCV.get_best_params": {"qualname": 4, "fullname": 10, "annotation": 0, "default_value": 0, "signature": 11, "bases": 0, "doc": 59}, "ifri_mini_ml_lib.model_selection.GridSearchCV": {"qualname": 1, "fullname": 7, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 172}, "ifri_mini_ml_lib.model_selection.GridSearchCV.__init__": {"qualname": 3, "fullname": 9, "annotation": 0, "default_value": 0, "signature": 40, "bases": 0, "doc": 3}, "ifri_mini_ml_lib.model_selection.GridSearchCV.model": {"qualname": 2, "fullname": 8, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "ifri_mini_ml_lib.model_selection.GridSearchCV.param_grid": {"qualname": 3, "fullname": 9, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "ifri_mini_ml_lib.model_selection.GridSearchCV.k": {"qualname": 2, "fullname": 8, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "ifri_mini_ml_lib.model_selection.GridSearchCV.scoring": {"qualname": 2, "fullname": 8, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "ifri_mini_ml_lib.model_selection.GridSearchCV.stratified": {"qualname": 2, "fullname": 8, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "ifri_mini_ml_lib.model_selection.GridSearchCV.best_params_": {"qualname": 4, "fullname": 10, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "ifri_mini_ml_lib.model_selection.GridSearchCV.best_score_": {"qualname": 4, "fullname": 10, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "ifri_mini_ml_lib.model_selection.GridSearchCV.best_estimator_": {"qualname": 4, "fullname": 10, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "ifri_mini_ml_lib.model_selection.GridSearchCV.fit": {"qualname": 2, "fullname": 8, "annotation": 0, "default_value": 0, "signature": 21, "bases": 0, "doc": 101}, "ifri_mini_ml_lib.model_selection.RandomSearchCV": {"qualname": 1, "fullname": 7, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 322}, "ifri_mini_ml_lib.model_selection.RandomSearchCV.__init__": {"qualname": 3, "fullname": 9, "annotation": 0, "default_value": 0, "signature": 69, "bases": 0, "doc": 3}, "ifri_mini_ml_lib.model_selection.RandomSearchCV.model": {"qualname": 2, "fullname": 8, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "ifri_mini_ml_lib.model_selection.RandomSearchCV.param_grid": {"qualname": 3, "fullname": 9, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "ifri_mini_ml_lib.model_selection.RandomSearchCV.n_iter": {"qualname": 3, "fullname": 9, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "ifri_mini_ml_lib.model_selection.RandomSearchCV.k": {"qualname": 2, "fullname": 8, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "ifri_mini_ml_lib.model_selection.RandomSearchCV.scoring": {"qualname": 2, "fullname": 8, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "ifri_mini_ml_lib.model_selection.RandomSearchCV.stratified": {"qualname": 2, "fullname": 8, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "ifri_mini_ml_lib.model_selection.RandomSearchCV.random_state": {"qualname": 3, "fullname": 9, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "ifri_mini_ml_lib.model_selection.RandomSearchCV.best_params_": {"qualname": 4, "fullname": 10, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "ifri_mini_ml_lib.model_selection.RandomSearchCV.best_score_": {"qualname": 4, "fullname": 10, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "ifri_mini_ml_lib.model_selection.RandomSearchCV.best_estimator_": {"qualname": 4, "fullname": 10, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "ifri_mini_ml_lib.model_selection.RandomSearchCV.fit": {"qualname": 2, "fullname": 8, "annotation": 0, "default_value": 0, "signature": 21, "bases": 0, "doc": 66}, "ifri_mini_ml_lib.neural_networks": {"qualname": 0, "fullname": 6, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "ifri_mini_ml_lib.neural_networks.MLPClassifier": {"qualname": 1, "fullname": 7, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 11}, "ifri_mini_ml_lib.neural_networks.MLPClassifier.__init__": {"qualname": 3, "fullname": 9, "annotation": 0, "default_value": 0, "signature": 362, "bases": 0, "doc": 171}, "ifri_mini_ml_lib.neural_networks.MLPClassifier.hidden_layer_sizes": {"qualname": 4, "fullname": 10, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "ifri_mini_ml_lib.neural_networks.MLPClassifier.activation": {"qualname": 2, "fullname": 8, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "ifri_mini_ml_lib.neural_networks.MLPClassifier.solver": {"qualname": 2, "fullname": 8, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "ifri_mini_ml_lib.neural_networks.MLPClassifier.alpha": {"qualname": 2, "fullname": 8, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "ifri_mini_ml_lib.neural_networks.MLPClassifier.batch_size": {"qualname": 3, "fullname": 9, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "ifri_mini_ml_lib.neural_networks.MLPClassifier.learning_rate": {"qualname": 3, "fullname": 9, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "ifri_mini_ml_lib.neural_networks.MLPClassifier.max_iter": {"qualname": 3, "fullname": 9, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "ifri_mini_ml_lib.neural_networks.MLPClassifier.shuffle": {"qualname": 2, "fullname": 8, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "ifri_mini_ml_lib.neural_networks.MLPClassifier.beta1": {"qualname": 2, "fullname": 8, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "ifri_mini_ml_lib.neural_networks.MLPClassifier.beta2": {"qualname": 2, "fullname": 8, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "ifri_mini_ml_lib.neural_networks.MLPClassifier.epsilon": {"qualname": 2, "fullname": 8, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "ifri_mini_ml_lib.neural_networks.MLPClassifier.momentum": {"qualname": 2, "fullname": 8, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "ifri_mini_ml_lib.neural_networks.MLPClassifier.tol": {"qualname": 2, "fullname": 8, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "ifri_mini_ml_lib.neural_networks.MLPClassifier.early_stopping": {"qualname": 3, "fullname": 9, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "ifri_mini_ml_lib.neural_networks.MLPClassifier.validation_fraction": {"qualname": 3, "fullname": 9, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "ifri_mini_ml_lib.neural_networks.MLPClassifier.n_iter_no_change": {"qualname": 5, "fullname": 11, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "ifri_mini_ml_lib.neural_networks.MLPClassifier.activation_functions": {"qualname": 3, "fullname": 9, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "ifri_mini_ml_lib.neural_networks.MLPClassifier.activation_derivatives": {"qualname": 3, "fullname": 9, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "ifri_mini_ml_lib.neural_networks.MLPClassifier.activation_func": {"qualname": 3, "fullname": 9, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "ifri_mini_ml_lib.neural_networks.MLPClassifier.activation_derivative": {"qualname": 3, "fullname": 9, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "ifri_mini_ml_lib.neural_networks.MLPClassifier.weights": {"qualname": 2, "fullname": 8, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "ifri_mini_ml_lib.neural_networks.MLPClassifier.biases": {"qualname": 2, "fullname": 8, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "ifri_mini_ml_lib.neural_networks.MLPClassifier.n_layers": {"qualname": 3, "fullname": 9, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "ifri_mini_ml_lib.neural_networks.MLPClassifier.n_outputs": {"qualname": 3, "fullname": 9, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "ifri_mini_ml_lib.neural_networks.MLPClassifier.velocity_weights": {"qualname": 3, "fullname": 9, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "ifri_mini_ml_lib.neural_networks.MLPClassifier.velocity_biases": {"qualname": 3, "fullname": 9, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "ifri_mini_ml_lib.neural_networks.MLPClassifier.m_weights": {"qualname": 3, "fullname": 9, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "ifri_mini_ml_lib.neural_networks.MLPClassifier.m_biases": {"qualname": 3, "fullname": 9, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "ifri_mini_ml_lib.neural_networks.MLPClassifier.v_weights": {"qualname": 3, "fullname": 9, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "ifri_mini_ml_lib.neural_networks.MLPClassifier.v_biases": {"qualname": 3, "fullname": 9, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "ifri_mini_ml_lib.neural_networks.MLPClassifier.t": {"qualname": 2, "fullname": 8, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "ifri_mini_ml_lib.neural_networks.MLPClassifier.loss_history": {"qualname": 3, "fullname": 9, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "ifri_mini_ml_lib.neural_networks.MLPClassifier.val_loss_history": {"qualname": 4, "fullname": 10, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "ifri_mini_ml_lib.neural_networks.MLPClassifier.best_loss": {"qualname": 3, "fullname": 9, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "ifri_mini_ml_lib.neural_networks.MLPClassifier.no_improvement_count": {"qualname": 4, "fullname": 10, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "ifri_mini_ml_lib.neural_networks.MLPClassifier.trained": {"qualname": 2, "fullname": 8, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "ifri_mini_ml_lib.neural_networks.MLPClassifier.classes_": {"qualname": 3, "fullname": 9, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "ifri_mini_ml_lib.neural_networks.MLPClassifier.fit": {"qualname": 2, "fullname": 8, "annotation": 0, "default_value": 0, "signature": 67, "bases": 0, "doc": 47}, "ifri_mini_ml_lib.neural_networks.MLPClassifier.predict": {"qualname": 2, "fullname": 8, "annotation": 0, "default_value": 0, "signature": 34, "bases": 0, "doc": 44}, "ifri_mini_ml_lib.neural_networks.MLPClassifier.predict_proba": {"qualname": 3, "fullname": 9, "annotation": 0, "default_value": 0, "signature": 34, "bases": 0, "doc": 47}, "ifri_mini_ml_lib.neural_networks.MLPClassifier.score": {"qualname": 2, "fullname": 8, "annotation": 0, "default_value": 0, "signature": 44, "bases": 0, "doc": 49}, "ifri_mini_ml_lib.neural_networks.MLPRegressor": {"qualname": 1, "fullname": 7, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 14}, "ifri_mini_ml_lib.neural_networks.MLPRegressor.__init__": {"qualname": 3, "fullname": 9, "annotation": 0, "default_value": 0, "signature": 362, "bases": 0, "doc": 177}, "ifri_mini_ml_lib.neural_networks.MLPRegressor.hidden_layer_sizes": {"qualname": 4, "fullname": 10, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "ifri_mini_ml_lib.neural_networks.MLPRegressor.activation": {"qualname": 2, "fullname": 8, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "ifri_mini_ml_lib.neural_networks.MLPRegressor.solver": {"qualname": 2, "fullname": 8, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "ifri_mini_ml_lib.neural_networks.MLPRegressor.alpha": {"qualname": 2, "fullname": 8, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "ifri_mini_ml_lib.neural_networks.MLPRegressor.batch_size": {"qualname": 3, "fullname": 9, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "ifri_mini_ml_lib.neural_networks.MLPRegressor.learning_rate": {"qualname": 3, "fullname": 9, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "ifri_mini_ml_lib.neural_networks.MLPRegressor.max_iter": {"qualname": 3, "fullname": 9, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "ifri_mini_ml_lib.neural_networks.MLPRegressor.shuffle": {"qualname": 2, "fullname": 8, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "ifri_mini_ml_lib.neural_networks.MLPRegressor.beta1": {"qualname": 2, "fullname": 8, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "ifri_mini_ml_lib.neural_networks.MLPRegressor.beta2": {"qualname": 2, "fullname": 8, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "ifri_mini_ml_lib.neural_networks.MLPRegressor.epsilon": {"qualname": 2, "fullname": 8, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "ifri_mini_ml_lib.neural_networks.MLPRegressor.momentum": {"qualname": 2, "fullname": 8, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "ifri_mini_ml_lib.neural_networks.MLPRegressor.tol": {"qualname": 2, "fullname": 8, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "ifri_mini_ml_lib.neural_networks.MLPRegressor.early_stopping": {"qualname": 3, "fullname": 9, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "ifri_mini_ml_lib.neural_networks.MLPRegressor.validation_fraction": {"qualname": 3, "fullname": 9, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "ifri_mini_ml_lib.neural_networks.MLPRegressor.n_iter_no_change": {"qualname": 5, "fullname": 11, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "ifri_mini_ml_lib.neural_networks.MLPRegressor.activation_functions": {"qualname": 3, "fullname": 9, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "ifri_mini_ml_lib.neural_networks.MLPRegressor.activation_derivatives": {"qualname": 3, "fullname": 9, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "ifri_mini_ml_lib.neural_networks.MLPRegressor.activation_func": {"qualname": 3, "fullname": 9, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "ifri_mini_ml_lib.neural_networks.MLPRegressor.activation_derivative": {"qualname": 3, "fullname": 9, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "ifri_mini_ml_lib.neural_networks.MLPRegressor.weights": {"qualname": 2, "fullname": 8, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "ifri_mini_ml_lib.neural_networks.MLPRegressor.biases": {"qualname": 2, "fullname": 8, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "ifri_mini_ml_lib.neural_networks.MLPRegressor.n_layers": {"qualname": 3, "fullname": 9, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "ifri_mini_ml_lib.neural_networks.MLPRegressor.n_outputs": {"qualname": 3, "fullname": 9, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "ifri_mini_ml_lib.neural_networks.MLPRegressor.velocity_weights": {"qualname": 3, "fullname": 9, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "ifri_mini_ml_lib.neural_networks.MLPRegressor.velocity_biases": {"qualname": 3, "fullname": 9, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "ifri_mini_ml_lib.neural_networks.MLPRegressor.m_weights": {"qualname": 3, "fullname": 9, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "ifri_mini_ml_lib.neural_networks.MLPRegressor.m_biases": {"qualname": 3, "fullname": 9, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "ifri_mini_ml_lib.neural_networks.MLPRegressor.v_weights": {"qualname": 3, "fullname": 9, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "ifri_mini_ml_lib.neural_networks.MLPRegressor.v_biases": {"qualname": 3, "fullname": 9, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "ifri_mini_ml_lib.neural_networks.MLPRegressor.t": {"qualname": 2, "fullname": 8, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "ifri_mini_ml_lib.neural_networks.MLPRegressor.loss_history": {"qualname": 3, "fullname": 9, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "ifri_mini_ml_lib.neural_networks.MLPRegressor.val_loss_history": {"qualname": 4, "fullname": 10, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "ifri_mini_ml_lib.neural_networks.MLPRegressor.best_loss": {"qualname": 3, "fullname": 9, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "ifri_mini_ml_lib.neural_networks.MLPRegressor.no_improvement_count": {"qualname": 4, "fullname": 10, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "ifri_mini_ml_lib.neural_networks.MLPRegressor.trained": {"qualname": 2, "fullname": 8, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "ifri_mini_ml_lib.neural_networks.MLPRegressor.fit": {"qualname": 2, "fullname": 8, "annotation": 0, "default_value": 0, "signature": 67, "bases": 0, "doc": 51}, "ifri_mini_ml_lib.neural_networks.MLPRegressor.predict": {"qualname": 2, "fullname": 8, "annotation": 0, "default_value": 0, "signature": 34, "bases": 0, "doc": 50}, "ifri_mini_ml_lib.neural_networks.MLPRegressor.score": {"qualname": 2, "fullname": 8, "annotation": 0, "default_value": 0, "signature": 44, "bases": 0, "doc": 53}, "ifri_mini_ml_lib.preprocessing": {"qualname": 0, "fullname": 5, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "ifri_mini_ml_lib.preprocessing.dimensionality_reduction": {"qualname": 0, "fullname": 7, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "ifri_mini_ml_lib.preprocessing.dimensionality_reduction.PCA": {"qualname": 1, "fullname": 8, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 76}, "ifri_mini_ml_lib.preprocessing.dimensionality_reduction.PCA.__init__": {"qualname": 3, "fullname": 10, "annotation": 0, "default_value": 0, "signature": 15, "bases": 0, "doc": 44}, "ifri_mini_ml_lib.preprocessing.dimensionality_reduction.PCA.n_component": {"qualname": 3, "fullname": 10, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "ifri_mini_ml_lib.preprocessing.dimensionality_reduction.PCA.mean": {"qualname": 2, "fullname": 9, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "ifri_mini_ml_lib.preprocessing.dimensionality_reduction.PCA.cov": {"qualname": 2, "fullname": 9, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "ifri_mini_ml_lib.preprocessing.dimensionality_reduction.PCA.eigen_values": {"qualname": 3, "fullname": 10, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "ifri_mini_ml_lib.preprocessing.dimensionality_reduction.PCA.eigen_vectors": {"qualname": 3, "fullname": 10, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "ifri_mini_ml_lib.preprocessing.dimensionality_reduction.PCA.components": {"qualname": 2, "fullname": 9, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "ifri_mini_ml_lib.preprocessing.dimensionality_reduction.PCA.fit": {"qualname": 2, "fullname": 9, "annotation": 0, "default_value": 0, "signature": 55, "bases": 0, "doc": 63}, "ifri_mini_ml_lib.preprocessing.dimensionality_reduction.PCA.transform": {"qualname": 2, "fullname": 9, "annotation": 0, "default_value": 0, "signature": 34, "bases": 0, "doc": 69}, "ifri_mini_ml_lib.preprocessing.dimensionality_reduction.PCA.fit_transform": {"qualname": 3, "fullname": 10, "annotation": 0, "default_value": 0, "signature": 34, "bases": 0, "doc": 48}, "ifri_mini_ml_lib.preprocessing.dimensionality_reduction.PCA.plot_cov_matrix": {"qualname": 4, "fullname": 11, "annotation": 0, "default_value": 0, "signature": 14, "bases": 0, "doc": 32}, "ifri_mini_ml_lib.preprocessing.dimensionality_reduction.PCA.explained_variances": {"qualname": 3, "fullname": 10, "annotation": 0, "default_value": 0, "signature": 19, "bases": 0, "doc": 38}, "ifri_mini_ml_lib.preprocessing.dimensionality_reduction.PCA.explained_variances_ratio": {"qualname": 4, "fullname": 11, "annotation": 0, "default_value": 0, "signature": 19, "bases": 0, "doc": 47}, "ifri_mini_ml_lib.preprocessing.dimensionality_reduction.PCA.plot_cumulative_explained_variance_ratio": {"qualname": 6, "fullname": 13, "annotation": 0, "default_value": 0, "signature": 14, "bases": 0, "doc": 35}, "ifri_mini_ml_lib.preprocessing.dimensionality_reduction.TSNE": {"qualname": 1, "fullname": 8, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 102}, "ifri_mini_ml_lib.preprocessing.dimensionality_reduction.TSNE.__init__": {"qualname": 3, "fullname": 10, "annotation": 0, "default_value": 0, "signature": 118, "bases": 0, "doc": 122}, "ifri_mini_ml_lib.preprocessing.dimensionality_reduction.TSNE.n_components": {"qualname": 3, "fullname": 10, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "ifri_mini_ml_lib.preprocessing.dimensionality_reduction.TSNE.perplexity": {"qualname": 2, "fullname": 9, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "ifri_mini_ml_lib.preprocessing.dimensionality_reduction.TSNE.early_exaggeration": {"qualname": 3, "fullname": 10, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "ifri_mini_ml_lib.preprocessing.dimensionality_reduction.TSNE.learning_rate": {"qualname": 3, "fullname": 10, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "ifri_mini_ml_lib.preprocessing.dimensionality_reduction.TSNE.n_iter": {"qualname": 3, "fullname": 10, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "ifri_mini_ml_lib.preprocessing.dimensionality_reduction.TSNE.init": {"qualname": 2, "fullname": 9, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "ifri_mini_ml_lib.preprocessing.dimensionality_reduction.TSNE.min_grad_norm": {"qualname": 4, "fullname": 11, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "ifri_mini_ml_lib.preprocessing.dimensionality_reduction.TSNE.random_state": {"qualname": 3, "fullname": 10, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "ifri_mini_ml_lib.preprocessing.dimensionality_reduction.TSNE.verbose": {"qualname": 2, "fullname": 9, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "ifri_mini_ml_lib.preprocessing.dimensionality_reduction.TSNE.embedding_": {"qualname": 3, "fullname": 10, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "ifri_mini_ml_lib.preprocessing.dimensionality_reduction.TSNE.kl_divergence_": {"qualname": 4, "fullname": 11, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "ifri_mini_ml_lib.preprocessing.dimensionality_reduction.TSNE.n_iter_": {"qualname": 4, "fullname": 11, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "ifri_mini_ml_lib.preprocessing.dimensionality_reduction.TSNE.rng": {"qualname": 2, "fullname": 9, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "ifri_mini_ml_lib.preprocessing.dimensionality_reduction.TSNE.fit": {"qualname": 2, "fullname": 9, "annotation": 0, "default_value": 0, "signature": 56, "bases": 0, "doc": 69}, "ifri_mini_ml_lib.preprocessing.dimensionality_reduction.TSNE.fit_transform": {"qualname": 3, "fullname": 10, "annotation": 0, "default_value": 0, "signature": 34, "bases": 0, "doc": 56}, "ifri_mini_ml_lib.preprocessing.dimensionality_reduction.TSNE.generate_test_data": {"qualname": 4, "fullname": 11, "annotation": 0, "default_value": 0, "signature": 42, "bases": 0, "doc": 78}, "ifri_mini_ml_lib.preprocessing.dimensionality_reduction.TSNE.plot_results": {"qualname": 3, "fullname": 10, "annotation": 0, "default_value": 0, "signature": 31, "bases": 0, "doc": 68}, "ifri_mini_ml_lib.preprocessing.preparation": {"qualname": 0, "fullname": 6, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "ifri_mini_ml_lib.preprocessing.preparation.MinMaxScaler": {"qualname": 1, "fullname": 7, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 69}, "ifri_mini_ml_lib.preprocessing.preparation.MinMaxScaler.__init__": {"qualname": 3, "fullname": 9, "annotation": 0, "default_value": 0, "signature": 27, "bases": 0, "doc": 67}, "ifri_mini_ml_lib.preprocessing.preparation.MinMaxScaler.min_": {"qualname": 3, "fullname": 9, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "ifri_mini_ml_lib.preprocessing.preparation.MinMaxScaler.max_": {"qualname": 3, "fullname": 9, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "ifri_mini_ml_lib.preprocessing.preparation.MinMaxScaler.columns": {"qualname": 2, "fullname": 8, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "ifri_mini_ml_lib.preprocessing.preparation.MinMaxScaler.fit": {"qualname": 2, "fullname": 8, "annotation": 0, "default_value": 0, "signature": 16, "bases": 0, "doc": 84}, "ifri_mini_ml_lib.preprocessing.preparation.MinMaxScaler.transform": {"qualname": 2, "fullname": 8, "annotation": 0, "default_value": 0, "signature": 16, "bases": 0, "doc": 95}, "ifri_mini_ml_lib.preprocessing.preparation.MinMaxScaler.fit_transform": {"qualname": 3, "fullname": 9, "annotation": 0, "default_value": 0, "signature": 16, "bases": 0, "doc": 58}, "ifri_mini_ml_lib.preprocessing.preparation.MinMaxScaler.inverse_transform": {"qualname": 3, "fullname": 9, "annotation": 0, "default_value": 0, "signature": 17, "bases": 0, "doc": 76}, "ifri_mini_ml_lib.preprocessing.preparation.MissingValueHandler": {"qualname": 1, "fullname": 7, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 21}, "ifri_mini_ml_lib.preprocessing.preparation.MissingValueHandler.remove_missing": {"qualname": 3, "fullname": 9, "annotation": 0, "default_value": 0, "signature": 37, "bases": 0, "doc": 88}, "ifri_mini_ml_lib.preprocessing.preparation.MissingValueHandler.impute_statistical": {"qualname": 3, "fullname": 9, "annotation": 0, "default_value": 0, "signature": 30, "bases": 0, "doc": 65}, "ifri_mini_ml_lib.preprocessing.preparation.MissingValueHandler.impute_default": {"qualname": 3, "fullname": 9, "annotation": 0, "default_value": 0, "signature": 26, "bases": 0, "doc": 67}, "ifri_mini_ml_lib.preprocessing.preparation.MissingValueHandler.impute_knn": {"qualname": 3, "fullname": 9, "annotation": 0, "default_value": 0, "signature": 40, "bases": 0, "doc": 64}, "ifri_mini_ml_lib.preprocessing.preparation.MissingValueHandler.impute_regression": {"qualname": 3, "fullname": 9, "annotation": 0, "default_value": 0, "signature": 22, "bases": 0, "doc": 87}, "ifri_mini_ml_lib.preprocessing.preparation.StandardScaler": {"qualname": 1, "fullname": 7, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 104}, "ifri_mini_ml_lib.preprocessing.preparation.StandardScaler.__init__": {"qualname": 3, "fullname": 9, "annotation": 0, "default_value": 0, "signature": 4, "bases": 0, "doc": 10}, "ifri_mini_ml_lib.preprocessing.preparation.StandardScaler.mean_": {"qualname": 3, "fullname": 9, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "ifri_mini_ml_lib.preprocessing.preparation.StandardScaler.std_": {"qualname": 3, "fullname": 9, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "ifri_mini_ml_lib.preprocessing.preparation.StandardScaler.is_dataframe": {"qualname": 3, "fullname": 9, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "ifri_mini_ml_lib.preprocessing.preparation.StandardScaler.columns": {"qualname": 2, "fullname": 8, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "ifri_mini_ml_lib.preprocessing.preparation.StandardScaler.fit": {"qualname": 2, "fullname": 8, "annotation": 0, "default_value": 0, "signature": 16, "bases": 0, "doc": 45}, "ifri_mini_ml_lib.preprocessing.preparation.StandardScaler.transform": {"qualname": 2, "fullname": 8, "annotation": 0, "default_value": 0, "signature": 16, "bases": 0, "doc": 64}, "ifri_mini_ml_lib.preprocessing.preparation.StandardScaler.fit_transform": {"qualname": 3, "fullname": 9, "annotation": 0, "default_value": 0, "signature": 16, "bases": 0, "doc": 52}, "ifri_mini_ml_lib.preprocessing.preparation.StandardScaler.inverse_transform": {"qualname": 3, "fullname": 9, "annotation": 0, "default_value": 0, "signature": 17, "bases": 0, "doc": 67}, "ifri_mini_ml_lib.preprocessing.preparation.CategoricalEncoder": {"qualname": 1, "fullname": 7, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 120}, "ifri_mini_ml_lib.preprocessing.preparation.CategoricalEncoder.__init__": {"qualname": 3, "fullname": 9, "annotation": 0, "default_value": 0, "signature": 30, "bases": 0, "doc": 3}, "ifri_mini_ml_lib.preprocessing.preparation.CategoricalEncoder.encoding_type": {"qualname": 3, "fullname": 9, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "ifri_mini_ml_lib.preprocessing.preparation.CategoricalEncoder.target_column": {"qualname": 3, "fullname": 9, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "ifri_mini_ml_lib.preprocessing.preparation.CategoricalEncoder.mapping": {"qualname": 2, "fullname": 8, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "ifri_mini_ml_lib.preprocessing.preparation.CategoricalEncoder.fit": {"qualname": 2, "fullname": 8, "annotation": 0, "default_value": 0, "signature": 26, "bases": 0, "doc": 67}, "ifri_mini_ml_lib.preprocessing.preparation.CategoricalEncoder.transform": {"qualname": 2, "fullname": 8, "annotation": 0, "default_value": 0, "signature": 16, "bases": 0, "doc": 55}, "ifri_mini_ml_lib.preprocessing.preparation.CategoricalEncoder.fit_transform": {"qualname": 3, "fullname": 9, "annotation": 0, "default_value": 0, "signature": 26, "bases": 0, "doc": 64}, "ifri_mini_ml_lib.preprocessing.preparation.DataSplitter": {"qualname": 1, "fullname": 7, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "ifri_mini_ml_lib.preprocessing.preparation.DataSplitter.__init__": {"qualname": 3, "fullname": 9, "annotation": 0, "default_value": 0, "signature": 14, "bases": 0, "doc": 27}, "ifri_mini_ml_lib.preprocessing.preparation.DataSplitter.seed": {"qualname": 2, "fullname": 8, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "ifri_mini_ml_lib.preprocessing.preparation.DataSplitter.train_test_split": {"qualname": 4, "fullname": 10, "annotation": 0, "default_value": 0, "signature": 61, "bases": 0, "doc": 194}, "ifri_mini_ml_lib.preprocessing.preparation.DataSplitter.stratified_train_test_split": {"qualname": 5, "fullname": 11, "annotation": 0, "default_value": 0, "signature": 56, "bases": 0, "doc": 179}, "ifri_mini_ml_lib.preprocessing.preparation.DataSplitter.temporal_train_test_split": {"qualname": 5, "fullname": 11, "annotation": 0, "default_value": 0, "signature": 61, "bases": 0, "doc": 190}, "ifri_mini_ml_lib.preprocessing.preparation.DataSplitter.k_fold_split": {"qualname": 4, "fullname": 10, "annotation": 0, "default_value": 0, "signature": 36, "bases": 0, "doc": 120}, "ifri_mini_ml_lib.regression": {"qualname": 0, "fullname": 5, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "ifri_mini_ml_lib.regression.LinearRegression": {"qualname": 1, "fullname": 6, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 43}, "ifri_mini_ml_lib.regression.LinearRegression.__init__": {"qualname": 3, "fullname": 8, "annotation": 0, "default_value": 0, "signature": 65, "bases": 0, "doc": 3}, "ifri_mini_ml_lib.regression.LinearRegression.method": {"qualname": 2, "fullname": 7, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "ifri_mini_ml_lib.regression.LinearRegression.learning_rate": {"qualname": 3, "fullname": 8, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "ifri_mini_ml_lib.regression.LinearRegression.epochs": {"qualname": 2, "fullname": 7, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "ifri_mini_ml_lib.regression.LinearRegression.w": {"qualname": 2, "fullname": 7, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "ifri_mini_ml_lib.regression.LinearRegression.b": {"qualname": 2, "fullname": 7, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "ifri_mini_ml_lib.regression.LinearRegression.fit": {"qualname": 2, "fullname": 7, "annotation": 0, "default_value": 0, "signature": 89, "bases": 0, "doc": 63}, "ifri_mini_ml_lib.regression.LinearRegression.predict": {"qualname": 2, "fullname": 7, "annotation": 0, "default_value": 0, "signature": 47, "bases": 0, "doc": 52}, "ifri_mini_ml_lib.regression.PolynomialRegression": {"qualname": 1, "fullname": 6, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 50}, "ifri_mini_ml_lib.regression.PolynomialRegression.__init__": {"qualname": 3, "fullname": 8, "annotation": 0, "default_value": 0, "signature": 94, "bases": 0, "doc": 3}, "ifri_mini_ml_lib.regression.PolynomialRegression.degree": {"qualname": 2, "fullname": 7, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "ifri_mini_ml_lib.regression.PolynomialRegression.method": {"qualname": 2, "fullname": 7, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "ifri_mini_ml_lib.regression.PolynomialRegression.learning_rate": {"qualname": 3, "fullname": 8, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "ifri_mini_ml_lib.regression.PolynomialRegression.epochs": {"qualname": 2, "fullname": 7, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "ifri_mini_ml_lib.regression.PolynomialRegression.w": {"qualname": 2, "fullname": 7, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "ifri_mini_ml_lib.regression.PolynomialRegression.b": {"qualname": 2, "fullname": 7, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "ifri_mini_ml_lib.regression.PolynomialRegression.fit": {"qualname": 2, "fullname": 7, "annotation": 0, "default_value": 0, "signature": 89, "bases": 0, "doc": 62}, "ifri_mini_ml_lib.regression.PolynomialRegression.predict": {"qualname": 2, "fullname": 7, "annotation": 0, "default_value": 0, "signature": 47, "bases": 0, "doc": 53}, "ifri_mini_ml_lib.regression.SVR": {"qualname": 1, "fullname": 6, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 133}, "ifri_mini_ml_lib.regression.SVR.__init__": {"qualname": 3, "fullname": 8, "annotation": 0, "default_value": 0, "signature": 131, "bases": 0, "doc": 3}, "ifri_mini_ml_lib.regression.SVR.kerlist": {"qualname": 2, "fullname": 7, "annotation": 0, "default_value": 14, "signature": 0, "bases": 0, "doc": 3}, "ifri_mini_ml_lib.regression.SVR.eps": {"qualname": 2, "fullname": 7, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "ifri_mini_ml_lib.regression.SVR.train_X": {"qualname": 3, "fullname": 8, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "ifri_mini_ml_lib.regression.SVR.train_y": {"qualname": 3, "fullname": 8, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "ifri_mini_ml_lib.regression.SVR.test_X": {"qualname": 3, "fullname": 8, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "ifri_mini_ml_lib.regression.SVR.test_y": {"qualname": 3, "fullname": 8, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "ifri_mini_ml_lib.regression.SVR.ker": {"qualname": 2, "fullname": 7, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 12}, "ifri_mini_ml_lib.regression.SVR.linear_kernel": {"qualname": 3, "fullname": 8, "annotation": 0, "default_value": 0, "signature": 65, "bases": 0, "doc": 31}, "ifri_mini_ml_lib.regression.SVR.polynomial_kernel": {"qualname": 3, "fullname": 8, "annotation": 0, "default_value": 0, "signature": 26, "bases": 0, "doc": 31}, "ifri_mini_ml_lib.regression.SVR.rbf_kernel": {"qualname": 3, "fullname": 8, "annotation": 0, "default_value": 0, "signature": 26, "bases": 0, "doc": 34}, "ifri_mini_ml_lib.regression.SVR.sigmoid_kernel": {"qualname": 3, "fullname": 8, "annotation": 0, "default_value": 0, "signature": 26, "bases": 0, "doc": 31}, "ifri_mini_ml_lib.regression.SVR.get_kernel": {"qualname": 3, "fullname": 8, "annotation": 0, "default_value": 0, "signature": 20, "bases": 0, "doc": 19}, "ifri_mini_ml_lib.regression.SVR.fit": {"qualname": 2, "fullname": 7, "annotation": 0, "default_value": 0, "signature": 44, "bases": 0, "doc": 38}, "ifri_mini_ml_lib.regression.SVR.predict": {"qualname": 2, "fullname": 7, "annotation": 0, "default_value": 0, "signature": 64, "bases": 0, "doc": 38}, "ifri_mini_ml_lib.regression.SVR.set_params": {"qualname": 3, "fullname": 8, "annotation": 0, "default_value": 0, "signature": 18, "bases": 0, "doc": 38}}, "length": 374, "save": true}, "index": {"qualname": {"root": {"docs": {"ifri_mini_ml_lib.association_rules.Apriori.__init__": {"tf": 1}, "ifri_mini_ml_lib.association_rules.Apriori.frequent_itemsets_": {"tf": 1}, "ifri_mini_ml_lib.association_rules.Apriori.rules_": {"tf": 1}, "ifri_mini_ml_lib.association_rules.Eclat.__init__": {"tf": 1}, "ifri_mini_ml_lib.association_rules.Eclat.rules_": {"tf": 1}, "ifri_mini_ml_lib.association_rules.FPGrowth.__init__": {"tf": 1}, "ifri_mini_ml_lib.association_rules.FPGrowth.rules_": {"tf": 1}, "ifri_mini_ml_lib.classification.DecisionTree.__init__": {"tf": 1}, "ifri_mini_ml_lib.classification.KNN.__init__": {"tf": 1}, "ifri_mini_ml_lib.classification.LogisticRegression.__init__": {"tf": 1}, "ifri_mini_ml_lib.clustering.KMeans.__init__": {"tf": 1}, "ifri_mini_ml_lib.clustering.DBSCAN.__init__": {"tf": 1}, "ifri_mini_ml_lib.clustering.HierarchicalClustering.__init__": {"tf": 1}, "ifri_mini_ml_lib.model_selection.BaggingClassifier.__init__": {"tf": 1}, "ifri_mini_ml_lib.model_selection.BaggingRegressor.__init__": {"tf": 1}, "ifri_mini_ml_lib.model_selection.BayesianSearchCV.__init__": {"tf": 1}, "ifri_mini_ml_lib.model_selection.BayesianSearchCV.history_": {"tf": 1}, "ifri_mini_ml_lib.model_selection.GridSearchCV.__init__": {"tf": 1}, "ifri_mini_ml_lib.model_selection.GridSearchCV.best_params_": {"tf": 1}, "ifri_mini_ml_lib.model_selection.GridSearchCV.best_score_": {"tf": 1}, "ifri_mini_ml_lib.model_selection.GridSearchCV.best_estimator_": {"tf": 1}, "ifri_mini_ml_lib.model_selection.RandomSearchCV.__init__": {"tf": 1}, "ifri_mini_ml_lib.model_selection.RandomSearchCV.best_params_": {"tf": 1}, "ifri_mini_ml_lib.model_selection.RandomSearchCV.best_score_": {"tf": 1}, "ifri_mini_ml_lib.model_selection.RandomSearchCV.best_estimator_": {"tf": 1}, "ifri_mini_ml_lib.neural_networks.MLPClassifier.__init__": {"tf": 1}, "ifri_mini_ml_lib.neural_networks.MLPClassifier.classes_": {"tf": 1}, "ifri_mini_ml_lib.neural_networks.MLPRegressor.__init__": {"tf": 1}, "ifri_mini_ml_lib.preprocessing.dimensionality_reduction.PCA.__init__": {"tf": 1}, "ifri_mini_ml_lib.preprocessing.dimensionality_reduction.TSNE.__init__": {"tf": 1}, "ifri_mini_ml_lib.preprocessing.dimensionality_reduction.TSNE.embedding_": {"tf": 1}, "ifri_mini_ml_lib.preprocessing.dimensionality_reduction.TSNE.kl_divergence_": {"tf": 1}, "ifri_mini_ml_lib.preprocessing.dimensionality_reduction.TSNE.n_iter_": {"tf": 1}, "ifri_mini_ml_lib.preprocessing.preparation.MinMaxScaler.__init__": {"tf": 1}, "ifri_mini_ml_lib.preprocessing.preparation.MinMaxScaler.min_": {"tf": 1}, "ifri_mini_ml_lib.preprocessing.preparation.MinMaxScaler.max_": {"tf": 1}, "ifri_mini_ml_lib.preprocessing.preparation.StandardScaler.__init__": {"tf": 1}, "ifri_mini_ml_lib.preprocessing.preparation.StandardScaler.mean_": {"tf": 1}, "ifri_mini_ml_lib.preprocessing.preparation.StandardScaler.std_": {"tf": 1}, "ifri_mini_ml_lib.preprocessing.preparation.CategoricalEncoder.__init__": {"tf": 1}, "ifri_mini_ml_lib.preprocessing.preparation.DataSplitter.__init__": {"tf": 1}, "ifri_mini_ml_lib.regression.LinearRegression.__init__": {"tf": 1}, "ifri_mini_ml_lib.regression.PolynomialRegression.__init__": {"tf": 1}, "ifri_mini_ml_lib.regression.SVR.__init__": {"tf": 1}}, "df": 44, "a": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "i": {"docs": {"ifri_mini_ml_lib.association_rules.Apriori": {"tf": 1}, "ifri_mini_ml_lib.association_rules.Apriori.__init__": {"tf": 1}, "ifri_mini_ml_lib.association_rules.Apriori.min_support": {"tf": 1}, "ifri_mini_ml_lib.association_rules.Apriori.min_confidence": {"tf": 1}, "ifri_mini_ml_lib.association_rules.Apriori.frequent_itemsets_": {"tf": 1}, "ifri_mini_ml_lib.association_rules.Apriori.rules_": {"tf": 1}, "ifri_mini_ml_lib.association_rules.Apriori.fit": {"tf": 1}, "ifri_mini_ml_lib.association_rules.Apriori.get_frequent_itemsets": {"tf": 1}, "ifri_mini_ml_lib.association_rules.Apriori.get_rules": {"tf": 1}}, "df": 9}}}}}}, "c": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "y": {"docs": {"ifri_mini_ml_lib.metrics.evaluation_metrics.accuracy": {"tf": 1}}, "df": 1}}}}}}, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "v": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"ifri_mini_ml_lib.neural_networks.MLPClassifier.activation": {"tf": 1}, "ifri_mini_ml_lib.neural_networks.MLPClassifier.activation_functions": {"tf": 1}, "ifri_mini_ml_lib.neural_networks.MLPClassifier.activation_derivatives": {"tf": 1}, "ifri_mini_ml_lib.neural_networks.MLPClassifier.activation_func": {"tf": 1}, "ifri_mini_ml_lib.neural_networks.MLPClassifier.activation_derivative": {"tf": 1}, "ifri_mini_ml_lib.neural_networks.MLPRegressor.activation": {"tf": 1}, "ifri_mini_ml_lib.neural_networks.MLPRegressor.activation_functions": {"tf": 1}, "ifri_mini_ml_lib.neural_networks.MLPRegressor.activation_derivatives": {"tf": 1}, "ifri_mini_ml_lib.neural_networks.MLPRegressor.activation_func": {"tf": 1}, "ifri_mini_ml_lib.neural_networks.MLPRegressor.activation_derivative": {"tf": 1}}, "df": 10}}}}}}}}}, "l": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "h": {"docs": {}, "df": 0, "a": {"docs": {"ifri_mini_ml_lib.neural_networks.MLPClassifier.alpha": {"tf": 1}, "ifri_mini_ml_lib.neural_networks.MLPRegressor.alpha": {"tf": 1}}, "df": 2}}}}}, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "t": {"docs": {"ifri_mini_ml_lib.association_rules.Apriori.__init__": {"tf": 1}, "ifri_mini_ml_lib.association_rules.Eclat.__init__": {"tf": 1}, "ifri_mini_ml_lib.association_rules.FPGrowth.__init__": {"tf": 1}, "ifri_mini_ml_lib.classification.DecisionTree.__init__": {"tf": 1}, "ifri_mini_ml_lib.classification.KNN.__init__": {"tf": 1}, "ifri_mini_ml_lib.classification.LogisticRegression.__init__": {"tf": 1}, "ifri_mini_ml_lib.clustering.KMeans.__init__": {"tf": 1}, "ifri_mini_ml_lib.clustering.KMeans.init": {"tf": 1}, "ifri_mini_ml_lib.clustering.DBSCAN.__init__": {"tf": 1}, "ifri_mini_ml_lib.clustering.HierarchicalClustering.__init__": {"tf": 1}, "ifri_mini_ml_lib.model_selection.BaggingClassifier.__init__": {"tf": 1}, "ifri_mini_ml_lib.model_selection.BaggingRegressor.__init__": {"tf": 1}, "ifri_mini_ml_lib.model_selection.BayesianSearchCV.__init__": {"tf": 1}, "ifri_mini_ml_lib.model_selection.BayesianSearchCV.init_points": {"tf": 1}, "ifri_mini_ml_lib.model_selection.GridSearchCV.__init__": {"tf": 1}, "ifri_mini_ml_lib.model_selection.RandomSearchCV.__init__": {"tf": 1}, "ifri_mini_ml_lib.neural_networks.MLPClassifier.__init__": {"tf": 1}, "ifri_mini_ml_lib.neural_networks.MLPRegressor.__init__": {"tf": 1}, "ifri_mini_ml_lib.preprocessing.dimensionality_reduction.PCA.__init__": {"tf": 1}, "ifri_mini_ml_lib.preprocessing.dimensionality_reduction.TSNE.__init__": {"tf": 1}, "ifri_mini_ml_lib.preprocessing.dimensionality_reduction.TSNE.init": {"tf": 1}, "ifri_mini_ml_lib.preprocessing.preparation.MinMaxScaler.__init__": {"tf": 1}, "ifri_mini_ml_lib.preprocessing.preparation.StandardScaler.__init__": {"tf": 1}, "ifri_mini_ml_lib.preprocessing.preparation.CategoricalEncoder.__init__": {"tf": 1}, "ifri_mini_ml_lib.preprocessing.preparation.DataSplitter.__init__": {"tf": 1}, "ifri_mini_ml_lib.regression.LinearRegression.__init__": {"tf": 1}, "ifri_mini_ml_lib.regression.PolynomialRegression.__init__": {"tf": 1}, "ifri_mini_ml_lib.regression.SVR.__init__": {"tf": 1}}, "df": 28}}, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "a": {"docs": {"ifri_mini_ml_lib.metrics.evaluation_metrics.calculate_inertia": {"tf": 1}}, "df": 1}}}}}, "v": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "e": {"docs": {"ifri_mini_ml_lib.preprocessing.preparation.MinMaxScaler.inverse_transform": {"tf": 1}, "ifri_mini_ml_lib.preprocessing.preparation.StandardScaler.inverse_transform": {"tf": 1}}, "df": 2}}}}}}, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "s": {"docs": {"ifri_mini_ml_lib.association_rules.Eclat.get_single_items_TIDset": {"tf": 1}}, "df": 1, "e": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "s": {"docs": {"ifri_mini_ml_lib.association_rules.Apriori.frequent_itemsets_": {"tf": 1}, "ifri_mini_ml_lib.association_rules.Apriori.get_frequent_itemsets": {"tf": 1}, "ifri_mini_ml_lib.association_rules.Eclat.frequent_itemsets": {"tf": 1}, "ifri_mini_ml_lib.association_rules.Eclat.get_frequent_itemsets": {"tf": 1}, "ifri_mini_ml_lib.association_rules.FPGrowth.frequent_itemsets_dict": {"tf": 1}, "ifri_mini_ml_lib.association_rules.FPGrowth.get_frequent_itemsets": {"tf": 1}}, "df": 6}}}}}, "r": {"docs": {"ifri_mini_ml_lib.classification.LogisticRegression.max_iter": {"tf": 1}, "ifri_mini_ml_lib.clustering.KMeans.max_iter": {"tf": 1}, "ifri_mini_ml_lib.model_selection.BayesianSearchCV.n_iter": {"tf": 1}, "ifri_mini_ml_lib.model_selection.RandomSearchCV.n_iter": {"tf": 1}, "ifri_mini_ml_lib.neural_networks.MLPClassifier.max_iter": {"tf": 1}, "ifri_mini_ml_lib.neural_networks.MLPClassifier.n_iter_no_change": {"tf": 1}, "ifri_mini_ml_lib.neural_networks.MLPRegressor.max_iter": {"tf": 1}, "ifri_mini_ml_lib.neural_networks.MLPRegressor.n_iter_no_change": {"tf": 1}, "ifri_mini_ml_lib.preprocessing.dimensionality_reduction.TSNE.n_iter": {"tf": 1}, "ifri_mini_ml_lib.preprocessing.dimensionality_reduction.TSNE.n_iter_": {"tf": 1}}, "df": 10}}}, "m": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "y": {"docs": {"ifri_mini_ml_lib.classification.DecisionTree.min_impurity_decrease": {"tf": 1}}, "df": 1}}}}, "t": {"docs": {}, "df": 0, "e": {"docs": {"ifri_mini_ml_lib.preprocessing.preparation.MissingValueHandler.impute_statistical": {"tf": 1}, "ifri_mini_ml_lib.preprocessing.preparation.MissingValueHandler.impute_default": {"tf": 1}, "ifri_mini_ml_lib.preprocessing.preparation.MissingValueHandler.impute_knn": {"tf": 1}, "ifri_mini_ml_lib.preprocessing.preparation.MissingValueHandler.impute_regression": {"tf": 1}}, "df": 4}}}, "r": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "v": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "t": {"docs": {"ifri_mini_ml_lib.neural_networks.MLPClassifier.no_improvement_count": {"tf": 1}, "ifri_mini_ml_lib.neural_networks.MLPRegressor.no_improvement_count": {"tf": 1}}, "df": 2}}}}}}}}}}, "s": {"docs": {"ifri_mini_ml_lib.preprocessing.preparation.StandardScaler.is_dataframe": {"tf": 1}}, "df": 1}}, "m": {"docs": {"ifri_mini_ml_lib.neural_networks.MLPClassifier.m_weights": {"tf": 1}, "ifri_mini_ml_lib.neural_networks.MLPClassifier.m_biases": {"tf": 1}, "ifri_mini_ml_lib.neural_networks.MLPRegressor.m_weights": {"tf": 1}, "ifri_mini_ml_lib.neural_networks.MLPRegressor.m_biases": {"tf": 1}}, "df": 4, "i": {"docs": {}, "df": 0, "n": {"docs": {"ifri_mini_ml_lib.association_rules.Apriori.min_support": {"tf": 1}, "ifri_mini_ml_lib.association_rules.Apriori.min_confidence": {"tf": 1}, "ifri_mini_ml_lib.association_rules.Eclat.min_support": {"tf": 1}, "ifri_mini_ml_lib.association_rules.Eclat.min_confidence": {"tf": 1}, "ifri_mini_ml_lib.association_rules.FPGrowth.min_support": {"tf": 1}, "ifri_mini_ml_lib.association_rules.FPGrowth.min_confidence": {"tf": 1}, "ifri_mini_ml_lib.classification.DecisionTree.min_samples_split": {"tf": 1}, "ifri_mini_ml_lib.classification.DecisionTree.min_samples_leaf": {"tf": 1}, "ifri_mini_ml_lib.classification.DecisionTree.min_impurity_decrease": {"tf": 1}, "ifri_mini_ml_lib.clustering.DBSCAN.min_samples": {"tf": 1}, "ifri_mini_ml_lib.preprocessing.dimensionality_reduction.TSNE.min_grad_norm": {"tf": 1}, "ifri_mini_ml_lib.preprocessing.preparation.MinMaxScaler.min_": {"tf": 1}}, "df": 12, "m": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "x": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"ifri_mini_ml_lib.preprocessing.preparation.MinMaxScaler": {"tf": 1}, "ifri_mini_ml_lib.preprocessing.preparation.MinMaxScaler.__init__": {"tf": 1}, "ifri_mini_ml_lib.preprocessing.preparation.MinMaxScaler.min_": {"tf": 1}, "ifri_mini_ml_lib.preprocessing.preparation.MinMaxScaler.max_": {"tf": 1}, "ifri_mini_ml_lib.preprocessing.preparation.MinMaxScaler.columns": {"tf": 1}, "ifri_mini_ml_lib.preprocessing.preparation.MinMaxScaler.fit": {"tf": 1}, "ifri_mini_ml_lib.preprocessing.preparation.MinMaxScaler.transform": {"tf": 1}, "ifri_mini_ml_lib.preprocessing.preparation.MinMaxScaler.fit_transform": {"tf": 1}, "ifri_mini_ml_lib.preprocessing.preparation.MinMaxScaler.inverse_transform": {"tf": 1}}, "df": 9}}}}}}}}}}, "s": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"ifri_mini_ml_lib.preprocessing.preparation.MissingValueHandler.remove_missing": {"tf": 1}}, "df": 1, "v": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "h": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"ifri_mini_ml_lib.preprocessing.preparation.MissingValueHandler": {"tf": 1}, "ifri_mini_ml_lib.preprocessing.preparation.MissingValueHandler.remove_missing": {"tf": 1}, "ifri_mini_ml_lib.preprocessing.preparation.MissingValueHandler.impute_statistical": {"tf": 1}, "ifri_mini_ml_lib.preprocessing.preparation.MissingValueHandler.impute_default": {"tf": 1}, "ifri_mini_ml_lib.preprocessing.preparation.MissingValueHandler.impute_knn": {"tf": 1}, "ifri_mini_ml_lib.preprocessing.preparation.MissingValueHandler.impute_regression": {"tf": 1}}, "df": 6}}}}}}}}}}}}}}}}}}, "a": {"docs": {}, "df": 0, "x": {"docs": {"ifri_mini_ml_lib.classification.DecisionTree.max_depth": {"tf": 1}, "ifri_mini_ml_lib.classification.LogisticRegression.max_iter": {"tf": 1}, "ifri_mini_ml_lib.clustering.KMeans.max_iter": {"tf": 1}, "ifri_mini_ml_lib.neural_networks.MLPClassifier.max_iter": {"tf": 1}, "ifri_mini_ml_lib.neural_networks.MLPRegressor.max_iter": {"tf": 1}, "ifri_mini_ml_lib.preprocessing.preparation.MinMaxScaler.max_": {"tf": 1}}, "df": 6, "i": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "z": {"docs": {}, "df": 0, "e": {"docs": {"ifri_mini_ml_lib.model_selection.BayesianSearchCV.maximize": {"tf": 1}}, "df": 1}}}}}}, "t": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "x": {"docs": {"ifri_mini_ml_lib.clustering.HierarchicalClustering.linked_matrix": {"tf": 1}, "ifri_mini_ml_lib.metrics.evaluation_metrics.confusion_matrix": {"tf": 1}, "ifri_mini_ml_lib.preprocessing.dimensionality_reduction.PCA.plot_cov_matrix": {"tf": 1}}, "df": 3}}}}, "p": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"ifri_mini_ml_lib.preprocessing.preparation.CategoricalEncoder.mapping": {"tf": 1}}, "df": 1}}}}}}, "o": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "m": {"docs": {"ifri_mini_ml_lib.classification.LogisticRegression.momentum": {"tf": 1}, "ifri_mini_ml_lib.neural_networks.MLPClassifier.momentum": {"tf": 1}, "ifri_mini_ml_lib.neural_networks.MLPRegressor.momentum": {"tf": 1}}, "df": 3}}}}}}, "d": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "l": {"docs": {"ifri_mini_ml_lib.metrics.evaluation_metrics.evaluate_model": {"tf": 1}, "ifri_mini_ml_lib.model_selection.BaggingClassifier.base_model": {"tf": 1}, "ifri_mini_ml_lib.model_selection.BaggingRegressor.base_model": {"tf": 1}, "ifri_mini_ml_lib.model_selection.GridSearchCV.model": {"tf": 1}, "ifri_mini_ml_lib.model_selection.RandomSearchCV.model": {"tf": 1}}, "df": 5, "s": {"docs": {"ifri_mini_ml_lib.model_selection.BaggingClassifier.models": {"tf": 1}, "ifri_mini_ml_lib.model_selection.BaggingRegressor.models": {"tf": 1}}, "df": 2}}}}}, "e": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "h": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "d": {"docs": {"ifri_mini_ml_lib.clustering.HierarchicalClustering.method": {"tf": 1}, "ifri_mini_ml_lib.regression.LinearRegression.method": {"tf": 1}, "ifri_mini_ml_lib.regression.PolynomialRegression.method": {"tf": 1}}, "df": 3}}}}, "a": {"docs": {}, "df": 0, "n": {"docs": {"ifri_mini_ml_lib.preprocessing.dimensionality_reduction.PCA.mean": {"tf": 1}, "ifri_mini_ml_lib.preprocessing.preparation.StandardScaler.mean_": {"tf": 1}}, "df": 2}}}, "l": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "f": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"ifri_mini_ml_lib.neural_networks.MLPClassifier": {"tf": 1}, "ifri_mini_ml_lib.neural_networks.MLPClassifier.__init__": {"tf": 1}, "ifri_mini_ml_lib.neural_networks.MLPClassifier.hidden_layer_sizes": {"tf": 1}, "ifri_mini_ml_lib.neural_networks.MLPClassifier.activation": {"tf": 1}, "ifri_mini_ml_lib.neural_networks.MLPClassifier.solver": {"tf": 1}, "ifri_mini_ml_lib.neural_networks.MLPClassifier.alpha": {"tf": 1}, "ifri_mini_ml_lib.neural_networks.MLPClassifier.batch_size": {"tf": 1}, "ifri_mini_ml_lib.neural_networks.MLPClassifier.learning_rate": {"tf": 1}, "ifri_mini_ml_lib.neural_networks.MLPClassifier.max_iter": {"tf": 1}, "ifri_mini_ml_lib.neural_networks.MLPClassifier.shuffle": {"tf": 1}, "ifri_mini_ml_lib.neural_networks.MLPClassifier.beta1": {"tf": 1}, "ifri_mini_ml_lib.neural_networks.MLPClassifier.beta2": {"tf": 1}, "ifri_mini_ml_lib.neural_networks.MLPClassifier.epsilon": {"tf": 1}, "ifri_mini_ml_lib.neural_networks.MLPClassifier.momentum": {"tf": 1}, "ifri_mini_ml_lib.neural_networks.MLPClassifier.tol": {"tf": 1}, "ifri_mini_ml_lib.neural_networks.MLPClassifier.early_stopping": {"tf": 1}, "ifri_mini_ml_lib.neural_networks.MLPClassifier.validation_fraction": {"tf": 1}, "ifri_mini_ml_lib.neural_networks.MLPClassifier.n_iter_no_change": {"tf": 1}, "ifri_mini_ml_lib.neural_networks.MLPClassifier.activation_functions": {"tf": 1}, "ifri_mini_ml_lib.neural_networks.MLPClassifier.activation_derivatives": {"tf": 1}, "ifri_mini_ml_lib.neural_networks.MLPClassifier.activation_func": {"tf": 1}, "ifri_mini_ml_lib.neural_networks.MLPClassifier.activation_derivative": {"tf": 1}, "ifri_mini_ml_lib.neural_networks.MLPClassifier.weights": {"tf": 1}, "ifri_mini_ml_lib.neural_networks.MLPClassifier.biases": {"tf": 1}, "ifri_mini_ml_lib.neural_networks.MLPClassifier.n_layers": {"tf": 1}, "ifri_mini_ml_lib.neural_networks.MLPClassifier.n_outputs": {"tf": 1}, "ifri_mini_ml_lib.neural_networks.MLPClassifier.velocity_weights": {"tf": 1}, "ifri_mini_ml_lib.neural_networks.MLPClassifier.velocity_biases": {"tf": 1}, "ifri_mini_ml_lib.neural_networks.MLPClassifier.m_weights": {"tf": 1}, "ifri_mini_ml_lib.neural_networks.MLPClassifier.m_biases": {"tf": 1}, "ifri_mini_ml_lib.neural_networks.MLPClassifier.v_weights": {"tf": 1}, "ifri_mini_ml_lib.neural_networks.MLPClassifier.v_biases": {"tf": 1}, "ifri_mini_ml_lib.neural_networks.MLPClassifier.t": {"tf": 1}, "ifri_mini_ml_lib.neural_networks.MLPClassifier.loss_history": {"tf": 1}, "ifri_mini_ml_lib.neural_networks.MLPClassifier.val_loss_history": {"tf": 1}, "ifri_mini_ml_lib.neural_networks.MLPClassifier.best_loss": {"tf": 1}, "ifri_mini_ml_lib.neural_networks.MLPClassifier.no_improvement_count": {"tf": 1}, "ifri_mini_ml_lib.neural_networks.MLPClassifier.trained": {"tf": 1}, "ifri_mini_ml_lib.neural_networks.MLPClassifier.classes_": {"tf": 1}, "ifri_mini_ml_lib.neural_networks.MLPClassifier.fit": {"tf": 1}, "ifri_mini_ml_lib.neural_networks.MLPClassifier.predict": {"tf": 1}, "ifri_mini_ml_lib.neural_networks.MLPClassifier.predict_proba": {"tf": 1}, "ifri_mini_ml_lib.neural_networks.MLPClassifier.score": {"tf": 1}}, "df": 43}}}}}}}}}}, "r": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {"ifri_mini_ml_lib.neural_networks.MLPRegressor": {"tf": 1}, "ifri_mini_ml_lib.neural_networks.MLPRegressor.__init__": {"tf": 1}, "ifri_mini_ml_lib.neural_networks.MLPRegressor.hidden_layer_sizes": {"tf": 1}, "ifri_mini_ml_lib.neural_networks.MLPRegressor.activation": {"tf": 1}, "ifri_mini_ml_lib.neural_networks.MLPRegressor.solver": {"tf": 1}, "ifri_mini_ml_lib.neural_networks.MLPRegressor.alpha": {"tf": 1}, "ifri_mini_ml_lib.neural_networks.MLPRegressor.batch_size": {"tf": 1}, "ifri_mini_ml_lib.neural_networks.MLPRegressor.learning_rate": {"tf": 1}, "ifri_mini_ml_lib.neural_networks.MLPRegressor.max_iter": {"tf": 1}, "ifri_mini_ml_lib.neural_networks.MLPRegressor.shuffle": {"tf": 1}, "ifri_mini_ml_lib.neural_networks.MLPRegressor.beta1": {"tf": 1}, "ifri_mini_ml_lib.neural_networks.MLPRegressor.beta2": {"tf": 1}, "ifri_mini_ml_lib.neural_networks.MLPRegressor.epsilon": {"tf": 1}, "ifri_mini_ml_lib.neural_networks.MLPRegressor.momentum": {"tf": 1}, "ifri_mini_ml_lib.neural_networks.MLPRegressor.tol": {"tf": 1}, "ifri_mini_ml_lib.neural_networks.MLPRegressor.early_stopping": {"tf": 1}, "ifri_mini_ml_lib.neural_networks.MLPRegressor.validation_fraction": {"tf": 1}, "ifri_mini_ml_lib.neural_networks.MLPRegressor.n_iter_no_change": {"tf": 1}, "ifri_mini_ml_lib.neural_networks.MLPRegressor.activation_functions": {"tf": 1}, "ifri_mini_ml_lib.neural_networks.MLPRegressor.activation_derivatives": {"tf": 1}, "ifri_mini_ml_lib.neural_networks.MLPRegressor.activation_func": {"tf": 1}, "ifri_mini_ml_lib.neural_networks.MLPRegressor.activation_derivative": {"tf": 1}, "ifri_mini_ml_lib.neural_networks.MLPRegressor.weights": {"tf": 1}, "ifri_mini_ml_lib.neural_networks.MLPRegressor.biases": {"tf": 1}, "ifri_mini_ml_lib.neural_networks.MLPRegressor.n_layers": {"tf": 1}, "ifri_mini_ml_lib.neural_networks.MLPRegressor.n_outputs": {"tf": 1}, "ifri_mini_ml_lib.neural_networks.MLPRegressor.velocity_weights": {"tf": 1}, "ifri_mini_ml_lib.neural_networks.MLPRegressor.velocity_biases": {"tf": 1}, "ifri_mini_ml_lib.neural_networks.MLPRegressor.m_weights": {"tf": 1}, "ifri_mini_ml_lib.neural_networks.MLPRegressor.m_biases": {"tf": 1}, "ifri_mini_ml_lib.neural_networks.MLPRegressor.v_weights": {"tf": 1}, "ifri_mini_ml_lib.neural_networks.MLPRegressor.v_biases": {"tf": 1}, "ifri_mini_ml_lib.neural_networks.MLPRegressor.t": {"tf": 1}, "ifri_mini_ml_lib.neural_networks.MLPRegressor.loss_history": {"tf": 1}, "ifri_mini_ml_lib.neural_networks.MLPRegressor.val_loss_history": {"tf": 1}, "ifri_mini_ml_lib.neural_networks.MLPRegressor.best_loss": {"tf": 1}, "ifri_mini_ml_lib.neural_networks.MLPRegressor.no_improvement_count": {"tf": 1}, "ifri_mini_ml_lib.neural_networks.MLPRegressor.trained": {"tf": 1}, "ifri_mini_ml_lib.neural_networks.MLPRegressor.fit": {"tf": 1}, "ifri_mini_ml_lib.neural_networks.MLPRegressor.predict": {"tf": 1}, "ifri_mini_ml_lib.neural_networks.MLPRegressor.score": {"tf": 1}}, "df": 41}}}}}}}}}}}}, "s": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "t": {"docs": {"ifri_mini_ml_lib.association_rules.Apriori.min_support": {"tf": 1}, "ifri_mini_ml_lib.association_rules.Eclat.min_support": {"tf": 1}, "ifri_mini_ml_lib.association_rules.FPGrowth.min_support": {"tf": 1}}, "df": 3}}}}}}, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "e": {"docs": {"ifri_mini_ml_lib.association_rules.Eclat.get_single_items_TIDset": {"tf": 1}}, "df": 1}}}}, "l": {"docs": {}, "df": 0, "h": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {"ifri_mini_ml_lib.metrics.evaluation_metrics.calculate_silhouette": {"tf": 1}}, "df": 1}}}}}}}}, "z": {"docs": {}, "df": 0, "e": {"docs": {"ifri_mini_ml_lib.neural_networks.MLPClassifier.batch_size": {"tf": 1}, "ifri_mini_ml_lib.neural_networks.MLPRegressor.batch_size": {"tf": 1}}, "df": 2, "s": {"docs": {"ifri_mini_ml_lib.neural_networks.MLPClassifier.hidden_layer_sizes": {"tf": 1}, "ifri_mini_ml_lib.neural_networks.MLPRegressor.hidden_layer_sizes": {"tf": 1}}, "df": 2}}}, "g": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "d": {"docs": {"ifri_mini_ml_lib.regression.SVR.sigmoid_kernel": {"tf": 1}}, "df": 1}}}}}}, "a": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {"ifri_mini_ml_lib.classification.DecisionTree.min_samples_split": {"tf": 1}, "ifri_mini_ml_lib.classification.DecisionTree.min_samples_leaf": {"tf": 1}, "ifri_mini_ml_lib.clustering.DBSCAN.min_samples": {"tf": 1}}, "df": 3}}}}}}, "p": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "t": {"docs": {"ifri_mini_ml_lib.classification.DecisionTree.min_samples_split": {"tf": 1}, "ifri_mini_ml_lib.preprocessing.preparation.DataSplitter.train_test_split": {"tf": 1}, "ifri_mini_ml_lib.preprocessing.preparation.DataSplitter.stratified_train_test_split": {"tf": 1}, "ifri_mini_ml_lib.preprocessing.preparation.DataSplitter.temporal_train_test_split": {"tf": 1}, "ifri_mini_ml_lib.preprocessing.preparation.DataSplitter.k_fold_split": {"tf": 1}}, "df": 5}}}}, "t": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {"ifri_mini_ml_lib.clustering.KMeans.random_state": {"tf": 1}, "ifri_mini_ml_lib.model_selection.BaggingClassifier.random_state": {"tf": 1}, "ifri_mini_ml_lib.model_selection.BaggingRegressor.random_state": {"tf": 1}, "ifri_mini_ml_lib.model_selection.BayesianSearchCV.random_state": {"tf": 1}, "ifri_mini_ml_lib.model_selection.RandomSearchCV.random_state": {"tf": 1}, "ifri_mini_ml_lib.preprocessing.dimensionality_reduction.TSNE.random_state": {"tf": 1}}, "df": 6}, "i": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "l": {"docs": {"ifri_mini_ml_lib.preprocessing.preparation.MissingValueHandler.impute_statistical": {"tf": 1}}, "df": 1}}}}}}}}, "n": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"ifri_mini_ml_lib.preprocessing.preparation.StandardScaler": {"tf": 1}, "ifri_mini_ml_lib.preprocessing.preparation.StandardScaler.__init__": {"tf": 1}, "ifri_mini_ml_lib.preprocessing.preparation.StandardScaler.mean_": {"tf": 1}, "ifri_mini_ml_lib.preprocessing.preparation.StandardScaler.std_": {"tf": 1}, "ifri_mini_ml_lib.preprocessing.preparation.StandardScaler.is_dataframe": {"tf": 1}, "ifri_mini_ml_lib.preprocessing.preparation.StandardScaler.columns": {"tf": 1}, "ifri_mini_ml_lib.preprocessing.preparation.StandardScaler.fit": {"tf": 1}, "ifri_mini_ml_lib.preprocessing.preparation.StandardScaler.transform": {"tf": 1}, "ifri_mini_ml_lib.preprocessing.preparation.StandardScaler.fit_transform": {"tf": 1}, "ifri_mini_ml_lib.preprocessing.preparation.StandardScaler.inverse_transform": {"tf": 1}}, "df": 10}}}}}}}}}}}}, "r": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "f": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "d": {"docs": {"ifri_mini_ml_lib.model_selection.BayesianSearchCV.stratified": {"tf": 1}, "ifri_mini_ml_lib.model_selection.GridSearchCV.stratified": {"tf": 1}, "ifri_mini_ml_lib.model_selection.RandomSearchCV.stratified": {"tf": 1}, "ifri_mini_ml_lib.preprocessing.preparation.DataSplitter.stratified_train_test_split": {"tf": 1}}, "df": 4}}}}}}}}, "o": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"ifri_mini_ml_lib.neural_networks.MLPClassifier.early_stopping": {"tf": 1}, "ifri_mini_ml_lib.neural_networks.MLPRegressor.early_stopping": {"tf": 1}}, "df": 2}}}}}}, "d": {"docs": {"ifri_mini_ml_lib.preprocessing.preparation.StandardScaler.std_": {"tf": 1}}, "df": 1}}, "e": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"ifri_mini_ml_lib.metrics.bias_evaluation.selection_rate": {"tf": 1}, "ifri_mini_ml_lib.metrics.bias_evaluation.selection_rate_per_group": {"tf": 1}}, "df": 2}}}}}}}, "e": {"docs": {}, "df": 0, "d": {"docs": {"ifri_mini_ml_lib.preprocessing.preparation.DataSplitter.seed": {"tf": 1}}, "df": 1}}, "t": {"docs": {"ifri_mini_ml_lib.regression.SVR.set_params": {"tf": 1}}, "df": 1}}, "c": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "e": {"docs": {"ifri_mini_ml_lib.metrics.evaluation_metrics.f1_score": {"tf": 1}, "ifri_mini_ml_lib.model_selection.GridSearchCV.best_score_": {"tf": 1}, "ifri_mini_ml_lib.model_selection.RandomSearchCV.best_score_": {"tf": 1}, "ifri_mini_ml_lib.neural_networks.MLPClassifier.score": {"tf": 1}, "ifri_mini_ml_lib.neural_networks.MLPRegressor.score": {"tf": 1}}, "df": 5}, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"ifri_mini_ml_lib.model_selection.BayesianSearchCV.scoring": {"tf": 1}, "ifri_mini_ml_lib.model_selection.GridSearchCV.scoring": {"tf": 1}, "ifri_mini_ml_lib.model_selection.RandomSearchCV.scoring": {"tf": 1}}, "df": 3}}}}}}, "o": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "v": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"ifri_mini_ml_lib.neural_networks.MLPClassifier.solver": {"tf": 1}, "ifri_mini_ml_lib.neural_networks.MLPRegressor.solver": {"tf": 1}}, "df": 2}}}}}, "h": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "f": {"docs": {}, "df": 0, "f": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "e": {"docs": {"ifri_mini_ml_lib.neural_networks.MLPClassifier.shuffle": {"tf": 1}, "ifri_mini_ml_lib.neural_networks.MLPRegressor.shuffle": {"tf": 1}}, "df": 2}}}}}}, "v": {"docs": {}, "df": 0, "r": {"docs": {"ifri_mini_ml_lib.regression.SVR": {"tf": 1}, "ifri_mini_ml_lib.regression.SVR.__init__": {"tf": 1}, "ifri_mini_ml_lib.regression.SVR.kerlist": {"tf": 1}, "ifri_mini_ml_lib.regression.SVR.eps": {"tf": 1}, "ifri_mini_ml_lib.regression.SVR.train_X": {"tf": 1}, "ifri_mini_ml_lib.regression.SVR.train_y": {"tf": 1}, "ifri_mini_ml_lib.regression.SVR.test_X": {"tf": 1}, "ifri_mini_ml_lib.regression.SVR.test_y": {"tf": 1}, "ifri_mini_ml_lib.regression.SVR.ker": {"tf": 1}, "ifri_mini_ml_lib.regression.SVR.linear_kernel": {"tf": 1}, "ifri_mini_ml_lib.regression.SVR.polynomial_kernel": {"tf": 1}, "ifri_mini_ml_lib.regression.SVR.rbf_kernel": {"tf": 1}, "ifri_mini_ml_lib.regression.SVR.sigmoid_kernel": {"tf": 1}, "ifri_mini_ml_lib.regression.SVR.get_kernel": {"tf": 1}, "ifri_mini_ml_lib.regression.SVR.fit": {"tf": 1}, "ifri_mini_ml_lib.regression.SVR.predict": {"tf": 1}, "ifri_mini_ml_lib.regression.SVR.set_params": {"tf": 1}}, "df": 17}}}, "c": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "f": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "e": {"docs": {"ifri_mini_ml_lib.association_rules.Apriori.min_confidence": {"tf": 1}, "ifri_mini_ml_lib.association_rules.Eclat.min_confidence": {"tf": 1}, "ifri_mini_ml_lib.association_rules.FPGrowth.min_confidence": {"tf": 1}}, "df": 3}}}}}}, "u": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"ifri_mini_ml_lib.metrics.evaluation_metrics.confusion_matrix": {"tf": 1}}, "df": 1}}}}}}, "v": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "t": {"docs": {"ifri_mini_ml_lib.association_rules.DataAdapter.convert_to_transactions": {"tf": 1}}, "df": 1}}}}}, "u": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "t": {"docs": {"ifri_mini_ml_lib.neural_networks.MLPClassifier.no_improvement_count": {"tf": 1}, "ifri_mini_ml_lib.neural_networks.MLPRegressor.no_improvement_count": {"tf": 1}}, "df": 2}}}, "m": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "t": {"docs": {"ifri_mini_ml_lib.preprocessing.dimensionality_reduction.PCA.n_component": {"tf": 1}}, "df": 1, "s": {"docs": {"ifri_mini_ml_lib.preprocessing.dimensionality_reduction.PCA.components": {"tf": 1}, "ifri_mini_ml_lib.preprocessing.dimensionality_reduction.TSNE.n_components": {"tf": 1}}, "df": 2}}}}}}}}, "v": {"docs": {"ifri_mini_ml_lib.preprocessing.dimensionality_reduction.PCA.cov": {"tf": 1}, "ifri_mini_ml_lib.preprocessing.dimensionality_reduction.PCA.plot_cov_matrix": {"tf": 1}}, "df": 2}, "l": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "n": {"docs": {"ifri_mini_ml_lib.preprocessing.preparation.CategoricalEncoder.target_column": {"tf": 1}}, "df": 1, "s": {"docs": {"ifri_mini_ml_lib.preprocessing.preparation.MinMaxScaler.columns": {"tf": 1}, "ifri_mini_ml_lib.preprocessing.preparation.StandardScaler.columns": {"tf": 1}}, "df": 2}}}}}}, "s": {"docs": {}, "df": 0, "v": {"docs": {"ifri_mini_ml_lib.association_rules.DataAdapter.load_csv_to_transactions": {"tf": 1}}, "df": 1}}, "l": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "s": {"docs": {"ifri_mini_ml_lib.clustering.KMeans.n_clusters": {"tf": 1}, "ifri_mini_ml_lib.clustering.KMeans.plot_clusters": {"tf": 1}, "ifri_mini_ml_lib.clustering.DBSCAN.plot_clusters": {"tf": 1}, "ifri_mini_ml_lib.clustering.HierarchicalClustering.n_clusters": {"tf": 1}, "ifri_mini_ml_lib.clustering.HierarchicalClustering.plot_clusters": {"tf": 1}}, "df": 5}}}}}}, "a": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {"ifri_mini_ml_lib.neural_networks.MLPClassifier.classes_": {"tf": 1}}, "df": 1}}}}}}, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "s": {"docs": {"ifri_mini_ml_lib.clustering.KMeans.centroids": {"tf": 1}}, "df": 1}}}}}}}}, "a": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {"ifri_mini_ml_lib.metrics.evaluation_metrics.calculate_inertia": {"tf": 1}, "ifri_mini_ml_lib.metrics.evaluation_metrics.calculate_silhouette": {"tf": 1}}, "df": 2}}}}}}}, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"ifri_mini_ml_lib.preprocessing.preparation.CategoricalEncoder": {"tf": 1}, "ifri_mini_ml_lib.preprocessing.preparation.CategoricalEncoder.__init__": {"tf": 1}, "ifri_mini_ml_lib.preprocessing.preparation.CategoricalEncoder.encoding_type": {"tf": 1}, "ifri_mini_ml_lib.preprocessing.preparation.CategoricalEncoder.target_column": {"tf": 1}, "ifri_mini_ml_lib.preprocessing.preparation.CategoricalEncoder.mapping": {"tf": 1}, "ifri_mini_ml_lib.preprocessing.preparation.CategoricalEncoder.fit": {"tf": 1}, "ifri_mini_ml_lib.preprocessing.preparation.CategoricalEncoder.transform": {"tf": 1}, "ifri_mini_ml_lib.preprocessing.preparation.CategoricalEncoder.fit_transform": {"tf": 1}}, "df": 8}}}}}}}}}}}}}}}}}, "v": {"docs": {"ifri_mini_ml_lib.model_selection.BayesianSearchCV.cv": {"tf": 1}}, "df": 1}, "h": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "e": {"docs": {"ifri_mini_ml_lib.neural_networks.MLPClassifier.n_iter_no_change": {"tf": 1}, "ifri_mini_ml_lib.neural_networks.MLPRegressor.n_iter_no_change": {"tf": 1}}, "df": 2}}}}}, "u": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "v": {"docs": {}, "df": 0, "e": {"docs": {"ifri_mini_ml_lib.preprocessing.dimensionality_reduction.PCA.plot_cumulative_explained_variance_ratio": {"tf": 1}}, "df": 1}}}}}}}}}}, "f": {"1": {"docs": {"ifri_mini_ml_lib.metrics.evaluation_metrics.f1_score": {"tf": 1}}, "df": 1}, "docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "q": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "t": {"docs": {"ifri_mini_ml_lib.association_rules.Apriori.frequent_itemsets_": {"tf": 1}, "ifri_mini_ml_lib.association_rules.Apriori.get_frequent_itemsets": {"tf": 1}, "ifri_mini_ml_lib.association_rules.Eclat.frequent_itemsets": {"tf": 1}, "ifri_mini_ml_lib.association_rules.Eclat.frequent_TIDsets": {"tf": 1}, "ifri_mini_ml_lib.association_rules.Eclat.get_frequent_itemsets": {"tf": 1}, "ifri_mini_ml_lib.association_rules.FPGrowth.frequent_itemsets_dict": {"tf": 1}, "ifri_mini_ml_lib.association_rules.FPGrowth.get_frequent_itemsets": {"tf": 1}}, "df": 7}}}}}}, "a": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"ifri_mini_ml_lib.neural_networks.MLPClassifier.validation_fraction": {"tf": 1}, "ifri_mini_ml_lib.neural_networks.MLPRegressor.validation_fraction": {"tf": 1}}, "df": 2}}}}}}}, "i": {"docs": {}, "df": 0, "t": {"docs": {"ifri_mini_ml_lib.association_rules.Apriori.fit": {"tf": 1}, "ifri_mini_ml_lib.association_rules.Eclat.fit": {"tf": 1}, "ifri_mini_ml_lib.association_rules.FPGrowth.fit": {"tf": 1}, "ifri_mini_ml_lib.classification.DecisionTree.fit": {"tf": 1}, "ifri_mini_ml_lib.classification.KNN.fit": {"tf": 1}, "ifri_mini_ml_lib.classification.LogisticRegression.fit": {"tf": 1}, "ifri_mini_ml_lib.clustering.KMeans.fit": {"tf": 1}, "ifri_mini_ml_lib.clustering.KMeans.fit_predict": {"tf": 1}, "ifri_mini_ml_lib.clustering.DBSCAN.fit_predict": {"tf": 1}, "ifri_mini_ml_lib.clustering.HierarchicalClustering.fit_predict": {"tf": 1}, "ifri_mini_ml_lib.model_selection.BaggingClassifier.fit": {"tf": 1}, "ifri_mini_ml_lib.model_selection.BaggingRegressor.fit": {"tf": 1}, "ifri_mini_ml_lib.model_selection.BayesianSearchCV.fit": {"tf": 1}, "ifri_mini_ml_lib.model_selection.GridSearchCV.fit": {"tf": 1}, "ifri_mini_ml_lib.model_selection.RandomSearchCV.fit": {"tf": 1}, "ifri_mini_ml_lib.neural_networks.MLPClassifier.fit": {"tf": 1}, "ifri_mini_ml_lib.neural_networks.MLPRegressor.fit": {"tf": 1}, "ifri_mini_ml_lib.preprocessing.dimensionality_reduction.PCA.fit": {"tf": 1}, "ifri_mini_ml_lib.preprocessing.dimensionality_reduction.PCA.fit_transform": {"tf": 1}, "ifri_mini_ml_lib.preprocessing.dimensionality_reduction.TSNE.fit": {"tf": 1}, "ifri_mini_ml_lib.preprocessing.dimensionality_reduction.TSNE.fit_transform": {"tf": 1}, "ifri_mini_ml_lib.preprocessing.preparation.MinMaxScaler.fit": {"tf": 1}, "ifri_mini_ml_lib.preprocessing.preparation.MinMaxScaler.fit_transform": {"tf": 1}, "ifri_mini_ml_lib.preprocessing.preparation.StandardScaler.fit": {"tf": 1}, "ifri_mini_ml_lib.preprocessing.preparation.StandardScaler.fit_transform": {"tf": 1}, "ifri_mini_ml_lib.preprocessing.preparation.CategoricalEncoder.fit": {"tf": 1}, "ifri_mini_ml_lib.preprocessing.preparation.CategoricalEncoder.fit_transform": {"tf": 1}, "ifri_mini_ml_lib.regression.LinearRegression.fit": {"tf": 1}, "ifri_mini_ml_lib.regression.PolynomialRegression.fit": {"tf": 1}, "ifri_mini_ml_lib.regression.SVR.fit": {"tf": 1}}, "df": 30}}, "p": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "w": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "h": {"docs": {"ifri_mini_ml_lib.association_rules.FPGrowth": {"tf": 1}, "ifri_mini_ml_lib.association_rules.FPGrowth.__init__": {"tf": 1}, "ifri_mini_ml_lib.association_rules.FPGrowth.min_support": {"tf": 1}, "ifri_mini_ml_lib.association_rules.FPGrowth.min_confidence": {"tf": 1}, "ifri_mini_ml_lib.association_rules.FPGrowth.frequent_itemsets_dict": {"tf": 1}, "ifri_mini_ml_lib.association_rules.FPGrowth.rules_": {"tf": 1}, "ifri_mini_ml_lib.association_rules.FPGrowth.header_table": {"tf": 1}, "ifri_mini_ml_lib.association_rules.FPGrowth.n_transactions": {"tf": 1}, "ifri_mini_ml_lib.association_rules.FPGrowth.fit": {"tf": 1}, "ifri_mini_ml_lib.association_rules.FPGrowth.get_frequent_itemsets": {"tf": 1}, "ifri_mini_ml_lib.association_rules.FPGrowth.get_rules": {"tf": 1}}, "df": 11}}}}}}, "r": {"docs": {"ifri_mini_ml_lib.metrics.bias_evaluation.tpr_fpr_by_group": {"tf": 1}}, "df": 1}}, "u": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "c": {"docs": {"ifri_mini_ml_lib.neural_networks.MLPClassifier.activation_func": {"tf": 1}, "ifri_mini_ml_lib.neural_networks.MLPRegressor.activation_func": {"tf": 1}}, "df": 2, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "s": {"docs": {"ifri_mini_ml_lib.neural_networks.MLPClassifier.activation_functions": {"tf": 1}, "ifri_mini_ml_lib.neural_networks.MLPRegressor.activation_functions": {"tf": 1}}, "df": 2}}}}}}}}, "o": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "d": {"docs": {"ifri_mini_ml_lib.preprocessing.preparation.DataSplitter.k_fold_split": {"tf": 1}}, "df": 1}}}}, "r": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {"ifri_mini_ml_lib.association_rules.Apriori.rules_": {"tf": 1}, "ifri_mini_ml_lib.association_rules.Apriori.get_rules": {"tf": 1}, "ifri_mini_ml_lib.association_rules.Eclat.rules_": {"tf": 1}, "ifri_mini_ml_lib.association_rules.Eclat.get_rules": {"tf": 1}, "ifri_mini_ml_lib.association_rules.FPGrowth.rules_": {"tf": 1}, "ifri_mini_ml_lib.association_rules.FPGrowth.get_rules": {"tf": 1}}, "df": 6}}}}, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {"ifri_mini_ml_lib.classification.LogisticRegression.learning_rate": {"tf": 1}, "ifri_mini_ml_lib.metrics.bias_evaluation.selection_rate": {"tf": 1}, "ifri_mini_ml_lib.metrics.bias_evaluation.selection_rate_per_group": {"tf": 1}, "ifri_mini_ml_lib.neural_networks.MLPClassifier.learning_rate": {"tf": 1}, "ifri_mini_ml_lib.neural_networks.MLPRegressor.learning_rate": {"tf": 1}, "ifri_mini_ml_lib.preprocessing.dimensionality_reduction.TSNE.learning_rate": {"tf": 1}, "ifri_mini_ml_lib.regression.LinearRegression.learning_rate": {"tf": 1}, "ifri_mini_ml_lib.regression.PolynomialRegression.learning_rate": {"tf": 1}}, "df": 8}, "i": {"docs": {}, "df": 0, "o": {"docs": {"ifri_mini_ml_lib.metrics.bias_evaluation.demographic_parity_ratio": {"tf": 1}, "ifri_mini_ml_lib.metrics.bias_evaluation.equalized_odds_ratio": {"tf": 1}, "ifri_mini_ml_lib.preprocessing.dimensionality_reduction.PCA.explained_variances_ratio": {"tf": 1}, "ifri_mini_ml_lib.preprocessing.dimensionality_reduction.PCA.plot_cumulative_explained_variance_ratio": {"tf": 1}}, "df": 4}}}, "n": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "m": {"docs": {"ifri_mini_ml_lib.clustering.KMeans.random_state": {"tf": 1}, "ifri_mini_ml_lib.model_selection.BaggingClassifier.random_state": {"tf": 1}, "ifri_mini_ml_lib.model_selection.BaggingRegressor.random_state": {"tf": 1}, "ifri_mini_ml_lib.model_selection.BayesianSearchCV.random_state": {"tf": 1}, "ifri_mini_ml_lib.model_selection.RandomSearchCV.random_state": {"tf": 1}, "ifri_mini_ml_lib.preprocessing.dimensionality_reduction.TSNE.random_state": {"tf": 1}}, "df": 6, "s": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "h": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "v": {"docs": {"ifri_mini_ml_lib.model_selection.RandomSearchCV": {"tf": 1}, "ifri_mini_ml_lib.model_selection.RandomSearchCV.__init__": {"tf": 1}, "ifri_mini_ml_lib.model_selection.RandomSearchCV.model": {"tf": 1}, "ifri_mini_ml_lib.model_selection.RandomSearchCV.param_grid": {"tf": 1}, "ifri_mini_ml_lib.model_selection.RandomSearchCV.n_iter": {"tf": 1}, "ifri_mini_ml_lib.model_selection.RandomSearchCV.k": {"tf": 1}, "ifri_mini_ml_lib.model_selection.RandomSearchCV.scoring": {"tf": 1}, "ifri_mini_ml_lib.model_selection.RandomSearchCV.stratified": {"tf": 1}, "ifri_mini_ml_lib.model_selection.RandomSearchCV.random_state": {"tf": 1}, "ifri_mini_ml_lib.model_selection.RandomSearchCV.best_params_": {"tf": 1}, "ifri_mini_ml_lib.model_selection.RandomSearchCV.best_score_": {"tf": 1}, "ifri_mini_ml_lib.model_selection.RandomSearchCV.best_estimator_": {"tf": 1}, "ifri_mini_ml_lib.model_selection.RandomSearchCV.fit": {"tf": 1}}, "df": 13}}}}}}}}}}}}}, "e": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "l": {"docs": {"ifri_mini_ml_lib.metrics.evaluation_metrics.recall": {"tf": 1}}, "df": 1}}}}, "s": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "s": {"docs": {"ifri_mini_ml_lib.preprocessing.dimensionality_reduction.TSNE.plot_results": {"tf": 1}}, "df": 1}}}}}, "m": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "v": {"docs": {}, "df": 0, "e": {"docs": {"ifri_mini_ml_lib.preprocessing.preparation.MissingValueHandler.remove_missing": {"tf": 1}}, "df": 1}}}}, "g": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"ifri_mini_ml_lib.preprocessing.preparation.MissingValueHandler.impute_regression": {"tf": 1}}, "df": 1}}}}}}}}}, "n": {"docs": {}, "df": 0, "g": {"docs": {"ifri_mini_ml_lib.preprocessing.dimensionality_reduction.TSNE.rng": {"tf": 1}}, "df": 1}}, "b": {"docs": {}, "df": 0, "f": {"docs": {"ifri_mini_ml_lib.regression.SVR.rbf_kernel": {"tf": 1}}, "df": 1}}}, "g": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "t": {"docs": {"ifri_mini_ml_lib.association_rules.Apriori.get_frequent_itemsets": {"tf": 1}, "ifri_mini_ml_lib.association_rules.Apriori.get_rules": {"tf": 1}, "ifri_mini_ml_lib.association_rules.Eclat.get_single_items_TIDset": {"tf": 1}, "ifri_mini_ml_lib.association_rules.Eclat.get_frequent_itemsets": {"tf": 1}, "ifri_mini_ml_lib.association_rules.Eclat.get_rules": {"tf": 1}, "ifri_mini_ml_lib.association_rules.FPGrowth.get_frequent_itemsets": {"tf": 1}, "ifri_mini_ml_lib.association_rules.FPGrowth.get_rules": {"tf": 1}, "ifri_mini_ml_lib.model_selection.BayesianSearchCV.get_best_params": {"tf": 1}, "ifri_mini_ml_lib.regression.SVR.get_kernel": {"tf": 1}}, "df": 9}, "n": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {"ifri_mini_ml_lib.preprocessing.dimensionality_reduction.TSNE.generate_test_data": {"tf": 1}}, "df": 1}}}}}}}, "r": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "p": {"docs": {"ifri_mini_ml_lib.metrics.bias_evaluation.selection_rate_per_group": {"tf": 1}, "ifri_mini_ml_lib.metrics.bias_evaluation.tpr_fpr_by_group": {"tf": 1}}, "df": 2}}}, "i": {"docs": {}, "df": 0, "d": {"docs": {"ifri_mini_ml_lib.model_selection.GridSearchCV.param_grid": {"tf": 1}, "ifri_mini_ml_lib.model_selection.RandomSearchCV.param_grid": {"tf": 1}}, "df": 2, "s": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "h": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "v": {"docs": {"ifri_mini_ml_lib.model_selection.GridSearchCV": {"tf": 1}, "ifri_mini_ml_lib.model_selection.GridSearchCV.__init__": {"tf": 1}, "ifri_mini_ml_lib.model_selection.GridSearchCV.model": {"tf": 1}, "ifri_mini_ml_lib.model_selection.GridSearchCV.param_grid": {"tf": 1}, "ifri_mini_ml_lib.model_selection.GridSearchCV.k": {"tf": 1}, "ifri_mini_ml_lib.model_selection.GridSearchCV.scoring": {"tf": 1}, "ifri_mini_ml_lib.model_selection.GridSearchCV.stratified": {"tf": 1}, "ifri_mini_ml_lib.model_selection.GridSearchCV.best_params_": {"tf": 1}, "ifri_mini_ml_lib.model_selection.GridSearchCV.best_score_": {"tf": 1}, "ifri_mini_ml_lib.model_selection.GridSearchCV.best_estimator_": {"tf": 1}, "ifri_mini_ml_lib.model_selection.GridSearchCV.fit": {"tf": 1}}, "df": 11}}}}}}}}}}, "a": {"docs": {}, "df": 0, "d": {"docs": {"ifri_mini_ml_lib.preprocessing.dimensionality_reduction.TSNE.min_grad_norm": {"tf": 1}}, "df": 1}}}, "p": {"docs": {"ifri_mini_ml_lib.model_selection.BayesianSearchCV.gp": {"tf": 1}}, "df": 1}}, "e": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {"ifri_mini_ml_lib.association_rules.Eclat": {"tf": 1}, "ifri_mini_ml_lib.association_rules.Eclat.__init__": {"tf": 1}, "ifri_mini_ml_lib.association_rules.Eclat.min_support": {"tf": 1}, "ifri_mini_ml_lib.association_rules.Eclat.min_confidence": {"tf": 1}, "ifri_mini_ml_lib.association_rules.Eclat.frequent_itemsets": {"tf": 1}, "ifri_mini_ml_lib.association_rules.Eclat.frequent_TIDsets": {"tf": 1}, "ifri_mini_ml_lib.association_rules.Eclat.rules_": {"tf": 1}, "ifri_mini_ml_lib.association_rules.Eclat.n_transactions": {"tf": 1}, "ifri_mini_ml_lib.association_rules.Eclat.fit": {"tf": 1}, "ifri_mini_ml_lib.association_rules.Eclat.get_single_items_TIDset": {"tf": 1}, "ifri_mini_ml_lib.association_rules.Eclat.get_frequent_itemsets": {"tf": 1}, "ifri_mini_ml_lib.association_rules.Eclat.get_rules": {"tf": 1}}, "df": 12}}}}, "p": {"docs": {}, "df": 0, "s": {"docs": {"ifri_mini_ml_lib.clustering.DBSCAN.eps": {"tf": 1}, "ifri_mini_ml_lib.regression.SVR.eps": {"tf": 1}}, "df": 2, "i": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"ifri_mini_ml_lib.neural_networks.MLPClassifier.epsilon": {"tf": 1}, "ifri_mini_ml_lib.neural_networks.MLPRegressor.epsilon": {"tf": 1}}, "df": 2}}}}}, "o": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "h": {"docs": {}, "df": 0, "s": {"docs": {"ifri_mini_ml_lib.regression.LinearRegression.epochs": {"tf": 1}, "ifri_mini_ml_lib.regression.PolynomialRegression.epochs": {"tf": 1}}, "df": 2}}}}}, "q": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "z": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "d": {"docs": {"ifri_mini_ml_lib.metrics.bias_evaluation.equalized_odds_ratio": {"tf": 1}, "ifri_mini_ml_lib.metrics.bias_evaluation.equalized_odds_difference": {"tf": 1}}, "df": 2}}}}}}}}, "v": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {"ifri_mini_ml_lib.metrics.evaluation_metrics.evaluate_model": {"tf": 1}}, "df": 1}}}}}}}, "s": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {"ifri_mini_ml_lib.model_selection.BayesianSearchCV.estimator": {"tf": 1}, "ifri_mini_ml_lib.model_selection.GridSearchCV.best_estimator_": {"tf": 1}, "ifri_mini_ml_lib.model_selection.RandomSearchCV.best_estimator_": {"tf": 1}}, "df": 3, "s": {"docs": {"ifri_mini_ml_lib.model_selection.BaggingClassifier.n_estimators": {"tf": 1}, "ifri_mini_ml_lib.model_selection.BaggingRegressor.n_estimators": {"tf": 1}}, "df": 2}}}}}}}}}, "a": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "y": {"docs": {"ifri_mini_ml_lib.neural_networks.MLPClassifier.early_stopping": {"tf": 1}, "ifri_mini_ml_lib.neural_networks.MLPRegressor.early_stopping": {"tf": 1}, "ifri_mini_ml_lib.preprocessing.dimensionality_reduction.TSNE.early_exaggeration": {"tf": 1}}, "df": 3}}}}, "i": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {"ifri_mini_ml_lib.preprocessing.dimensionality_reduction.PCA.eigen_values": {"tf": 1}, "ifri_mini_ml_lib.preprocessing.dimensionality_reduction.PCA.eigen_vectors": {"tf": 1}}, "df": 2}}}}, "x": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "d": {"docs": {"ifri_mini_ml_lib.preprocessing.dimensionality_reduction.PCA.explained_variances": {"tf": 1}, "ifri_mini_ml_lib.preprocessing.dimensionality_reduction.PCA.explained_variances_ratio": {"tf": 1}, "ifri_mini_ml_lib.preprocessing.dimensionality_reduction.PCA.plot_cumulative_explained_variance_ratio": {"tf": 1}}, "df": 3}}}}}}}, "a": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"ifri_mini_ml_lib.preprocessing.dimensionality_reduction.TSNE.early_exaggeration": {"tf": 1}}, "df": 1}}}}}}}}}}}, "m": {"docs": {}, "df": 0, "b": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"ifri_mini_ml_lib.preprocessing.dimensionality_reduction.TSNE.embedding_": {"tf": 1}}, "df": 1}}}}}}}}, "n": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"ifri_mini_ml_lib.preprocessing.preparation.CategoricalEncoder.encoding_type": {"tf": 1}}, "df": 1}}}}}}}}, "t": {"docs": {"ifri_mini_ml_lib.neural_networks.MLPClassifier.t": {"tf": 1}, "ifri_mini_ml_lib.neural_networks.MLPRegressor.t": {"tf": 1}}, "df": 2, "i": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "t": {"docs": {"ifri_mini_ml_lib.association_rules.Eclat.get_single_items_TIDset": {"tf": 1}}, "df": 1, "s": {"docs": {"ifri_mini_ml_lib.association_rules.Eclat.frequent_TIDsets": {"tf": 1}}, "df": 1}}}}}}, "r": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "s": {"docs": {"ifri_mini_ml_lib.association_rules.Eclat.n_transactions": {"tf": 1}, "ifri_mini_ml_lib.association_rules.FPGrowth.n_transactions": {"tf": 1}, "ifri_mini_ml_lib.association_rules.DataAdapter.convert_to_transactions": {"tf": 1}, "ifri_mini_ml_lib.association_rules.DataAdapter.load_csv_to_transactions": {"tf": 1}}, "df": 4}}}}}}}, "f": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "m": {"docs": {"ifri_mini_ml_lib.preprocessing.dimensionality_reduction.PCA.transform": {"tf": 1}, "ifri_mini_ml_lib.preprocessing.dimensionality_reduction.PCA.fit_transform": {"tf": 1}, "ifri_mini_ml_lib.preprocessing.dimensionality_reduction.TSNE.fit_transform": {"tf": 1}, "ifri_mini_ml_lib.preprocessing.preparation.MinMaxScaler.transform": {"tf": 1}, "ifri_mini_ml_lib.preprocessing.preparation.MinMaxScaler.fit_transform": {"tf": 1}, "ifri_mini_ml_lib.preprocessing.preparation.MinMaxScaler.inverse_transform": {"tf": 1}, "ifri_mini_ml_lib.preprocessing.preparation.StandardScaler.transform": {"tf": 1}, "ifri_mini_ml_lib.preprocessing.preparation.StandardScaler.fit_transform": {"tf": 1}, "ifri_mini_ml_lib.preprocessing.preparation.StandardScaler.inverse_transform": {"tf": 1}, "ifri_mini_ml_lib.preprocessing.preparation.CategoricalEncoder.transform": {"tf": 1}, "ifri_mini_ml_lib.preprocessing.preparation.CategoricalEncoder.fit_transform": {"tf": 1}}, "df": 11}}}}}}, "i": {"docs": {}, "df": 0, "n": {"docs": {"ifri_mini_ml_lib.preprocessing.preparation.DataSplitter.train_test_split": {"tf": 1}, "ifri_mini_ml_lib.preprocessing.preparation.DataSplitter.stratified_train_test_split": {"tf": 1}, "ifri_mini_ml_lib.preprocessing.preparation.DataSplitter.temporal_train_test_split": {"tf": 1}, "ifri_mini_ml_lib.regression.SVR.train_X": {"tf": 1}, "ifri_mini_ml_lib.regression.SVR.train_y": {"tf": 1}}, "df": 5, "e": {"docs": {}, "df": 0, "d": {"docs": {"ifri_mini_ml_lib.neural_networks.MLPClassifier.trained": {"tf": 1}, "ifri_mini_ml_lib.neural_networks.MLPRegressor.trained": {"tf": 1}}, "df": 2}}}}}, "e": {"docs": {}, "df": 0, "e": {"docs": {"ifri_mini_ml_lib.classification.DecisionTree.tree": {"tf": 1}}, "df": 1}}}, "a": {"docs": {}, "df": 0, "b": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "e": {"docs": {"ifri_mini_ml_lib.association_rules.FPGrowth.header_table": {"tf": 1}}, "df": 1}}}, "s": {"docs": {}, "df": 0, "k": {"docs": {"ifri_mini_ml_lib.classification.KNN.task": {"tf": 1}}, "df": 1}}, "r": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "t": {"docs": {"ifri_mini_ml_lib.preprocessing.preparation.CategoricalEncoder.target_column": {"tf": 1}}, "df": 1}}}}}, "o": {"docs": {"ifri_mini_ml_lib.association_rules.DataAdapter.convert_to_transactions": {"tf": 1}, "ifri_mini_ml_lib.association_rules.DataAdapter.load_csv_to_transactions": {"tf": 1}}, "df": 2, "l": {"docs": {"ifri_mini_ml_lib.classification.LogisticRegression.tol": {"tf": 1}, "ifri_mini_ml_lib.clustering.KMeans.tol": {"tf": 1}, "ifri_mini_ml_lib.neural_networks.MLPClassifier.tol": {"tf": 1}, "ifri_mini_ml_lib.neural_networks.MLPRegressor.tol": {"tf": 1}}, "df": 4}}, "p": {"docs": {}, "df": 0, "r": {"docs": {"ifri_mini_ml_lib.metrics.bias_evaluation.tpr_fpr_by_group": {"tf": 1}}, "df": 1}}, "y": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "e": {"docs": {"ifri_mini_ml_lib.preprocessing.preparation.CategoricalEncoder.encoding_type": {"tf": 1}}, "df": 1, "s": {"docs": {"ifri_mini_ml_lib.model_selection.BayesianSearchCV.param_types": {"tf": 1}}, "df": 1}}}}, "s": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "e": {"docs": {"ifri_mini_ml_lib.preprocessing.dimensionality_reduction.TSNE": {"tf": 1}, "ifri_mini_ml_lib.preprocessing.dimensionality_reduction.TSNE.__init__": {"tf": 1}, "ifri_mini_ml_lib.preprocessing.dimensionality_reduction.TSNE.n_components": {"tf": 1}, "ifri_mini_ml_lib.preprocessing.dimensionality_reduction.TSNE.perplexity": {"tf": 1}, "ifri_mini_ml_lib.preprocessing.dimensionality_reduction.TSNE.early_exaggeration": {"tf": 1}, "ifri_mini_ml_lib.preprocessing.dimensionality_reduction.TSNE.learning_rate": {"tf": 1}, "ifri_mini_ml_lib.preprocessing.dimensionality_reduction.TSNE.n_iter": {"tf": 1}, "ifri_mini_ml_lib.preprocessing.dimensionality_reduction.TSNE.init": {"tf": 1}, "ifri_mini_ml_lib.preprocessing.dimensionality_reduction.TSNE.min_grad_norm": {"tf": 1}, "ifri_mini_ml_lib.preprocessing.dimensionality_reduction.TSNE.random_state": {"tf": 1}, "ifri_mini_ml_lib.preprocessing.dimensionality_reduction.TSNE.verbose": {"tf": 1}, "ifri_mini_ml_lib.preprocessing.dimensionality_reduction.TSNE.embedding_": {"tf": 1}, "ifri_mini_ml_lib.preprocessing.dimensionality_reduction.TSNE.kl_divergence_": {"tf": 1}, "ifri_mini_ml_lib.preprocessing.dimensionality_reduction.TSNE.n_iter_": {"tf": 1}, "ifri_mini_ml_lib.preprocessing.dimensionality_reduction.TSNE.rng": {"tf": 1}, "ifri_mini_ml_lib.preprocessing.dimensionality_reduction.TSNE.fit": {"tf": 1}, "ifri_mini_ml_lib.preprocessing.dimensionality_reduction.TSNE.fit_transform": {"tf": 1}, "ifri_mini_ml_lib.preprocessing.dimensionality_reduction.TSNE.generate_test_data": {"tf": 1}, "ifri_mini_ml_lib.preprocessing.dimensionality_reduction.TSNE.plot_results": {"tf": 1}}, "df": 19}}}, "e": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "t": {"docs": {"ifri_mini_ml_lib.preprocessing.dimensionality_reduction.TSNE.generate_test_data": {"tf": 1}, "ifri_mini_ml_lib.preprocessing.preparation.DataSplitter.train_test_split": {"tf": 1}, "ifri_mini_ml_lib.preprocessing.preparation.DataSplitter.stratified_train_test_split": {"tf": 1}, "ifri_mini_ml_lib.preprocessing.preparation.DataSplitter.temporal_train_test_split": {"tf": 1}, "ifri_mini_ml_lib.regression.SVR.test_X": {"tf": 1}, "ifri_mini_ml_lib.regression.SVR.test_y": {"tf": 1}}, "df": 6}}, "m": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "l": {"docs": {"ifri_mini_ml_lib.preprocessing.preparation.DataSplitter.temporal_train_test_split": {"tf": 1}}, "df": 1}}}}}}}}, "n": {"docs": {"ifri_mini_ml_lib.association_rules.Eclat.n_transactions": {"tf": 1}, "ifri_mini_ml_lib.association_rules.FPGrowth.n_transactions": {"tf": 1}, "ifri_mini_ml_lib.clustering.KMeans.n_clusters": {"tf": 1}, "ifri_mini_ml_lib.clustering.HierarchicalClustering.n_clusters": {"tf": 1}, "ifri_mini_ml_lib.model_selection.BaggingClassifier.n_estimators": {"tf": 1}, "ifri_mini_ml_lib.model_selection.BaggingRegressor.n_estimators": {"tf": 1}, "ifri_mini_ml_lib.model_selection.BayesianSearchCV.n_iter": {"tf": 1}, "ifri_mini_ml_lib.model_selection.RandomSearchCV.n_iter": {"tf": 1}, "ifri_mini_ml_lib.neural_networks.MLPClassifier.n_iter_no_change": {"tf": 1}, "ifri_mini_ml_lib.neural_networks.MLPClassifier.n_layers": {"tf": 1}, "ifri_mini_ml_lib.neural_networks.MLPClassifier.n_outputs": {"tf": 1}, "ifri_mini_ml_lib.neural_networks.MLPRegressor.n_iter_no_change": {"tf": 1}, "ifri_mini_ml_lib.neural_networks.MLPRegressor.n_layers": {"tf": 1}, "ifri_mini_ml_lib.neural_networks.MLPRegressor.n_outputs": {"tf": 1}, "ifri_mini_ml_lib.preprocessing.dimensionality_reduction.PCA.n_component": {"tf": 1}, "ifri_mini_ml_lib.preprocessing.dimensionality_reduction.TSNE.n_components": {"tf": 1}, "ifri_mini_ml_lib.preprocessing.dimensionality_reduction.TSNE.n_iter": {"tf": 1}, "ifri_mini_ml_lib.preprocessing.dimensionality_reduction.TSNE.n_iter_": {"tf": 1}}, "df": 18, "o": {"docs": {"ifri_mini_ml_lib.neural_networks.MLPClassifier.n_iter_no_change": {"tf": 1}, "ifri_mini_ml_lib.neural_networks.MLPClassifier.no_improvement_count": {"tf": 1}, "ifri_mini_ml_lib.neural_networks.MLPRegressor.n_iter_no_change": {"tf": 1}, "ifri_mini_ml_lib.neural_networks.MLPRegressor.no_improvement_count": {"tf": 1}}, "df": 4, "r": {"docs": {}, "df": 0, "m": {"docs": {"ifri_mini_ml_lib.preprocessing.dimensionality_reduction.TSNE.min_grad_norm": {"tf": 1}}, "df": 1}}}}, "d": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "t": {"docs": {"ifri_mini_ml_lib.association_rules.FPGrowth.frequent_itemsets_dict": {"tf": 1}}, "df": 1}}, "f": {"docs": {}, "df": 0, "f": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "e": {"docs": {"ifri_mini_ml_lib.metrics.bias_evaluation.demographic_parity_difference": {"tf": 1}, "ifri_mini_ml_lib.metrics.bias_evaluation.equalized_odds_difference": {"tf": 1}}, "df": 2}}}}}}}}, "v": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "e": {"docs": {"ifri_mini_ml_lib.preprocessing.dimensionality_reduction.TSNE.kl_divergence_": {"tf": 1}}, "df": 1}}}}}}}}}, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "a": {"docs": {"ifri_mini_ml_lib.preprocessing.dimensionality_reduction.TSNE.generate_test_data": {"tf": 1}}, "df": 1, "a": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"ifri_mini_ml_lib.association_rules.DataAdapter": {"tf": 1}, "ifri_mini_ml_lib.association_rules.DataAdapter.convert_to_transactions": {"tf": 1}, "ifri_mini_ml_lib.association_rules.DataAdapter.load_csv_to_transactions": {"tf": 1}}, "df": 3}}}}}}}, "f": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "e": {"docs": {"ifri_mini_ml_lib.preprocessing.preparation.StandardScaler.is_dataframe": {"tf": 1}}, "df": 1}}}}}, "s": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"ifri_mini_ml_lib.preprocessing.preparation.DataSplitter": {"tf": 1}, "ifri_mini_ml_lib.preprocessing.preparation.DataSplitter.__init__": {"tf": 1}, "ifri_mini_ml_lib.preprocessing.preparation.DataSplitter.seed": {"tf": 1}, "ifri_mini_ml_lib.preprocessing.preparation.DataSplitter.train_test_split": {"tf": 1}, "ifri_mini_ml_lib.preprocessing.preparation.DataSplitter.stratified_train_test_split": {"tf": 1}, "ifri_mini_ml_lib.preprocessing.preparation.DataSplitter.temporal_train_test_split": {"tf": 1}, "ifri_mini_ml_lib.preprocessing.preparation.DataSplitter.k_fold_split": {"tf": 1}}, "df": 7}}}}}}}}}}}, "e": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "e": {"docs": {"ifri_mini_ml_lib.classification.DecisionTree": {"tf": 1}, "ifri_mini_ml_lib.classification.DecisionTree.__init__": {"tf": 1}, "ifri_mini_ml_lib.classification.DecisionTree.max_depth": {"tf": 1}, "ifri_mini_ml_lib.classification.DecisionTree.min_samples_split": {"tf": 1}, "ifri_mini_ml_lib.classification.DecisionTree.min_samples_leaf": {"tf": 1}, "ifri_mini_ml_lib.classification.DecisionTree.min_impurity_decrease": {"tf": 1}, "ifri_mini_ml_lib.classification.DecisionTree.tree": {"tf": 1}, "ifri_mini_ml_lib.classification.DecisionTree.fit": {"tf": 1}, "ifri_mini_ml_lib.classification.DecisionTree.predict": {"tf": 1}}, "df": 9}}}}}}}}}, "r": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "e": {"docs": {"ifri_mini_ml_lib.classification.DecisionTree.min_impurity_decrease": {"tf": 1}}, "df": 1}}}}}}, "p": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "h": {"docs": {"ifri_mini_ml_lib.classification.DecisionTree.max_depth": {"tf": 1}}, "df": 1}}}, "n": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "m": {"docs": {"ifri_mini_ml_lib.clustering.HierarchicalClustering.plot_dendrogram": {"tf": 1}}, "df": 1}}}}}}}}, "m": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "h": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "c": {"docs": {"ifri_mini_ml_lib.metrics.bias_evaluation.demographic_parity_ratio": {"tf": 1}, "ifri_mini_ml_lib.metrics.bias_evaluation.demographic_parity_difference": {"tf": 1}}, "df": 2}}}}}}}}}, "r": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "v": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "v": {"docs": {}, "df": 0, "e": {"docs": {"ifri_mini_ml_lib.neural_networks.MLPClassifier.activation_derivative": {"tf": 1}, "ifri_mini_ml_lib.neural_networks.MLPRegressor.activation_derivative": {"tf": 1}}, "df": 2, "s": {"docs": {"ifri_mini_ml_lib.neural_networks.MLPClassifier.activation_derivatives": {"tf": 1}, "ifri_mini_ml_lib.neural_networks.MLPRegressor.activation_derivatives": {"tf": 1}}, "df": 2}}}}}}}}}, "f": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "t": {"docs": {"ifri_mini_ml_lib.preprocessing.preparation.MissingValueHandler.impute_default": {"tf": 1}}, "df": 1}}}}}, "g": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "e": {"docs": {"ifri_mini_ml_lib.regression.PolynomialRegression.degree": {"tf": 1}}, "df": 1}}}}}, "b": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "n": {"docs": {"ifri_mini_ml_lib.clustering.DBSCAN": {"tf": 1}, "ifri_mini_ml_lib.clustering.DBSCAN.__init__": {"tf": 1}, "ifri_mini_ml_lib.clustering.DBSCAN.eps": {"tf": 1}, "ifri_mini_ml_lib.clustering.DBSCAN.min_samples": {"tf": 1}, "ifri_mini_ml_lib.clustering.DBSCAN.labels": {"tf": 1}, "ifri_mini_ml_lib.clustering.DBSCAN.fit_predict": {"tf": 1}, "ifri_mini_ml_lib.clustering.DBSCAN.plot_clusters": {"tf": 1}}, "df": 7}}}}}}, "h": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"ifri_mini_ml_lib.association_rules.FPGrowth.header_table": {"tf": 1}}, "df": 1}}}}}, "i": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "y": {"docs": {"ifri_mini_ml_lib.classification.LogisticRegression.loss_history": {"tf": 1}, "ifri_mini_ml_lib.model_selection.BayesianSearchCV.history_": {"tf": 1}, "ifri_mini_ml_lib.neural_networks.MLPClassifier.loss_history": {"tf": 1}, "ifri_mini_ml_lib.neural_networks.MLPClassifier.val_loss_history": {"tf": 1}, "ifri_mini_ml_lib.neural_networks.MLPRegressor.loss_history": {"tf": 1}, "ifri_mini_ml_lib.neural_networks.MLPRegressor.val_loss_history": {"tf": 1}}, "df": 6}}}}}, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "h": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"ifri_mini_ml_lib.clustering.HierarchicalClustering": {"tf": 1}, "ifri_mini_ml_lib.clustering.HierarchicalClustering.__init__": {"tf": 1}, "ifri_mini_ml_lib.clustering.HierarchicalClustering.n_clusters": {"tf": 1}, "ifri_mini_ml_lib.clustering.HierarchicalClustering.linkage": {"tf": 1}, "ifri_mini_ml_lib.clustering.HierarchicalClustering.method": {"tf": 1}, "ifri_mini_ml_lib.clustering.HierarchicalClustering.labels": {"tf": 1}, "ifri_mini_ml_lib.clustering.HierarchicalClustering.linked_matrix": {"tf": 1}, "ifri_mini_ml_lib.clustering.HierarchicalClustering.fit_predict": {"tf": 1}, "ifri_mini_ml_lib.clustering.HierarchicalClustering.plot_dendrogram": {"tf": 1}, "ifri_mini_ml_lib.clustering.HierarchicalClustering.plot_clusters": {"tf": 1}}, "df": 10}}}}}}}}}}}}}}}}}}}}, "d": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {"ifri_mini_ml_lib.neural_networks.MLPClassifier.hidden_layer_sizes": {"tf": 1}, "ifri_mini_ml_lib.neural_networks.MLPRegressor.hidden_layer_sizes": {"tf": 1}}, "df": 2}}}}}}, "l": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "d": {"docs": {"ifri_mini_ml_lib.association_rules.DataAdapter.load_csv_to_transactions": {"tf": 1}}, "df": 1}}, "g": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"ifri_mini_ml_lib.classification.LogisticRegression": {"tf": 1}, "ifri_mini_ml_lib.classification.LogisticRegression.__init__": {"tf": 1}, "ifri_mini_ml_lib.classification.LogisticRegression.learning_rate": {"tf": 1}, "ifri_mini_ml_lib.classification.LogisticRegression.momentum": {"tf": 1}, "ifri_mini_ml_lib.classification.LogisticRegression.max_iter": {"tf": 1}, "ifri_mini_ml_lib.classification.LogisticRegression.tol": {"tf": 1}, "ifri_mini_ml_lib.classification.LogisticRegression.weights": {"tf": 1}, "ifri_mini_ml_lib.classification.LogisticRegression.bias": {"tf": 1}, "ifri_mini_ml_lib.classification.LogisticRegression.loss_history": {"tf": 1}, "ifri_mini_ml_lib.classification.LogisticRegression.fit": {"tf": 1}, "ifri_mini_ml_lib.classification.LogisticRegression.predict_proba": {"tf": 1}, "ifri_mini_ml_lib.classification.LogisticRegression.predict": {"tf": 1}}, "df": 12}}}}}}}}}}}}}}}}, "s": {"docs": {}, "df": 0, "s": {"docs": {"ifri_mini_ml_lib.classification.LogisticRegression.loss_history": {"tf": 1}, "ifri_mini_ml_lib.neural_networks.MLPClassifier.loss_history": {"tf": 1}, "ifri_mini_ml_lib.neural_networks.MLPClassifier.val_loss_history": {"tf": 1}, "ifri_mini_ml_lib.neural_networks.MLPClassifier.best_loss": {"tf": 1}, "ifri_mini_ml_lib.neural_networks.MLPRegressor.loss_history": {"tf": 1}, "ifri_mini_ml_lib.neural_networks.MLPRegressor.val_loss_history": {"tf": 1}, "ifri_mini_ml_lib.neural_networks.MLPRegressor.best_loss": {"tf": 1}}, "df": 7}}}, "e": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "f": {"docs": {"ifri_mini_ml_lib.classification.DecisionTree.min_samples_leaf": {"tf": 1}}, "df": 1}, "r": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"ifri_mini_ml_lib.classification.LogisticRegression.learning_rate": {"tf": 1}, "ifri_mini_ml_lib.neural_networks.MLPClassifier.learning_rate": {"tf": 1}, "ifri_mini_ml_lib.neural_networks.MLPRegressor.learning_rate": {"tf": 1}, "ifri_mini_ml_lib.preprocessing.dimensionality_reduction.TSNE.learning_rate": {"tf": 1}, "ifri_mini_ml_lib.regression.LinearRegression.learning_rate": {"tf": 1}, "ifri_mini_ml_lib.regression.PolynomialRegression.learning_rate": {"tf": 1}}, "df": 6}}}}}}}, "a": {"docs": {}, "df": 0, "b": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "s": {"docs": {"ifri_mini_ml_lib.clustering.KMeans.labels": {"tf": 1}, "ifri_mini_ml_lib.clustering.DBSCAN.labels": {"tf": 1}, "ifri_mini_ml_lib.clustering.HierarchicalClustering.labels": {"tf": 1}}, "df": 3}}}}, "y": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"ifri_mini_ml_lib.neural_networks.MLPClassifier.hidden_layer_sizes": {"tf": 1}, "ifri_mini_ml_lib.neural_networks.MLPRegressor.hidden_layer_sizes": {"tf": 1}}, "df": 2, "s": {"docs": {"ifri_mini_ml_lib.neural_networks.MLPClassifier.n_layers": {"tf": 1}, "ifri_mini_ml_lib.neural_networks.MLPRegressor.n_layers": {"tf": 1}}, "df": 2}}}}}, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "k": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "e": {"docs": {"ifri_mini_ml_lib.clustering.HierarchicalClustering.linkage": {"tf": 1}}, "df": 1}}}, "e": {"docs": {}, "df": 0, "d": {"docs": {"ifri_mini_ml_lib.clustering.HierarchicalClustering.linked_matrix": {"tf": 1}}, "df": 1}}}, "e": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "r": {"docs": {"ifri_mini_ml_lib.regression.SVR.linear_kernel": {"tf": 1}}, "df": 1, "r": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"ifri_mini_ml_lib.regression.LinearRegression": {"tf": 1}, "ifri_mini_ml_lib.regression.LinearRegression.__init__": {"tf": 1}, "ifri_mini_ml_lib.regression.LinearRegression.method": {"tf": 1}, "ifri_mini_ml_lib.regression.LinearRegression.learning_rate": {"tf": 1}, "ifri_mini_ml_lib.regression.LinearRegression.epochs": {"tf": 1}, "ifri_mini_ml_lib.regression.LinearRegression.w": {"tf": 1}, "ifri_mini_ml_lib.regression.LinearRegression.b": {"tf": 1}, "ifri_mini_ml_lib.regression.LinearRegression.fit": {"tf": 1}, "ifri_mini_ml_lib.regression.LinearRegression.predict": {"tf": 1}}, "df": 9}}}}}}}}}}}}}}}}, "p": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "t": {"docs": {"ifri_mini_ml_lib.classification.DecisionTree.predict": {"tf": 1}, "ifri_mini_ml_lib.classification.KNN.predict": {"tf": 1}, "ifri_mini_ml_lib.classification.LogisticRegression.predict_proba": {"tf": 1}, "ifri_mini_ml_lib.classification.LogisticRegression.predict": {"tf": 1}, "ifri_mini_ml_lib.clustering.KMeans.predict": {"tf": 1}, "ifri_mini_ml_lib.clustering.KMeans.fit_predict": {"tf": 1}, "ifri_mini_ml_lib.clustering.DBSCAN.fit_predict": {"tf": 1}, "ifri_mini_ml_lib.clustering.HierarchicalClustering.fit_predict": {"tf": 1}, "ifri_mini_ml_lib.model_selection.BaggingClassifier.predict": {"tf": 1}, "ifri_mini_ml_lib.model_selection.BaggingRegressor.predict": {"tf": 1}, "ifri_mini_ml_lib.neural_networks.MLPClassifier.predict": {"tf": 1}, "ifri_mini_ml_lib.neural_networks.MLPClassifier.predict_proba": {"tf": 1}, "ifri_mini_ml_lib.neural_networks.MLPRegressor.predict": {"tf": 1}, "ifri_mini_ml_lib.regression.LinearRegression.predict": {"tf": 1}, "ifri_mini_ml_lib.regression.PolynomialRegression.predict": {"tf": 1}, "ifri_mini_ml_lib.regression.SVR.predict": {"tf": 1}}, "df": 16}}}}, "c": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"ifri_mini_ml_lib.metrics.evaluation_metrics.precision": {"tf": 1}}, "df": 1}}}}}}, "t": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "d": {"docs": {"ifri_mini_ml_lib.model_selection.BaggingClassifier.pretrained": {"tf": 1}, "ifri_mini_ml_lib.model_selection.BaggingRegressor.pretrained": {"tf": 1}}, "df": 2}}}}}}}}, "o": {"docs": {}, "df": 0, "b": {"docs": {}, "df": 0, "a": {"docs": {"ifri_mini_ml_lib.classification.LogisticRegression.predict_proba": {"tf": 1}, "ifri_mini_ml_lib.neural_networks.MLPClassifier.predict_proba": {"tf": 1}}, "df": 2}}}}, "l": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "t": {"docs": {"ifri_mini_ml_lib.clustering.KMeans.plot_clusters": {"tf": 1}, "ifri_mini_ml_lib.clustering.DBSCAN.plot_clusters": {"tf": 1}, "ifri_mini_ml_lib.clustering.HierarchicalClustering.plot_dendrogram": {"tf": 1}, "ifri_mini_ml_lib.clustering.HierarchicalClustering.plot_clusters": {"tf": 1}, "ifri_mini_ml_lib.preprocessing.dimensionality_reduction.PCA.plot_cov_matrix": {"tf": 1}, "ifri_mini_ml_lib.preprocessing.dimensionality_reduction.PCA.plot_cumulative_explained_variance_ratio": {"tf": 1}, "ifri_mini_ml_lib.preprocessing.dimensionality_reduction.TSNE.plot_results": {"tf": 1}}, "df": 7}}}, "e": {"docs": {}, "df": 0, "r": {"docs": {"ifri_mini_ml_lib.metrics.bias_evaluation.selection_rate_per_group": {"tf": 1}}, "df": 1, "p": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "x": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "y": {"docs": {"ifri_mini_ml_lib.preprocessing.dimensionality_reduction.TSNE.perplexity": {"tf": 1}}, "df": 1}}}}}}}}}, "a": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "y": {"docs": {"ifri_mini_ml_lib.metrics.bias_evaluation.demographic_parity_ratio": {"tf": 1}, "ifri_mini_ml_lib.metrics.bias_evaluation.demographic_parity_difference": {"tf": 1}}, "df": 2}}}, "a": {"docs": {}, "df": 0, "m": {"docs": {"ifri_mini_ml_lib.model_selection.BayesianSearchCV.param_bounds": {"tf": 1}, "ifri_mini_ml_lib.model_selection.BayesianSearchCV.param_types": {"tf": 1}, "ifri_mini_ml_lib.model_selection.GridSearchCV.param_grid": {"tf": 1}, "ifri_mini_ml_lib.model_selection.RandomSearchCV.param_grid": {"tf": 1}}, "df": 4, "s": {"docs": {"ifri_mini_ml_lib.model_selection.BayesianSearchCV.get_best_params": {"tf": 1}, "ifri_mini_ml_lib.model_selection.GridSearchCV.best_params_": {"tf": 1}, "ifri_mini_ml_lib.model_selection.RandomSearchCV.best_params_": {"tf": 1}, "ifri_mini_ml_lib.regression.SVR.set_params": {"tf": 1}}, "df": 4}}}}}, "o": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "s": {"docs": {"ifri_mini_ml_lib.model_selection.BayesianSearchCV.init_points": {"tf": 1}}, "df": 1}}}}, "l": {"docs": {}, "df": 0, "y": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "l": {"docs": {"ifri_mini_ml_lib.regression.SVR.polynomial_kernel": {"tf": 1}}, "df": 1, "r": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"ifri_mini_ml_lib.regression.PolynomialRegression": {"tf": 1}, "ifri_mini_ml_lib.regression.PolynomialRegression.__init__": {"tf": 1}, "ifri_mini_ml_lib.regression.PolynomialRegression.degree": {"tf": 1}, "ifri_mini_ml_lib.regression.PolynomialRegression.method": {"tf": 1}, "ifri_mini_ml_lib.regression.PolynomialRegression.learning_rate": {"tf": 1}, "ifri_mini_ml_lib.regression.PolynomialRegression.epochs": {"tf": 1}, "ifri_mini_ml_lib.regression.PolynomialRegression.w": {"tf": 1}, "ifri_mini_ml_lib.regression.PolynomialRegression.b": {"tf": 1}, "ifri_mini_ml_lib.regression.PolynomialRegression.fit": {"tf": 1}, "ifri_mini_ml_lib.regression.PolynomialRegression.predict": {"tf": 1}}, "df": 10}}}}}}}}}}}}}}}}}}}, "c": {"docs": {}, "df": 0, "a": {"docs": {"ifri_mini_ml_lib.preprocessing.dimensionality_reduction.PCA": {"tf": 1}, "ifri_mini_ml_lib.preprocessing.dimensionality_reduction.PCA.__init__": {"tf": 1}, "ifri_mini_ml_lib.preprocessing.dimensionality_reduction.PCA.n_component": {"tf": 1}, "ifri_mini_ml_lib.preprocessing.dimensionality_reduction.PCA.mean": {"tf": 1}, "ifri_mini_ml_lib.preprocessing.dimensionality_reduction.PCA.cov": {"tf": 1}, "ifri_mini_ml_lib.preprocessing.dimensionality_reduction.PCA.eigen_values": {"tf": 1}, "ifri_mini_ml_lib.preprocessing.dimensionality_reduction.PCA.eigen_vectors": {"tf": 1}, "ifri_mini_ml_lib.preprocessing.dimensionality_reduction.PCA.components": {"tf": 1}, "ifri_mini_ml_lib.preprocessing.dimensionality_reduction.PCA.fit": {"tf": 1}, "ifri_mini_ml_lib.preprocessing.dimensionality_reduction.PCA.transform": {"tf": 1}, "ifri_mini_ml_lib.preprocessing.dimensionality_reduction.PCA.fit_transform": {"tf": 1}, "ifri_mini_ml_lib.preprocessing.dimensionality_reduction.PCA.plot_cov_matrix": {"tf": 1}, "ifri_mini_ml_lib.preprocessing.dimensionality_reduction.PCA.explained_variances": {"tf": 1}, "ifri_mini_ml_lib.preprocessing.dimensionality_reduction.PCA.explained_variances_ratio": {"tf": 1}, "ifri_mini_ml_lib.preprocessing.dimensionality_reduction.PCA.plot_cumulative_explained_variance_ratio": {"tf": 1}}, "df": 15}}}, "k": {"docs": {"ifri_mini_ml_lib.classification.KNN.k": {"tf": 1}, "ifri_mini_ml_lib.model_selection.GridSearchCV.k": {"tf": 1}, "ifri_mini_ml_lib.model_selection.RandomSearchCV.k": {"tf": 1}, "ifri_mini_ml_lib.preprocessing.preparation.DataSplitter.k_fold_split": {"tf": 1}}, "df": 4, "n": {"docs": {}, "df": 0, "n": {"docs": {"ifri_mini_ml_lib.classification.KNN": {"tf": 1}, "ifri_mini_ml_lib.classification.KNN.__init__": {"tf": 1}, "ifri_mini_ml_lib.classification.KNN.k": {"tf": 1}, "ifri_mini_ml_lib.classification.KNN.task": {"tf": 1}, "ifri_mini_ml_lib.classification.KNN.fit": {"tf": 1}, "ifri_mini_ml_lib.classification.KNN.predict": {"tf": 1}, "ifri_mini_ml_lib.preprocessing.preparation.MissingValueHandler.impute_knn": {"tf": 1}}, "df": 7}}, "m": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "s": {"docs": {"ifri_mini_ml_lib.clustering.KMeans": {"tf": 1}, "ifri_mini_ml_lib.clustering.KMeans.__init__": {"tf": 1}, "ifri_mini_ml_lib.clustering.KMeans.n_clusters": {"tf": 1}, "ifri_mini_ml_lib.clustering.KMeans.max_iter": {"tf": 1}, "ifri_mini_ml_lib.clustering.KMeans.tol": {"tf": 1}, "ifri_mini_ml_lib.clustering.KMeans.init": {"tf": 1}, "ifri_mini_ml_lib.clustering.KMeans.random_state": {"tf": 1}, "ifri_mini_ml_lib.clustering.KMeans.centroids": {"tf": 1}, "ifri_mini_ml_lib.clustering.KMeans.labels": {"tf": 1}, "ifri_mini_ml_lib.clustering.KMeans.fit": {"tf": 1}, "ifri_mini_ml_lib.clustering.KMeans.predict": {"tf": 1}, "ifri_mini_ml_lib.clustering.KMeans.fit_predict": {"tf": 1}, "ifri_mini_ml_lib.clustering.KMeans.plot_clusters": {"tf": 1}}, "df": 13}}}}}, "l": {"docs": {"ifri_mini_ml_lib.preprocessing.dimensionality_reduction.TSNE.kl_divergence_": {"tf": 1}}, "df": 1}, "e": {"docs": {}, "df": 0, "r": {"docs": {"ifri_mini_ml_lib.regression.SVR.ker": {"tf": 1}}, "df": 1, "l": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "t": {"docs": {"ifri_mini_ml_lib.regression.SVR.kerlist": {"tf": 1}}, "df": 1}}}}, "n": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "l": {"docs": {"ifri_mini_ml_lib.regression.SVR.linear_kernel": {"tf": 1}, "ifri_mini_ml_lib.regression.SVR.polynomial_kernel": {"tf": 1}, "ifri_mini_ml_lib.regression.SVR.rbf_kernel": {"tf": 1}, "ifri_mini_ml_lib.regression.SVR.sigmoid_kernel": {"tf": 1}, "ifri_mini_ml_lib.regression.SVR.get_kernel": {"tf": 1}}, "df": 5}}}}}}, "w": {"docs": {"ifri_mini_ml_lib.regression.LinearRegression.w": {"tf": 1}, "ifri_mini_ml_lib.regression.PolynomialRegression.w": {"tf": 1}}, "df": 2, "e": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "h": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "s": {"docs": {"ifri_mini_ml_lib.classification.LogisticRegression.weights": {"tf": 1}, "ifri_mini_ml_lib.neural_networks.MLPClassifier.weights": {"tf": 1}, "ifri_mini_ml_lib.neural_networks.MLPClassifier.velocity_weights": {"tf": 1}, "ifri_mini_ml_lib.neural_networks.MLPClassifier.m_weights": {"tf": 1}, "ifri_mini_ml_lib.neural_networks.MLPClassifier.v_weights": {"tf": 1}, "ifri_mini_ml_lib.neural_networks.MLPRegressor.weights": {"tf": 1}, "ifri_mini_ml_lib.neural_networks.MLPRegressor.velocity_weights": {"tf": 1}, "ifri_mini_ml_lib.neural_networks.MLPRegressor.m_weights": {"tf": 1}, "ifri_mini_ml_lib.neural_networks.MLPRegressor.v_weights": {"tf": 1}}, "df": 9}}}}}}}, "b": {"docs": {"ifri_mini_ml_lib.regression.LinearRegression.b": {"tf": 1}, "ifri_mini_ml_lib.regression.PolynomialRegression.b": {"tf": 1}}, "df": 2, "i": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "s": {"docs": {"ifri_mini_ml_lib.classification.LogisticRegression.bias": {"tf": 1}}, "df": 1, "e": {"docs": {}, "df": 0, "s": {"docs": {"ifri_mini_ml_lib.neural_networks.MLPClassifier.biases": {"tf": 1}, "ifri_mini_ml_lib.neural_networks.MLPClassifier.velocity_biases": {"tf": 1}, "ifri_mini_ml_lib.neural_networks.MLPClassifier.m_biases": {"tf": 1}, "ifri_mini_ml_lib.neural_networks.MLPClassifier.v_biases": {"tf": 1}, "ifri_mini_ml_lib.neural_networks.MLPRegressor.biases": {"tf": 1}, "ifri_mini_ml_lib.neural_networks.MLPRegressor.velocity_biases": {"tf": 1}, "ifri_mini_ml_lib.neural_networks.MLPRegressor.m_biases": {"tf": 1}, "ifri_mini_ml_lib.neural_networks.MLPRegressor.v_biases": {"tf": 1}}, "df": 8}}}}}, "y": {"docs": {"ifri_mini_ml_lib.metrics.bias_evaluation.tpr_fpr_by_group": {"tf": 1}}, "df": 1}, "a": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "f": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"ifri_mini_ml_lib.model_selection.BaggingClassifier": {"tf": 1}, "ifri_mini_ml_lib.model_selection.BaggingClassifier.__init__": {"tf": 1}, "ifri_mini_ml_lib.model_selection.BaggingClassifier.base_model": {"tf": 1}, "ifri_mini_ml_lib.model_selection.BaggingClassifier.n_estimators": {"tf": 1}, "ifri_mini_ml_lib.model_selection.BaggingClassifier.random_state": {"tf": 1}, "ifri_mini_ml_lib.model_selection.BaggingClassifier.models": {"tf": 1}, "ifri_mini_ml_lib.model_selection.BaggingClassifier.pretrained": {"tf": 1}, "ifri_mini_ml_lib.model_selection.BaggingClassifier.fit": {"tf": 1}, "ifri_mini_ml_lib.model_selection.BaggingClassifier.predict": {"tf": 1}}, "df": 9}}}}}}}}}}, "r": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {"ifri_mini_ml_lib.model_selection.BaggingRegressor": {"tf": 1}, "ifri_mini_ml_lib.model_selection.BaggingRegressor.__init__": {"tf": 1}, "ifri_mini_ml_lib.model_selection.BaggingRegressor.base_model": {"tf": 1}, "ifri_mini_ml_lib.model_selection.BaggingRegressor.n_estimators": {"tf": 1}, "ifri_mini_ml_lib.model_selection.BaggingRegressor.random_state": {"tf": 1}, "ifri_mini_ml_lib.model_selection.BaggingRegressor.models": {"tf": 1}, "ifri_mini_ml_lib.model_selection.BaggingRegressor.pretrained": {"tf": 1}, "ifri_mini_ml_lib.model_selection.BaggingRegressor.fit": {"tf": 1}, "ifri_mini_ml_lib.model_selection.BaggingRegressor.predict": {"tf": 1}}, "df": 9}}}}}}}}}}}}}}, "s": {"docs": {}, "df": 0, "e": {"docs": {"ifri_mini_ml_lib.model_selection.BaggingClassifier.base_model": {"tf": 1}, "ifri_mini_ml_lib.model_selection.BaggingRegressor.base_model": {"tf": 1}}, "df": 2}}, "y": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "h": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "v": {"docs": {"ifri_mini_ml_lib.model_selection.BayesianSearchCV": {"tf": 1}, "ifri_mini_ml_lib.model_selection.BayesianSearchCV.__init__": {"tf": 1}, "ifri_mini_ml_lib.model_selection.BayesianSearchCV.estimator": {"tf": 1}, "ifri_mini_ml_lib.model_selection.BayesianSearchCV.param_bounds": {"tf": 1}, "ifri_mini_ml_lib.model_selection.BayesianSearchCV.n_iter": {"tf": 1}, "ifri_mini_ml_lib.model_selection.BayesianSearchCV.init_points": {"tf": 1}, "ifri_mini_ml_lib.model_selection.BayesianSearchCV.cv": {"tf": 1}, "ifri_mini_ml_lib.model_selection.BayesianSearchCV.scoring": {"tf": 1}, "ifri_mini_ml_lib.model_selection.BayesianSearchCV.stratified": {"tf": 1}, "ifri_mini_ml_lib.model_selection.BayesianSearchCV.param_types": {"tf": 1}, "ifri_mini_ml_lib.model_selection.BayesianSearchCV.random_state": {"tf": 1}, "ifri_mini_ml_lib.model_selection.BayesianSearchCV.X_obs": {"tf": 1}, "ifri_mini_ml_lib.model_selection.BayesianSearchCV.y_obs": {"tf": 1}, "ifri_mini_ml_lib.model_selection.BayesianSearchCV.gp": {"tf": 1}, "ifri_mini_ml_lib.model_selection.BayesianSearchCV.maximize": {"tf": 1}, "ifri_mini_ml_lib.model_selection.BayesianSearchCV.history_": {"tf": 1}, "ifri_mini_ml_lib.model_selection.BayesianSearchCV.fit": {"tf": 1}, "ifri_mini_ml_lib.model_selection.BayesianSearchCV.get_best_params": {"tf": 1}}, "df": 18}}}}}}}}}}}}}}, "t": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "h": {"docs": {"ifri_mini_ml_lib.neural_networks.MLPClassifier.batch_size": {"tf": 1}, "ifri_mini_ml_lib.neural_networks.MLPRegressor.batch_size": {"tf": 1}}, "df": 2}}}}, "o": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "s": {"docs": {"ifri_mini_ml_lib.model_selection.BayesianSearchCV.param_bounds": {"tf": 1}}, "df": 1}}}}}, "e": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "t": {"docs": {"ifri_mini_ml_lib.model_selection.BayesianSearchCV.get_best_params": {"tf": 1}, "ifri_mini_ml_lib.model_selection.GridSearchCV.best_params_": {"tf": 1}, "ifri_mini_ml_lib.model_selection.GridSearchCV.best_score_": {"tf": 1}, "ifri_mini_ml_lib.model_selection.GridSearchCV.best_estimator_": {"tf": 1}, "ifri_mini_ml_lib.model_selection.RandomSearchCV.best_params_": {"tf": 1}, "ifri_mini_ml_lib.model_selection.RandomSearchCV.best_score_": {"tf": 1}, "ifri_mini_ml_lib.model_selection.RandomSearchCV.best_estimator_": {"tf": 1}, "ifri_mini_ml_lib.neural_networks.MLPClassifier.best_loss": {"tf": 1}, "ifri_mini_ml_lib.neural_networks.MLPRegressor.best_loss": {"tf": 1}}, "df": 9}}, "t": {"docs": {}, "df": 0, "a": {"1": {"docs": {"ifri_mini_ml_lib.neural_networks.MLPClassifier.beta1": {"tf": 1}, "ifri_mini_ml_lib.neural_networks.MLPRegressor.beta1": {"tf": 1}}, "df": 2}, "2": {"docs": {"ifri_mini_ml_lib.neural_networks.MLPClassifier.beta2": {"tf": 1}, "ifri_mini_ml_lib.neural_networks.MLPRegressor.beta2": {"tf": 1}}, "df": 2}, "docs": {}, "df": 0}}}}, "o": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "s": {"docs": {"ifri_mini_ml_lib.metrics.bias_evaluation.equalized_odds_ratio": {"tf": 1}, "ifri_mini_ml_lib.metrics.bias_evaluation.equalized_odds_difference": {"tf": 1}}, "df": 2}}}, "b": {"docs": {}, "df": 0, "s": {"docs": {"ifri_mini_ml_lib.model_selection.BayesianSearchCV.X_obs": {"tf": 1}, "ifri_mini_ml_lib.model_selection.BayesianSearchCV.y_obs": {"tf": 1}}, "df": 2}}, "u": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "s": {"docs": {"ifri_mini_ml_lib.neural_networks.MLPClassifier.n_outputs": {"tf": 1}, "ifri_mini_ml_lib.neural_networks.MLPRegressor.n_outputs": {"tf": 1}}, "df": 2}}}}}}}, "x": {"docs": {"ifri_mini_ml_lib.model_selection.BayesianSearchCV.X_obs": {"tf": 1}, "ifri_mini_ml_lib.regression.SVR.train_X": {"tf": 1}, "ifri_mini_ml_lib.regression.SVR.test_X": {"tf": 1}}, "df": 3}, "y": {"docs": {"ifri_mini_ml_lib.model_selection.BayesianSearchCV.y_obs": {"tf": 1}, "ifri_mini_ml_lib.regression.SVR.train_y": {"tf": 1}, "ifri_mini_ml_lib.regression.SVR.test_y": {"tf": 1}}, "df": 3}, "v": {"docs": {"ifri_mini_ml_lib.neural_networks.MLPClassifier.v_weights": {"tf": 1}, "ifri_mini_ml_lib.neural_networks.MLPClassifier.v_biases": {"tf": 1}, "ifri_mini_ml_lib.neural_networks.MLPRegressor.v_weights": {"tf": 1}, "ifri_mini_ml_lib.neural_networks.MLPRegressor.v_biases": {"tf": 1}}, "df": 4, "a": {"docs": {}, "df": 0, "l": {"docs": {"ifri_mini_ml_lib.neural_networks.MLPClassifier.val_loss_history": {"tf": 1}, "ifri_mini_ml_lib.neural_networks.MLPRegressor.val_loss_history": {"tf": 1}}, "df": 2, "i": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"ifri_mini_ml_lib.neural_networks.MLPClassifier.validation_fraction": {"tf": 1}, "ifri_mini_ml_lib.neural_networks.MLPRegressor.validation_fraction": {"tf": 1}}, "df": 2}}}}}}}, "u": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {"ifri_mini_ml_lib.preprocessing.dimensionality_reduction.PCA.eigen_values": {"tf": 1}}, "df": 1}}}}, "r": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "e": {"docs": {"ifri_mini_ml_lib.preprocessing.dimensionality_reduction.PCA.plot_cumulative_explained_variance_ratio": {"tf": 1}}, "df": 1, "s": {"docs": {"ifri_mini_ml_lib.preprocessing.dimensionality_reduction.PCA.explained_variances": {"tf": 1}, "ifri_mini_ml_lib.preprocessing.dimensionality_reduction.PCA.explained_variances_ratio": {"tf": 1}}, "df": 2}}}}}}}}, "e": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "y": {"docs": {"ifri_mini_ml_lib.neural_networks.MLPClassifier.velocity_weights": {"tf": 1}, "ifri_mini_ml_lib.neural_networks.MLPClassifier.velocity_biases": {"tf": 1}, "ifri_mini_ml_lib.neural_networks.MLPRegressor.velocity_weights": {"tf": 1}, "ifri_mini_ml_lib.neural_networks.MLPRegressor.velocity_biases": {"tf": 1}}, "df": 4}}}}}}, "c": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "s": {"docs": {"ifri_mini_ml_lib.preprocessing.dimensionality_reduction.PCA.eigen_vectors": {"tf": 1}}, "df": 1}}}}}, "r": {"docs": {}, "df": 0, "b": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "e": {"docs": {"ifri_mini_ml_lib.preprocessing.dimensionality_reduction.TSNE.verbose": {"tf": 1}}, "df": 1}}}}}}}}}, "fullname": {"root": {"docs": {"ifri_mini_ml_lib.association_rules.Apriori.__init__": {"tf": 1}, "ifri_mini_ml_lib.association_rules.Apriori.frequent_itemsets_": {"tf": 1}, "ifri_mini_ml_lib.association_rules.Apriori.rules_": {"tf": 1}, "ifri_mini_ml_lib.association_rules.Eclat.__init__": {"tf": 1}, "ifri_mini_ml_lib.association_rules.Eclat.rules_": {"tf": 1}, "ifri_mini_ml_lib.association_rules.FPGrowth.__init__": {"tf": 1}, "ifri_mini_ml_lib.association_rules.FPGrowth.rules_": {"tf": 1}, "ifri_mini_ml_lib.classification.DecisionTree.__init__": {"tf": 1}, "ifri_mini_ml_lib.classification.KNN.__init__": {"tf": 1}, "ifri_mini_ml_lib.classification.LogisticRegression.__init__": {"tf": 1}, "ifri_mini_ml_lib.clustering.KMeans.__init__": {"tf": 1}, "ifri_mini_ml_lib.clustering.DBSCAN.__init__": {"tf": 1}, "ifri_mini_ml_lib.clustering.HierarchicalClustering.__init__": {"tf": 1}, "ifri_mini_ml_lib.model_selection.BaggingClassifier.__init__": {"tf": 1}, "ifri_mini_ml_lib.model_selection.BaggingRegressor.__init__": {"tf": 1}, "ifri_mini_ml_lib.model_selection.BayesianSearchCV.__init__": {"tf": 1}, "ifri_mini_ml_lib.model_selection.BayesianSearchCV.history_": {"tf": 1}, "ifri_mini_ml_lib.model_selection.GridSearchCV.__init__": {"tf": 1}, "ifri_mini_ml_lib.model_selection.GridSearchCV.best_params_": {"tf": 1}, "ifri_mini_ml_lib.model_selection.GridSearchCV.best_score_": {"tf": 1}, "ifri_mini_ml_lib.model_selection.GridSearchCV.best_estimator_": {"tf": 1}, "ifri_mini_ml_lib.model_selection.RandomSearchCV.__init__": {"tf": 1}, "ifri_mini_ml_lib.model_selection.RandomSearchCV.best_params_": {"tf": 1}, "ifri_mini_ml_lib.model_selection.RandomSearchCV.best_score_": {"tf": 1}, "ifri_mini_ml_lib.model_selection.RandomSearchCV.best_estimator_": {"tf": 1}, "ifri_mini_ml_lib.neural_networks.MLPClassifier.__init__": {"tf": 1}, "ifri_mini_ml_lib.neural_networks.MLPClassifier.classes_": {"tf": 1}, "ifri_mini_ml_lib.neural_networks.MLPRegressor.__init__": {"tf": 1}, "ifri_mini_ml_lib.preprocessing.dimensionality_reduction.PCA.__init__": {"tf": 1}, "ifri_mini_ml_lib.preprocessing.dimensionality_reduction.TSNE.__init__": {"tf": 1}, "ifri_mini_ml_lib.preprocessing.dimensionality_reduction.TSNE.embedding_": {"tf": 1}, "ifri_mini_ml_lib.preprocessing.dimensionality_reduction.TSNE.kl_divergence_": {"tf": 1}, "ifri_mini_ml_lib.preprocessing.dimensionality_reduction.TSNE.n_iter_": {"tf": 1}, "ifri_mini_ml_lib.preprocessing.preparation.MinMaxScaler.__init__": {"tf": 1}, "ifri_mini_ml_lib.preprocessing.preparation.MinMaxScaler.min_": {"tf": 1}, "ifri_mini_ml_lib.preprocessing.preparation.MinMaxScaler.max_": {"tf": 1}, "ifri_mini_ml_lib.preprocessing.preparation.StandardScaler.__init__": {"tf": 1}, "ifri_mini_ml_lib.preprocessing.preparation.StandardScaler.mean_": {"tf": 1}, "ifri_mini_ml_lib.preprocessing.preparation.StandardScaler.std_": {"tf": 1}, "ifri_mini_ml_lib.preprocessing.preparation.CategoricalEncoder.__init__": {"tf": 1}, "ifri_mini_ml_lib.preprocessing.preparation.DataSplitter.__init__": {"tf": 1}, "ifri_mini_ml_lib.regression.LinearRegression.__init__": {"tf": 1}, "ifri_mini_ml_lib.regression.PolynomialRegression.__init__": {"tf": 1}, "ifri_mini_ml_lib.regression.SVR.__init__": {"tf": 1}}, "df": 44, "i": {"docs": {}, "df": 0, "f": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "i": {"docs": {"ifri_mini_ml_lib": {"tf": 1}, "ifri_mini_ml_lib.association_rules": {"tf": 1}, "ifri_mini_ml_lib.association_rules.Apriori": {"tf": 1}, "ifri_mini_ml_lib.association_rules.Apriori.__init__": {"tf": 1}, "ifri_mini_ml_lib.association_rules.Apriori.min_support": {"tf": 1}, "ifri_mini_ml_lib.association_rules.Apriori.min_confidence": {"tf": 1}, "ifri_mini_ml_lib.association_rules.Apriori.frequent_itemsets_": {"tf": 1}, "ifri_mini_ml_lib.association_rules.Apriori.rules_": {"tf": 1}, "ifri_mini_ml_lib.association_rules.Apriori.fit": {"tf": 1}, "ifri_mini_ml_lib.association_rules.Apriori.get_frequent_itemsets": {"tf": 1}, "ifri_mini_ml_lib.association_rules.Apriori.get_rules": {"tf": 1}, "ifri_mini_ml_lib.association_rules.Eclat": {"tf": 1}, "ifri_mini_ml_lib.association_rules.Eclat.__init__": {"tf": 1}, "ifri_mini_ml_lib.association_rules.Eclat.min_support": {"tf": 1}, "ifri_mini_ml_lib.association_rules.Eclat.min_confidence": {"tf": 1}, "ifri_mini_ml_lib.association_rules.Eclat.frequent_itemsets": {"tf": 1}, "ifri_mini_ml_lib.association_rules.Eclat.frequent_TIDsets": {"tf": 1}, "ifri_mini_ml_lib.association_rules.Eclat.rules_": {"tf": 1}, "ifri_mini_ml_lib.association_rules.Eclat.n_transactions": {"tf": 1}, "ifri_mini_ml_lib.association_rules.Eclat.fit": {"tf": 1}, "ifri_mini_ml_lib.association_rules.Eclat.get_single_items_TIDset": {"tf": 1}, "ifri_mini_ml_lib.association_rules.Eclat.get_frequent_itemsets": {"tf": 1}, "ifri_mini_ml_lib.association_rules.Eclat.get_rules": {"tf": 1}, "ifri_mini_ml_lib.association_rules.FPGrowth": {"tf": 1}, "ifri_mini_ml_lib.association_rules.FPGrowth.__init__": {"tf": 1}, "ifri_mini_ml_lib.association_rules.FPGrowth.min_support": {"tf": 1}, "ifri_mini_ml_lib.association_rules.FPGrowth.min_confidence": {"tf": 1}, "ifri_mini_ml_lib.association_rules.FPGrowth.frequent_itemsets_dict": {"tf": 1}, "ifri_mini_ml_lib.association_rules.FPGrowth.rules_": {"tf": 1}, "ifri_mini_ml_lib.association_rules.FPGrowth.header_table": {"tf": 1}, "ifri_mini_ml_lib.association_rules.FPGrowth.n_transactions": {"tf": 1}, "ifri_mini_ml_lib.association_rules.FPGrowth.fit": {"tf": 1}, "ifri_mini_ml_lib.association_rules.FPGrowth.get_frequent_itemsets": {"tf": 1}, "ifri_mini_ml_lib.association_rules.FPGrowth.get_rules": {"tf": 1}, "ifri_mini_ml_lib.association_rules.DataAdapter": {"tf": 1}, "ifri_mini_ml_lib.association_rules.DataAdapter.convert_to_transactions": {"tf": 1}, "ifri_mini_ml_lib.association_rules.DataAdapter.load_csv_to_transactions": {"tf": 1}, "ifri_mini_ml_lib.classification": {"tf": 1}, "ifri_mini_ml_lib.classification.DecisionTree": {"tf": 1}, "ifri_mini_ml_lib.classification.DecisionTree.__init__": {"tf": 1}, "ifri_mini_ml_lib.classification.DecisionTree.max_depth": {"tf": 1}, "ifri_mini_ml_lib.classification.DecisionTree.min_samples_split": {"tf": 1}, "ifri_mini_ml_lib.classification.DecisionTree.min_samples_leaf": {"tf": 1}, "ifri_mini_ml_lib.classification.DecisionTree.min_impurity_decrease": {"tf": 1}, "ifri_mini_ml_lib.classification.DecisionTree.tree": {"tf": 1}, "ifri_mini_ml_lib.classification.DecisionTree.fit": {"tf": 1}, "ifri_mini_ml_lib.classification.DecisionTree.predict": {"tf": 1}, "ifri_mini_ml_lib.classification.KNN": {"tf": 1}, "ifri_mini_ml_lib.classification.KNN.__init__": {"tf": 1}, "ifri_mini_ml_lib.classification.KNN.k": {"tf": 1}, "ifri_mini_ml_lib.classification.KNN.task": {"tf": 1}, "ifri_mini_ml_lib.classification.KNN.fit": {"tf": 1}, "ifri_mini_ml_lib.classification.KNN.predict": {"tf": 1}, "ifri_mini_ml_lib.classification.LogisticRegression": {"tf": 1}, "ifri_mini_ml_lib.classification.LogisticRegression.__init__": {"tf": 1}, "ifri_mini_ml_lib.classification.LogisticRegression.learning_rate": {"tf": 1}, "ifri_mini_ml_lib.classification.LogisticRegression.momentum": {"tf": 1}, "ifri_mini_ml_lib.classification.LogisticRegression.max_iter": {"tf": 1}, "ifri_mini_ml_lib.classification.LogisticRegression.tol": {"tf": 1}, "ifri_mini_ml_lib.classification.LogisticRegression.weights": {"tf": 1}, "ifri_mini_ml_lib.classification.LogisticRegression.bias": {"tf": 1}, "ifri_mini_ml_lib.classification.LogisticRegression.loss_history": {"tf": 1}, "ifri_mini_ml_lib.classification.LogisticRegression.fit": {"tf": 1}, "ifri_mini_ml_lib.classification.LogisticRegression.predict_proba": {"tf": 1}, "ifri_mini_ml_lib.classification.LogisticRegression.predict": {"tf": 1}, "ifri_mini_ml_lib.clustering": {"tf": 1}, "ifri_mini_ml_lib.clustering.KMeans": {"tf": 1}, "ifri_mini_ml_lib.clustering.KMeans.__init__": {"tf": 1}, "ifri_mini_ml_lib.clustering.KMeans.n_clusters": {"tf": 1}, "ifri_mini_ml_lib.clustering.KMeans.max_iter": {"tf": 1}, "ifri_mini_ml_lib.clustering.KMeans.tol": {"tf": 1}, "ifri_mini_ml_lib.clustering.KMeans.init": {"tf": 1}, "ifri_mini_ml_lib.clustering.KMeans.random_state": {"tf": 1}, "ifri_mini_ml_lib.clustering.KMeans.centroids": {"tf": 1}, "ifri_mini_ml_lib.clustering.KMeans.labels": {"tf": 1}, "ifri_mini_ml_lib.clustering.KMeans.fit": {"tf": 1}, "ifri_mini_ml_lib.clustering.KMeans.predict": {"tf": 1}, "ifri_mini_ml_lib.clustering.KMeans.fit_predict": {"tf": 1}, "ifri_mini_ml_lib.clustering.KMeans.plot_clusters": {"tf": 1}, "ifri_mini_ml_lib.clustering.DBSCAN": {"tf": 1}, "ifri_mini_ml_lib.clustering.DBSCAN.__init__": {"tf": 1}, "ifri_mini_ml_lib.clustering.DBSCAN.eps": {"tf": 1}, "ifri_mini_ml_lib.clustering.DBSCAN.min_samples": {"tf": 1}, "ifri_mini_ml_lib.clustering.DBSCAN.labels": {"tf": 1}, "ifri_mini_ml_lib.clustering.DBSCAN.fit_predict": {"tf": 1}, "ifri_mini_ml_lib.clustering.DBSCAN.plot_clusters": {"tf": 1}, "ifri_mini_ml_lib.clustering.HierarchicalClustering": {"tf": 1}, "ifri_mini_ml_lib.clustering.HierarchicalClustering.__init__": {"tf": 1}, "ifri_mini_ml_lib.clustering.HierarchicalClustering.n_clusters": {"tf": 1}, "ifri_mini_ml_lib.clustering.HierarchicalClustering.linkage": {"tf": 1}, "ifri_mini_ml_lib.clustering.HierarchicalClustering.method": {"tf": 1}, "ifri_mini_ml_lib.clustering.HierarchicalClustering.labels": {"tf": 1}, "ifri_mini_ml_lib.clustering.HierarchicalClustering.linked_matrix": {"tf": 1}, "ifri_mini_ml_lib.clustering.HierarchicalClustering.fit_predict": {"tf": 1}, "ifri_mini_ml_lib.clustering.HierarchicalClustering.plot_dendrogram": {"tf": 1}, "ifri_mini_ml_lib.clustering.HierarchicalClustering.plot_clusters": {"tf": 1}, "ifri_mini_ml_lib.metrics": {"tf": 1}, "ifri_mini_ml_lib.metrics.bias_evaluation": {"tf": 1}, "ifri_mini_ml_lib.metrics.bias_evaluation.selection_rate": {"tf": 1}, "ifri_mini_ml_lib.metrics.bias_evaluation.selection_rate_per_group": {"tf": 1}, "ifri_mini_ml_lib.metrics.bias_evaluation.demographic_parity_ratio": {"tf": 1}, "ifri_mini_ml_lib.metrics.bias_evaluation.demographic_parity_difference": {"tf": 1}, "ifri_mini_ml_lib.metrics.bias_evaluation.tpr_fpr_by_group": {"tf": 1}, "ifri_mini_ml_lib.metrics.bias_evaluation.equalized_odds_ratio": {"tf": 1}, "ifri_mini_ml_lib.metrics.bias_evaluation.equalized_odds_difference": {"tf": 1}, "ifri_mini_ml_lib.metrics.evaluation_metrics": {"tf": 1}, "ifri_mini_ml_lib.metrics.evaluation_metrics.evaluate_model": {"tf": 1}, "ifri_mini_ml_lib.metrics.evaluation_metrics.confusion_matrix": {"tf": 1}, "ifri_mini_ml_lib.metrics.evaluation_metrics.accuracy": {"tf": 1}, "ifri_mini_ml_lib.metrics.evaluation_metrics.precision": {"tf": 1}, "ifri_mini_ml_lib.metrics.evaluation_metrics.recall": {"tf": 1}, "ifri_mini_ml_lib.metrics.evaluation_metrics.f1_score": {"tf": 1}, "ifri_mini_ml_lib.metrics.evaluation_metrics.calculate_inertia": {"tf": 1}, "ifri_mini_ml_lib.metrics.evaluation_metrics.calculate_silhouette": {"tf": 1}, "ifri_mini_ml_lib.model_selection": {"tf": 1}, "ifri_mini_ml_lib.model_selection.BaggingClassifier": {"tf": 1}, "ifri_mini_ml_lib.model_selection.BaggingClassifier.__init__": {"tf": 1}, "ifri_mini_ml_lib.model_selection.BaggingClassifier.base_model": {"tf": 1}, "ifri_mini_ml_lib.model_selection.BaggingClassifier.n_estimators": {"tf": 1}, "ifri_mini_ml_lib.model_selection.BaggingClassifier.random_state": {"tf": 1}, "ifri_mini_ml_lib.model_selection.BaggingClassifier.models": {"tf": 1}, "ifri_mini_ml_lib.model_selection.BaggingClassifier.pretrained": {"tf": 1}, "ifri_mini_ml_lib.model_selection.BaggingClassifier.fit": {"tf": 1}, "ifri_mini_ml_lib.model_selection.BaggingClassifier.predict": {"tf": 1}, "ifri_mini_ml_lib.model_selection.BaggingRegressor": {"tf": 1}, "ifri_mini_ml_lib.model_selection.BaggingRegressor.__init__": {"tf": 1}, "ifri_mini_ml_lib.model_selection.BaggingRegressor.base_model": {"tf": 1}, "ifri_mini_ml_lib.model_selection.BaggingRegressor.n_estimators": {"tf": 1}, "ifri_mini_ml_lib.model_selection.BaggingRegressor.random_state": {"tf": 1}, "ifri_mini_ml_lib.model_selection.BaggingRegressor.models": {"tf": 1}, "ifri_mini_ml_lib.model_selection.BaggingRegressor.pretrained": {"tf": 1}, "ifri_mini_ml_lib.model_selection.BaggingRegressor.fit": {"tf": 1}, "ifri_mini_ml_lib.model_selection.BaggingRegressor.predict": {"tf": 1}, "ifri_mini_ml_lib.model_selection.BayesianSearchCV": {"tf": 1}, "ifri_mini_ml_lib.model_selection.BayesianSearchCV.__init__": {"tf": 1}, "ifri_mini_ml_lib.model_selection.BayesianSearchCV.estimator": {"tf": 1}, "ifri_mini_ml_lib.model_selection.BayesianSearchCV.param_bounds": {"tf": 1}, "ifri_mini_ml_lib.model_selection.BayesianSearchCV.n_iter": {"tf": 1}, "ifri_mini_ml_lib.model_selection.BayesianSearchCV.init_points": {"tf": 1}, "ifri_mini_ml_lib.model_selection.BayesianSearchCV.cv": {"tf": 1}, "ifri_mini_ml_lib.model_selection.BayesianSearchCV.scoring": {"tf": 1}, "ifri_mini_ml_lib.model_selection.BayesianSearchCV.stratified": {"tf": 1}, "ifri_mini_ml_lib.model_selection.BayesianSearchCV.param_types": {"tf": 1}, "ifri_mini_ml_lib.model_selection.BayesianSearchCV.random_state": {"tf": 1}, "ifri_mini_ml_lib.model_selection.BayesianSearchCV.X_obs": {"tf": 1}, "ifri_mini_ml_lib.model_selection.BayesianSearchCV.y_obs": {"tf": 1}, "ifri_mini_ml_lib.model_selection.BayesianSearchCV.gp": {"tf": 1}, "ifri_mini_ml_lib.model_selection.BayesianSearchCV.maximize": {"tf": 1}, "ifri_mini_ml_lib.model_selection.BayesianSearchCV.history_": {"tf": 1}, "ifri_mini_ml_lib.model_selection.BayesianSearchCV.fit": {"tf": 1}, "ifri_mini_ml_lib.model_selection.BayesianSearchCV.get_best_params": {"tf": 1}, "ifri_mini_ml_lib.model_selection.GridSearchCV": {"tf": 1}, "ifri_mini_ml_lib.model_selection.GridSearchCV.__init__": {"tf": 1}, "ifri_mini_ml_lib.model_selection.GridSearchCV.model": {"tf": 1}, "ifri_mini_ml_lib.model_selection.GridSearchCV.param_grid": {"tf": 1}, "ifri_mini_ml_lib.model_selection.GridSearchCV.k": {"tf": 1}, "ifri_mini_ml_lib.model_selection.GridSearchCV.scoring": {"tf": 1}, "ifri_mini_ml_lib.model_selection.GridSearchCV.stratified": {"tf": 1}, "ifri_mini_ml_lib.model_selection.GridSearchCV.best_params_": {"tf": 1}, "ifri_mini_ml_lib.model_selection.GridSearchCV.best_score_": {"tf": 1}, "ifri_mini_ml_lib.model_selection.GridSearchCV.best_estimator_": {"tf": 1}, "ifri_mini_ml_lib.model_selection.GridSearchCV.fit": {"tf": 1}, "ifri_mini_ml_lib.model_selection.RandomSearchCV": {"tf": 1}, "ifri_mini_ml_lib.model_selection.RandomSearchCV.__init__": {"tf": 1}, "ifri_mini_ml_lib.model_selection.RandomSearchCV.model": {"tf": 1}, "ifri_mini_ml_lib.model_selection.RandomSearchCV.param_grid": {"tf": 1}, "ifri_mini_ml_lib.model_selection.RandomSearchCV.n_iter": {"tf": 1}, "ifri_mini_ml_lib.model_selection.RandomSearchCV.k": {"tf": 1}, "ifri_mini_ml_lib.model_selection.RandomSearchCV.scoring": {"tf": 1}, "ifri_mini_ml_lib.model_selection.RandomSearchCV.stratified": {"tf": 1}, "ifri_mini_ml_lib.model_selection.RandomSearchCV.random_state": {"tf": 1}, "ifri_mini_ml_lib.model_selection.RandomSearchCV.best_params_": {"tf": 1}, "ifri_mini_ml_lib.model_selection.RandomSearchCV.best_score_": {"tf": 1}, "ifri_mini_ml_lib.model_selection.RandomSearchCV.best_estimator_": {"tf": 1}, "ifri_mini_ml_lib.model_selection.RandomSearchCV.fit": {"tf": 1}, "ifri_mini_ml_lib.neural_networks": {"tf": 1}, "ifri_mini_ml_lib.neural_networks.MLPClassifier": {"tf": 1}, "ifri_mini_ml_lib.neural_networks.MLPClassifier.__init__": {"tf": 1}, "ifri_mini_ml_lib.neural_networks.MLPClassifier.hidden_layer_sizes": {"tf": 1}, "ifri_mini_ml_lib.neural_networks.MLPClassifier.activation": {"tf": 1}, "ifri_mini_ml_lib.neural_networks.MLPClassifier.solver": {"tf": 1}, "ifri_mini_ml_lib.neural_networks.MLPClassifier.alpha": {"tf": 1}, "ifri_mini_ml_lib.neural_networks.MLPClassifier.batch_size": {"tf": 1}, "ifri_mini_ml_lib.neural_networks.MLPClassifier.learning_rate": {"tf": 1}, "ifri_mini_ml_lib.neural_networks.MLPClassifier.max_iter": {"tf": 1}, "ifri_mini_ml_lib.neural_networks.MLPClassifier.shuffle": {"tf": 1}, "ifri_mini_ml_lib.neural_networks.MLPClassifier.beta1": {"tf": 1}, "ifri_mini_ml_lib.neural_networks.MLPClassifier.beta2": {"tf": 1}, "ifri_mini_ml_lib.neural_networks.MLPClassifier.epsilon": {"tf": 1}, "ifri_mini_ml_lib.neural_networks.MLPClassifier.momentum": {"tf": 1}, "ifri_mini_ml_lib.neural_networks.MLPClassifier.tol": {"tf": 1}, "ifri_mini_ml_lib.neural_networks.MLPClassifier.early_stopping": {"tf": 1}, "ifri_mini_ml_lib.neural_networks.MLPClassifier.validation_fraction": {"tf": 1}, "ifri_mini_ml_lib.neural_networks.MLPClassifier.n_iter_no_change": {"tf": 1}, "ifri_mini_ml_lib.neural_networks.MLPClassifier.activation_functions": {"tf": 1}, "ifri_mini_ml_lib.neural_networks.MLPClassifier.activation_derivatives": {"tf": 1}, "ifri_mini_ml_lib.neural_networks.MLPClassifier.activation_func": {"tf": 1}, "ifri_mini_ml_lib.neural_networks.MLPClassifier.activation_derivative": {"tf": 1}, "ifri_mini_ml_lib.neural_networks.MLPClassifier.weights": {"tf": 1}, "ifri_mini_ml_lib.neural_networks.MLPClassifier.biases": {"tf": 1}, "ifri_mini_ml_lib.neural_networks.MLPClassifier.n_layers": {"tf": 1}, "ifri_mini_ml_lib.neural_networks.MLPClassifier.n_outputs": {"tf": 1}, "ifri_mini_ml_lib.neural_networks.MLPClassifier.velocity_weights": {"tf": 1}, "ifri_mini_ml_lib.neural_networks.MLPClassifier.velocity_biases": {"tf": 1}, "ifri_mini_ml_lib.neural_networks.MLPClassifier.m_weights": {"tf": 1}, "ifri_mini_ml_lib.neural_networks.MLPClassifier.m_biases": {"tf": 1}, "ifri_mini_ml_lib.neural_networks.MLPClassifier.v_weights": {"tf": 1}, "ifri_mini_ml_lib.neural_networks.MLPClassifier.v_biases": {"tf": 1}, "ifri_mini_ml_lib.neural_networks.MLPClassifier.t": {"tf": 1}, "ifri_mini_ml_lib.neural_networks.MLPClassifier.loss_history": {"tf": 1}, "ifri_mini_ml_lib.neural_networks.MLPClassifier.val_loss_history": {"tf": 1}, "ifri_mini_ml_lib.neural_networks.MLPClassifier.best_loss": {"tf": 1}, "ifri_mini_ml_lib.neural_networks.MLPClassifier.no_improvement_count": {"tf": 1}, "ifri_mini_ml_lib.neural_networks.MLPClassifier.trained": {"tf": 1}, "ifri_mini_ml_lib.neural_networks.MLPClassifier.classes_": {"tf": 1}, "ifri_mini_ml_lib.neural_networks.MLPClassifier.fit": {"tf": 1}, "ifri_mini_ml_lib.neural_networks.MLPClassifier.predict": {"tf": 1}, "ifri_mini_ml_lib.neural_networks.MLPClassifier.predict_proba": {"tf": 1}, "ifri_mini_ml_lib.neural_networks.MLPClassifier.score": {"tf": 1}, "ifri_mini_ml_lib.neural_networks.MLPRegressor": {"tf": 1}, "ifri_mini_ml_lib.neural_networks.MLPRegressor.__init__": {"tf": 1}, "ifri_mini_ml_lib.neural_networks.MLPRegressor.hidden_layer_sizes": {"tf": 1}, "ifri_mini_ml_lib.neural_networks.MLPRegressor.activation": {"tf": 1}, "ifri_mini_ml_lib.neural_networks.MLPRegressor.solver": {"tf": 1}, "ifri_mini_ml_lib.neural_networks.MLPRegressor.alpha": {"tf": 1}, "ifri_mini_ml_lib.neural_networks.MLPRegressor.batch_size": {"tf": 1}, "ifri_mini_ml_lib.neural_networks.MLPRegressor.learning_rate": {"tf": 1}, "ifri_mini_ml_lib.neural_networks.MLPRegressor.max_iter": {"tf": 1}, "ifri_mini_ml_lib.neural_networks.MLPRegressor.shuffle": {"tf": 1}, "ifri_mini_ml_lib.neural_networks.MLPRegressor.beta1": {"tf": 1}, "ifri_mini_ml_lib.neural_networks.MLPRegressor.beta2": {"tf": 1}, "ifri_mini_ml_lib.neural_networks.MLPRegressor.epsilon": {"tf": 1}, "ifri_mini_ml_lib.neural_networks.MLPRegressor.momentum": {"tf": 1}, "ifri_mini_ml_lib.neural_networks.MLPRegressor.tol": {"tf": 1}, "ifri_mini_ml_lib.neural_networks.MLPRegressor.early_stopping": {"tf": 1}, "ifri_mini_ml_lib.neural_networks.MLPRegressor.validation_fraction": {"tf": 1}, "ifri_mini_ml_lib.neural_networks.MLPRegressor.n_iter_no_change": {"tf": 1}, "ifri_mini_ml_lib.neural_networks.MLPRegressor.activation_functions": {"tf": 1}, "ifri_mini_ml_lib.neural_networks.MLPRegressor.activation_derivatives": {"tf": 1}, "ifri_mini_ml_lib.neural_networks.MLPRegressor.activation_func": {"tf": 1}, "ifri_mini_ml_lib.neural_networks.MLPRegressor.activation_derivative": {"tf": 1}, "ifri_mini_ml_lib.neural_networks.MLPRegressor.weights": {"tf": 1}, "ifri_mini_ml_lib.neural_networks.MLPRegressor.biases": {"tf": 1}, "ifri_mini_ml_lib.neural_networks.MLPRegressor.n_layers": {"tf": 1}, "ifri_mini_ml_lib.neural_networks.MLPRegressor.n_outputs": {"tf": 1}, "ifri_mini_ml_lib.neural_networks.MLPRegressor.velocity_weights": {"tf": 1}, "ifri_mini_ml_lib.neural_networks.MLPRegressor.velocity_biases": {"tf": 1}, "ifri_mini_ml_lib.neural_networks.MLPRegressor.m_weights": {"tf": 1}, "ifri_mini_ml_lib.neural_networks.MLPRegressor.m_biases": {"tf": 1}, "ifri_mini_ml_lib.neural_networks.MLPRegressor.v_weights": {"tf": 1}, "ifri_mini_ml_lib.neural_networks.MLPRegressor.v_biases": {"tf": 1}, "ifri_mini_ml_lib.neural_networks.MLPRegressor.t": {"tf": 1}, "ifri_mini_ml_lib.neural_networks.MLPRegressor.loss_history": {"tf": 1}, "ifri_mini_ml_lib.neural_networks.MLPRegressor.val_loss_history": {"tf": 1}, "ifri_mini_ml_lib.neural_networks.MLPRegressor.best_loss": {"tf": 1}, "ifri_mini_ml_lib.neural_networks.MLPRegressor.no_improvement_count": {"tf": 1}, "ifri_mini_ml_lib.neural_networks.MLPRegressor.trained": {"tf": 1}, "ifri_mini_ml_lib.neural_networks.MLPRegressor.fit": {"tf": 1}, "ifri_mini_ml_lib.neural_networks.MLPRegressor.predict": {"tf": 1}, "ifri_mini_ml_lib.neural_networks.MLPRegressor.score": {"tf": 1}, "ifri_mini_ml_lib.preprocessing": {"tf": 1}, "ifri_mini_ml_lib.preprocessing.dimensionality_reduction": {"tf": 1}, "ifri_mini_ml_lib.preprocessing.dimensionality_reduction.PCA": {"tf": 1}, "ifri_mini_ml_lib.preprocessing.dimensionality_reduction.PCA.__init__": {"tf": 1}, "ifri_mini_ml_lib.preprocessing.dimensionality_reduction.PCA.n_component": {"tf": 1}, "ifri_mini_ml_lib.preprocessing.dimensionality_reduction.PCA.mean": {"tf": 1}, "ifri_mini_ml_lib.preprocessing.dimensionality_reduction.PCA.cov": {"tf": 1}, "ifri_mini_ml_lib.preprocessing.dimensionality_reduction.PCA.eigen_values": {"tf": 1}, "ifri_mini_ml_lib.preprocessing.dimensionality_reduction.PCA.eigen_vectors": {"tf": 1}, "ifri_mini_ml_lib.preprocessing.dimensionality_reduction.PCA.components": {"tf": 1}, "ifri_mini_ml_lib.preprocessing.dimensionality_reduction.PCA.fit": {"tf": 1}, "ifri_mini_ml_lib.preprocessing.dimensionality_reduction.PCA.transform": {"tf": 1}, "ifri_mini_ml_lib.preprocessing.dimensionality_reduction.PCA.fit_transform": {"tf": 1}, "ifri_mini_ml_lib.preprocessing.dimensionality_reduction.PCA.plot_cov_matrix": {"tf": 1}, "ifri_mini_ml_lib.preprocessing.dimensionality_reduction.PCA.explained_variances": {"tf": 1}, "ifri_mini_ml_lib.preprocessing.dimensionality_reduction.PCA.explained_variances_ratio": {"tf": 1}, "ifri_mini_ml_lib.preprocessing.dimensionality_reduction.PCA.plot_cumulative_explained_variance_ratio": {"tf": 1}, "ifri_mini_ml_lib.preprocessing.dimensionality_reduction.TSNE": {"tf": 1}, "ifri_mini_ml_lib.preprocessing.dimensionality_reduction.TSNE.__init__": {"tf": 1}, "ifri_mini_ml_lib.preprocessing.dimensionality_reduction.TSNE.n_components": {"tf": 1}, "ifri_mini_ml_lib.preprocessing.dimensionality_reduction.TSNE.perplexity": {"tf": 1}, "ifri_mini_ml_lib.preprocessing.dimensionality_reduction.TSNE.early_exaggeration": {"tf": 1}, "ifri_mini_ml_lib.preprocessing.dimensionality_reduction.TSNE.learning_rate": {"tf": 1}, "ifri_mini_ml_lib.preprocessing.dimensionality_reduction.TSNE.n_iter": {"tf": 1}, "ifri_mini_ml_lib.preprocessing.dimensionality_reduction.TSNE.init": {"tf": 1}, "ifri_mini_ml_lib.preprocessing.dimensionality_reduction.TSNE.min_grad_norm": {"tf": 1}, "ifri_mini_ml_lib.preprocessing.dimensionality_reduction.TSNE.random_state": {"tf": 1}, "ifri_mini_ml_lib.preprocessing.dimensionality_reduction.TSNE.verbose": {"tf": 1}, "ifri_mini_ml_lib.preprocessing.dimensionality_reduction.TSNE.embedding_": {"tf": 1}, "ifri_mini_ml_lib.preprocessing.dimensionality_reduction.TSNE.kl_divergence_": {"tf": 1}, "ifri_mini_ml_lib.preprocessing.dimensionality_reduction.TSNE.n_iter_": {"tf": 1}, "ifri_mini_ml_lib.preprocessing.dimensionality_reduction.TSNE.rng": {"tf": 1}, "ifri_mini_ml_lib.preprocessing.dimensionality_reduction.TSNE.fit": {"tf": 1}, "ifri_mini_ml_lib.preprocessing.dimensionality_reduction.TSNE.fit_transform": {"tf": 1}, "ifri_mini_ml_lib.preprocessing.dimensionality_reduction.TSNE.generate_test_data": {"tf": 1}, "ifri_mini_ml_lib.preprocessing.dimensionality_reduction.TSNE.plot_results": {"tf": 1}, "ifri_mini_ml_lib.preprocessing.preparation": {"tf": 1}, "ifri_mini_ml_lib.preprocessing.preparation.MinMaxScaler": {"tf": 1}, "ifri_mini_ml_lib.preprocessing.preparation.MinMaxScaler.__init__": {"tf": 1}, "ifri_mini_ml_lib.preprocessing.preparation.MinMaxScaler.min_": {"tf": 1}, "ifri_mini_ml_lib.preprocessing.preparation.MinMaxScaler.max_": {"tf": 1}, "ifri_mini_ml_lib.preprocessing.preparation.MinMaxScaler.columns": {"tf": 1}, "ifri_mini_ml_lib.preprocessing.preparation.MinMaxScaler.fit": {"tf": 1}, "ifri_mini_ml_lib.preprocessing.preparation.MinMaxScaler.transform": {"tf": 1}, "ifri_mini_ml_lib.preprocessing.preparation.MinMaxScaler.fit_transform": {"tf": 1}, "ifri_mini_ml_lib.preprocessing.preparation.MinMaxScaler.inverse_transform": {"tf": 1}, "ifri_mini_ml_lib.preprocessing.preparation.MissingValueHandler": {"tf": 1}, "ifri_mini_ml_lib.preprocessing.preparation.MissingValueHandler.remove_missing": {"tf": 1}, "ifri_mini_ml_lib.preprocessing.preparation.MissingValueHandler.impute_statistical": {"tf": 1}, "ifri_mini_ml_lib.preprocessing.preparation.MissingValueHandler.impute_default": {"tf": 1}, "ifri_mini_ml_lib.preprocessing.preparation.MissingValueHandler.impute_knn": {"tf": 1}, "ifri_mini_ml_lib.preprocessing.preparation.MissingValueHandler.impute_regression": {"tf": 1}, "ifri_mini_ml_lib.preprocessing.preparation.StandardScaler": {"tf": 1}, "ifri_mini_ml_lib.preprocessing.preparation.StandardScaler.__init__": {"tf": 1}, "ifri_mini_ml_lib.preprocessing.preparation.StandardScaler.mean_": {"tf": 1}, "ifri_mini_ml_lib.preprocessing.preparation.StandardScaler.std_": {"tf": 1}, "ifri_mini_ml_lib.preprocessing.preparation.StandardScaler.is_dataframe": {"tf": 1}, "ifri_mini_ml_lib.preprocessing.preparation.StandardScaler.columns": {"tf": 1}, "ifri_mini_ml_lib.preprocessing.preparation.StandardScaler.fit": {"tf": 1}, "ifri_mini_ml_lib.preprocessing.preparation.StandardScaler.transform": {"tf": 1}, "ifri_mini_ml_lib.preprocessing.preparation.StandardScaler.fit_transform": {"tf": 1}, "ifri_mini_ml_lib.preprocessing.preparation.StandardScaler.inverse_transform": {"tf": 1}, "ifri_mini_ml_lib.preprocessing.preparation.CategoricalEncoder": {"tf": 1}, "ifri_mini_ml_lib.preprocessing.preparation.CategoricalEncoder.__init__": {"tf": 1}, "ifri_mini_ml_lib.preprocessing.preparation.CategoricalEncoder.encoding_type": {"tf": 1}, "ifri_mini_ml_lib.preprocessing.preparation.CategoricalEncoder.target_column": {"tf": 1}, "ifri_mini_ml_lib.preprocessing.preparation.CategoricalEncoder.mapping": {"tf": 1}, "ifri_mini_ml_lib.preprocessing.preparation.CategoricalEncoder.fit": {"tf": 1}, "ifri_mini_ml_lib.preprocessing.preparation.CategoricalEncoder.transform": {"tf": 1}, "ifri_mini_ml_lib.preprocessing.preparation.CategoricalEncoder.fit_transform": {"tf": 1}, "ifri_mini_ml_lib.preprocessing.preparation.DataSplitter": {"tf": 1}, "ifri_mini_ml_lib.preprocessing.preparation.DataSplitter.__init__": {"tf": 1}, "ifri_mini_ml_lib.preprocessing.preparation.DataSplitter.seed": {"tf": 1}, "ifri_mini_ml_lib.preprocessing.preparation.DataSplitter.train_test_split": {"tf": 1}, "ifri_mini_ml_lib.preprocessing.preparation.DataSplitter.stratified_train_test_split": {"tf": 1}, "ifri_mini_ml_lib.preprocessing.preparation.DataSplitter.temporal_train_test_split": {"tf": 1}, "ifri_mini_ml_lib.preprocessing.preparation.DataSplitter.k_fold_split": {"tf": 1}, "ifri_mini_ml_lib.regression": {"tf": 1}, "ifri_mini_ml_lib.regression.LinearRegression": {"tf": 1}, "ifri_mini_ml_lib.regression.LinearRegression.__init__": {"tf": 1}, "ifri_mini_ml_lib.regression.LinearRegression.method": {"tf": 1}, "ifri_mini_ml_lib.regression.LinearRegression.learning_rate": {"tf": 1}, "ifri_mini_ml_lib.regression.LinearRegression.epochs": {"tf": 1}, "ifri_mini_ml_lib.regression.LinearRegression.w": {"tf": 1}, "ifri_mini_ml_lib.regression.LinearRegression.b": {"tf": 1}, "ifri_mini_ml_lib.regression.LinearRegression.fit": {"tf": 1}, "ifri_mini_ml_lib.regression.LinearRegression.predict": {"tf": 1}, "ifri_mini_ml_lib.regression.PolynomialRegression": {"tf": 1}, "ifri_mini_ml_lib.regression.PolynomialRegression.__init__": {"tf": 1}, "ifri_mini_ml_lib.regression.PolynomialRegression.degree": {"tf": 1}, "ifri_mini_ml_lib.regression.PolynomialRegression.method": {"tf": 1}, "ifri_mini_ml_lib.regression.PolynomialRegression.learning_rate": {"tf": 1}, "ifri_mini_ml_lib.regression.PolynomialRegression.epochs": {"tf": 1}, "ifri_mini_ml_lib.regression.PolynomialRegression.w": {"tf": 1}, "ifri_mini_ml_lib.regression.PolynomialRegression.b": {"tf": 1}, "ifri_mini_ml_lib.regression.PolynomialRegression.fit": {"tf": 1}, "ifri_mini_ml_lib.regression.PolynomialRegression.predict": {"tf": 1}, "ifri_mini_ml_lib.regression.SVR": {"tf": 1}, "ifri_mini_ml_lib.regression.SVR.__init__": {"tf": 1}, "ifri_mini_ml_lib.regression.SVR.kerlist": {"tf": 1}, "ifri_mini_ml_lib.regression.SVR.eps": {"tf": 1}, "ifri_mini_ml_lib.regression.SVR.train_X": {"tf": 1}, "ifri_mini_ml_lib.regression.SVR.train_y": {"tf": 1}, "ifri_mini_ml_lib.regression.SVR.test_X": {"tf": 1}, "ifri_mini_ml_lib.regression.SVR.test_y": {"tf": 1}, "ifri_mini_ml_lib.regression.SVR.ker": {"tf": 1}, "ifri_mini_ml_lib.regression.SVR.linear_kernel": {"tf": 1}, "ifri_mini_ml_lib.regression.SVR.polynomial_kernel": {"tf": 1}, "ifri_mini_ml_lib.regression.SVR.rbf_kernel": {"tf": 1}, "ifri_mini_ml_lib.regression.SVR.sigmoid_kernel": {"tf": 1}, "ifri_mini_ml_lib.regression.SVR.get_kernel": {"tf": 1}, "ifri_mini_ml_lib.regression.SVR.fit": {"tf": 1}, "ifri_mini_ml_lib.regression.SVR.predict": {"tf": 1}, "ifri_mini_ml_lib.regression.SVR.set_params": {"tf": 1}}, "df": 374}}}, "n": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "t": {"docs": {"ifri_mini_ml_lib.association_rules.Apriori.__init__": {"tf": 1}, "ifri_mini_ml_lib.association_rules.Eclat.__init__": {"tf": 1}, "ifri_mini_ml_lib.association_rules.FPGrowth.__init__": {"tf": 1}, "ifri_mini_ml_lib.classification.DecisionTree.__init__": {"tf": 1}, "ifri_mini_ml_lib.classification.KNN.__init__": {"tf": 1}, "ifri_mini_ml_lib.classification.LogisticRegression.__init__": {"tf": 1}, "ifri_mini_ml_lib.clustering.KMeans.__init__": {"tf": 1}, "ifri_mini_ml_lib.clustering.KMeans.init": {"tf": 1}, "ifri_mini_ml_lib.clustering.DBSCAN.__init__": {"tf": 1}, "ifri_mini_ml_lib.clustering.HierarchicalClustering.__init__": {"tf": 1}, "ifri_mini_ml_lib.model_selection.BaggingClassifier.__init__": {"tf": 1}, "ifri_mini_ml_lib.model_selection.BaggingRegressor.__init__": {"tf": 1}, "ifri_mini_ml_lib.model_selection.BayesianSearchCV.__init__": {"tf": 1}, "ifri_mini_ml_lib.model_selection.BayesianSearchCV.init_points": {"tf": 1}, "ifri_mini_ml_lib.model_selection.GridSearchCV.__init__": {"tf": 1}, "ifri_mini_ml_lib.model_selection.RandomSearchCV.__init__": {"tf": 1}, "ifri_mini_ml_lib.neural_networks.MLPClassifier.__init__": {"tf": 1}, "ifri_mini_ml_lib.neural_networks.MLPRegressor.__init__": {"tf": 1}, "ifri_mini_ml_lib.preprocessing.dimensionality_reduction.PCA.__init__": {"tf": 1}, "ifri_mini_ml_lib.preprocessing.dimensionality_reduction.TSNE.__init__": {"tf": 1}, "ifri_mini_ml_lib.preprocessing.dimensionality_reduction.TSNE.init": {"tf": 1}, "ifri_mini_ml_lib.preprocessing.preparation.MinMaxScaler.__init__": {"tf": 1}, "ifri_mini_ml_lib.preprocessing.preparation.StandardScaler.__init__": {"tf": 1}, "ifri_mini_ml_lib.preprocessing.preparation.CategoricalEncoder.__init__": {"tf": 1}, "ifri_mini_ml_lib.preprocessing.preparation.DataSplitter.__init__": {"tf": 1}, "ifri_mini_ml_lib.regression.LinearRegression.__init__": {"tf": 1}, "ifri_mini_ml_lib.regression.PolynomialRegression.__init__": {"tf": 1}, "ifri_mini_ml_lib.regression.SVR.__init__": {"tf": 1}}, "df": 28}}, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "a": {"docs": {"ifri_mini_ml_lib.metrics.evaluation_metrics.calculate_inertia": {"tf": 1}}, "df": 1}}}}}, "v": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "e": {"docs": {"ifri_mini_ml_lib.preprocessing.preparation.MinMaxScaler.inverse_transform": {"tf": 1}, "ifri_mini_ml_lib.preprocessing.preparation.StandardScaler.inverse_transform": {"tf": 1}}, "df": 2}}}}}}, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "s": {"docs": {"ifri_mini_ml_lib.association_rules.Eclat.get_single_items_TIDset": {"tf": 1}}, "df": 1, "e": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "s": {"docs": {"ifri_mini_ml_lib.association_rules.Apriori.frequent_itemsets_": {"tf": 1}, "ifri_mini_ml_lib.association_rules.Apriori.get_frequent_itemsets": {"tf": 1}, "ifri_mini_ml_lib.association_rules.Eclat.frequent_itemsets": {"tf": 1}, "ifri_mini_ml_lib.association_rules.Eclat.get_frequent_itemsets": {"tf": 1}, "ifri_mini_ml_lib.association_rules.FPGrowth.frequent_itemsets_dict": {"tf": 1}, "ifri_mini_ml_lib.association_rules.FPGrowth.get_frequent_itemsets": {"tf": 1}}, "df": 6}}}}}, "r": {"docs": {"ifri_mini_ml_lib.classification.LogisticRegression.max_iter": {"tf": 1}, "ifri_mini_ml_lib.clustering.KMeans.max_iter": {"tf": 1}, "ifri_mini_ml_lib.model_selection.BayesianSearchCV.n_iter": {"tf": 1}, "ifri_mini_ml_lib.model_selection.RandomSearchCV.n_iter": {"tf": 1}, "ifri_mini_ml_lib.neural_networks.MLPClassifier.max_iter": {"tf": 1}, "ifri_mini_ml_lib.neural_networks.MLPClassifier.n_iter_no_change": {"tf": 1}, "ifri_mini_ml_lib.neural_networks.MLPRegressor.max_iter": {"tf": 1}, "ifri_mini_ml_lib.neural_networks.MLPRegressor.n_iter_no_change": {"tf": 1}, "ifri_mini_ml_lib.preprocessing.dimensionality_reduction.TSNE.n_iter": {"tf": 1}, "ifri_mini_ml_lib.preprocessing.dimensionality_reduction.TSNE.n_iter_": {"tf": 1}}, "df": 10}}}, "m": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "y": {"docs": {"ifri_mini_ml_lib.classification.DecisionTree.min_impurity_decrease": {"tf": 1}}, "df": 1}}}}, "t": {"docs": {}, "df": 0, "e": {"docs": {"ifri_mini_ml_lib.preprocessing.preparation.MissingValueHandler.impute_statistical": {"tf": 1}, "ifri_mini_ml_lib.preprocessing.preparation.MissingValueHandler.impute_default": {"tf": 1}, "ifri_mini_ml_lib.preprocessing.preparation.MissingValueHandler.impute_knn": {"tf": 1}, "ifri_mini_ml_lib.preprocessing.preparation.MissingValueHandler.impute_regression": {"tf": 1}}, "df": 4}}}, "r": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "v": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "t": {"docs": {"ifri_mini_ml_lib.neural_networks.MLPClassifier.no_improvement_count": {"tf": 1}, "ifri_mini_ml_lib.neural_networks.MLPRegressor.no_improvement_count": {"tf": 1}}, "df": 2}}}}}}}}}}, "s": {"docs": {"ifri_mini_ml_lib.preprocessing.preparation.StandardScaler.is_dataframe": {"tf": 1}}, "df": 1}}, "m": {"docs": {"ifri_mini_ml_lib.neural_networks.MLPClassifier.m_weights": {"tf": 1}, "ifri_mini_ml_lib.neural_networks.MLPClassifier.m_biases": {"tf": 1}, "ifri_mini_ml_lib.neural_networks.MLPRegressor.m_weights": {"tf": 1}, "ifri_mini_ml_lib.neural_networks.MLPRegressor.m_biases": {"tf": 1}}, "df": 4, "i": {"docs": {}, "df": 0, "n": {"docs": {"ifri_mini_ml_lib.association_rules.Apriori.min_support": {"tf": 1}, "ifri_mini_ml_lib.association_rules.Apriori.min_confidence": {"tf": 1}, "ifri_mini_ml_lib.association_rules.Eclat.min_support": {"tf": 1}, "ifri_mini_ml_lib.association_rules.Eclat.min_confidence": {"tf": 1}, "ifri_mini_ml_lib.association_rules.FPGrowth.min_support": {"tf": 1}, "ifri_mini_ml_lib.association_rules.FPGrowth.min_confidence": {"tf": 1}, "ifri_mini_ml_lib.classification.DecisionTree.min_samples_split": {"tf": 1}, "ifri_mini_ml_lib.classification.DecisionTree.min_samples_leaf": {"tf": 1}, "ifri_mini_ml_lib.classification.DecisionTree.min_impurity_decrease": {"tf": 1}, "ifri_mini_ml_lib.clustering.DBSCAN.min_samples": {"tf": 1}, "ifri_mini_ml_lib.preprocessing.dimensionality_reduction.TSNE.min_grad_norm": {"tf": 1}, "ifri_mini_ml_lib.preprocessing.preparation.MinMaxScaler.min_": {"tf": 1}}, "df": 12, "i": {"docs": {"ifri_mini_ml_lib": {"tf": 1}, "ifri_mini_ml_lib.association_rules": {"tf": 1}, "ifri_mini_ml_lib.association_rules.Apriori": {"tf": 1}, "ifri_mini_ml_lib.association_rules.Apriori.__init__": {"tf": 1}, "ifri_mini_ml_lib.association_rules.Apriori.min_support": {"tf": 1}, "ifri_mini_ml_lib.association_rules.Apriori.min_confidence": {"tf": 1}, "ifri_mini_ml_lib.association_rules.Apriori.frequent_itemsets_": {"tf": 1}, "ifri_mini_ml_lib.association_rules.Apriori.rules_": {"tf": 1}, "ifri_mini_ml_lib.association_rules.Apriori.fit": {"tf": 1}, "ifri_mini_ml_lib.association_rules.Apriori.get_frequent_itemsets": {"tf": 1}, "ifri_mini_ml_lib.association_rules.Apriori.get_rules": {"tf": 1}, "ifri_mini_ml_lib.association_rules.Eclat": {"tf": 1}, "ifri_mini_ml_lib.association_rules.Eclat.__init__": {"tf": 1}, "ifri_mini_ml_lib.association_rules.Eclat.min_support": {"tf": 1}, "ifri_mini_ml_lib.association_rules.Eclat.min_confidence": {"tf": 1}, "ifri_mini_ml_lib.association_rules.Eclat.frequent_itemsets": {"tf": 1}, "ifri_mini_ml_lib.association_rules.Eclat.frequent_TIDsets": {"tf": 1}, "ifri_mini_ml_lib.association_rules.Eclat.rules_": {"tf": 1}, "ifri_mini_ml_lib.association_rules.Eclat.n_transactions": {"tf": 1}, "ifri_mini_ml_lib.association_rules.Eclat.fit": {"tf": 1}, "ifri_mini_ml_lib.association_rules.Eclat.get_single_items_TIDset": {"tf": 1}, "ifri_mini_ml_lib.association_rules.Eclat.get_frequent_itemsets": {"tf": 1}, "ifri_mini_ml_lib.association_rules.Eclat.get_rules": {"tf": 1}, "ifri_mini_ml_lib.association_rules.FPGrowth": {"tf": 1}, "ifri_mini_ml_lib.association_rules.FPGrowth.__init__": {"tf": 1}, "ifri_mini_ml_lib.association_rules.FPGrowth.min_support": {"tf": 1}, "ifri_mini_ml_lib.association_rules.FPGrowth.min_confidence": {"tf": 1}, "ifri_mini_ml_lib.association_rules.FPGrowth.frequent_itemsets_dict": {"tf": 1}, "ifri_mini_ml_lib.association_rules.FPGrowth.rules_": {"tf": 1}, "ifri_mini_ml_lib.association_rules.FPGrowth.header_table": {"tf": 1}, "ifri_mini_ml_lib.association_rules.FPGrowth.n_transactions": {"tf": 1}, "ifri_mini_ml_lib.association_rules.FPGrowth.fit": {"tf": 1}, "ifri_mini_ml_lib.association_rules.FPGrowth.get_frequent_itemsets": {"tf": 1}, "ifri_mini_ml_lib.association_rules.FPGrowth.get_rules": {"tf": 1}, "ifri_mini_ml_lib.association_rules.DataAdapter": {"tf": 1}, "ifri_mini_ml_lib.association_rules.DataAdapter.convert_to_transactions": {"tf": 1}, "ifri_mini_ml_lib.association_rules.DataAdapter.load_csv_to_transactions": {"tf": 1}, "ifri_mini_ml_lib.classification": {"tf": 1}, "ifri_mini_ml_lib.classification.DecisionTree": {"tf": 1}, "ifri_mini_ml_lib.classification.DecisionTree.__init__": {"tf": 1}, "ifri_mini_ml_lib.classification.DecisionTree.max_depth": {"tf": 1}, "ifri_mini_ml_lib.classification.DecisionTree.min_samples_split": {"tf": 1}, "ifri_mini_ml_lib.classification.DecisionTree.min_samples_leaf": {"tf": 1}, "ifri_mini_ml_lib.classification.DecisionTree.min_impurity_decrease": {"tf": 1}, "ifri_mini_ml_lib.classification.DecisionTree.tree": {"tf": 1}, "ifri_mini_ml_lib.classification.DecisionTree.fit": {"tf": 1}, "ifri_mini_ml_lib.classification.DecisionTree.predict": {"tf": 1}, "ifri_mini_ml_lib.classification.KNN": {"tf": 1}, "ifri_mini_ml_lib.classification.KNN.__init__": {"tf": 1}, "ifri_mini_ml_lib.classification.KNN.k": {"tf": 1}, "ifri_mini_ml_lib.classification.KNN.task": {"tf": 1}, "ifri_mini_ml_lib.classification.KNN.fit": {"tf": 1}, "ifri_mini_ml_lib.classification.KNN.predict": {"tf": 1}, "ifri_mini_ml_lib.classification.LogisticRegression": {"tf": 1}, "ifri_mini_ml_lib.classification.LogisticRegression.__init__": {"tf": 1}, "ifri_mini_ml_lib.classification.LogisticRegression.learning_rate": {"tf": 1}, "ifri_mini_ml_lib.classification.LogisticRegression.momentum": {"tf": 1}, "ifri_mini_ml_lib.classification.LogisticRegression.max_iter": {"tf": 1}, "ifri_mini_ml_lib.classification.LogisticRegression.tol": {"tf": 1}, "ifri_mini_ml_lib.classification.LogisticRegression.weights": {"tf": 1}, "ifri_mini_ml_lib.classification.LogisticRegression.bias": {"tf": 1}, "ifri_mini_ml_lib.classification.LogisticRegression.loss_history": {"tf": 1}, "ifri_mini_ml_lib.classification.LogisticRegression.fit": {"tf": 1}, "ifri_mini_ml_lib.classification.LogisticRegression.predict_proba": {"tf": 1}, "ifri_mini_ml_lib.classification.LogisticRegression.predict": {"tf": 1}, "ifri_mini_ml_lib.clustering": {"tf": 1}, "ifri_mini_ml_lib.clustering.KMeans": {"tf": 1}, "ifri_mini_ml_lib.clustering.KMeans.__init__": {"tf": 1}, "ifri_mini_ml_lib.clustering.KMeans.n_clusters": {"tf": 1}, "ifri_mini_ml_lib.clustering.KMeans.max_iter": {"tf": 1}, "ifri_mini_ml_lib.clustering.KMeans.tol": {"tf": 1}, "ifri_mini_ml_lib.clustering.KMeans.init": {"tf": 1}, "ifri_mini_ml_lib.clustering.KMeans.random_state": {"tf": 1}, "ifri_mini_ml_lib.clustering.KMeans.centroids": {"tf": 1}, "ifri_mini_ml_lib.clustering.KMeans.labels": {"tf": 1}, "ifri_mini_ml_lib.clustering.KMeans.fit": {"tf": 1}, "ifri_mini_ml_lib.clustering.KMeans.predict": {"tf": 1}, "ifri_mini_ml_lib.clustering.KMeans.fit_predict": {"tf": 1}, "ifri_mini_ml_lib.clustering.KMeans.plot_clusters": {"tf": 1}, "ifri_mini_ml_lib.clustering.DBSCAN": {"tf": 1}, "ifri_mini_ml_lib.clustering.DBSCAN.__init__": {"tf": 1}, "ifri_mini_ml_lib.clustering.DBSCAN.eps": {"tf": 1}, "ifri_mini_ml_lib.clustering.DBSCAN.min_samples": {"tf": 1}, "ifri_mini_ml_lib.clustering.DBSCAN.labels": {"tf": 1}, "ifri_mini_ml_lib.clustering.DBSCAN.fit_predict": {"tf": 1}, "ifri_mini_ml_lib.clustering.DBSCAN.plot_clusters": {"tf": 1}, "ifri_mini_ml_lib.clustering.HierarchicalClustering": {"tf": 1}, "ifri_mini_ml_lib.clustering.HierarchicalClustering.__init__": {"tf": 1}, "ifri_mini_ml_lib.clustering.HierarchicalClustering.n_clusters": {"tf": 1}, "ifri_mini_ml_lib.clustering.HierarchicalClustering.linkage": {"tf": 1}, "ifri_mini_ml_lib.clustering.HierarchicalClustering.method": {"tf": 1}, "ifri_mini_ml_lib.clustering.HierarchicalClustering.labels": {"tf": 1}, "ifri_mini_ml_lib.clustering.HierarchicalClustering.linked_matrix": {"tf": 1}, "ifri_mini_ml_lib.clustering.HierarchicalClustering.fit_predict": {"tf": 1}, "ifri_mini_ml_lib.clustering.HierarchicalClustering.plot_dendrogram": {"tf": 1}, "ifri_mini_ml_lib.clustering.HierarchicalClustering.plot_clusters": {"tf": 1}, "ifri_mini_ml_lib.metrics": {"tf": 1}, "ifri_mini_ml_lib.metrics.bias_evaluation": {"tf": 1}, "ifri_mini_ml_lib.metrics.bias_evaluation.selection_rate": {"tf": 1}, "ifri_mini_ml_lib.metrics.bias_evaluation.selection_rate_per_group": {"tf": 1}, "ifri_mini_ml_lib.metrics.bias_evaluation.demographic_parity_ratio": {"tf": 1}, "ifri_mini_ml_lib.metrics.bias_evaluation.demographic_parity_difference": {"tf": 1}, "ifri_mini_ml_lib.metrics.bias_evaluation.tpr_fpr_by_group": {"tf": 1}, "ifri_mini_ml_lib.metrics.bias_evaluation.equalized_odds_ratio": {"tf": 1}, "ifri_mini_ml_lib.metrics.bias_evaluation.equalized_odds_difference": {"tf": 1}, "ifri_mini_ml_lib.metrics.evaluation_metrics": {"tf": 1}, "ifri_mini_ml_lib.metrics.evaluation_metrics.evaluate_model": {"tf": 1}, "ifri_mini_ml_lib.metrics.evaluation_metrics.confusion_matrix": {"tf": 1}, "ifri_mini_ml_lib.metrics.evaluation_metrics.accuracy": {"tf": 1}, "ifri_mini_ml_lib.metrics.evaluation_metrics.precision": {"tf": 1}, "ifri_mini_ml_lib.metrics.evaluation_metrics.recall": {"tf": 1}, "ifri_mini_ml_lib.metrics.evaluation_metrics.f1_score": {"tf": 1}, "ifri_mini_ml_lib.metrics.evaluation_metrics.calculate_inertia": {"tf": 1}, "ifri_mini_ml_lib.metrics.evaluation_metrics.calculate_silhouette": {"tf": 1}, "ifri_mini_ml_lib.model_selection": {"tf": 1}, "ifri_mini_ml_lib.model_selection.BaggingClassifier": {"tf": 1}, "ifri_mini_ml_lib.model_selection.BaggingClassifier.__init__": {"tf": 1}, "ifri_mini_ml_lib.model_selection.BaggingClassifier.base_model": {"tf": 1}, "ifri_mini_ml_lib.model_selection.BaggingClassifier.n_estimators": {"tf": 1}, "ifri_mini_ml_lib.model_selection.BaggingClassifier.random_state": {"tf": 1}, "ifri_mini_ml_lib.model_selection.BaggingClassifier.models": {"tf": 1}, "ifri_mini_ml_lib.model_selection.BaggingClassifier.pretrained": {"tf": 1}, "ifri_mini_ml_lib.model_selection.BaggingClassifier.fit": {"tf": 1}, "ifri_mini_ml_lib.model_selection.BaggingClassifier.predict": {"tf": 1}, "ifri_mini_ml_lib.model_selection.BaggingRegressor": {"tf": 1}, "ifri_mini_ml_lib.model_selection.BaggingRegressor.__init__": {"tf": 1}, "ifri_mini_ml_lib.model_selection.BaggingRegressor.base_model": {"tf": 1}, "ifri_mini_ml_lib.model_selection.BaggingRegressor.n_estimators": {"tf": 1}, "ifri_mini_ml_lib.model_selection.BaggingRegressor.random_state": {"tf": 1}, "ifri_mini_ml_lib.model_selection.BaggingRegressor.models": {"tf": 1}, "ifri_mini_ml_lib.model_selection.BaggingRegressor.pretrained": {"tf": 1}, "ifri_mini_ml_lib.model_selection.BaggingRegressor.fit": {"tf": 1}, "ifri_mini_ml_lib.model_selection.BaggingRegressor.predict": {"tf": 1}, "ifri_mini_ml_lib.model_selection.BayesianSearchCV": {"tf": 1}, "ifri_mini_ml_lib.model_selection.BayesianSearchCV.__init__": {"tf": 1}, "ifri_mini_ml_lib.model_selection.BayesianSearchCV.estimator": {"tf": 1}, "ifri_mini_ml_lib.model_selection.BayesianSearchCV.param_bounds": {"tf": 1}, "ifri_mini_ml_lib.model_selection.BayesianSearchCV.n_iter": {"tf": 1}, "ifri_mini_ml_lib.model_selection.BayesianSearchCV.init_points": {"tf": 1}, "ifri_mini_ml_lib.model_selection.BayesianSearchCV.cv": {"tf": 1}, "ifri_mini_ml_lib.model_selection.BayesianSearchCV.scoring": {"tf": 1}, "ifri_mini_ml_lib.model_selection.BayesianSearchCV.stratified": {"tf": 1}, "ifri_mini_ml_lib.model_selection.BayesianSearchCV.param_types": {"tf": 1}, "ifri_mini_ml_lib.model_selection.BayesianSearchCV.random_state": {"tf": 1}, "ifri_mini_ml_lib.model_selection.BayesianSearchCV.X_obs": {"tf": 1}, "ifri_mini_ml_lib.model_selection.BayesianSearchCV.y_obs": {"tf": 1}, "ifri_mini_ml_lib.model_selection.BayesianSearchCV.gp": {"tf": 1}, "ifri_mini_ml_lib.model_selection.BayesianSearchCV.maximize": {"tf": 1}, "ifri_mini_ml_lib.model_selection.BayesianSearchCV.history_": {"tf": 1}, "ifri_mini_ml_lib.model_selection.BayesianSearchCV.fit": {"tf": 1}, "ifri_mini_ml_lib.model_selection.BayesianSearchCV.get_best_params": {"tf": 1}, "ifri_mini_ml_lib.model_selection.GridSearchCV": {"tf": 1}, "ifri_mini_ml_lib.model_selection.GridSearchCV.__init__": {"tf": 1}, "ifri_mini_ml_lib.model_selection.GridSearchCV.model": {"tf": 1}, "ifri_mini_ml_lib.model_selection.GridSearchCV.param_grid": {"tf": 1}, "ifri_mini_ml_lib.model_selection.GridSearchCV.k": {"tf": 1}, "ifri_mini_ml_lib.model_selection.GridSearchCV.scoring": {"tf": 1}, "ifri_mini_ml_lib.model_selection.GridSearchCV.stratified": {"tf": 1}, "ifri_mini_ml_lib.model_selection.GridSearchCV.best_params_": {"tf": 1}, "ifri_mini_ml_lib.model_selection.GridSearchCV.best_score_": {"tf": 1}, "ifri_mini_ml_lib.model_selection.GridSearchCV.best_estimator_": {"tf": 1}, "ifri_mini_ml_lib.model_selection.GridSearchCV.fit": {"tf": 1}, "ifri_mini_ml_lib.model_selection.RandomSearchCV": {"tf": 1}, "ifri_mini_ml_lib.model_selection.RandomSearchCV.__init__": {"tf": 1}, "ifri_mini_ml_lib.model_selection.RandomSearchCV.model": {"tf": 1}, "ifri_mini_ml_lib.model_selection.RandomSearchCV.param_grid": {"tf": 1}, "ifri_mini_ml_lib.model_selection.RandomSearchCV.n_iter": {"tf": 1}, "ifri_mini_ml_lib.model_selection.RandomSearchCV.k": {"tf": 1}, "ifri_mini_ml_lib.model_selection.RandomSearchCV.scoring": {"tf": 1}, "ifri_mini_ml_lib.model_selection.RandomSearchCV.stratified": {"tf": 1}, "ifri_mini_ml_lib.model_selection.RandomSearchCV.random_state": {"tf": 1}, "ifri_mini_ml_lib.model_selection.RandomSearchCV.best_params_": {"tf": 1}, "ifri_mini_ml_lib.model_selection.RandomSearchCV.best_score_": {"tf": 1}, "ifri_mini_ml_lib.model_selection.RandomSearchCV.best_estimator_": {"tf": 1}, "ifri_mini_ml_lib.model_selection.RandomSearchCV.fit": {"tf": 1}, "ifri_mini_ml_lib.neural_networks": {"tf": 1}, "ifri_mini_ml_lib.neural_networks.MLPClassifier": {"tf": 1}, "ifri_mini_ml_lib.neural_networks.MLPClassifier.__init__": {"tf": 1}, "ifri_mini_ml_lib.neural_networks.MLPClassifier.hidden_layer_sizes": {"tf": 1}, "ifri_mini_ml_lib.neural_networks.MLPClassifier.activation": {"tf": 1}, "ifri_mini_ml_lib.neural_networks.MLPClassifier.solver": {"tf": 1}, "ifri_mini_ml_lib.neural_networks.MLPClassifier.alpha": {"tf": 1}, "ifri_mini_ml_lib.neural_networks.MLPClassifier.batch_size": {"tf": 1}, "ifri_mini_ml_lib.neural_networks.MLPClassifier.learning_rate": {"tf": 1}, "ifri_mini_ml_lib.neural_networks.MLPClassifier.max_iter": {"tf": 1}, "ifri_mini_ml_lib.neural_networks.MLPClassifier.shuffle": {"tf": 1}, "ifri_mini_ml_lib.neural_networks.MLPClassifier.beta1": {"tf": 1}, "ifri_mini_ml_lib.neural_networks.MLPClassifier.beta2": {"tf": 1}, "ifri_mini_ml_lib.neural_networks.MLPClassifier.epsilon": {"tf": 1}, "ifri_mini_ml_lib.neural_networks.MLPClassifier.momentum": {"tf": 1}, "ifri_mini_ml_lib.neural_networks.MLPClassifier.tol": {"tf": 1}, "ifri_mini_ml_lib.neural_networks.MLPClassifier.early_stopping": {"tf": 1}, "ifri_mini_ml_lib.neural_networks.MLPClassifier.validation_fraction": {"tf": 1}, "ifri_mini_ml_lib.neural_networks.MLPClassifier.n_iter_no_change": {"tf": 1}, "ifri_mini_ml_lib.neural_networks.MLPClassifier.activation_functions": {"tf": 1}, "ifri_mini_ml_lib.neural_networks.MLPClassifier.activation_derivatives": {"tf": 1}, "ifri_mini_ml_lib.neural_networks.MLPClassifier.activation_func": {"tf": 1}, "ifri_mini_ml_lib.neural_networks.MLPClassifier.activation_derivative": {"tf": 1}, "ifri_mini_ml_lib.neural_networks.MLPClassifier.weights": {"tf": 1}, "ifri_mini_ml_lib.neural_networks.MLPClassifier.biases": {"tf": 1}, "ifri_mini_ml_lib.neural_networks.MLPClassifier.n_layers": {"tf": 1}, "ifri_mini_ml_lib.neural_networks.MLPClassifier.n_outputs": {"tf": 1}, "ifri_mini_ml_lib.neural_networks.MLPClassifier.velocity_weights": {"tf": 1}, "ifri_mini_ml_lib.neural_networks.MLPClassifier.velocity_biases": {"tf": 1}, "ifri_mini_ml_lib.neural_networks.MLPClassifier.m_weights": {"tf": 1}, "ifri_mini_ml_lib.neural_networks.MLPClassifier.m_biases": {"tf": 1}, "ifri_mini_ml_lib.neural_networks.MLPClassifier.v_weights": {"tf": 1}, "ifri_mini_ml_lib.neural_networks.MLPClassifier.v_biases": {"tf": 1}, "ifri_mini_ml_lib.neural_networks.MLPClassifier.t": {"tf": 1}, "ifri_mini_ml_lib.neural_networks.MLPClassifier.loss_history": {"tf": 1}, "ifri_mini_ml_lib.neural_networks.MLPClassifier.val_loss_history": {"tf": 1}, "ifri_mini_ml_lib.neural_networks.MLPClassifier.best_loss": {"tf": 1}, "ifri_mini_ml_lib.neural_networks.MLPClassifier.no_improvement_count": {"tf": 1}, "ifri_mini_ml_lib.neural_networks.MLPClassifier.trained": {"tf": 1}, "ifri_mini_ml_lib.neural_networks.MLPClassifier.classes_": {"tf": 1}, "ifri_mini_ml_lib.neural_networks.MLPClassifier.fit": {"tf": 1}, "ifri_mini_ml_lib.neural_networks.MLPClassifier.predict": {"tf": 1}, "ifri_mini_ml_lib.neural_networks.MLPClassifier.predict_proba": {"tf": 1}, "ifri_mini_ml_lib.neural_networks.MLPClassifier.score": {"tf": 1}, "ifri_mini_ml_lib.neural_networks.MLPRegressor": {"tf": 1}, "ifri_mini_ml_lib.neural_networks.MLPRegressor.__init__": {"tf": 1}, "ifri_mini_ml_lib.neural_networks.MLPRegressor.hidden_layer_sizes": {"tf": 1}, "ifri_mini_ml_lib.neural_networks.MLPRegressor.activation": {"tf": 1}, "ifri_mini_ml_lib.neural_networks.MLPRegressor.solver": {"tf": 1}, "ifri_mini_ml_lib.neural_networks.MLPRegressor.alpha": {"tf": 1}, "ifri_mini_ml_lib.neural_networks.MLPRegressor.batch_size": {"tf": 1}, "ifri_mini_ml_lib.neural_networks.MLPRegressor.learning_rate": {"tf": 1}, "ifri_mini_ml_lib.neural_networks.MLPRegressor.max_iter": {"tf": 1}, "ifri_mini_ml_lib.neural_networks.MLPRegressor.shuffle": {"tf": 1}, "ifri_mini_ml_lib.neural_networks.MLPRegressor.beta1": {"tf": 1}, "ifri_mini_ml_lib.neural_networks.MLPRegressor.beta2": {"tf": 1}, "ifri_mini_ml_lib.neural_networks.MLPRegressor.epsilon": {"tf": 1}, "ifri_mini_ml_lib.neural_networks.MLPRegressor.momentum": {"tf": 1}, "ifri_mini_ml_lib.neural_networks.MLPRegressor.tol": {"tf": 1}, "ifri_mini_ml_lib.neural_networks.MLPRegressor.early_stopping": {"tf": 1}, "ifri_mini_ml_lib.neural_networks.MLPRegressor.validation_fraction": {"tf": 1}, "ifri_mini_ml_lib.neural_networks.MLPRegressor.n_iter_no_change": {"tf": 1}, "ifri_mini_ml_lib.neural_networks.MLPRegressor.activation_functions": {"tf": 1}, "ifri_mini_ml_lib.neural_networks.MLPRegressor.activation_derivatives": {"tf": 1}, "ifri_mini_ml_lib.neural_networks.MLPRegressor.activation_func": {"tf": 1}, "ifri_mini_ml_lib.neural_networks.MLPRegressor.activation_derivative": {"tf": 1}, "ifri_mini_ml_lib.neural_networks.MLPRegressor.weights": {"tf": 1}, "ifri_mini_ml_lib.neural_networks.MLPRegressor.biases": {"tf": 1}, "ifri_mini_ml_lib.neural_networks.MLPRegressor.n_layers": {"tf": 1}, "ifri_mini_ml_lib.neural_networks.MLPRegressor.n_outputs": {"tf": 1}, "ifri_mini_ml_lib.neural_networks.MLPRegressor.velocity_weights": {"tf": 1}, "ifri_mini_ml_lib.neural_networks.MLPRegressor.velocity_biases": {"tf": 1}, "ifri_mini_ml_lib.neural_networks.MLPRegressor.m_weights": {"tf": 1}, "ifri_mini_ml_lib.neural_networks.MLPRegressor.m_biases": {"tf": 1}, "ifri_mini_ml_lib.neural_networks.MLPRegressor.v_weights": {"tf": 1}, "ifri_mini_ml_lib.neural_networks.MLPRegressor.v_biases": {"tf": 1}, "ifri_mini_ml_lib.neural_networks.MLPRegressor.t": {"tf": 1}, "ifri_mini_ml_lib.neural_networks.MLPRegressor.loss_history": {"tf": 1}, "ifri_mini_ml_lib.neural_networks.MLPRegressor.val_loss_history": {"tf": 1}, "ifri_mini_ml_lib.neural_networks.MLPRegressor.best_loss": {"tf": 1}, "ifri_mini_ml_lib.neural_networks.MLPRegressor.no_improvement_count": {"tf": 1}, "ifri_mini_ml_lib.neural_networks.MLPRegressor.trained": {"tf": 1}, "ifri_mini_ml_lib.neural_networks.MLPRegressor.fit": {"tf": 1}, "ifri_mini_ml_lib.neural_networks.MLPRegressor.predict": {"tf": 1}, "ifri_mini_ml_lib.neural_networks.MLPRegressor.score": {"tf": 1}, "ifri_mini_ml_lib.preprocessing": {"tf": 1}, "ifri_mini_ml_lib.preprocessing.dimensionality_reduction": {"tf": 1}, "ifri_mini_ml_lib.preprocessing.dimensionality_reduction.PCA": {"tf": 1}, "ifri_mini_ml_lib.preprocessing.dimensionality_reduction.PCA.__init__": {"tf": 1}, "ifri_mini_ml_lib.preprocessing.dimensionality_reduction.PCA.n_component": {"tf": 1}, "ifri_mini_ml_lib.preprocessing.dimensionality_reduction.PCA.mean": {"tf": 1}, "ifri_mini_ml_lib.preprocessing.dimensionality_reduction.PCA.cov": {"tf": 1}, "ifri_mini_ml_lib.preprocessing.dimensionality_reduction.PCA.eigen_values": {"tf": 1}, "ifri_mini_ml_lib.preprocessing.dimensionality_reduction.PCA.eigen_vectors": {"tf": 1}, "ifri_mini_ml_lib.preprocessing.dimensionality_reduction.PCA.components": {"tf": 1}, "ifri_mini_ml_lib.preprocessing.dimensionality_reduction.PCA.fit": {"tf": 1}, "ifri_mini_ml_lib.preprocessing.dimensionality_reduction.PCA.transform": {"tf": 1}, "ifri_mini_ml_lib.preprocessing.dimensionality_reduction.PCA.fit_transform": {"tf": 1}, "ifri_mini_ml_lib.preprocessing.dimensionality_reduction.PCA.plot_cov_matrix": {"tf": 1}, "ifri_mini_ml_lib.preprocessing.dimensionality_reduction.PCA.explained_variances": {"tf": 1}, "ifri_mini_ml_lib.preprocessing.dimensionality_reduction.PCA.explained_variances_ratio": {"tf": 1}, "ifri_mini_ml_lib.preprocessing.dimensionality_reduction.PCA.plot_cumulative_explained_variance_ratio": {"tf": 1}, "ifri_mini_ml_lib.preprocessing.dimensionality_reduction.TSNE": {"tf": 1}, "ifri_mini_ml_lib.preprocessing.dimensionality_reduction.TSNE.__init__": {"tf": 1}, "ifri_mini_ml_lib.preprocessing.dimensionality_reduction.TSNE.n_components": {"tf": 1}, "ifri_mini_ml_lib.preprocessing.dimensionality_reduction.TSNE.perplexity": {"tf": 1}, "ifri_mini_ml_lib.preprocessing.dimensionality_reduction.TSNE.early_exaggeration": {"tf": 1}, "ifri_mini_ml_lib.preprocessing.dimensionality_reduction.TSNE.learning_rate": {"tf": 1}, "ifri_mini_ml_lib.preprocessing.dimensionality_reduction.TSNE.n_iter": {"tf": 1}, "ifri_mini_ml_lib.preprocessing.dimensionality_reduction.TSNE.init": {"tf": 1}, "ifri_mini_ml_lib.preprocessing.dimensionality_reduction.TSNE.min_grad_norm": {"tf": 1}, "ifri_mini_ml_lib.preprocessing.dimensionality_reduction.TSNE.random_state": {"tf": 1}, "ifri_mini_ml_lib.preprocessing.dimensionality_reduction.TSNE.verbose": {"tf": 1}, "ifri_mini_ml_lib.preprocessing.dimensionality_reduction.TSNE.embedding_": {"tf": 1}, "ifri_mini_ml_lib.preprocessing.dimensionality_reduction.TSNE.kl_divergence_": {"tf": 1}, "ifri_mini_ml_lib.preprocessing.dimensionality_reduction.TSNE.n_iter_": {"tf": 1}, "ifri_mini_ml_lib.preprocessing.dimensionality_reduction.TSNE.rng": {"tf": 1}, "ifri_mini_ml_lib.preprocessing.dimensionality_reduction.TSNE.fit": {"tf": 1}, "ifri_mini_ml_lib.preprocessing.dimensionality_reduction.TSNE.fit_transform": {"tf": 1}, "ifri_mini_ml_lib.preprocessing.dimensionality_reduction.TSNE.generate_test_data": {"tf": 1}, "ifri_mini_ml_lib.preprocessing.dimensionality_reduction.TSNE.plot_results": {"tf": 1}, "ifri_mini_ml_lib.preprocessing.preparation": {"tf": 1}, "ifri_mini_ml_lib.preprocessing.preparation.MinMaxScaler": {"tf": 1}, "ifri_mini_ml_lib.preprocessing.preparation.MinMaxScaler.__init__": {"tf": 1}, "ifri_mini_ml_lib.preprocessing.preparation.MinMaxScaler.min_": {"tf": 1}, "ifri_mini_ml_lib.preprocessing.preparation.MinMaxScaler.max_": {"tf": 1}, "ifri_mini_ml_lib.preprocessing.preparation.MinMaxScaler.columns": {"tf": 1}, "ifri_mini_ml_lib.preprocessing.preparation.MinMaxScaler.fit": {"tf": 1}, "ifri_mini_ml_lib.preprocessing.preparation.MinMaxScaler.transform": {"tf": 1}, "ifri_mini_ml_lib.preprocessing.preparation.MinMaxScaler.fit_transform": {"tf": 1}, "ifri_mini_ml_lib.preprocessing.preparation.MinMaxScaler.inverse_transform": {"tf": 1}, "ifri_mini_ml_lib.preprocessing.preparation.MissingValueHandler": {"tf": 1}, "ifri_mini_ml_lib.preprocessing.preparation.MissingValueHandler.remove_missing": {"tf": 1}, "ifri_mini_ml_lib.preprocessing.preparation.MissingValueHandler.impute_statistical": {"tf": 1}, "ifri_mini_ml_lib.preprocessing.preparation.MissingValueHandler.impute_default": {"tf": 1}, "ifri_mini_ml_lib.preprocessing.preparation.MissingValueHandler.impute_knn": {"tf": 1}, "ifri_mini_ml_lib.preprocessing.preparation.MissingValueHandler.impute_regression": {"tf": 1}, "ifri_mini_ml_lib.preprocessing.preparation.StandardScaler": {"tf": 1}, "ifri_mini_ml_lib.preprocessing.preparation.StandardScaler.__init__": {"tf": 1}, "ifri_mini_ml_lib.preprocessing.preparation.StandardScaler.mean_": {"tf": 1}, "ifri_mini_ml_lib.preprocessing.preparation.StandardScaler.std_": {"tf": 1}, "ifri_mini_ml_lib.preprocessing.preparation.StandardScaler.is_dataframe": {"tf": 1}, "ifri_mini_ml_lib.preprocessing.preparation.StandardScaler.columns": {"tf": 1}, "ifri_mini_ml_lib.preprocessing.preparation.StandardScaler.fit": {"tf": 1}, "ifri_mini_ml_lib.preprocessing.preparation.StandardScaler.transform": {"tf": 1}, "ifri_mini_ml_lib.preprocessing.preparation.StandardScaler.fit_transform": {"tf": 1}, "ifri_mini_ml_lib.preprocessing.preparation.StandardScaler.inverse_transform": {"tf": 1}, "ifri_mini_ml_lib.preprocessing.preparation.CategoricalEncoder": {"tf": 1}, "ifri_mini_ml_lib.preprocessing.preparation.CategoricalEncoder.__init__": {"tf": 1}, "ifri_mini_ml_lib.preprocessing.preparation.CategoricalEncoder.encoding_type": {"tf": 1}, "ifri_mini_ml_lib.preprocessing.preparation.CategoricalEncoder.target_column": {"tf": 1}, "ifri_mini_ml_lib.preprocessing.preparation.CategoricalEncoder.mapping": {"tf": 1}, "ifri_mini_ml_lib.preprocessing.preparation.CategoricalEncoder.fit": {"tf": 1}, "ifri_mini_ml_lib.preprocessing.preparation.CategoricalEncoder.transform": {"tf": 1}, "ifri_mini_ml_lib.preprocessing.preparation.CategoricalEncoder.fit_transform": {"tf": 1}, "ifri_mini_ml_lib.preprocessing.preparation.DataSplitter": {"tf": 1}, "ifri_mini_ml_lib.preprocessing.preparation.DataSplitter.__init__": {"tf": 1}, "ifri_mini_ml_lib.preprocessing.preparation.DataSplitter.seed": {"tf": 1}, "ifri_mini_ml_lib.preprocessing.preparation.DataSplitter.train_test_split": {"tf": 1}, "ifri_mini_ml_lib.preprocessing.preparation.DataSplitter.stratified_train_test_split": {"tf": 1}, "ifri_mini_ml_lib.preprocessing.preparation.DataSplitter.temporal_train_test_split": {"tf": 1}, "ifri_mini_ml_lib.preprocessing.preparation.DataSplitter.k_fold_split": {"tf": 1}, "ifri_mini_ml_lib.regression": {"tf": 1}, "ifri_mini_ml_lib.regression.LinearRegression": {"tf": 1}, "ifri_mini_ml_lib.regression.LinearRegression.__init__": {"tf": 1}, "ifri_mini_ml_lib.regression.LinearRegression.method": {"tf": 1}, "ifri_mini_ml_lib.regression.LinearRegression.learning_rate": {"tf": 1}, "ifri_mini_ml_lib.regression.LinearRegression.epochs": {"tf": 1}, "ifri_mini_ml_lib.regression.LinearRegression.w": {"tf": 1}, "ifri_mini_ml_lib.regression.LinearRegression.b": {"tf": 1}, "ifri_mini_ml_lib.regression.LinearRegression.fit": {"tf": 1}, "ifri_mini_ml_lib.regression.LinearRegression.predict": {"tf": 1}, "ifri_mini_ml_lib.regression.PolynomialRegression": {"tf": 1}, "ifri_mini_ml_lib.regression.PolynomialRegression.__init__": {"tf": 1}, "ifri_mini_ml_lib.regression.PolynomialRegression.degree": {"tf": 1}, "ifri_mini_ml_lib.regression.PolynomialRegression.method": {"tf": 1}, "ifri_mini_ml_lib.regression.PolynomialRegression.learning_rate": {"tf": 1}, "ifri_mini_ml_lib.regression.PolynomialRegression.epochs": {"tf": 1}, "ifri_mini_ml_lib.regression.PolynomialRegression.w": {"tf": 1}, "ifri_mini_ml_lib.regression.PolynomialRegression.b": {"tf": 1}, "ifri_mini_ml_lib.regression.PolynomialRegression.fit": {"tf": 1}, "ifri_mini_ml_lib.regression.PolynomialRegression.predict": {"tf": 1}, "ifri_mini_ml_lib.regression.SVR": {"tf": 1}, "ifri_mini_ml_lib.regression.SVR.__init__": {"tf": 1}, "ifri_mini_ml_lib.regression.SVR.kerlist": {"tf": 1}, "ifri_mini_ml_lib.regression.SVR.eps": {"tf": 1}, "ifri_mini_ml_lib.regression.SVR.train_X": {"tf": 1}, "ifri_mini_ml_lib.regression.SVR.train_y": {"tf": 1}, "ifri_mini_ml_lib.regression.SVR.test_X": {"tf": 1}, "ifri_mini_ml_lib.regression.SVR.test_y": {"tf": 1}, "ifri_mini_ml_lib.regression.SVR.ker": {"tf": 1}, "ifri_mini_ml_lib.regression.SVR.linear_kernel": {"tf": 1}, "ifri_mini_ml_lib.regression.SVR.polynomial_kernel": {"tf": 1}, "ifri_mini_ml_lib.regression.SVR.rbf_kernel": {"tf": 1}, "ifri_mini_ml_lib.regression.SVR.sigmoid_kernel": {"tf": 1}, "ifri_mini_ml_lib.regression.SVR.get_kernel": {"tf": 1}, "ifri_mini_ml_lib.regression.SVR.fit": {"tf": 1}, "ifri_mini_ml_lib.regression.SVR.predict": {"tf": 1}, "ifri_mini_ml_lib.regression.SVR.set_params": {"tf": 1}}, "df": 374}, "m": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "x": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"ifri_mini_ml_lib.preprocessing.preparation.MinMaxScaler": {"tf": 1}, "ifri_mini_ml_lib.preprocessing.preparation.MinMaxScaler.__init__": {"tf": 1}, "ifri_mini_ml_lib.preprocessing.preparation.MinMaxScaler.min_": {"tf": 1}, "ifri_mini_ml_lib.preprocessing.preparation.MinMaxScaler.max_": {"tf": 1}, "ifri_mini_ml_lib.preprocessing.preparation.MinMaxScaler.columns": {"tf": 1}, "ifri_mini_ml_lib.preprocessing.preparation.MinMaxScaler.fit": {"tf": 1}, "ifri_mini_ml_lib.preprocessing.preparation.MinMaxScaler.transform": {"tf": 1}, "ifri_mini_ml_lib.preprocessing.preparation.MinMaxScaler.fit_transform": {"tf": 1}, "ifri_mini_ml_lib.preprocessing.preparation.MinMaxScaler.inverse_transform": {"tf": 1}}, "df": 9}}}}}}}}}}, "s": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"ifri_mini_ml_lib.preprocessing.preparation.MissingValueHandler.remove_missing": {"tf": 1}}, "df": 1, "v": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "h": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"ifri_mini_ml_lib.preprocessing.preparation.MissingValueHandler": {"tf": 1}, "ifri_mini_ml_lib.preprocessing.preparation.MissingValueHandler.remove_missing": {"tf": 1}, "ifri_mini_ml_lib.preprocessing.preparation.MissingValueHandler.impute_statistical": {"tf": 1}, "ifri_mini_ml_lib.preprocessing.preparation.MissingValueHandler.impute_default": {"tf": 1}, "ifri_mini_ml_lib.preprocessing.preparation.MissingValueHandler.impute_knn": {"tf": 1}, "ifri_mini_ml_lib.preprocessing.preparation.MissingValueHandler.impute_regression": {"tf": 1}}, "df": 6}}}}}}}}}}}}}}}}}}, "l": {"docs": {"ifri_mini_ml_lib": {"tf": 1}, "ifri_mini_ml_lib.association_rules": {"tf": 1}, "ifri_mini_ml_lib.association_rules.Apriori": {"tf": 1}, "ifri_mini_ml_lib.association_rules.Apriori.__init__": {"tf": 1}, "ifri_mini_ml_lib.association_rules.Apriori.min_support": {"tf": 1}, "ifri_mini_ml_lib.association_rules.Apriori.min_confidence": {"tf": 1}, "ifri_mini_ml_lib.association_rules.Apriori.frequent_itemsets_": {"tf": 1}, "ifri_mini_ml_lib.association_rules.Apriori.rules_": {"tf": 1}, "ifri_mini_ml_lib.association_rules.Apriori.fit": {"tf": 1}, "ifri_mini_ml_lib.association_rules.Apriori.get_frequent_itemsets": {"tf": 1}, "ifri_mini_ml_lib.association_rules.Apriori.get_rules": {"tf": 1}, "ifri_mini_ml_lib.association_rules.Eclat": {"tf": 1}, "ifri_mini_ml_lib.association_rules.Eclat.__init__": {"tf": 1}, "ifri_mini_ml_lib.association_rules.Eclat.min_support": {"tf": 1}, "ifri_mini_ml_lib.association_rules.Eclat.min_confidence": {"tf": 1}, "ifri_mini_ml_lib.association_rules.Eclat.frequent_itemsets": {"tf": 1}, "ifri_mini_ml_lib.association_rules.Eclat.frequent_TIDsets": {"tf": 1}, "ifri_mini_ml_lib.association_rules.Eclat.rules_": {"tf": 1}, "ifri_mini_ml_lib.association_rules.Eclat.n_transactions": {"tf": 1}, "ifri_mini_ml_lib.association_rules.Eclat.fit": {"tf": 1}, "ifri_mini_ml_lib.association_rules.Eclat.get_single_items_TIDset": {"tf": 1}, "ifri_mini_ml_lib.association_rules.Eclat.get_frequent_itemsets": {"tf": 1}, "ifri_mini_ml_lib.association_rules.Eclat.get_rules": {"tf": 1}, "ifri_mini_ml_lib.association_rules.FPGrowth": {"tf": 1}, "ifri_mini_ml_lib.association_rules.FPGrowth.__init__": {"tf": 1}, "ifri_mini_ml_lib.association_rules.FPGrowth.min_support": {"tf": 1}, "ifri_mini_ml_lib.association_rules.FPGrowth.min_confidence": {"tf": 1}, "ifri_mini_ml_lib.association_rules.FPGrowth.frequent_itemsets_dict": {"tf": 1}, "ifri_mini_ml_lib.association_rules.FPGrowth.rules_": {"tf": 1}, "ifri_mini_ml_lib.association_rules.FPGrowth.header_table": {"tf": 1}, "ifri_mini_ml_lib.association_rules.FPGrowth.n_transactions": {"tf": 1}, "ifri_mini_ml_lib.association_rules.FPGrowth.fit": {"tf": 1}, "ifri_mini_ml_lib.association_rules.FPGrowth.get_frequent_itemsets": {"tf": 1}, "ifri_mini_ml_lib.association_rules.FPGrowth.get_rules": {"tf": 1}, "ifri_mini_ml_lib.association_rules.DataAdapter": {"tf": 1}, "ifri_mini_ml_lib.association_rules.DataAdapter.convert_to_transactions": {"tf": 1}, "ifri_mini_ml_lib.association_rules.DataAdapter.load_csv_to_transactions": {"tf": 1}, "ifri_mini_ml_lib.classification": {"tf": 1}, "ifri_mini_ml_lib.classification.DecisionTree": {"tf": 1}, "ifri_mini_ml_lib.classification.DecisionTree.__init__": {"tf": 1}, "ifri_mini_ml_lib.classification.DecisionTree.max_depth": {"tf": 1}, "ifri_mini_ml_lib.classification.DecisionTree.min_samples_split": {"tf": 1}, "ifri_mini_ml_lib.classification.DecisionTree.min_samples_leaf": {"tf": 1}, "ifri_mini_ml_lib.classification.DecisionTree.min_impurity_decrease": {"tf": 1}, "ifri_mini_ml_lib.classification.DecisionTree.tree": {"tf": 1}, "ifri_mini_ml_lib.classification.DecisionTree.fit": {"tf": 1}, "ifri_mini_ml_lib.classification.DecisionTree.predict": {"tf": 1}, "ifri_mini_ml_lib.classification.KNN": {"tf": 1}, "ifri_mini_ml_lib.classification.KNN.__init__": {"tf": 1}, "ifri_mini_ml_lib.classification.KNN.k": {"tf": 1}, "ifri_mini_ml_lib.classification.KNN.task": {"tf": 1}, "ifri_mini_ml_lib.classification.KNN.fit": {"tf": 1}, "ifri_mini_ml_lib.classification.KNN.predict": {"tf": 1}, "ifri_mini_ml_lib.classification.LogisticRegression": {"tf": 1}, "ifri_mini_ml_lib.classification.LogisticRegression.__init__": {"tf": 1}, "ifri_mini_ml_lib.classification.LogisticRegression.learning_rate": {"tf": 1}, "ifri_mini_ml_lib.classification.LogisticRegression.momentum": {"tf": 1}, "ifri_mini_ml_lib.classification.LogisticRegression.max_iter": {"tf": 1}, "ifri_mini_ml_lib.classification.LogisticRegression.tol": {"tf": 1}, "ifri_mini_ml_lib.classification.LogisticRegression.weights": {"tf": 1}, "ifri_mini_ml_lib.classification.LogisticRegression.bias": {"tf": 1}, "ifri_mini_ml_lib.classification.LogisticRegression.loss_history": {"tf": 1}, "ifri_mini_ml_lib.classification.LogisticRegression.fit": {"tf": 1}, "ifri_mini_ml_lib.classification.LogisticRegression.predict_proba": {"tf": 1}, "ifri_mini_ml_lib.classification.LogisticRegression.predict": {"tf": 1}, "ifri_mini_ml_lib.clustering": {"tf": 1}, "ifri_mini_ml_lib.clustering.KMeans": {"tf": 1}, "ifri_mini_ml_lib.clustering.KMeans.__init__": {"tf": 1}, "ifri_mini_ml_lib.clustering.KMeans.n_clusters": {"tf": 1}, "ifri_mini_ml_lib.clustering.KMeans.max_iter": {"tf": 1}, "ifri_mini_ml_lib.clustering.KMeans.tol": {"tf": 1}, "ifri_mini_ml_lib.clustering.KMeans.init": {"tf": 1}, "ifri_mini_ml_lib.clustering.KMeans.random_state": {"tf": 1}, "ifri_mini_ml_lib.clustering.KMeans.centroids": {"tf": 1}, "ifri_mini_ml_lib.clustering.KMeans.labels": {"tf": 1}, "ifri_mini_ml_lib.clustering.KMeans.fit": {"tf": 1}, "ifri_mini_ml_lib.clustering.KMeans.predict": {"tf": 1}, "ifri_mini_ml_lib.clustering.KMeans.fit_predict": {"tf": 1}, "ifri_mini_ml_lib.clustering.KMeans.plot_clusters": {"tf": 1}, "ifri_mini_ml_lib.clustering.DBSCAN": {"tf": 1}, "ifri_mini_ml_lib.clustering.DBSCAN.__init__": {"tf": 1}, "ifri_mini_ml_lib.clustering.DBSCAN.eps": {"tf": 1}, "ifri_mini_ml_lib.clustering.DBSCAN.min_samples": {"tf": 1}, "ifri_mini_ml_lib.clustering.DBSCAN.labels": {"tf": 1}, "ifri_mini_ml_lib.clustering.DBSCAN.fit_predict": {"tf": 1}, "ifri_mini_ml_lib.clustering.DBSCAN.plot_clusters": {"tf": 1}, "ifri_mini_ml_lib.clustering.HierarchicalClustering": {"tf": 1}, "ifri_mini_ml_lib.clustering.HierarchicalClustering.__init__": {"tf": 1}, "ifri_mini_ml_lib.clustering.HierarchicalClustering.n_clusters": {"tf": 1}, "ifri_mini_ml_lib.clustering.HierarchicalClustering.linkage": {"tf": 1}, "ifri_mini_ml_lib.clustering.HierarchicalClustering.method": {"tf": 1}, "ifri_mini_ml_lib.clustering.HierarchicalClustering.labels": {"tf": 1}, "ifri_mini_ml_lib.clustering.HierarchicalClustering.linked_matrix": {"tf": 1}, "ifri_mini_ml_lib.clustering.HierarchicalClustering.fit_predict": {"tf": 1}, "ifri_mini_ml_lib.clustering.HierarchicalClustering.plot_dendrogram": {"tf": 1}, "ifri_mini_ml_lib.clustering.HierarchicalClustering.plot_clusters": {"tf": 1}, "ifri_mini_ml_lib.metrics": {"tf": 1}, "ifri_mini_ml_lib.metrics.bias_evaluation": {"tf": 1}, "ifri_mini_ml_lib.metrics.bias_evaluation.selection_rate": {"tf": 1}, "ifri_mini_ml_lib.metrics.bias_evaluation.selection_rate_per_group": {"tf": 1}, "ifri_mini_ml_lib.metrics.bias_evaluation.demographic_parity_ratio": {"tf": 1}, "ifri_mini_ml_lib.metrics.bias_evaluation.demographic_parity_difference": {"tf": 1}, "ifri_mini_ml_lib.metrics.bias_evaluation.tpr_fpr_by_group": {"tf": 1}, "ifri_mini_ml_lib.metrics.bias_evaluation.equalized_odds_ratio": {"tf": 1}, "ifri_mini_ml_lib.metrics.bias_evaluation.equalized_odds_difference": {"tf": 1}, "ifri_mini_ml_lib.metrics.evaluation_metrics": {"tf": 1}, "ifri_mini_ml_lib.metrics.evaluation_metrics.evaluate_model": {"tf": 1}, "ifri_mini_ml_lib.metrics.evaluation_metrics.confusion_matrix": {"tf": 1}, "ifri_mini_ml_lib.metrics.evaluation_metrics.accuracy": {"tf": 1}, "ifri_mini_ml_lib.metrics.evaluation_metrics.precision": {"tf": 1}, "ifri_mini_ml_lib.metrics.evaluation_metrics.recall": {"tf": 1}, "ifri_mini_ml_lib.metrics.evaluation_metrics.f1_score": {"tf": 1}, "ifri_mini_ml_lib.metrics.evaluation_metrics.calculate_inertia": {"tf": 1}, "ifri_mini_ml_lib.metrics.evaluation_metrics.calculate_silhouette": {"tf": 1}, "ifri_mini_ml_lib.model_selection": {"tf": 1}, "ifri_mini_ml_lib.model_selection.BaggingClassifier": {"tf": 1}, "ifri_mini_ml_lib.model_selection.BaggingClassifier.__init__": {"tf": 1}, "ifri_mini_ml_lib.model_selection.BaggingClassifier.base_model": {"tf": 1}, "ifri_mini_ml_lib.model_selection.BaggingClassifier.n_estimators": {"tf": 1}, "ifri_mini_ml_lib.model_selection.BaggingClassifier.random_state": {"tf": 1}, "ifri_mini_ml_lib.model_selection.BaggingClassifier.models": {"tf": 1}, "ifri_mini_ml_lib.model_selection.BaggingClassifier.pretrained": {"tf": 1}, "ifri_mini_ml_lib.model_selection.BaggingClassifier.fit": {"tf": 1}, "ifri_mini_ml_lib.model_selection.BaggingClassifier.predict": {"tf": 1}, "ifri_mini_ml_lib.model_selection.BaggingRegressor": {"tf": 1}, "ifri_mini_ml_lib.model_selection.BaggingRegressor.__init__": {"tf": 1}, "ifri_mini_ml_lib.model_selection.BaggingRegressor.base_model": {"tf": 1}, "ifri_mini_ml_lib.model_selection.BaggingRegressor.n_estimators": {"tf": 1}, "ifri_mini_ml_lib.model_selection.BaggingRegressor.random_state": {"tf": 1}, "ifri_mini_ml_lib.model_selection.BaggingRegressor.models": {"tf": 1}, "ifri_mini_ml_lib.model_selection.BaggingRegressor.pretrained": {"tf": 1}, "ifri_mini_ml_lib.model_selection.BaggingRegressor.fit": {"tf": 1}, "ifri_mini_ml_lib.model_selection.BaggingRegressor.predict": {"tf": 1}, "ifri_mini_ml_lib.model_selection.BayesianSearchCV": {"tf": 1}, "ifri_mini_ml_lib.model_selection.BayesianSearchCV.__init__": {"tf": 1}, "ifri_mini_ml_lib.model_selection.BayesianSearchCV.estimator": {"tf": 1}, "ifri_mini_ml_lib.model_selection.BayesianSearchCV.param_bounds": {"tf": 1}, "ifri_mini_ml_lib.model_selection.BayesianSearchCV.n_iter": {"tf": 1}, "ifri_mini_ml_lib.model_selection.BayesianSearchCV.init_points": {"tf": 1}, "ifri_mini_ml_lib.model_selection.BayesianSearchCV.cv": {"tf": 1}, "ifri_mini_ml_lib.model_selection.BayesianSearchCV.scoring": {"tf": 1}, "ifri_mini_ml_lib.model_selection.BayesianSearchCV.stratified": {"tf": 1}, "ifri_mini_ml_lib.model_selection.BayesianSearchCV.param_types": {"tf": 1}, "ifri_mini_ml_lib.model_selection.BayesianSearchCV.random_state": {"tf": 1}, "ifri_mini_ml_lib.model_selection.BayesianSearchCV.X_obs": {"tf": 1}, "ifri_mini_ml_lib.model_selection.BayesianSearchCV.y_obs": {"tf": 1}, "ifri_mini_ml_lib.model_selection.BayesianSearchCV.gp": {"tf": 1}, "ifri_mini_ml_lib.model_selection.BayesianSearchCV.maximize": {"tf": 1}, "ifri_mini_ml_lib.model_selection.BayesianSearchCV.history_": {"tf": 1}, "ifri_mini_ml_lib.model_selection.BayesianSearchCV.fit": {"tf": 1}, "ifri_mini_ml_lib.model_selection.BayesianSearchCV.get_best_params": {"tf": 1}, "ifri_mini_ml_lib.model_selection.GridSearchCV": {"tf": 1}, "ifri_mini_ml_lib.model_selection.GridSearchCV.__init__": {"tf": 1}, "ifri_mini_ml_lib.model_selection.GridSearchCV.model": {"tf": 1}, "ifri_mini_ml_lib.model_selection.GridSearchCV.param_grid": {"tf": 1}, "ifri_mini_ml_lib.model_selection.GridSearchCV.k": {"tf": 1}, "ifri_mini_ml_lib.model_selection.GridSearchCV.scoring": {"tf": 1}, "ifri_mini_ml_lib.model_selection.GridSearchCV.stratified": {"tf": 1}, "ifri_mini_ml_lib.model_selection.GridSearchCV.best_params_": {"tf": 1}, "ifri_mini_ml_lib.model_selection.GridSearchCV.best_score_": {"tf": 1}, "ifri_mini_ml_lib.model_selection.GridSearchCV.best_estimator_": {"tf": 1}, "ifri_mini_ml_lib.model_selection.GridSearchCV.fit": {"tf": 1}, "ifri_mini_ml_lib.model_selection.RandomSearchCV": {"tf": 1}, "ifri_mini_ml_lib.model_selection.RandomSearchCV.__init__": {"tf": 1}, "ifri_mini_ml_lib.model_selection.RandomSearchCV.model": {"tf": 1}, "ifri_mini_ml_lib.model_selection.RandomSearchCV.param_grid": {"tf": 1}, "ifri_mini_ml_lib.model_selection.RandomSearchCV.n_iter": {"tf": 1}, "ifri_mini_ml_lib.model_selection.RandomSearchCV.k": {"tf": 1}, "ifri_mini_ml_lib.model_selection.RandomSearchCV.scoring": {"tf": 1}, "ifri_mini_ml_lib.model_selection.RandomSearchCV.stratified": {"tf": 1}, "ifri_mini_ml_lib.model_selection.RandomSearchCV.random_state": {"tf": 1}, "ifri_mini_ml_lib.model_selection.RandomSearchCV.best_params_": {"tf": 1}, "ifri_mini_ml_lib.model_selection.RandomSearchCV.best_score_": {"tf": 1}, "ifri_mini_ml_lib.model_selection.RandomSearchCV.best_estimator_": {"tf": 1}, "ifri_mini_ml_lib.model_selection.RandomSearchCV.fit": {"tf": 1}, "ifri_mini_ml_lib.neural_networks": {"tf": 1}, "ifri_mini_ml_lib.neural_networks.MLPClassifier": {"tf": 1}, "ifri_mini_ml_lib.neural_networks.MLPClassifier.__init__": {"tf": 1}, "ifri_mini_ml_lib.neural_networks.MLPClassifier.hidden_layer_sizes": {"tf": 1}, "ifri_mini_ml_lib.neural_networks.MLPClassifier.activation": {"tf": 1}, "ifri_mini_ml_lib.neural_networks.MLPClassifier.solver": {"tf": 1}, "ifri_mini_ml_lib.neural_networks.MLPClassifier.alpha": {"tf": 1}, "ifri_mini_ml_lib.neural_networks.MLPClassifier.batch_size": {"tf": 1}, "ifri_mini_ml_lib.neural_networks.MLPClassifier.learning_rate": {"tf": 1}, "ifri_mini_ml_lib.neural_networks.MLPClassifier.max_iter": {"tf": 1}, "ifri_mini_ml_lib.neural_networks.MLPClassifier.shuffle": {"tf": 1}, "ifri_mini_ml_lib.neural_networks.MLPClassifier.beta1": {"tf": 1}, "ifri_mini_ml_lib.neural_networks.MLPClassifier.beta2": {"tf": 1}, "ifri_mini_ml_lib.neural_networks.MLPClassifier.epsilon": {"tf": 1}, "ifri_mini_ml_lib.neural_networks.MLPClassifier.momentum": {"tf": 1}, "ifri_mini_ml_lib.neural_networks.MLPClassifier.tol": {"tf": 1}, "ifri_mini_ml_lib.neural_networks.MLPClassifier.early_stopping": {"tf": 1}, "ifri_mini_ml_lib.neural_networks.MLPClassifier.validation_fraction": {"tf": 1}, "ifri_mini_ml_lib.neural_networks.MLPClassifier.n_iter_no_change": {"tf": 1}, "ifri_mini_ml_lib.neural_networks.MLPClassifier.activation_functions": {"tf": 1}, "ifri_mini_ml_lib.neural_networks.MLPClassifier.activation_derivatives": {"tf": 1}, "ifri_mini_ml_lib.neural_networks.MLPClassifier.activation_func": {"tf": 1}, "ifri_mini_ml_lib.neural_networks.MLPClassifier.activation_derivative": {"tf": 1}, "ifri_mini_ml_lib.neural_networks.MLPClassifier.weights": {"tf": 1}, "ifri_mini_ml_lib.neural_networks.MLPClassifier.biases": {"tf": 1}, "ifri_mini_ml_lib.neural_networks.MLPClassifier.n_layers": {"tf": 1}, "ifri_mini_ml_lib.neural_networks.MLPClassifier.n_outputs": {"tf": 1}, "ifri_mini_ml_lib.neural_networks.MLPClassifier.velocity_weights": {"tf": 1}, "ifri_mini_ml_lib.neural_networks.MLPClassifier.velocity_biases": {"tf": 1}, "ifri_mini_ml_lib.neural_networks.MLPClassifier.m_weights": {"tf": 1}, "ifri_mini_ml_lib.neural_networks.MLPClassifier.m_biases": {"tf": 1}, "ifri_mini_ml_lib.neural_networks.MLPClassifier.v_weights": {"tf": 1}, "ifri_mini_ml_lib.neural_networks.MLPClassifier.v_biases": {"tf": 1}, "ifri_mini_ml_lib.neural_networks.MLPClassifier.t": {"tf": 1}, "ifri_mini_ml_lib.neural_networks.MLPClassifier.loss_history": {"tf": 1}, "ifri_mini_ml_lib.neural_networks.MLPClassifier.val_loss_history": {"tf": 1}, "ifri_mini_ml_lib.neural_networks.MLPClassifier.best_loss": {"tf": 1}, "ifri_mini_ml_lib.neural_networks.MLPClassifier.no_improvement_count": {"tf": 1}, "ifri_mini_ml_lib.neural_networks.MLPClassifier.trained": {"tf": 1}, "ifri_mini_ml_lib.neural_networks.MLPClassifier.classes_": {"tf": 1}, "ifri_mini_ml_lib.neural_networks.MLPClassifier.fit": {"tf": 1}, "ifri_mini_ml_lib.neural_networks.MLPClassifier.predict": {"tf": 1}, "ifri_mini_ml_lib.neural_networks.MLPClassifier.predict_proba": {"tf": 1}, "ifri_mini_ml_lib.neural_networks.MLPClassifier.score": {"tf": 1}, "ifri_mini_ml_lib.neural_networks.MLPRegressor": {"tf": 1}, "ifri_mini_ml_lib.neural_networks.MLPRegressor.__init__": {"tf": 1}, "ifri_mini_ml_lib.neural_networks.MLPRegressor.hidden_layer_sizes": {"tf": 1}, "ifri_mini_ml_lib.neural_networks.MLPRegressor.activation": {"tf": 1}, "ifri_mini_ml_lib.neural_networks.MLPRegressor.solver": {"tf": 1}, "ifri_mini_ml_lib.neural_networks.MLPRegressor.alpha": {"tf": 1}, "ifri_mini_ml_lib.neural_networks.MLPRegressor.batch_size": {"tf": 1}, "ifri_mini_ml_lib.neural_networks.MLPRegressor.learning_rate": {"tf": 1}, "ifri_mini_ml_lib.neural_networks.MLPRegressor.max_iter": {"tf": 1}, "ifri_mini_ml_lib.neural_networks.MLPRegressor.shuffle": {"tf": 1}, "ifri_mini_ml_lib.neural_networks.MLPRegressor.beta1": {"tf": 1}, "ifri_mini_ml_lib.neural_networks.MLPRegressor.beta2": {"tf": 1}, "ifri_mini_ml_lib.neural_networks.MLPRegressor.epsilon": {"tf": 1}, "ifri_mini_ml_lib.neural_networks.MLPRegressor.momentum": {"tf": 1}, "ifri_mini_ml_lib.neural_networks.MLPRegressor.tol": {"tf": 1}, "ifri_mini_ml_lib.neural_networks.MLPRegressor.early_stopping": {"tf": 1}, "ifri_mini_ml_lib.neural_networks.MLPRegressor.validation_fraction": {"tf": 1}, "ifri_mini_ml_lib.neural_networks.MLPRegressor.n_iter_no_change": {"tf": 1}, "ifri_mini_ml_lib.neural_networks.MLPRegressor.activation_functions": {"tf": 1}, "ifri_mini_ml_lib.neural_networks.MLPRegressor.activation_derivatives": {"tf": 1}, "ifri_mini_ml_lib.neural_networks.MLPRegressor.activation_func": {"tf": 1}, "ifri_mini_ml_lib.neural_networks.MLPRegressor.activation_derivative": {"tf": 1}, "ifri_mini_ml_lib.neural_networks.MLPRegressor.weights": {"tf": 1}, "ifri_mini_ml_lib.neural_networks.MLPRegressor.biases": {"tf": 1}, "ifri_mini_ml_lib.neural_networks.MLPRegressor.n_layers": {"tf": 1}, "ifri_mini_ml_lib.neural_networks.MLPRegressor.n_outputs": {"tf": 1}, "ifri_mini_ml_lib.neural_networks.MLPRegressor.velocity_weights": {"tf": 1}, "ifri_mini_ml_lib.neural_networks.MLPRegressor.velocity_biases": {"tf": 1}, "ifri_mini_ml_lib.neural_networks.MLPRegressor.m_weights": {"tf": 1}, "ifri_mini_ml_lib.neural_networks.MLPRegressor.m_biases": {"tf": 1}, "ifri_mini_ml_lib.neural_networks.MLPRegressor.v_weights": {"tf": 1}, "ifri_mini_ml_lib.neural_networks.MLPRegressor.v_biases": {"tf": 1}, "ifri_mini_ml_lib.neural_networks.MLPRegressor.t": {"tf": 1}, "ifri_mini_ml_lib.neural_networks.MLPRegressor.loss_history": {"tf": 1}, "ifri_mini_ml_lib.neural_networks.MLPRegressor.val_loss_history": {"tf": 1}, "ifri_mini_ml_lib.neural_networks.MLPRegressor.best_loss": {"tf": 1}, "ifri_mini_ml_lib.neural_networks.MLPRegressor.no_improvement_count": {"tf": 1}, "ifri_mini_ml_lib.neural_networks.MLPRegressor.trained": {"tf": 1}, "ifri_mini_ml_lib.neural_networks.MLPRegressor.fit": {"tf": 1}, "ifri_mini_ml_lib.neural_networks.MLPRegressor.predict": {"tf": 1}, "ifri_mini_ml_lib.neural_networks.MLPRegressor.score": {"tf": 1}, "ifri_mini_ml_lib.preprocessing": {"tf": 1}, "ifri_mini_ml_lib.preprocessing.dimensionality_reduction": {"tf": 1}, "ifri_mini_ml_lib.preprocessing.dimensionality_reduction.PCA": {"tf": 1}, "ifri_mini_ml_lib.preprocessing.dimensionality_reduction.PCA.__init__": {"tf": 1}, "ifri_mini_ml_lib.preprocessing.dimensionality_reduction.PCA.n_component": {"tf": 1}, "ifri_mini_ml_lib.preprocessing.dimensionality_reduction.PCA.mean": {"tf": 1}, "ifri_mini_ml_lib.preprocessing.dimensionality_reduction.PCA.cov": {"tf": 1}, "ifri_mini_ml_lib.preprocessing.dimensionality_reduction.PCA.eigen_values": {"tf": 1}, "ifri_mini_ml_lib.preprocessing.dimensionality_reduction.PCA.eigen_vectors": {"tf": 1}, "ifri_mini_ml_lib.preprocessing.dimensionality_reduction.PCA.components": {"tf": 1}, "ifri_mini_ml_lib.preprocessing.dimensionality_reduction.PCA.fit": {"tf": 1}, "ifri_mini_ml_lib.preprocessing.dimensionality_reduction.PCA.transform": {"tf": 1}, "ifri_mini_ml_lib.preprocessing.dimensionality_reduction.PCA.fit_transform": {"tf": 1}, "ifri_mini_ml_lib.preprocessing.dimensionality_reduction.PCA.plot_cov_matrix": {"tf": 1}, "ifri_mini_ml_lib.preprocessing.dimensionality_reduction.PCA.explained_variances": {"tf": 1}, "ifri_mini_ml_lib.preprocessing.dimensionality_reduction.PCA.explained_variances_ratio": {"tf": 1}, "ifri_mini_ml_lib.preprocessing.dimensionality_reduction.PCA.plot_cumulative_explained_variance_ratio": {"tf": 1}, "ifri_mini_ml_lib.preprocessing.dimensionality_reduction.TSNE": {"tf": 1}, "ifri_mini_ml_lib.preprocessing.dimensionality_reduction.TSNE.__init__": {"tf": 1}, "ifri_mini_ml_lib.preprocessing.dimensionality_reduction.TSNE.n_components": {"tf": 1}, "ifri_mini_ml_lib.preprocessing.dimensionality_reduction.TSNE.perplexity": {"tf": 1}, "ifri_mini_ml_lib.preprocessing.dimensionality_reduction.TSNE.early_exaggeration": {"tf": 1}, "ifri_mini_ml_lib.preprocessing.dimensionality_reduction.TSNE.learning_rate": {"tf": 1}, "ifri_mini_ml_lib.preprocessing.dimensionality_reduction.TSNE.n_iter": {"tf": 1}, "ifri_mini_ml_lib.preprocessing.dimensionality_reduction.TSNE.init": {"tf": 1}, "ifri_mini_ml_lib.preprocessing.dimensionality_reduction.TSNE.min_grad_norm": {"tf": 1}, "ifri_mini_ml_lib.preprocessing.dimensionality_reduction.TSNE.random_state": {"tf": 1}, "ifri_mini_ml_lib.preprocessing.dimensionality_reduction.TSNE.verbose": {"tf": 1}, "ifri_mini_ml_lib.preprocessing.dimensionality_reduction.TSNE.embedding_": {"tf": 1}, "ifri_mini_ml_lib.preprocessing.dimensionality_reduction.TSNE.kl_divergence_": {"tf": 1}, "ifri_mini_ml_lib.preprocessing.dimensionality_reduction.TSNE.n_iter_": {"tf": 1}, "ifri_mini_ml_lib.preprocessing.dimensionality_reduction.TSNE.rng": {"tf": 1}, "ifri_mini_ml_lib.preprocessing.dimensionality_reduction.TSNE.fit": {"tf": 1}, "ifri_mini_ml_lib.preprocessing.dimensionality_reduction.TSNE.fit_transform": {"tf": 1}, "ifri_mini_ml_lib.preprocessing.dimensionality_reduction.TSNE.generate_test_data": {"tf": 1}, "ifri_mini_ml_lib.preprocessing.dimensionality_reduction.TSNE.plot_results": {"tf": 1}, "ifri_mini_ml_lib.preprocessing.preparation": {"tf": 1}, "ifri_mini_ml_lib.preprocessing.preparation.MinMaxScaler": {"tf": 1}, "ifri_mini_ml_lib.preprocessing.preparation.MinMaxScaler.__init__": {"tf": 1}, "ifri_mini_ml_lib.preprocessing.preparation.MinMaxScaler.min_": {"tf": 1}, "ifri_mini_ml_lib.preprocessing.preparation.MinMaxScaler.max_": {"tf": 1}, "ifri_mini_ml_lib.preprocessing.preparation.MinMaxScaler.columns": {"tf": 1}, "ifri_mini_ml_lib.preprocessing.preparation.MinMaxScaler.fit": {"tf": 1}, "ifri_mini_ml_lib.preprocessing.preparation.MinMaxScaler.transform": {"tf": 1}, "ifri_mini_ml_lib.preprocessing.preparation.MinMaxScaler.fit_transform": {"tf": 1}, "ifri_mini_ml_lib.preprocessing.preparation.MinMaxScaler.inverse_transform": {"tf": 1}, "ifri_mini_ml_lib.preprocessing.preparation.MissingValueHandler": {"tf": 1}, "ifri_mini_ml_lib.preprocessing.preparation.MissingValueHandler.remove_missing": {"tf": 1}, "ifri_mini_ml_lib.preprocessing.preparation.MissingValueHandler.impute_statistical": {"tf": 1}, "ifri_mini_ml_lib.preprocessing.preparation.MissingValueHandler.impute_default": {"tf": 1}, "ifri_mini_ml_lib.preprocessing.preparation.MissingValueHandler.impute_knn": {"tf": 1}, "ifri_mini_ml_lib.preprocessing.preparation.MissingValueHandler.impute_regression": {"tf": 1}, "ifri_mini_ml_lib.preprocessing.preparation.StandardScaler": {"tf": 1}, "ifri_mini_ml_lib.preprocessing.preparation.StandardScaler.__init__": {"tf": 1}, "ifri_mini_ml_lib.preprocessing.preparation.StandardScaler.mean_": {"tf": 1}, "ifri_mini_ml_lib.preprocessing.preparation.StandardScaler.std_": {"tf": 1}, "ifri_mini_ml_lib.preprocessing.preparation.StandardScaler.is_dataframe": {"tf": 1}, "ifri_mini_ml_lib.preprocessing.preparation.StandardScaler.columns": {"tf": 1}, "ifri_mini_ml_lib.preprocessing.preparation.StandardScaler.fit": {"tf": 1}, "ifri_mini_ml_lib.preprocessing.preparation.StandardScaler.transform": {"tf": 1}, "ifri_mini_ml_lib.preprocessing.preparation.StandardScaler.fit_transform": {"tf": 1}, "ifri_mini_ml_lib.preprocessing.preparation.StandardScaler.inverse_transform": {"tf": 1}, "ifri_mini_ml_lib.preprocessing.preparation.CategoricalEncoder": {"tf": 1}, "ifri_mini_ml_lib.preprocessing.preparation.CategoricalEncoder.__init__": {"tf": 1}, "ifri_mini_ml_lib.preprocessing.preparation.CategoricalEncoder.encoding_type": {"tf": 1}, "ifri_mini_ml_lib.preprocessing.preparation.CategoricalEncoder.target_column": {"tf": 1}, "ifri_mini_ml_lib.preprocessing.preparation.CategoricalEncoder.mapping": {"tf": 1}, "ifri_mini_ml_lib.preprocessing.preparation.CategoricalEncoder.fit": {"tf": 1}, "ifri_mini_ml_lib.preprocessing.preparation.CategoricalEncoder.transform": {"tf": 1}, "ifri_mini_ml_lib.preprocessing.preparation.CategoricalEncoder.fit_transform": {"tf": 1}, "ifri_mini_ml_lib.preprocessing.preparation.DataSplitter": {"tf": 1}, "ifri_mini_ml_lib.preprocessing.preparation.DataSplitter.__init__": {"tf": 1}, "ifri_mini_ml_lib.preprocessing.preparation.DataSplitter.seed": {"tf": 1}, "ifri_mini_ml_lib.preprocessing.preparation.DataSplitter.train_test_split": {"tf": 1}, "ifri_mini_ml_lib.preprocessing.preparation.DataSplitter.stratified_train_test_split": {"tf": 1}, "ifri_mini_ml_lib.preprocessing.preparation.DataSplitter.temporal_train_test_split": {"tf": 1}, "ifri_mini_ml_lib.preprocessing.preparation.DataSplitter.k_fold_split": {"tf": 1}, "ifri_mini_ml_lib.regression": {"tf": 1}, "ifri_mini_ml_lib.regression.LinearRegression": {"tf": 1}, "ifri_mini_ml_lib.regression.LinearRegression.__init__": {"tf": 1}, "ifri_mini_ml_lib.regression.LinearRegression.method": {"tf": 1}, "ifri_mini_ml_lib.regression.LinearRegression.learning_rate": {"tf": 1}, "ifri_mini_ml_lib.regression.LinearRegression.epochs": {"tf": 1}, "ifri_mini_ml_lib.regression.LinearRegression.w": {"tf": 1}, "ifri_mini_ml_lib.regression.LinearRegression.b": {"tf": 1}, "ifri_mini_ml_lib.regression.LinearRegression.fit": {"tf": 1}, "ifri_mini_ml_lib.regression.LinearRegression.predict": {"tf": 1}, "ifri_mini_ml_lib.regression.PolynomialRegression": {"tf": 1}, "ifri_mini_ml_lib.regression.PolynomialRegression.__init__": {"tf": 1}, "ifri_mini_ml_lib.regression.PolynomialRegression.degree": {"tf": 1}, "ifri_mini_ml_lib.regression.PolynomialRegression.method": {"tf": 1}, "ifri_mini_ml_lib.regression.PolynomialRegression.learning_rate": {"tf": 1}, "ifri_mini_ml_lib.regression.PolynomialRegression.epochs": {"tf": 1}, "ifri_mini_ml_lib.regression.PolynomialRegression.w": {"tf": 1}, "ifri_mini_ml_lib.regression.PolynomialRegression.b": {"tf": 1}, "ifri_mini_ml_lib.regression.PolynomialRegression.fit": {"tf": 1}, "ifri_mini_ml_lib.regression.PolynomialRegression.predict": {"tf": 1}, "ifri_mini_ml_lib.regression.SVR": {"tf": 1}, "ifri_mini_ml_lib.regression.SVR.__init__": {"tf": 1}, "ifri_mini_ml_lib.regression.SVR.kerlist": {"tf": 1}, "ifri_mini_ml_lib.regression.SVR.eps": {"tf": 1}, "ifri_mini_ml_lib.regression.SVR.train_X": {"tf": 1}, "ifri_mini_ml_lib.regression.SVR.train_y": {"tf": 1}, "ifri_mini_ml_lib.regression.SVR.test_X": {"tf": 1}, "ifri_mini_ml_lib.regression.SVR.test_y": {"tf": 1}, "ifri_mini_ml_lib.regression.SVR.ker": {"tf": 1}, "ifri_mini_ml_lib.regression.SVR.linear_kernel": {"tf": 1}, "ifri_mini_ml_lib.regression.SVR.polynomial_kernel": {"tf": 1}, "ifri_mini_ml_lib.regression.SVR.rbf_kernel": {"tf": 1}, "ifri_mini_ml_lib.regression.SVR.sigmoid_kernel": {"tf": 1}, "ifri_mini_ml_lib.regression.SVR.get_kernel": {"tf": 1}, "ifri_mini_ml_lib.regression.SVR.fit": {"tf": 1}, "ifri_mini_ml_lib.regression.SVR.predict": {"tf": 1}, "ifri_mini_ml_lib.regression.SVR.set_params": {"tf": 1}}, "df": 374, "p": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "f": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"ifri_mini_ml_lib.neural_networks.MLPClassifier": {"tf": 1}, "ifri_mini_ml_lib.neural_networks.MLPClassifier.__init__": {"tf": 1}, "ifri_mini_ml_lib.neural_networks.MLPClassifier.hidden_layer_sizes": {"tf": 1}, "ifri_mini_ml_lib.neural_networks.MLPClassifier.activation": {"tf": 1}, "ifri_mini_ml_lib.neural_networks.MLPClassifier.solver": {"tf": 1}, "ifri_mini_ml_lib.neural_networks.MLPClassifier.alpha": {"tf": 1}, "ifri_mini_ml_lib.neural_networks.MLPClassifier.batch_size": {"tf": 1}, "ifri_mini_ml_lib.neural_networks.MLPClassifier.learning_rate": {"tf": 1}, "ifri_mini_ml_lib.neural_networks.MLPClassifier.max_iter": {"tf": 1}, "ifri_mini_ml_lib.neural_networks.MLPClassifier.shuffle": {"tf": 1}, "ifri_mini_ml_lib.neural_networks.MLPClassifier.beta1": {"tf": 1}, "ifri_mini_ml_lib.neural_networks.MLPClassifier.beta2": {"tf": 1}, "ifri_mini_ml_lib.neural_networks.MLPClassifier.epsilon": {"tf": 1}, "ifri_mini_ml_lib.neural_networks.MLPClassifier.momentum": {"tf": 1}, "ifri_mini_ml_lib.neural_networks.MLPClassifier.tol": {"tf": 1}, "ifri_mini_ml_lib.neural_networks.MLPClassifier.early_stopping": {"tf": 1}, "ifri_mini_ml_lib.neural_networks.MLPClassifier.validation_fraction": {"tf": 1}, "ifri_mini_ml_lib.neural_networks.MLPClassifier.n_iter_no_change": {"tf": 1}, "ifri_mini_ml_lib.neural_networks.MLPClassifier.activation_functions": {"tf": 1}, "ifri_mini_ml_lib.neural_networks.MLPClassifier.activation_derivatives": {"tf": 1}, "ifri_mini_ml_lib.neural_networks.MLPClassifier.activation_func": {"tf": 1}, "ifri_mini_ml_lib.neural_networks.MLPClassifier.activation_derivative": {"tf": 1}, "ifri_mini_ml_lib.neural_networks.MLPClassifier.weights": {"tf": 1}, "ifri_mini_ml_lib.neural_networks.MLPClassifier.biases": {"tf": 1}, "ifri_mini_ml_lib.neural_networks.MLPClassifier.n_layers": {"tf": 1}, "ifri_mini_ml_lib.neural_networks.MLPClassifier.n_outputs": {"tf": 1}, "ifri_mini_ml_lib.neural_networks.MLPClassifier.velocity_weights": {"tf": 1}, "ifri_mini_ml_lib.neural_networks.MLPClassifier.velocity_biases": {"tf": 1}, "ifri_mini_ml_lib.neural_networks.MLPClassifier.m_weights": {"tf": 1}, "ifri_mini_ml_lib.neural_networks.MLPClassifier.m_biases": {"tf": 1}, "ifri_mini_ml_lib.neural_networks.MLPClassifier.v_weights": {"tf": 1}, "ifri_mini_ml_lib.neural_networks.MLPClassifier.v_biases": {"tf": 1}, "ifri_mini_ml_lib.neural_networks.MLPClassifier.t": {"tf": 1}, "ifri_mini_ml_lib.neural_networks.MLPClassifier.loss_history": {"tf": 1}, "ifri_mini_ml_lib.neural_networks.MLPClassifier.val_loss_history": {"tf": 1}, "ifri_mini_ml_lib.neural_networks.MLPClassifier.best_loss": {"tf": 1}, "ifri_mini_ml_lib.neural_networks.MLPClassifier.no_improvement_count": {"tf": 1}, "ifri_mini_ml_lib.neural_networks.MLPClassifier.trained": {"tf": 1}, "ifri_mini_ml_lib.neural_networks.MLPClassifier.classes_": {"tf": 1}, "ifri_mini_ml_lib.neural_networks.MLPClassifier.fit": {"tf": 1}, "ifri_mini_ml_lib.neural_networks.MLPClassifier.predict": {"tf": 1}, "ifri_mini_ml_lib.neural_networks.MLPClassifier.predict_proba": {"tf": 1}, "ifri_mini_ml_lib.neural_networks.MLPClassifier.score": {"tf": 1}}, "df": 43}}}}}}}}}}, "r": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {"ifri_mini_ml_lib.neural_networks.MLPRegressor": {"tf": 1}, "ifri_mini_ml_lib.neural_networks.MLPRegressor.__init__": {"tf": 1}, "ifri_mini_ml_lib.neural_networks.MLPRegressor.hidden_layer_sizes": {"tf": 1}, "ifri_mini_ml_lib.neural_networks.MLPRegressor.activation": {"tf": 1}, "ifri_mini_ml_lib.neural_networks.MLPRegressor.solver": {"tf": 1}, "ifri_mini_ml_lib.neural_networks.MLPRegressor.alpha": {"tf": 1}, "ifri_mini_ml_lib.neural_networks.MLPRegressor.batch_size": {"tf": 1}, "ifri_mini_ml_lib.neural_networks.MLPRegressor.learning_rate": {"tf": 1}, "ifri_mini_ml_lib.neural_networks.MLPRegressor.max_iter": {"tf": 1}, "ifri_mini_ml_lib.neural_networks.MLPRegressor.shuffle": {"tf": 1}, "ifri_mini_ml_lib.neural_networks.MLPRegressor.beta1": {"tf": 1}, "ifri_mini_ml_lib.neural_networks.MLPRegressor.beta2": {"tf": 1}, "ifri_mini_ml_lib.neural_networks.MLPRegressor.epsilon": {"tf": 1}, "ifri_mini_ml_lib.neural_networks.MLPRegressor.momentum": {"tf": 1}, "ifri_mini_ml_lib.neural_networks.MLPRegressor.tol": {"tf": 1}, "ifri_mini_ml_lib.neural_networks.MLPRegressor.early_stopping": {"tf": 1}, "ifri_mini_ml_lib.neural_networks.MLPRegressor.validation_fraction": {"tf": 1}, "ifri_mini_ml_lib.neural_networks.MLPRegressor.n_iter_no_change": {"tf": 1}, "ifri_mini_ml_lib.neural_networks.MLPRegressor.activation_functions": {"tf": 1}, "ifri_mini_ml_lib.neural_networks.MLPRegressor.activation_derivatives": {"tf": 1}, "ifri_mini_ml_lib.neural_networks.MLPRegressor.activation_func": {"tf": 1}, "ifri_mini_ml_lib.neural_networks.MLPRegressor.activation_derivative": {"tf": 1}, "ifri_mini_ml_lib.neural_networks.MLPRegressor.weights": {"tf": 1}, "ifri_mini_ml_lib.neural_networks.MLPRegressor.biases": {"tf": 1}, "ifri_mini_ml_lib.neural_networks.MLPRegressor.n_layers": {"tf": 1}, "ifri_mini_ml_lib.neural_networks.MLPRegressor.n_outputs": {"tf": 1}, "ifri_mini_ml_lib.neural_networks.MLPRegressor.velocity_weights": {"tf": 1}, "ifri_mini_ml_lib.neural_networks.MLPRegressor.velocity_biases": {"tf": 1}, "ifri_mini_ml_lib.neural_networks.MLPRegressor.m_weights": {"tf": 1}, "ifri_mini_ml_lib.neural_networks.MLPRegressor.m_biases": {"tf": 1}, "ifri_mini_ml_lib.neural_networks.MLPRegressor.v_weights": {"tf": 1}, "ifri_mini_ml_lib.neural_networks.MLPRegressor.v_biases": {"tf": 1}, "ifri_mini_ml_lib.neural_networks.MLPRegressor.t": {"tf": 1}, "ifri_mini_ml_lib.neural_networks.MLPRegressor.loss_history": {"tf": 1}, "ifri_mini_ml_lib.neural_networks.MLPRegressor.val_loss_history": {"tf": 1}, "ifri_mini_ml_lib.neural_networks.MLPRegressor.best_loss": {"tf": 1}, "ifri_mini_ml_lib.neural_networks.MLPRegressor.no_improvement_count": {"tf": 1}, "ifri_mini_ml_lib.neural_networks.MLPRegressor.trained": {"tf": 1}, "ifri_mini_ml_lib.neural_networks.MLPRegressor.fit": {"tf": 1}, "ifri_mini_ml_lib.neural_networks.MLPRegressor.predict": {"tf": 1}, "ifri_mini_ml_lib.neural_networks.MLPRegressor.score": {"tf": 1}}, "df": 41}}}}}}}}}}}, "a": {"docs": {}, "df": 0, "x": {"docs": {"ifri_mini_ml_lib.classification.DecisionTree.max_depth": {"tf": 1}, "ifri_mini_ml_lib.classification.LogisticRegression.max_iter": {"tf": 1}, "ifri_mini_ml_lib.clustering.KMeans.max_iter": {"tf": 1}, "ifri_mini_ml_lib.neural_networks.MLPClassifier.max_iter": {"tf": 1}, "ifri_mini_ml_lib.neural_networks.MLPRegressor.max_iter": {"tf": 1}, "ifri_mini_ml_lib.preprocessing.preparation.MinMaxScaler.max_": {"tf": 1}}, "df": 6, "i": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "z": {"docs": {}, "df": 0, "e": {"docs": {"ifri_mini_ml_lib.model_selection.BayesianSearchCV.maximize": {"tf": 1}}, "df": 1}}}}}}, "t": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "x": {"docs": {"ifri_mini_ml_lib.clustering.HierarchicalClustering.linked_matrix": {"tf": 1}, "ifri_mini_ml_lib.metrics.evaluation_metrics.confusion_matrix": {"tf": 1}, "ifri_mini_ml_lib.preprocessing.dimensionality_reduction.PCA.plot_cov_matrix": {"tf": 1}}, "df": 3}}}}, "p": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"ifri_mini_ml_lib.preprocessing.preparation.CategoricalEncoder.mapping": {"tf": 1}}, "df": 1}}}}}}, "o": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "m": {"docs": {"ifri_mini_ml_lib.classification.LogisticRegression.momentum": {"tf": 1}, "ifri_mini_ml_lib.neural_networks.MLPClassifier.momentum": {"tf": 1}, "ifri_mini_ml_lib.neural_networks.MLPRegressor.momentum": {"tf": 1}}, "df": 3}}}}}}, "d": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "l": {"docs": {"ifri_mini_ml_lib.metrics.evaluation_metrics.evaluate_model": {"tf": 1}, "ifri_mini_ml_lib.model_selection": {"tf": 1}, "ifri_mini_ml_lib.model_selection.BaggingClassifier": {"tf": 1}, "ifri_mini_ml_lib.model_selection.BaggingClassifier.__init__": {"tf": 1}, "ifri_mini_ml_lib.model_selection.BaggingClassifier.base_model": {"tf": 1.4142135623730951}, "ifri_mini_ml_lib.model_selection.BaggingClassifier.n_estimators": {"tf": 1}, "ifri_mini_ml_lib.model_selection.BaggingClassifier.random_state": {"tf": 1}, "ifri_mini_ml_lib.model_selection.BaggingClassifier.models": {"tf": 1}, "ifri_mini_ml_lib.model_selection.BaggingClassifier.pretrained": {"tf": 1}, "ifri_mini_ml_lib.model_selection.BaggingClassifier.fit": {"tf": 1}, "ifri_mini_ml_lib.model_selection.BaggingClassifier.predict": {"tf": 1}, "ifri_mini_ml_lib.model_selection.BaggingRegressor": {"tf": 1}, "ifri_mini_ml_lib.model_selection.BaggingRegressor.__init__": {"tf": 1}, "ifri_mini_ml_lib.model_selection.BaggingRegressor.base_model": {"tf": 1.4142135623730951}, "ifri_mini_ml_lib.model_selection.BaggingRegressor.n_estimators": {"tf": 1}, "ifri_mini_ml_lib.model_selection.BaggingRegressor.random_state": {"tf": 1}, "ifri_mini_ml_lib.model_selection.BaggingRegressor.models": {"tf": 1}, "ifri_mini_ml_lib.model_selection.BaggingRegressor.pretrained": {"tf": 1}, "ifri_mini_ml_lib.model_selection.BaggingRegressor.fit": {"tf": 1}, "ifri_mini_ml_lib.model_selection.BaggingRegressor.predict": {"tf": 1}, "ifri_mini_ml_lib.model_selection.BayesianSearchCV": {"tf": 1}, "ifri_mini_ml_lib.model_selection.BayesianSearchCV.__init__": {"tf": 1}, "ifri_mini_ml_lib.model_selection.BayesianSearchCV.estimator": {"tf": 1}, "ifri_mini_ml_lib.model_selection.BayesianSearchCV.param_bounds": {"tf": 1}, "ifri_mini_ml_lib.model_selection.BayesianSearchCV.n_iter": {"tf": 1}, "ifri_mini_ml_lib.model_selection.BayesianSearchCV.init_points": {"tf": 1}, "ifri_mini_ml_lib.model_selection.BayesianSearchCV.cv": {"tf": 1}, "ifri_mini_ml_lib.model_selection.BayesianSearchCV.scoring": {"tf": 1}, "ifri_mini_ml_lib.model_selection.BayesianSearchCV.stratified": {"tf": 1}, "ifri_mini_ml_lib.model_selection.BayesianSearchCV.param_types": {"tf": 1}, "ifri_mini_ml_lib.model_selection.BayesianSearchCV.random_state": {"tf": 1}, "ifri_mini_ml_lib.model_selection.BayesianSearchCV.X_obs": {"tf": 1}, "ifri_mini_ml_lib.model_selection.BayesianSearchCV.y_obs": {"tf": 1}, "ifri_mini_ml_lib.model_selection.BayesianSearchCV.gp": {"tf": 1}, "ifri_mini_ml_lib.model_selection.BayesianSearchCV.maximize": {"tf": 1}, "ifri_mini_ml_lib.model_selection.BayesianSearchCV.history_": {"tf": 1}, "ifri_mini_ml_lib.model_selection.BayesianSearchCV.fit": {"tf": 1}, "ifri_mini_ml_lib.model_selection.BayesianSearchCV.get_best_params": {"tf": 1}, "ifri_mini_ml_lib.model_selection.GridSearchCV": {"tf": 1}, "ifri_mini_ml_lib.model_selection.GridSearchCV.__init__": {"tf": 1}, "ifri_mini_ml_lib.model_selection.GridSearchCV.model": {"tf": 1.4142135623730951}, "ifri_mini_ml_lib.model_selection.GridSearchCV.param_grid": {"tf": 1}, "ifri_mini_ml_lib.model_selection.GridSearchCV.k": {"tf": 1}, "ifri_mini_ml_lib.model_selection.GridSearchCV.scoring": {"tf": 1}, "ifri_mini_ml_lib.model_selection.GridSearchCV.stratified": {"tf": 1}, "ifri_mini_ml_lib.model_selection.GridSearchCV.best_params_": {"tf": 1}, "ifri_mini_ml_lib.model_selection.GridSearchCV.best_score_": {"tf": 1}, "ifri_mini_ml_lib.model_selection.GridSearchCV.best_estimator_": {"tf": 1}, "ifri_mini_ml_lib.model_selection.GridSearchCV.fit": {"tf": 1}, "ifri_mini_ml_lib.model_selection.RandomSearchCV": {"tf": 1}, "ifri_mini_ml_lib.model_selection.RandomSearchCV.__init__": {"tf": 1}, "ifri_mini_ml_lib.model_selection.RandomSearchCV.model": {"tf": 1.4142135623730951}, "ifri_mini_ml_lib.model_selection.RandomSearchCV.param_grid": {"tf": 1}, "ifri_mini_ml_lib.model_selection.RandomSearchCV.n_iter": {"tf": 1}, "ifri_mini_ml_lib.model_selection.RandomSearchCV.k": {"tf": 1}, "ifri_mini_ml_lib.model_selection.RandomSearchCV.scoring": {"tf": 1}, "ifri_mini_ml_lib.model_selection.RandomSearchCV.stratified": {"tf": 1}, "ifri_mini_ml_lib.model_selection.RandomSearchCV.random_state": {"tf": 1}, "ifri_mini_ml_lib.model_selection.RandomSearchCV.best_params_": {"tf": 1}, "ifri_mini_ml_lib.model_selection.RandomSearchCV.best_score_": {"tf": 1}, "ifri_mini_ml_lib.model_selection.RandomSearchCV.best_estimator_": {"tf": 1}, "ifri_mini_ml_lib.model_selection.RandomSearchCV.fit": {"tf": 1}}, "df": 62, "s": {"docs": {"ifri_mini_ml_lib.model_selection.BaggingClassifier.models": {"tf": 1}, "ifri_mini_ml_lib.model_selection.BaggingRegressor.models": {"tf": 1}}, "df": 2}}}}}, "e": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "h": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "d": {"docs": {"ifri_mini_ml_lib.clustering.HierarchicalClustering.method": {"tf": 1}, "ifri_mini_ml_lib.regression.LinearRegression.method": {"tf": 1}, "ifri_mini_ml_lib.regression.PolynomialRegression.method": {"tf": 1}}, "df": 3}}}, "r": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "s": {"docs": {"ifri_mini_ml_lib.metrics": {"tf": 1}, "ifri_mini_ml_lib.metrics.bias_evaluation": {"tf": 1}, "ifri_mini_ml_lib.metrics.bias_evaluation.selection_rate": {"tf": 1}, "ifri_mini_ml_lib.metrics.bias_evaluation.selection_rate_per_group": {"tf": 1}, "ifri_mini_ml_lib.metrics.bias_evaluation.demographic_parity_ratio": {"tf": 1}, "ifri_mini_ml_lib.metrics.bias_evaluation.demographic_parity_difference": {"tf": 1}, "ifri_mini_ml_lib.metrics.bias_evaluation.tpr_fpr_by_group": {"tf": 1}, "ifri_mini_ml_lib.metrics.bias_evaluation.equalized_odds_ratio": {"tf": 1}, "ifri_mini_ml_lib.metrics.bias_evaluation.equalized_odds_difference": {"tf": 1}, "ifri_mini_ml_lib.metrics.evaluation_metrics": {"tf": 1.4142135623730951}, "ifri_mini_ml_lib.metrics.evaluation_metrics.evaluate_model": {"tf": 1.4142135623730951}, "ifri_mini_ml_lib.metrics.evaluation_metrics.confusion_matrix": {"tf": 1.4142135623730951}, "ifri_mini_ml_lib.metrics.evaluation_metrics.accuracy": {"tf": 1.4142135623730951}, "ifri_mini_ml_lib.metrics.evaluation_metrics.precision": {"tf": 1.4142135623730951}, "ifri_mini_ml_lib.metrics.evaluation_metrics.recall": {"tf": 1.4142135623730951}, "ifri_mini_ml_lib.metrics.evaluation_metrics.f1_score": {"tf": 1.4142135623730951}, "ifri_mini_ml_lib.metrics.evaluation_metrics.calculate_inertia": {"tf": 1.4142135623730951}, "ifri_mini_ml_lib.metrics.evaluation_metrics.calculate_silhouette": {"tf": 1.4142135623730951}}, "df": 18}}}}}, "a": {"docs": {}, "df": 0, "n": {"docs": {"ifri_mini_ml_lib.preprocessing.dimensionality_reduction.PCA.mean": {"tf": 1}, "ifri_mini_ml_lib.preprocessing.preparation.StandardScaler.mean_": {"tf": 1}}, "df": 2}}}}, "l": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "b": {"docs": {"ifri_mini_ml_lib": {"tf": 1}, "ifri_mini_ml_lib.association_rules": {"tf": 1}, "ifri_mini_ml_lib.association_rules.Apriori": {"tf": 1}, "ifri_mini_ml_lib.association_rules.Apriori.__init__": {"tf": 1}, "ifri_mini_ml_lib.association_rules.Apriori.min_support": {"tf": 1}, "ifri_mini_ml_lib.association_rules.Apriori.min_confidence": {"tf": 1}, "ifri_mini_ml_lib.association_rules.Apriori.frequent_itemsets_": {"tf": 1}, "ifri_mini_ml_lib.association_rules.Apriori.rules_": {"tf": 1}, "ifri_mini_ml_lib.association_rules.Apriori.fit": {"tf": 1}, "ifri_mini_ml_lib.association_rules.Apriori.get_frequent_itemsets": {"tf": 1}, "ifri_mini_ml_lib.association_rules.Apriori.get_rules": {"tf": 1}, "ifri_mini_ml_lib.association_rules.Eclat": {"tf": 1}, "ifri_mini_ml_lib.association_rules.Eclat.__init__": {"tf": 1}, "ifri_mini_ml_lib.association_rules.Eclat.min_support": {"tf": 1}, "ifri_mini_ml_lib.association_rules.Eclat.min_confidence": {"tf": 1}, "ifri_mini_ml_lib.association_rules.Eclat.frequent_itemsets": {"tf": 1}, "ifri_mini_ml_lib.association_rules.Eclat.frequent_TIDsets": {"tf": 1}, "ifri_mini_ml_lib.association_rules.Eclat.rules_": {"tf": 1}, "ifri_mini_ml_lib.association_rules.Eclat.n_transactions": {"tf": 1}, "ifri_mini_ml_lib.association_rules.Eclat.fit": {"tf": 1}, "ifri_mini_ml_lib.association_rules.Eclat.get_single_items_TIDset": {"tf": 1}, "ifri_mini_ml_lib.association_rules.Eclat.get_frequent_itemsets": {"tf": 1}, "ifri_mini_ml_lib.association_rules.Eclat.get_rules": {"tf": 1}, "ifri_mini_ml_lib.association_rules.FPGrowth": {"tf": 1}, "ifri_mini_ml_lib.association_rules.FPGrowth.__init__": {"tf": 1}, "ifri_mini_ml_lib.association_rules.FPGrowth.min_support": {"tf": 1}, "ifri_mini_ml_lib.association_rules.FPGrowth.min_confidence": {"tf": 1}, "ifri_mini_ml_lib.association_rules.FPGrowth.frequent_itemsets_dict": {"tf": 1}, "ifri_mini_ml_lib.association_rules.FPGrowth.rules_": {"tf": 1}, "ifri_mini_ml_lib.association_rules.FPGrowth.header_table": {"tf": 1}, "ifri_mini_ml_lib.association_rules.FPGrowth.n_transactions": {"tf": 1}, "ifri_mini_ml_lib.association_rules.FPGrowth.fit": {"tf": 1}, "ifri_mini_ml_lib.association_rules.FPGrowth.get_frequent_itemsets": {"tf": 1}, "ifri_mini_ml_lib.association_rules.FPGrowth.get_rules": {"tf": 1}, "ifri_mini_ml_lib.association_rules.DataAdapter": {"tf": 1}, "ifri_mini_ml_lib.association_rules.DataAdapter.convert_to_transactions": {"tf": 1}, "ifri_mini_ml_lib.association_rules.DataAdapter.load_csv_to_transactions": {"tf": 1}, "ifri_mini_ml_lib.classification": {"tf": 1}, "ifri_mini_ml_lib.classification.DecisionTree": {"tf": 1}, "ifri_mini_ml_lib.classification.DecisionTree.__init__": {"tf": 1}, "ifri_mini_ml_lib.classification.DecisionTree.max_depth": {"tf": 1}, "ifri_mini_ml_lib.classification.DecisionTree.min_samples_split": {"tf": 1}, "ifri_mini_ml_lib.classification.DecisionTree.min_samples_leaf": {"tf": 1}, "ifri_mini_ml_lib.classification.DecisionTree.min_impurity_decrease": {"tf": 1}, "ifri_mini_ml_lib.classification.DecisionTree.tree": {"tf": 1}, "ifri_mini_ml_lib.classification.DecisionTree.fit": {"tf": 1}, "ifri_mini_ml_lib.classification.DecisionTree.predict": {"tf": 1}, "ifri_mini_ml_lib.classification.KNN": {"tf": 1}, "ifri_mini_ml_lib.classification.KNN.__init__": {"tf": 1}, "ifri_mini_ml_lib.classification.KNN.k": {"tf": 1}, "ifri_mini_ml_lib.classification.KNN.task": {"tf": 1}, "ifri_mini_ml_lib.classification.KNN.fit": {"tf": 1}, "ifri_mini_ml_lib.classification.KNN.predict": {"tf": 1}, "ifri_mini_ml_lib.classification.LogisticRegression": {"tf": 1}, "ifri_mini_ml_lib.classification.LogisticRegression.__init__": {"tf": 1}, "ifri_mini_ml_lib.classification.LogisticRegression.learning_rate": {"tf": 1}, "ifri_mini_ml_lib.classification.LogisticRegression.momentum": {"tf": 1}, "ifri_mini_ml_lib.classification.LogisticRegression.max_iter": {"tf": 1}, "ifri_mini_ml_lib.classification.LogisticRegression.tol": {"tf": 1}, "ifri_mini_ml_lib.classification.LogisticRegression.weights": {"tf": 1}, "ifri_mini_ml_lib.classification.LogisticRegression.bias": {"tf": 1}, "ifri_mini_ml_lib.classification.LogisticRegression.loss_history": {"tf": 1}, "ifri_mini_ml_lib.classification.LogisticRegression.fit": {"tf": 1}, "ifri_mini_ml_lib.classification.LogisticRegression.predict_proba": {"tf": 1}, "ifri_mini_ml_lib.classification.LogisticRegression.predict": {"tf": 1}, "ifri_mini_ml_lib.clustering": {"tf": 1}, "ifri_mini_ml_lib.clustering.KMeans": {"tf": 1}, "ifri_mini_ml_lib.clustering.KMeans.__init__": {"tf": 1}, "ifri_mini_ml_lib.clustering.KMeans.n_clusters": {"tf": 1}, "ifri_mini_ml_lib.clustering.KMeans.max_iter": {"tf": 1}, "ifri_mini_ml_lib.clustering.KMeans.tol": {"tf": 1}, "ifri_mini_ml_lib.clustering.KMeans.init": {"tf": 1}, "ifri_mini_ml_lib.clustering.KMeans.random_state": {"tf": 1}, "ifri_mini_ml_lib.clustering.KMeans.centroids": {"tf": 1}, "ifri_mini_ml_lib.clustering.KMeans.labels": {"tf": 1}, "ifri_mini_ml_lib.clustering.KMeans.fit": {"tf": 1}, "ifri_mini_ml_lib.clustering.KMeans.predict": {"tf": 1}, "ifri_mini_ml_lib.clustering.KMeans.fit_predict": {"tf": 1}, "ifri_mini_ml_lib.clustering.KMeans.plot_clusters": {"tf": 1}, "ifri_mini_ml_lib.clustering.DBSCAN": {"tf": 1}, "ifri_mini_ml_lib.clustering.DBSCAN.__init__": {"tf": 1}, "ifri_mini_ml_lib.clustering.DBSCAN.eps": {"tf": 1}, "ifri_mini_ml_lib.clustering.DBSCAN.min_samples": {"tf": 1}, "ifri_mini_ml_lib.clustering.DBSCAN.labels": {"tf": 1}, "ifri_mini_ml_lib.clustering.DBSCAN.fit_predict": {"tf": 1}, "ifri_mini_ml_lib.clustering.DBSCAN.plot_clusters": {"tf": 1}, "ifri_mini_ml_lib.clustering.HierarchicalClustering": {"tf": 1}, "ifri_mini_ml_lib.clustering.HierarchicalClustering.__init__": {"tf": 1}, "ifri_mini_ml_lib.clustering.HierarchicalClustering.n_clusters": {"tf": 1}, "ifri_mini_ml_lib.clustering.HierarchicalClustering.linkage": {"tf": 1}, "ifri_mini_ml_lib.clustering.HierarchicalClustering.method": {"tf": 1}, "ifri_mini_ml_lib.clustering.HierarchicalClustering.labels": {"tf": 1}, "ifri_mini_ml_lib.clustering.HierarchicalClustering.linked_matrix": {"tf": 1}, "ifri_mini_ml_lib.clustering.HierarchicalClustering.fit_predict": {"tf": 1}, "ifri_mini_ml_lib.clustering.HierarchicalClustering.plot_dendrogram": {"tf": 1}, "ifri_mini_ml_lib.clustering.HierarchicalClustering.plot_clusters": {"tf": 1}, "ifri_mini_ml_lib.metrics": {"tf": 1}, "ifri_mini_ml_lib.metrics.bias_evaluation": {"tf": 1}, "ifri_mini_ml_lib.metrics.bias_evaluation.selection_rate": {"tf": 1}, "ifri_mini_ml_lib.metrics.bias_evaluation.selection_rate_per_group": {"tf": 1}, "ifri_mini_ml_lib.metrics.bias_evaluation.demographic_parity_ratio": {"tf": 1}, "ifri_mini_ml_lib.metrics.bias_evaluation.demographic_parity_difference": {"tf": 1}, "ifri_mini_ml_lib.metrics.bias_evaluation.tpr_fpr_by_group": {"tf": 1}, "ifri_mini_ml_lib.metrics.bias_evaluation.equalized_odds_ratio": {"tf": 1}, "ifri_mini_ml_lib.metrics.bias_evaluation.equalized_odds_difference": {"tf": 1}, "ifri_mini_ml_lib.metrics.evaluation_metrics": {"tf": 1}, "ifri_mini_ml_lib.metrics.evaluation_metrics.evaluate_model": {"tf": 1}, "ifri_mini_ml_lib.metrics.evaluation_metrics.confusion_matrix": {"tf": 1}, "ifri_mini_ml_lib.metrics.evaluation_metrics.accuracy": {"tf": 1}, "ifri_mini_ml_lib.metrics.evaluation_metrics.precision": {"tf": 1}, "ifri_mini_ml_lib.metrics.evaluation_metrics.recall": {"tf": 1}, "ifri_mini_ml_lib.metrics.evaluation_metrics.f1_score": {"tf": 1}, "ifri_mini_ml_lib.metrics.evaluation_metrics.calculate_inertia": {"tf": 1}, "ifri_mini_ml_lib.metrics.evaluation_metrics.calculate_silhouette": {"tf": 1}, "ifri_mini_ml_lib.model_selection": {"tf": 1}, "ifri_mini_ml_lib.model_selection.BaggingClassifier": {"tf": 1}, "ifri_mini_ml_lib.model_selection.BaggingClassifier.__init__": {"tf": 1}, "ifri_mini_ml_lib.model_selection.BaggingClassifier.base_model": {"tf": 1}, "ifri_mini_ml_lib.model_selection.BaggingClassifier.n_estimators": {"tf": 1}, "ifri_mini_ml_lib.model_selection.BaggingClassifier.random_state": {"tf": 1}, "ifri_mini_ml_lib.model_selection.BaggingClassifier.models": {"tf": 1}, "ifri_mini_ml_lib.model_selection.BaggingClassifier.pretrained": {"tf": 1}, "ifri_mini_ml_lib.model_selection.BaggingClassifier.fit": {"tf": 1}, "ifri_mini_ml_lib.model_selection.BaggingClassifier.predict": {"tf": 1}, "ifri_mini_ml_lib.model_selection.BaggingRegressor": {"tf": 1}, "ifri_mini_ml_lib.model_selection.BaggingRegressor.__init__": {"tf": 1}, "ifri_mini_ml_lib.model_selection.BaggingRegressor.base_model": {"tf": 1}, "ifri_mini_ml_lib.model_selection.BaggingRegressor.n_estimators": {"tf": 1}, "ifri_mini_ml_lib.model_selection.BaggingRegressor.random_state": {"tf": 1}, "ifri_mini_ml_lib.model_selection.BaggingRegressor.models": {"tf": 1}, "ifri_mini_ml_lib.model_selection.BaggingRegressor.pretrained": {"tf": 1}, "ifri_mini_ml_lib.model_selection.BaggingRegressor.fit": {"tf": 1}, "ifri_mini_ml_lib.model_selection.BaggingRegressor.predict": {"tf": 1}, "ifri_mini_ml_lib.model_selection.BayesianSearchCV": {"tf": 1}, "ifri_mini_ml_lib.model_selection.BayesianSearchCV.__init__": {"tf": 1}, "ifri_mini_ml_lib.model_selection.BayesianSearchCV.estimator": {"tf": 1}, "ifri_mini_ml_lib.model_selection.BayesianSearchCV.param_bounds": {"tf": 1}, "ifri_mini_ml_lib.model_selection.BayesianSearchCV.n_iter": {"tf": 1}, "ifri_mini_ml_lib.model_selection.BayesianSearchCV.init_points": {"tf": 1}, "ifri_mini_ml_lib.model_selection.BayesianSearchCV.cv": {"tf": 1}, "ifri_mini_ml_lib.model_selection.BayesianSearchCV.scoring": {"tf": 1}, "ifri_mini_ml_lib.model_selection.BayesianSearchCV.stratified": {"tf": 1}, "ifri_mini_ml_lib.model_selection.BayesianSearchCV.param_types": {"tf": 1}, "ifri_mini_ml_lib.model_selection.BayesianSearchCV.random_state": {"tf": 1}, "ifri_mini_ml_lib.model_selection.BayesianSearchCV.X_obs": {"tf": 1}, "ifri_mini_ml_lib.model_selection.BayesianSearchCV.y_obs": {"tf": 1}, "ifri_mini_ml_lib.model_selection.BayesianSearchCV.gp": {"tf": 1}, "ifri_mini_ml_lib.model_selection.BayesianSearchCV.maximize": {"tf": 1}, "ifri_mini_ml_lib.model_selection.BayesianSearchCV.history_": {"tf": 1}, "ifri_mini_ml_lib.model_selection.BayesianSearchCV.fit": {"tf": 1}, "ifri_mini_ml_lib.model_selection.BayesianSearchCV.get_best_params": {"tf": 1}, "ifri_mini_ml_lib.model_selection.GridSearchCV": {"tf": 1}, "ifri_mini_ml_lib.model_selection.GridSearchCV.__init__": {"tf": 1}, "ifri_mini_ml_lib.model_selection.GridSearchCV.model": {"tf": 1}, "ifri_mini_ml_lib.model_selection.GridSearchCV.param_grid": {"tf": 1}, "ifri_mini_ml_lib.model_selection.GridSearchCV.k": {"tf": 1}, "ifri_mini_ml_lib.model_selection.GridSearchCV.scoring": {"tf": 1}, "ifri_mini_ml_lib.model_selection.GridSearchCV.stratified": {"tf": 1}, "ifri_mini_ml_lib.model_selection.GridSearchCV.best_params_": {"tf": 1}, "ifri_mini_ml_lib.model_selection.GridSearchCV.best_score_": {"tf": 1}, "ifri_mini_ml_lib.model_selection.GridSearchCV.best_estimator_": {"tf": 1}, "ifri_mini_ml_lib.model_selection.GridSearchCV.fit": {"tf": 1}, "ifri_mini_ml_lib.model_selection.RandomSearchCV": {"tf": 1}, "ifri_mini_ml_lib.model_selection.RandomSearchCV.__init__": {"tf": 1}, "ifri_mini_ml_lib.model_selection.RandomSearchCV.model": {"tf": 1}, "ifri_mini_ml_lib.model_selection.RandomSearchCV.param_grid": {"tf": 1}, "ifri_mini_ml_lib.model_selection.RandomSearchCV.n_iter": {"tf": 1}, "ifri_mini_ml_lib.model_selection.RandomSearchCV.k": {"tf": 1}, "ifri_mini_ml_lib.model_selection.RandomSearchCV.scoring": {"tf": 1}, "ifri_mini_ml_lib.model_selection.RandomSearchCV.stratified": {"tf": 1}, "ifri_mini_ml_lib.model_selection.RandomSearchCV.random_state": {"tf": 1}, "ifri_mini_ml_lib.model_selection.RandomSearchCV.best_params_": {"tf": 1}, "ifri_mini_ml_lib.model_selection.RandomSearchCV.best_score_": {"tf": 1}, "ifri_mini_ml_lib.model_selection.RandomSearchCV.best_estimator_": {"tf": 1}, "ifri_mini_ml_lib.model_selection.RandomSearchCV.fit": {"tf": 1}, "ifri_mini_ml_lib.neural_networks": {"tf": 1}, "ifri_mini_ml_lib.neural_networks.MLPClassifier": {"tf": 1}, "ifri_mini_ml_lib.neural_networks.MLPClassifier.__init__": {"tf": 1}, "ifri_mini_ml_lib.neural_networks.MLPClassifier.hidden_layer_sizes": {"tf": 1}, "ifri_mini_ml_lib.neural_networks.MLPClassifier.activation": {"tf": 1}, "ifri_mini_ml_lib.neural_networks.MLPClassifier.solver": {"tf": 1}, "ifri_mini_ml_lib.neural_networks.MLPClassifier.alpha": {"tf": 1}, "ifri_mini_ml_lib.neural_networks.MLPClassifier.batch_size": {"tf": 1}, "ifri_mini_ml_lib.neural_networks.MLPClassifier.learning_rate": {"tf": 1}, "ifri_mini_ml_lib.neural_networks.MLPClassifier.max_iter": {"tf": 1}, "ifri_mini_ml_lib.neural_networks.MLPClassifier.shuffle": {"tf": 1}, "ifri_mini_ml_lib.neural_networks.MLPClassifier.beta1": {"tf": 1}, "ifri_mini_ml_lib.neural_networks.MLPClassifier.beta2": {"tf": 1}, "ifri_mini_ml_lib.neural_networks.MLPClassifier.epsilon": {"tf": 1}, "ifri_mini_ml_lib.neural_networks.MLPClassifier.momentum": {"tf": 1}, "ifri_mini_ml_lib.neural_networks.MLPClassifier.tol": {"tf": 1}, "ifri_mini_ml_lib.neural_networks.MLPClassifier.early_stopping": {"tf": 1}, "ifri_mini_ml_lib.neural_networks.MLPClassifier.validation_fraction": {"tf": 1}, "ifri_mini_ml_lib.neural_networks.MLPClassifier.n_iter_no_change": {"tf": 1}, "ifri_mini_ml_lib.neural_networks.MLPClassifier.activation_functions": {"tf": 1}, "ifri_mini_ml_lib.neural_networks.MLPClassifier.activation_derivatives": {"tf": 1}, "ifri_mini_ml_lib.neural_networks.MLPClassifier.activation_func": {"tf": 1}, "ifri_mini_ml_lib.neural_networks.MLPClassifier.activation_derivative": {"tf": 1}, "ifri_mini_ml_lib.neural_networks.MLPClassifier.weights": {"tf": 1}, "ifri_mini_ml_lib.neural_networks.MLPClassifier.biases": {"tf": 1}, "ifri_mini_ml_lib.neural_networks.MLPClassifier.n_layers": {"tf": 1}, "ifri_mini_ml_lib.neural_networks.MLPClassifier.n_outputs": {"tf": 1}, "ifri_mini_ml_lib.neural_networks.MLPClassifier.velocity_weights": {"tf": 1}, "ifri_mini_ml_lib.neural_networks.MLPClassifier.velocity_biases": {"tf": 1}, "ifri_mini_ml_lib.neural_networks.MLPClassifier.m_weights": {"tf": 1}, "ifri_mini_ml_lib.neural_networks.MLPClassifier.m_biases": {"tf": 1}, "ifri_mini_ml_lib.neural_networks.MLPClassifier.v_weights": {"tf": 1}, "ifri_mini_ml_lib.neural_networks.MLPClassifier.v_biases": {"tf": 1}, "ifri_mini_ml_lib.neural_networks.MLPClassifier.t": {"tf": 1}, "ifri_mini_ml_lib.neural_networks.MLPClassifier.loss_history": {"tf": 1}, "ifri_mini_ml_lib.neural_networks.MLPClassifier.val_loss_history": {"tf": 1}, "ifri_mini_ml_lib.neural_networks.MLPClassifier.best_loss": {"tf": 1}, "ifri_mini_ml_lib.neural_networks.MLPClassifier.no_improvement_count": {"tf": 1}, "ifri_mini_ml_lib.neural_networks.MLPClassifier.trained": {"tf": 1}, "ifri_mini_ml_lib.neural_networks.MLPClassifier.classes_": {"tf": 1}, "ifri_mini_ml_lib.neural_networks.MLPClassifier.fit": {"tf": 1}, "ifri_mini_ml_lib.neural_networks.MLPClassifier.predict": {"tf": 1}, "ifri_mini_ml_lib.neural_networks.MLPClassifier.predict_proba": {"tf": 1}, "ifri_mini_ml_lib.neural_networks.MLPClassifier.score": {"tf": 1}, "ifri_mini_ml_lib.neural_networks.MLPRegressor": {"tf": 1}, "ifri_mini_ml_lib.neural_networks.MLPRegressor.__init__": {"tf": 1}, "ifri_mini_ml_lib.neural_networks.MLPRegressor.hidden_layer_sizes": {"tf": 1}, "ifri_mini_ml_lib.neural_networks.MLPRegressor.activation": {"tf": 1}, "ifri_mini_ml_lib.neural_networks.MLPRegressor.solver": {"tf": 1}, "ifri_mini_ml_lib.neural_networks.MLPRegressor.alpha": {"tf": 1}, "ifri_mini_ml_lib.neural_networks.MLPRegressor.batch_size": {"tf": 1}, "ifri_mini_ml_lib.neural_networks.MLPRegressor.learning_rate": {"tf": 1}, "ifri_mini_ml_lib.neural_networks.MLPRegressor.max_iter": {"tf": 1}, "ifri_mini_ml_lib.neural_networks.MLPRegressor.shuffle": {"tf": 1}, "ifri_mini_ml_lib.neural_networks.MLPRegressor.beta1": {"tf": 1}, "ifri_mini_ml_lib.neural_networks.MLPRegressor.beta2": {"tf": 1}, "ifri_mini_ml_lib.neural_networks.MLPRegressor.epsilon": {"tf": 1}, "ifri_mini_ml_lib.neural_networks.MLPRegressor.momentum": {"tf": 1}, "ifri_mini_ml_lib.neural_networks.MLPRegressor.tol": {"tf": 1}, "ifri_mini_ml_lib.neural_networks.MLPRegressor.early_stopping": {"tf": 1}, "ifri_mini_ml_lib.neural_networks.MLPRegressor.validation_fraction": {"tf": 1}, "ifri_mini_ml_lib.neural_networks.MLPRegressor.n_iter_no_change": {"tf": 1}, "ifri_mini_ml_lib.neural_networks.MLPRegressor.activation_functions": {"tf": 1}, "ifri_mini_ml_lib.neural_networks.MLPRegressor.activation_derivatives": {"tf": 1}, "ifri_mini_ml_lib.neural_networks.MLPRegressor.activation_func": {"tf": 1}, "ifri_mini_ml_lib.neural_networks.MLPRegressor.activation_derivative": {"tf": 1}, "ifri_mini_ml_lib.neural_networks.MLPRegressor.weights": {"tf": 1}, "ifri_mini_ml_lib.neural_networks.MLPRegressor.biases": {"tf": 1}, "ifri_mini_ml_lib.neural_networks.MLPRegressor.n_layers": {"tf": 1}, "ifri_mini_ml_lib.neural_networks.MLPRegressor.n_outputs": {"tf": 1}, "ifri_mini_ml_lib.neural_networks.MLPRegressor.velocity_weights": {"tf": 1}, "ifri_mini_ml_lib.neural_networks.MLPRegressor.velocity_biases": {"tf": 1}, "ifri_mini_ml_lib.neural_networks.MLPRegressor.m_weights": {"tf": 1}, "ifri_mini_ml_lib.neural_networks.MLPRegressor.m_biases": {"tf": 1}, "ifri_mini_ml_lib.neural_networks.MLPRegressor.v_weights": {"tf": 1}, "ifri_mini_ml_lib.neural_networks.MLPRegressor.v_biases": {"tf": 1}, "ifri_mini_ml_lib.neural_networks.MLPRegressor.t": {"tf": 1}, "ifri_mini_ml_lib.neural_networks.MLPRegressor.loss_history": {"tf": 1}, "ifri_mini_ml_lib.neural_networks.MLPRegressor.val_loss_history": {"tf": 1}, "ifri_mini_ml_lib.neural_networks.MLPRegressor.best_loss": {"tf": 1}, "ifri_mini_ml_lib.neural_networks.MLPRegressor.no_improvement_count": {"tf": 1}, "ifri_mini_ml_lib.neural_networks.MLPRegressor.trained": {"tf": 1}, "ifri_mini_ml_lib.neural_networks.MLPRegressor.fit": {"tf": 1}, "ifri_mini_ml_lib.neural_networks.MLPRegressor.predict": {"tf": 1}, "ifri_mini_ml_lib.neural_networks.MLPRegressor.score": {"tf": 1}, "ifri_mini_ml_lib.preprocessing": {"tf": 1}, "ifri_mini_ml_lib.preprocessing.dimensionality_reduction": {"tf": 1}, "ifri_mini_ml_lib.preprocessing.dimensionality_reduction.PCA": {"tf": 1}, "ifri_mini_ml_lib.preprocessing.dimensionality_reduction.PCA.__init__": {"tf": 1}, "ifri_mini_ml_lib.preprocessing.dimensionality_reduction.PCA.n_component": {"tf": 1}, "ifri_mini_ml_lib.preprocessing.dimensionality_reduction.PCA.mean": {"tf": 1}, "ifri_mini_ml_lib.preprocessing.dimensionality_reduction.PCA.cov": {"tf": 1}, "ifri_mini_ml_lib.preprocessing.dimensionality_reduction.PCA.eigen_values": {"tf": 1}, "ifri_mini_ml_lib.preprocessing.dimensionality_reduction.PCA.eigen_vectors": {"tf": 1}, "ifri_mini_ml_lib.preprocessing.dimensionality_reduction.PCA.components": {"tf": 1}, "ifri_mini_ml_lib.preprocessing.dimensionality_reduction.PCA.fit": {"tf": 1}, "ifri_mini_ml_lib.preprocessing.dimensionality_reduction.PCA.transform": {"tf": 1}, "ifri_mini_ml_lib.preprocessing.dimensionality_reduction.PCA.fit_transform": {"tf": 1}, "ifri_mini_ml_lib.preprocessing.dimensionality_reduction.PCA.plot_cov_matrix": {"tf": 1}, "ifri_mini_ml_lib.preprocessing.dimensionality_reduction.PCA.explained_variances": {"tf": 1}, "ifri_mini_ml_lib.preprocessing.dimensionality_reduction.PCA.explained_variances_ratio": {"tf": 1}, "ifri_mini_ml_lib.preprocessing.dimensionality_reduction.PCA.plot_cumulative_explained_variance_ratio": {"tf": 1}, "ifri_mini_ml_lib.preprocessing.dimensionality_reduction.TSNE": {"tf": 1}, "ifri_mini_ml_lib.preprocessing.dimensionality_reduction.TSNE.__init__": {"tf": 1}, "ifri_mini_ml_lib.preprocessing.dimensionality_reduction.TSNE.n_components": {"tf": 1}, "ifri_mini_ml_lib.preprocessing.dimensionality_reduction.TSNE.perplexity": {"tf": 1}, "ifri_mini_ml_lib.preprocessing.dimensionality_reduction.TSNE.early_exaggeration": {"tf": 1}, "ifri_mini_ml_lib.preprocessing.dimensionality_reduction.TSNE.learning_rate": {"tf": 1}, "ifri_mini_ml_lib.preprocessing.dimensionality_reduction.TSNE.n_iter": {"tf": 1}, "ifri_mini_ml_lib.preprocessing.dimensionality_reduction.TSNE.init": {"tf": 1}, "ifri_mini_ml_lib.preprocessing.dimensionality_reduction.TSNE.min_grad_norm": {"tf": 1}, "ifri_mini_ml_lib.preprocessing.dimensionality_reduction.TSNE.random_state": {"tf": 1}, "ifri_mini_ml_lib.preprocessing.dimensionality_reduction.TSNE.verbose": {"tf": 1}, "ifri_mini_ml_lib.preprocessing.dimensionality_reduction.TSNE.embedding_": {"tf": 1}, "ifri_mini_ml_lib.preprocessing.dimensionality_reduction.TSNE.kl_divergence_": {"tf": 1}, "ifri_mini_ml_lib.preprocessing.dimensionality_reduction.TSNE.n_iter_": {"tf": 1}, "ifri_mini_ml_lib.preprocessing.dimensionality_reduction.TSNE.rng": {"tf": 1}, "ifri_mini_ml_lib.preprocessing.dimensionality_reduction.TSNE.fit": {"tf": 1}, "ifri_mini_ml_lib.preprocessing.dimensionality_reduction.TSNE.fit_transform": {"tf": 1}, "ifri_mini_ml_lib.preprocessing.dimensionality_reduction.TSNE.generate_test_data": {"tf": 1}, "ifri_mini_ml_lib.preprocessing.dimensionality_reduction.TSNE.plot_results": {"tf": 1}, "ifri_mini_ml_lib.preprocessing.preparation": {"tf": 1}, "ifri_mini_ml_lib.preprocessing.preparation.MinMaxScaler": {"tf": 1}, "ifri_mini_ml_lib.preprocessing.preparation.MinMaxScaler.__init__": {"tf": 1}, "ifri_mini_ml_lib.preprocessing.preparation.MinMaxScaler.min_": {"tf": 1}, "ifri_mini_ml_lib.preprocessing.preparation.MinMaxScaler.max_": {"tf": 1}, "ifri_mini_ml_lib.preprocessing.preparation.MinMaxScaler.columns": {"tf": 1}, "ifri_mini_ml_lib.preprocessing.preparation.MinMaxScaler.fit": {"tf": 1}, "ifri_mini_ml_lib.preprocessing.preparation.MinMaxScaler.transform": {"tf": 1}, "ifri_mini_ml_lib.preprocessing.preparation.MinMaxScaler.fit_transform": {"tf": 1}, "ifri_mini_ml_lib.preprocessing.preparation.MinMaxScaler.inverse_transform": {"tf": 1}, "ifri_mini_ml_lib.preprocessing.preparation.MissingValueHandler": {"tf": 1}, "ifri_mini_ml_lib.preprocessing.preparation.MissingValueHandler.remove_missing": {"tf": 1}, "ifri_mini_ml_lib.preprocessing.preparation.MissingValueHandler.impute_statistical": {"tf": 1}, "ifri_mini_ml_lib.preprocessing.preparation.MissingValueHandler.impute_default": {"tf": 1}, "ifri_mini_ml_lib.preprocessing.preparation.MissingValueHandler.impute_knn": {"tf": 1}, "ifri_mini_ml_lib.preprocessing.preparation.MissingValueHandler.impute_regression": {"tf": 1}, "ifri_mini_ml_lib.preprocessing.preparation.StandardScaler": {"tf": 1}, "ifri_mini_ml_lib.preprocessing.preparation.StandardScaler.__init__": {"tf": 1}, "ifri_mini_ml_lib.preprocessing.preparation.StandardScaler.mean_": {"tf": 1}, "ifri_mini_ml_lib.preprocessing.preparation.StandardScaler.std_": {"tf": 1}, "ifri_mini_ml_lib.preprocessing.preparation.StandardScaler.is_dataframe": {"tf": 1}, "ifri_mini_ml_lib.preprocessing.preparation.StandardScaler.columns": {"tf": 1}, "ifri_mini_ml_lib.preprocessing.preparation.StandardScaler.fit": {"tf": 1}, "ifri_mini_ml_lib.preprocessing.preparation.StandardScaler.transform": {"tf": 1}, "ifri_mini_ml_lib.preprocessing.preparation.StandardScaler.fit_transform": {"tf": 1}, "ifri_mini_ml_lib.preprocessing.preparation.StandardScaler.inverse_transform": {"tf": 1}, "ifri_mini_ml_lib.preprocessing.preparation.CategoricalEncoder": {"tf": 1}, "ifri_mini_ml_lib.preprocessing.preparation.CategoricalEncoder.__init__": {"tf": 1}, "ifri_mini_ml_lib.preprocessing.preparation.CategoricalEncoder.encoding_type": {"tf": 1}, "ifri_mini_ml_lib.preprocessing.preparation.CategoricalEncoder.target_column": {"tf": 1}, "ifri_mini_ml_lib.preprocessing.preparation.CategoricalEncoder.mapping": {"tf": 1}, "ifri_mini_ml_lib.preprocessing.preparation.CategoricalEncoder.fit": {"tf": 1}, "ifri_mini_ml_lib.preprocessing.preparation.CategoricalEncoder.transform": {"tf": 1}, "ifri_mini_ml_lib.preprocessing.preparation.CategoricalEncoder.fit_transform": {"tf": 1}, "ifri_mini_ml_lib.preprocessing.preparation.DataSplitter": {"tf": 1}, "ifri_mini_ml_lib.preprocessing.preparation.DataSplitter.__init__": {"tf": 1}, "ifri_mini_ml_lib.preprocessing.preparation.DataSplitter.seed": {"tf": 1}, "ifri_mini_ml_lib.preprocessing.preparation.DataSplitter.train_test_split": {"tf": 1}, "ifri_mini_ml_lib.preprocessing.preparation.DataSplitter.stratified_train_test_split": {"tf": 1}, "ifri_mini_ml_lib.preprocessing.preparation.DataSplitter.temporal_train_test_split": {"tf": 1}, "ifri_mini_ml_lib.preprocessing.preparation.DataSplitter.k_fold_split": {"tf": 1}, "ifri_mini_ml_lib.regression": {"tf": 1}, "ifri_mini_ml_lib.regression.LinearRegression": {"tf": 1}, "ifri_mini_ml_lib.regression.LinearRegression.__init__": {"tf": 1}, "ifri_mini_ml_lib.regression.LinearRegression.method": {"tf": 1}, "ifri_mini_ml_lib.regression.LinearRegression.learning_rate": {"tf": 1}, "ifri_mini_ml_lib.regression.LinearRegression.epochs": {"tf": 1}, "ifri_mini_ml_lib.regression.LinearRegression.w": {"tf": 1}, "ifri_mini_ml_lib.regression.LinearRegression.b": {"tf": 1}, "ifri_mini_ml_lib.regression.LinearRegression.fit": {"tf": 1}, "ifri_mini_ml_lib.regression.LinearRegression.predict": {"tf": 1}, "ifri_mini_ml_lib.regression.PolynomialRegression": {"tf": 1}, "ifri_mini_ml_lib.regression.PolynomialRegression.__init__": {"tf": 1}, "ifri_mini_ml_lib.regression.PolynomialRegression.degree": {"tf": 1}, "ifri_mini_ml_lib.regression.PolynomialRegression.method": {"tf": 1}, "ifri_mini_ml_lib.regression.PolynomialRegression.learning_rate": {"tf": 1}, "ifri_mini_ml_lib.regression.PolynomialRegression.epochs": {"tf": 1}, "ifri_mini_ml_lib.regression.PolynomialRegression.w": {"tf": 1}, "ifri_mini_ml_lib.regression.PolynomialRegression.b": {"tf": 1}, "ifri_mini_ml_lib.regression.PolynomialRegression.fit": {"tf": 1}, "ifri_mini_ml_lib.regression.PolynomialRegression.predict": {"tf": 1}, "ifri_mini_ml_lib.regression.SVR": {"tf": 1}, "ifri_mini_ml_lib.regression.SVR.__init__": {"tf": 1}, "ifri_mini_ml_lib.regression.SVR.kerlist": {"tf": 1}, "ifri_mini_ml_lib.regression.SVR.eps": {"tf": 1}, "ifri_mini_ml_lib.regression.SVR.train_X": {"tf": 1}, "ifri_mini_ml_lib.regression.SVR.train_y": {"tf": 1}, "ifri_mini_ml_lib.regression.SVR.test_X": {"tf": 1}, "ifri_mini_ml_lib.regression.SVR.test_y": {"tf": 1}, "ifri_mini_ml_lib.regression.SVR.ker": {"tf": 1}, "ifri_mini_ml_lib.regression.SVR.linear_kernel": {"tf": 1}, "ifri_mini_ml_lib.regression.SVR.polynomial_kernel": {"tf": 1}, "ifri_mini_ml_lib.regression.SVR.rbf_kernel": {"tf": 1}, "ifri_mini_ml_lib.regression.SVR.sigmoid_kernel": {"tf": 1}, "ifri_mini_ml_lib.regression.SVR.get_kernel": {"tf": 1}, "ifri_mini_ml_lib.regression.SVR.fit": {"tf": 1}, "ifri_mini_ml_lib.regression.SVR.predict": {"tf": 1}, "ifri_mini_ml_lib.regression.SVR.set_params": {"tf": 1}}, "df": 374}, "n": {"docs": {}, "df": 0, "k": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "e": {"docs": {"ifri_mini_ml_lib.clustering.HierarchicalClustering.linkage": {"tf": 1}}, "df": 1}}}, "e": {"docs": {}, "df": 0, "d": {"docs": {"ifri_mini_ml_lib.clustering.HierarchicalClustering.linked_matrix": {"tf": 1}}, "df": 1}}}, "e": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "r": {"docs": {"ifri_mini_ml_lib.regression.SVR.linear_kernel": {"tf": 1}}, "df": 1, "r": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"ifri_mini_ml_lib.regression.LinearRegression": {"tf": 1}, "ifri_mini_ml_lib.regression.LinearRegression.__init__": {"tf": 1}, "ifri_mini_ml_lib.regression.LinearRegression.method": {"tf": 1}, "ifri_mini_ml_lib.regression.LinearRegression.learning_rate": {"tf": 1}, "ifri_mini_ml_lib.regression.LinearRegression.epochs": {"tf": 1}, "ifri_mini_ml_lib.regression.LinearRegression.w": {"tf": 1}, "ifri_mini_ml_lib.regression.LinearRegression.b": {"tf": 1}, "ifri_mini_ml_lib.regression.LinearRegression.fit": {"tf": 1}, "ifri_mini_ml_lib.regression.LinearRegression.predict": {"tf": 1}}, "df": 9}}}}}}}}}}}}}}}, "o": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "d": {"docs": {"ifri_mini_ml_lib.association_rules.DataAdapter.load_csv_to_transactions": {"tf": 1}}, "df": 1}}, "g": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"ifri_mini_ml_lib.classification.LogisticRegression": {"tf": 1}, "ifri_mini_ml_lib.classification.LogisticRegression.__init__": {"tf": 1}, "ifri_mini_ml_lib.classification.LogisticRegression.learning_rate": {"tf": 1}, "ifri_mini_ml_lib.classification.LogisticRegression.momentum": {"tf": 1}, "ifri_mini_ml_lib.classification.LogisticRegression.max_iter": {"tf": 1}, "ifri_mini_ml_lib.classification.LogisticRegression.tol": {"tf": 1}, "ifri_mini_ml_lib.classification.LogisticRegression.weights": {"tf": 1}, "ifri_mini_ml_lib.classification.LogisticRegression.bias": {"tf": 1}, "ifri_mini_ml_lib.classification.LogisticRegression.loss_history": {"tf": 1}, "ifri_mini_ml_lib.classification.LogisticRegression.fit": {"tf": 1}, "ifri_mini_ml_lib.classification.LogisticRegression.predict_proba": {"tf": 1}, "ifri_mini_ml_lib.classification.LogisticRegression.predict": {"tf": 1}}, "df": 12}}}}}}}}}}}}}}}}, "s": {"docs": {}, "df": 0, "s": {"docs": {"ifri_mini_ml_lib.classification.LogisticRegression.loss_history": {"tf": 1}, "ifri_mini_ml_lib.neural_networks.MLPClassifier.loss_history": {"tf": 1}, "ifri_mini_ml_lib.neural_networks.MLPClassifier.val_loss_history": {"tf": 1}, "ifri_mini_ml_lib.neural_networks.MLPClassifier.best_loss": {"tf": 1}, "ifri_mini_ml_lib.neural_networks.MLPRegressor.loss_history": {"tf": 1}, "ifri_mini_ml_lib.neural_networks.MLPRegressor.val_loss_history": {"tf": 1}, "ifri_mini_ml_lib.neural_networks.MLPRegressor.best_loss": {"tf": 1}}, "df": 7}}}, "e": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "f": {"docs": {"ifri_mini_ml_lib.classification.DecisionTree.min_samples_leaf": {"tf": 1}}, "df": 1}, "r": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"ifri_mini_ml_lib.classification.LogisticRegression.learning_rate": {"tf": 1}, "ifri_mini_ml_lib.neural_networks.MLPClassifier.learning_rate": {"tf": 1}, "ifri_mini_ml_lib.neural_networks.MLPRegressor.learning_rate": {"tf": 1}, "ifri_mini_ml_lib.preprocessing.dimensionality_reduction.TSNE.learning_rate": {"tf": 1}, "ifri_mini_ml_lib.regression.LinearRegression.learning_rate": {"tf": 1}, "ifri_mini_ml_lib.regression.PolynomialRegression.learning_rate": {"tf": 1}}, "df": 6}}}}}}}, "a": {"docs": {}, "df": 0, "b": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "s": {"docs": {"ifri_mini_ml_lib.clustering.KMeans.labels": {"tf": 1}, "ifri_mini_ml_lib.clustering.DBSCAN.labels": {"tf": 1}, "ifri_mini_ml_lib.clustering.HierarchicalClustering.labels": {"tf": 1}}, "df": 3}}}}, "y": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"ifri_mini_ml_lib.neural_networks.MLPClassifier.hidden_layer_sizes": {"tf": 1}, "ifri_mini_ml_lib.neural_networks.MLPRegressor.hidden_layer_sizes": {"tf": 1}}, "df": 2, "s": {"docs": {"ifri_mini_ml_lib.neural_networks.MLPClassifier.n_layers": {"tf": 1}, "ifri_mini_ml_lib.neural_networks.MLPRegressor.n_layers": {"tf": 1}}, "df": 2}}}}}}, "a": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"ifri_mini_ml_lib.association_rules": {"tf": 1}, "ifri_mini_ml_lib.association_rules.Apriori": {"tf": 1}, "ifri_mini_ml_lib.association_rules.Apriori.__init__": {"tf": 1}, "ifri_mini_ml_lib.association_rules.Apriori.min_support": {"tf": 1}, "ifri_mini_ml_lib.association_rules.Apriori.min_confidence": {"tf": 1}, "ifri_mini_ml_lib.association_rules.Apriori.frequent_itemsets_": {"tf": 1}, "ifri_mini_ml_lib.association_rules.Apriori.rules_": {"tf": 1}, "ifri_mini_ml_lib.association_rules.Apriori.fit": {"tf": 1}, "ifri_mini_ml_lib.association_rules.Apriori.get_frequent_itemsets": {"tf": 1}, "ifri_mini_ml_lib.association_rules.Apriori.get_rules": {"tf": 1}, "ifri_mini_ml_lib.association_rules.Eclat": {"tf": 1}, "ifri_mini_ml_lib.association_rules.Eclat.__init__": {"tf": 1}, "ifri_mini_ml_lib.association_rules.Eclat.min_support": {"tf": 1}, "ifri_mini_ml_lib.association_rules.Eclat.min_confidence": {"tf": 1}, "ifri_mini_ml_lib.association_rules.Eclat.frequent_itemsets": {"tf": 1}, "ifri_mini_ml_lib.association_rules.Eclat.frequent_TIDsets": {"tf": 1}, "ifri_mini_ml_lib.association_rules.Eclat.rules_": {"tf": 1}, "ifri_mini_ml_lib.association_rules.Eclat.n_transactions": {"tf": 1}, "ifri_mini_ml_lib.association_rules.Eclat.fit": {"tf": 1}, "ifri_mini_ml_lib.association_rules.Eclat.get_single_items_TIDset": {"tf": 1}, "ifri_mini_ml_lib.association_rules.Eclat.get_frequent_itemsets": {"tf": 1}, "ifri_mini_ml_lib.association_rules.Eclat.get_rules": {"tf": 1}, "ifri_mini_ml_lib.association_rules.FPGrowth": {"tf": 1}, "ifri_mini_ml_lib.association_rules.FPGrowth.__init__": {"tf": 1}, "ifri_mini_ml_lib.association_rules.FPGrowth.min_support": {"tf": 1}, "ifri_mini_ml_lib.association_rules.FPGrowth.min_confidence": {"tf": 1}, "ifri_mini_ml_lib.association_rules.FPGrowth.frequent_itemsets_dict": {"tf": 1}, "ifri_mini_ml_lib.association_rules.FPGrowth.rules_": {"tf": 1}, "ifri_mini_ml_lib.association_rules.FPGrowth.header_table": {"tf": 1}, "ifri_mini_ml_lib.association_rules.FPGrowth.n_transactions": {"tf": 1}, "ifri_mini_ml_lib.association_rules.FPGrowth.fit": {"tf": 1}, "ifri_mini_ml_lib.association_rules.FPGrowth.get_frequent_itemsets": {"tf": 1}, "ifri_mini_ml_lib.association_rules.FPGrowth.get_rules": {"tf": 1}, "ifri_mini_ml_lib.association_rules.DataAdapter": {"tf": 1}, "ifri_mini_ml_lib.association_rules.DataAdapter.convert_to_transactions": {"tf": 1}, "ifri_mini_ml_lib.association_rules.DataAdapter.load_csv_to_transactions": {"tf": 1}}, "df": 36}}}}}}}}}}, "p": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "i": {"docs": {"ifri_mini_ml_lib.association_rules.Apriori": {"tf": 1}, "ifri_mini_ml_lib.association_rules.Apriori.__init__": {"tf": 1}, "ifri_mini_ml_lib.association_rules.Apriori.min_support": {"tf": 1}, "ifri_mini_ml_lib.association_rules.Apriori.min_confidence": {"tf": 1}, "ifri_mini_ml_lib.association_rules.Apriori.frequent_itemsets_": {"tf": 1}, "ifri_mini_ml_lib.association_rules.Apriori.rules_": {"tf": 1}, "ifri_mini_ml_lib.association_rules.Apriori.fit": {"tf": 1}, "ifri_mini_ml_lib.association_rules.Apriori.get_frequent_itemsets": {"tf": 1}, "ifri_mini_ml_lib.association_rules.Apriori.get_rules": {"tf": 1}}, "df": 9}}}}}}, "c": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "y": {"docs": {"ifri_mini_ml_lib.metrics.evaluation_metrics.accuracy": {"tf": 1}}, "df": 1}}}}}}, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "v": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"ifri_mini_ml_lib.neural_networks.MLPClassifier.activation": {"tf": 1}, "ifri_mini_ml_lib.neural_networks.MLPClassifier.activation_functions": {"tf": 1}, "ifri_mini_ml_lib.neural_networks.MLPClassifier.activation_derivatives": {"tf": 1}, "ifri_mini_ml_lib.neural_networks.MLPClassifier.activation_func": {"tf": 1}, "ifri_mini_ml_lib.neural_networks.MLPClassifier.activation_derivative": {"tf": 1}, "ifri_mini_ml_lib.neural_networks.MLPRegressor.activation": {"tf": 1}, "ifri_mini_ml_lib.neural_networks.MLPRegressor.activation_functions": {"tf": 1}, "ifri_mini_ml_lib.neural_networks.MLPRegressor.activation_derivatives": {"tf": 1}, "ifri_mini_ml_lib.neural_networks.MLPRegressor.activation_func": {"tf": 1}, "ifri_mini_ml_lib.neural_networks.MLPRegressor.activation_derivative": {"tf": 1}}, "df": 10}}}}}}}}}, "l": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "h": {"docs": {}, "df": 0, "a": {"docs": {"ifri_mini_ml_lib.neural_networks.MLPClassifier.alpha": {"tf": 1}, "ifri_mini_ml_lib.neural_networks.MLPRegressor.alpha": {"tf": 1}}, "df": 2}}}}}, "r": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {"ifri_mini_ml_lib.association_rules": {"tf": 1}, "ifri_mini_ml_lib.association_rules.Apriori": {"tf": 1}, "ifri_mini_ml_lib.association_rules.Apriori.__init__": {"tf": 1}, "ifri_mini_ml_lib.association_rules.Apriori.min_support": {"tf": 1}, "ifri_mini_ml_lib.association_rules.Apriori.min_confidence": {"tf": 1}, "ifri_mini_ml_lib.association_rules.Apriori.frequent_itemsets_": {"tf": 1}, "ifri_mini_ml_lib.association_rules.Apriori.rules_": {"tf": 1.4142135623730951}, "ifri_mini_ml_lib.association_rules.Apriori.fit": {"tf": 1}, "ifri_mini_ml_lib.association_rules.Apriori.get_frequent_itemsets": {"tf": 1}, "ifri_mini_ml_lib.association_rules.Apriori.get_rules": {"tf": 1.4142135623730951}, "ifri_mini_ml_lib.association_rules.Eclat": {"tf": 1}, "ifri_mini_ml_lib.association_rules.Eclat.__init__": {"tf": 1}, "ifri_mini_ml_lib.association_rules.Eclat.min_support": {"tf": 1}, "ifri_mini_ml_lib.association_rules.Eclat.min_confidence": {"tf": 1}, "ifri_mini_ml_lib.association_rules.Eclat.frequent_itemsets": {"tf": 1}, "ifri_mini_ml_lib.association_rules.Eclat.frequent_TIDsets": {"tf": 1}, "ifri_mini_ml_lib.association_rules.Eclat.rules_": {"tf": 1.4142135623730951}, "ifri_mini_ml_lib.association_rules.Eclat.n_transactions": {"tf": 1}, "ifri_mini_ml_lib.association_rules.Eclat.fit": {"tf": 1}, "ifri_mini_ml_lib.association_rules.Eclat.get_single_items_TIDset": {"tf": 1}, "ifri_mini_ml_lib.association_rules.Eclat.get_frequent_itemsets": {"tf": 1}, "ifri_mini_ml_lib.association_rules.Eclat.get_rules": {"tf": 1.4142135623730951}, "ifri_mini_ml_lib.association_rules.FPGrowth": {"tf": 1}, "ifri_mini_ml_lib.association_rules.FPGrowth.__init__": {"tf": 1}, "ifri_mini_ml_lib.association_rules.FPGrowth.min_support": {"tf": 1}, "ifri_mini_ml_lib.association_rules.FPGrowth.min_confidence": {"tf": 1}, "ifri_mini_ml_lib.association_rules.FPGrowth.frequent_itemsets_dict": {"tf": 1}, "ifri_mini_ml_lib.association_rules.FPGrowth.rules_": {"tf": 1.4142135623730951}, "ifri_mini_ml_lib.association_rules.FPGrowth.header_table": {"tf": 1}, "ifri_mini_ml_lib.association_rules.FPGrowth.n_transactions": {"tf": 1}, "ifri_mini_ml_lib.association_rules.FPGrowth.fit": {"tf": 1}, "ifri_mini_ml_lib.association_rules.FPGrowth.get_frequent_itemsets": {"tf": 1}, "ifri_mini_ml_lib.association_rules.FPGrowth.get_rules": {"tf": 1.4142135623730951}, "ifri_mini_ml_lib.association_rules.DataAdapter": {"tf": 1}, "ifri_mini_ml_lib.association_rules.DataAdapter.convert_to_transactions": {"tf": 1}, "ifri_mini_ml_lib.association_rules.DataAdapter.load_csv_to_transactions": {"tf": 1}}, "df": 36}}}}, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {"ifri_mini_ml_lib.classification.LogisticRegression.learning_rate": {"tf": 1}, "ifri_mini_ml_lib.metrics.bias_evaluation.selection_rate": {"tf": 1}, "ifri_mini_ml_lib.metrics.bias_evaluation.selection_rate_per_group": {"tf": 1}, "ifri_mini_ml_lib.neural_networks.MLPClassifier.learning_rate": {"tf": 1}, "ifri_mini_ml_lib.neural_networks.MLPRegressor.learning_rate": {"tf": 1}, "ifri_mini_ml_lib.preprocessing.dimensionality_reduction.TSNE.learning_rate": {"tf": 1}, "ifri_mini_ml_lib.regression.LinearRegression.learning_rate": {"tf": 1}, "ifri_mini_ml_lib.regression.PolynomialRegression.learning_rate": {"tf": 1}}, "df": 8}, "i": {"docs": {}, "df": 0, "o": {"docs": {"ifri_mini_ml_lib.metrics.bias_evaluation.demographic_parity_ratio": {"tf": 1}, "ifri_mini_ml_lib.metrics.bias_evaluation.equalized_odds_ratio": {"tf": 1}, "ifri_mini_ml_lib.preprocessing.dimensionality_reduction.PCA.explained_variances_ratio": {"tf": 1}, "ifri_mini_ml_lib.preprocessing.dimensionality_reduction.PCA.plot_cumulative_explained_variance_ratio": {"tf": 1}}, "df": 4}}}, "n": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "m": {"docs": {"ifri_mini_ml_lib.clustering.KMeans.random_state": {"tf": 1}, "ifri_mini_ml_lib.model_selection.BaggingClassifier.random_state": {"tf": 1}, "ifri_mini_ml_lib.model_selection.BaggingRegressor.random_state": {"tf": 1}, "ifri_mini_ml_lib.model_selection.BayesianSearchCV.random_state": {"tf": 1}, "ifri_mini_ml_lib.model_selection.RandomSearchCV.random_state": {"tf": 1}, "ifri_mini_ml_lib.preprocessing.dimensionality_reduction.TSNE.random_state": {"tf": 1}}, "df": 6, "s": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "h": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "v": {"docs": {"ifri_mini_ml_lib.model_selection.RandomSearchCV": {"tf": 1}, "ifri_mini_ml_lib.model_selection.RandomSearchCV.__init__": {"tf": 1}, "ifri_mini_ml_lib.model_selection.RandomSearchCV.model": {"tf": 1}, "ifri_mini_ml_lib.model_selection.RandomSearchCV.param_grid": {"tf": 1}, "ifri_mini_ml_lib.model_selection.RandomSearchCV.n_iter": {"tf": 1}, "ifri_mini_ml_lib.model_selection.RandomSearchCV.k": {"tf": 1}, "ifri_mini_ml_lib.model_selection.RandomSearchCV.scoring": {"tf": 1}, "ifri_mini_ml_lib.model_selection.RandomSearchCV.stratified": {"tf": 1}, "ifri_mini_ml_lib.model_selection.RandomSearchCV.random_state": {"tf": 1}, "ifri_mini_ml_lib.model_selection.RandomSearchCV.best_params_": {"tf": 1}, "ifri_mini_ml_lib.model_selection.RandomSearchCV.best_score_": {"tf": 1}, "ifri_mini_ml_lib.model_selection.RandomSearchCV.best_estimator_": {"tf": 1}, "ifri_mini_ml_lib.model_selection.RandomSearchCV.fit": {"tf": 1}}, "df": 13}}}}}}}}}}}}}, "e": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "l": {"docs": {"ifri_mini_ml_lib.metrics.evaluation_metrics.recall": {"tf": 1}}, "df": 1}}}}, "d": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"ifri_mini_ml_lib.preprocessing.dimensionality_reduction": {"tf": 1}, "ifri_mini_ml_lib.preprocessing.dimensionality_reduction.PCA": {"tf": 1}, "ifri_mini_ml_lib.preprocessing.dimensionality_reduction.PCA.__init__": {"tf": 1}, "ifri_mini_ml_lib.preprocessing.dimensionality_reduction.PCA.n_component": {"tf": 1}, "ifri_mini_ml_lib.preprocessing.dimensionality_reduction.PCA.mean": {"tf": 1}, "ifri_mini_ml_lib.preprocessing.dimensionality_reduction.PCA.cov": {"tf": 1}, "ifri_mini_ml_lib.preprocessing.dimensionality_reduction.PCA.eigen_values": {"tf": 1}, "ifri_mini_ml_lib.preprocessing.dimensionality_reduction.PCA.eigen_vectors": {"tf": 1}, "ifri_mini_ml_lib.preprocessing.dimensionality_reduction.PCA.components": {"tf": 1}, "ifri_mini_ml_lib.preprocessing.dimensionality_reduction.PCA.fit": {"tf": 1}, "ifri_mini_ml_lib.preprocessing.dimensionality_reduction.PCA.transform": {"tf": 1}, "ifri_mini_ml_lib.preprocessing.dimensionality_reduction.PCA.fit_transform": {"tf": 1}, "ifri_mini_ml_lib.preprocessing.dimensionality_reduction.PCA.plot_cov_matrix": {"tf": 1}, "ifri_mini_ml_lib.preprocessing.dimensionality_reduction.PCA.explained_variances": {"tf": 1}, "ifri_mini_ml_lib.preprocessing.dimensionality_reduction.PCA.explained_variances_ratio": {"tf": 1}, "ifri_mini_ml_lib.preprocessing.dimensionality_reduction.PCA.plot_cumulative_explained_variance_ratio": {"tf": 1}, "ifri_mini_ml_lib.preprocessing.dimensionality_reduction.TSNE": {"tf": 1}, "ifri_mini_ml_lib.preprocessing.dimensionality_reduction.TSNE.__init__": {"tf": 1}, "ifri_mini_ml_lib.preprocessing.dimensionality_reduction.TSNE.n_components": {"tf": 1}, "ifri_mini_ml_lib.preprocessing.dimensionality_reduction.TSNE.perplexity": {"tf": 1}, "ifri_mini_ml_lib.preprocessing.dimensionality_reduction.TSNE.early_exaggeration": {"tf": 1}, "ifri_mini_ml_lib.preprocessing.dimensionality_reduction.TSNE.learning_rate": {"tf": 1}, "ifri_mini_ml_lib.preprocessing.dimensionality_reduction.TSNE.n_iter": {"tf": 1}, "ifri_mini_ml_lib.preprocessing.dimensionality_reduction.TSNE.init": {"tf": 1}, "ifri_mini_ml_lib.preprocessing.dimensionality_reduction.TSNE.min_grad_norm": {"tf": 1}, "ifri_mini_ml_lib.preprocessing.dimensionality_reduction.TSNE.random_state": {"tf": 1}, "ifri_mini_ml_lib.preprocessing.dimensionality_reduction.TSNE.verbose": {"tf": 1}, "ifri_mini_ml_lib.preprocessing.dimensionality_reduction.TSNE.embedding_": {"tf": 1}, "ifri_mini_ml_lib.preprocessing.dimensionality_reduction.TSNE.kl_divergence_": {"tf": 1}, "ifri_mini_ml_lib.preprocessing.dimensionality_reduction.TSNE.n_iter_": {"tf": 1}, "ifri_mini_ml_lib.preprocessing.dimensionality_reduction.TSNE.rng": {"tf": 1}, "ifri_mini_ml_lib.preprocessing.dimensionality_reduction.TSNE.fit": {"tf": 1}, "ifri_mini_ml_lib.preprocessing.dimensionality_reduction.TSNE.fit_transform": {"tf": 1}, "ifri_mini_ml_lib.preprocessing.dimensionality_reduction.TSNE.generate_test_data": {"tf": 1}, "ifri_mini_ml_lib.preprocessing.dimensionality_reduction.TSNE.plot_results": {"tf": 1}}, "df": 35}}}}}}}, "s": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "s": {"docs": {"ifri_mini_ml_lib.preprocessing.dimensionality_reduction.TSNE.plot_results": {"tf": 1}}, "df": 1}}}}}, "m": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "v": {"docs": {}, "df": 0, "e": {"docs": {"ifri_mini_ml_lib.preprocessing.preparation.MissingValueHandler.remove_missing": {"tf": 1}}, "df": 1}}}}, "g": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"ifri_mini_ml_lib.preprocessing.preparation.MissingValueHandler.impute_regression": {"tf": 1}, "ifri_mini_ml_lib.regression": {"tf": 1}, "ifri_mini_ml_lib.regression.LinearRegression": {"tf": 1}, "ifri_mini_ml_lib.regression.LinearRegression.__init__": {"tf": 1}, "ifri_mini_ml_lib.regression.LinearRegression.method": {"tf": 1}, "ifri_mini_ml_lib.regression.LinearRegression.learning_rate": {"tf": 1}, "ifri_mini_ml_lib.regression.LinearRegression.epochs": {"tf": 1}, "ifri_mini_ml_lib.regression.LinearRegression.w": {"tf": 1}, "ifri_mini_ml_lib.regression.LinearRegression.b": {"tf": 1}, "ifri_mini_ml_lib.regression.LinearRegression.fit": {"tf": 1}, "ifri_mini_ml_lib.regression.LinearRegression.predict": {"tf": 1}, "ifri_mini_ml_lib.regression.PolynomialRegression": {"tf": 1}, "ifri_mini_ml_lib.regression.PolynomialRegression.__init__": {"tf": 1}, "ifri_mini_ml_lib.regression.PolynomialRegression.degree": {"tf": 1}, "ifri_mini_ml_lib.regression.PolynomialRegression.method": {"tf": 1}, "ifri_mini_ml_lib.regression.PolynomialRegression.learning_rate": {"tf": 1}, "ifri_mini_ml_lib.regression.PolynomialRegression.epochs": {"tf": 1}, "ifri_mini_ml_lib.regression.PolynomialRegression.w": {"tf": 1}, "ifri_mini_ml_lib.regression.PolynomialRegression.b": {"tf": 1}, "ifri_mini_ml_lib.regression.PolynomialRegression.fit": {"tf": 1}, "ifri_mini_ml_lib.regression.PolynomialRegression.predict": {"tf": 1}, "ifri_mini_ml_lib.regression.SVR": {"tf": 1}, "ifri_mini_ml_lib.regression.SVR.__init__": {"tf": 1}, "ifri_mini_ml_lib.regression.SVR.kerlist": {"tf": 1}, "ifri_mini_ml_lib.regression.SVR.eps": {"tf": 1}, "ifri_mini_ml_lib.regression.SVR.train_X": {"tf": 1}, "ifri_mini_ml_lib.regression.SVR.train_y": {"tf": 1}, "ifri_mini_ml_lib.regression.SVR.test_X": {"tf": 1}, "ifri_mini_ml_lib.regression.SVR.test_y": {"tf": 1}, "ifri_mini_ml_lib.regression.SVR.ker": {"tf": 1}, "ifri_mini_ml_lib.regression.SVR.linear_kernel": {"tf": 1}, "ifri_mini_ml_lib.regression.SVR.polynomial_kernel": {"tf": 1}, "ifri_mini_ml_lib.regression.SVR.rbf_kernel": {"tf": 1}, "ifri_mini_ml_lib.regression.SVR.sigmoid_kernel": {"tf": 1}, "ifri_mini_ml_lib.regression.SVR.get_kernel": {"tf": 1}, "ifri_mini_ml_lib.regression.SVR.fit": {"tf": 1}, "ifri_mini_ml_lib.regression.SVR.predict": {"tf": 1}, "ifri_mini_ml_lib.regression.SVR.set_params": {"tf": 1}}, "df": 38}}}}}}}}}, "n": {"docs": {}, "df": 0, "g": {"docs": {"ifri_mini_ml_lib.preprocessing.dimensionality_reduction.TSNE.rng": {"tf": 1}}, "df": 1}}, "b": {"docs": {}, "df": 0, "f": {"docs": {"ifri_mini_ml_lib.regression.SVR.rbf_kernel": {"tf": 1}}, "df": 1}}}, "s": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "t": {"docs": {"ifri_mini_ml_lib.association_rules.Apriori.min_support": {"tf": 1}, "ifri_mini_ml_lib.association_rules.Eclat.min_support": {"tf": 1}, "ifri_mini_ml_lib.association_rules.FPGrowth.min_support": {"tf": 1}}, "df": 3}}}}}}, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "e": {"docs": {"ifri_mini_ml_lib.association_rules.Eclat.get_single_items_TIDset": {"tf": 1}}, "df": 1}}}}, "l": {"docs": {}, "df": 0, "h": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {"ifri_mini_ml_lib.metrics.evaluation_metrics.calculate_silhouette": {"tf": 1}}, "df": 1}}}}}}}}, "z": {"docs": {}, "df": 0, "e": {"docs": {"ifri_mini_ml_lib.neural_networks.MLPClassifier.batch_size": {"tf": 1}, "ifri_mini_ml_lib.neural_networks.MLPRegressor.batch_size": {"tf": 1}}, "df": 2, "s": {"docs": {"ifri_mini_ml_lib.neural_networks.MLPClassifier.hidden_layer_sizes": {"tf": 1}, "ifri_mini_ml_lib.neural_networks.MLPRegressor.hidden_layer_sizes": {"tf": 1}}, "df": 2}}}, "g": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "d": {"docs": {"ifri_mini_ml_lib.regression.SVR.sigmoid_kernel": {"tf": 1}}, "df": 1}}}}}}, "a": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {"ifri_mini_ml_lib.classification.DecisionTree.min_samples_split": {"tf": 1}, "ifri_mini_ml_lib.classification.DecisionTree.min_samples_leaf": {"tf": 1}, "ifri_mini_ml_lib.clustering.DBSCAN.min_samples": {"tf": 1}}, "df": 3}}}}}}, "p": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "t": {"docs": {"ifri_mini_ml_lib.classification.DecisionTree.min_samples_split": {"tf": 1}, "ifri_mini_ml_lib.preprocessing.preparation.DataSplitter.train_test_split": {"tf": 1}, "ifri_mini_ml_lib.preprocessing.preparation.DataSplitter.stratified_train_test_split": {"tf": 1}, "ifri_mini_ml_lib.preprocessing.preparation.DataSplitter.temporal_train_test_split": {"tf": 1}, "ifri_mini_ml_lib.preprocessing.preparation.DataSplitter.k_fold_split": {"tf": 1}}, "df": 5}}}}, "t": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {"ifri_mini_ml_lib.clustering.KMeans.random_state": {"tf": 1}, "ifri_mini_ml_lib.model_selection.BaggingClassifier.random_state": {"tf": 1}, "ifri_mini_ml_lib.model_selection.BaggingRegressor.random_state": {"tf": 1}, "ifri_mini_ml_lib.model_selection.BayesianSearchCV.random_state": {"tf": 1}, "ifri_mini_ml_lib.model_selection.RandomSearchCV.random_state": {"tf": 1}, "ifri_mini_ml_lib.preprocessing.dimensionality_reduction.TSNE.random_state": {"tf": 1}}, "df": 6}, "i": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "l": {"docs": {"ifri_mini_ml_lib.preprocessing.preparation.MissingValueHandler.impute_statistical": {"tf": 1}}, "df": 1}}}}}}}}, "n": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"ifri_mini_ml_lib.preprocessing.preparation.StandardScaler": {"tf": 1}, "ifri_mini_ml_lib.preprocessing.preparation.StandardScaler.__init__": {"tf": 1}, "ifri_mini_ml_lib.preprocessing.preparation.StandardScaler.mean_": {"tf": 1}, "ifri_mini_ml_lib.preprocessing.preparation.StandardScaler.std_": {"tf": 1}, "ifri_mini_ml_lib.preprocessing.preparation.StandardScaler.is_dataframe": {"tf": 1}, "ifri_mini_ml_lib.preprocessing.preparation.StandardScaler.columns": {"tf": 1}, "ifri_mini_ml_lib.preprocessing.preparation.StandardScaler.fit": {"tf": 1}, "ifri_mini_ml_lib.preprocessing.preparation.StandardScaler.transform": {"tf": 1}, "ifri_mini_ml_lib.preprocessing.preparation.StandardScaler.fit_transform": {"tf": 1}, "ifri_mini_ml_lib.preprocessing.preparation.StandardScaler.inverse_transform": {"tf": 1}}, "df": 10}}}}}}}}}}}}, "r": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "f": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "d": {"docs": {"ifri_mini_ml_lib.model_selection.BayesianSearchCV.stratified": {"tf": 1}, "ifri_mini_ml_lib.model_selection.GridSearchCV.stratified": {"tf": 1}, "ifri_mini_ml_lib.model_selection.RandomSearchCV.stratified": {"tf": 1}, "ifri_mini_ml_lib.preprocessing.preparation.DataSplitter.stratified_train_test_split": {"tf": 1}}, "df": 4}}}}}}}}, "o": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"ifri_mini_ml_lib.neural_networks.MLPClassifier.early_stopping": {"tf": 1}, "ifri_mini_ml_lib.neural_networks.MLPRegressor.early_stopping": {"tf": 1}}, "df": 2}}}}}}, "d": {"docs": {"ifri_mini_ml_lib.preprocessing.preparation.StandardScaler.std_": {"tf": 1}}, "df": 1}}, "e": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"ifri_mini_ml_lib.metrics.bias_evaluation.selection_rate": {"tf": 1}, "ifri_mini_ml_lib.metrics.bias_evaluation.selection_rate_per_group": {"tf": 1}, "ifri_mini_ml_lib.model_selection": {"tf": 1}, "ifri_mini_ml_lib.model_selection.BaggingClassifier": {"tf": 1}, "ifri_mini_ml_lib.model_selection.BaggingClassifier.__init__": {"tf": 1}, "ifri_mini_ml_lib.model_selection.BaggingClassifier.base_model": {"tf": 1}, "ifri_mini_ml_lib.model_selection.BaggingClassifier.n_estimators": {"tf": 1}, "ifri_mini_ml_lib.model_selection.BaggingClassifier.random_state": {"tf": 1}, "ifri_mini_ml_lib.model_selection.BaggingClassifier.models": {"tf": 1}, "ifri_mini_ml_lib.model_selection.BaggingClassifier.pretrained": {"tf": 1}, "ifri_mini_ml_lib.model_selection.BaggingClassifier.fit": {"tf": 1}, "ifri_mini_ml_lib.model_selection.BaggingClassifier.predict": {"tf": 1}, "ifri_mini_ml_lib.model_selection.BaggingRegressor": {"tf": 1}, "ifri_mini_ml_lib.model_selection.BaggingRegressor.__init__": {"tf": 1}, "ifri_mini_ml_lib.model_selection.BaggingRegressor.base_model": {"tf": 1}, "ifri_mini_ml_lib.model_selection.BaggingRegressor.n_estimators": {"tf": 1}, "ifri_mini_ml_lib.model_selection.BaggingRegressor.random_state": {"tf": 1}, "ifri_mini_ml_lib.model_selection.BaggingRegressor.models": {"tf": 1}, "ifri_mini_ml_lib.model_selection.BaggingRegressor.pretrained": {"tf": 1}, "ifri_mini_ml_lib.model_selection.BaggingRegressor.fit": {"tf": 1}, "ifri_mini_ml_lib.model_selection.BaggingRegressor.predict": {"tf": 1}, "ifri_mini_ml_lib.model_selection.BayesianSearchCV": {"tf": 1}, "ifri_mini_ml_lib.model_selection.BayesianSearchCV.__init__": {"tf": 1}, "ifri_mini_ml_lib.model_selection.BayesianSearchCV.estimator": {"tf": 1}, "ifri_mini_ml_lib.model_selection.BayesianSearchCV.param_bounds": {"tf": 1}, "ifri_mini_ml_lib.model_selection.BayesianSearchCV.n_iter": {"tf": 1}, "ifri_mini_ml_lib.model_selection.BayesianSearchCV.init_points": {"tf": 1}, "ifri_mini_ml_lib.model_selection.BayesianSearchCV.cv": {"tf": 1}, "ifri_mini_ml_lib.model_selection.BayesianSearchCV.scoring": {"tf": 1}, "ifri_mini_ml_lib.model_selection.BayesianSearchCV.stratified": {"tf": 1}, "ifri_mini_ml_lib.model_selection.BayesianSearchCV.param_types": {"tf": 1}, "ifri_mini_ml_lib.model_selection.BayesianSearchCV.random_state": {"tf": 1}, "ifri_mini_ml_lib.model_selection.BayesianSearchCV.X_obs": {"tf": 1}, "ifri_mini_ml_lib.model_selection.BayesianSearchCV.y_obs": {"tf": 1}, "ifri_mini_ml_lib.model_selection.BayesianSearchCV.gp": {"tf": 1}, "ifri_mini_ml_lib.model_selection.BayesianSearchCV.maximize": {"tf": 1}, "ifri_mini_ml_lib.model_selection.BayesianSearchCV.history_": {"tf": 1}, "ifri_mini_ml_lib.model_selection.BayesianSearchCV.fit": {"tf": 1}, "ifri_mini_ml_lib.model_selection.BayesianSearchCV.get_best_params": {"tf": 1}, "ifri_mini_ml_lib.model_selection.GridSearchCV": {"tf": 1}, "ifri_mini_ml_lib.model_selection.GridSearchCV.__init__": {"tf": 1}, "ifri_mini_ml_lib.model_selection.GridSearchCV.model": {"tf": 1}, "ifri_mini_ml_lib.model_selection.GridSearchCV.param_grid": {"tf": 1}, "ifri_mini_ml_lib.model_selection.GridSearchCV.k": {"tf": 1}, "ifri_mini_ml_lib.model_selection.GridSearchCV.scoring": {"tf": 1}, "ifri_mini_ml_lib.model_selection.GridSearchCV.stratified": {"tf": 1}, "ifri_mini_ml_lib.model_selection.GridSearchCV.best_params_": {"tf": 1}, "ifri_mini_ml_lib.model_selection.GridSearchCV.best_score_": {"tf": 1}, "ifri_mini_ml_lib.model_selection.GridSearchCV.best_estimator_": {"tf": 1}, "ifri_mini_ml_lib.model_selection.GridSearchCV.fit": {"tf": 1}, "ifri_mini_ml_lib.model_selection.RandomSearchCV": {"tf": 1}, "ifri_mini_ml_lib.model_selection.RandomSearchCV.__init__": {"tf": 1}, "ifri_mini_ml_lib.model_selection.RandomSearchCV.model": {"tf": 1}, "ifri_mini_ml_lib.model_selection.RandomSearchCV.param_grid": {"tf": 1}, "ifri_mini_ml_lib.model_selection.RandomSearchCV.n_iter": {"tf": 1}, "ifri_mini_ml_lib.model_selection.RandomSearchCV.k": {"tf": 1}, "ifri_mini_ml_lib.model_selection.RandomSearchCV.scoring": {"tf": 1}, "ifri_mini_ml_lib.model_selection.RandomSearchCV.stratified": {"tf": 1}, "ifri_mini_ml_lib.model_selection.RandomSearchCV.random_state": {"tf": 1}, "ifri_mini_ml_lib.model_selection.RandomSearchCV.best_params_": {"tf": 1}, "ifri_mini_ml_lib.model_selection.RandomSearchCV.best_score_": {"tf": 1}, "ifri_mini_ml_lib.model_selection.RandomSearchCV.best_estimator_": {"tf": 1}, "ifri_mini_ml_lib.model_selection.RandomSearchCV.fit": {"tf": 1}}, "df": 63}}}}}}}, "e": {"docs": {}, "df": 0, "d": {"docs": {"ifri_mini_ml_lib.preprocessing.preparation.DataSplitter.seed": {"tf": 1}}, "df": 1}}, "t": {"docs": {"ifri_mini_ml_lib.regression.SVR.set_params": {"tf": 1}}, "df": 1}}, "c": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "e": {"docs": {"ifri_mini_ml_lib.metrics.evaluation_metrics.f1_score": {"tf": 1}, "ifri_mini_ml_lib.model_selection.GridSearchCV.best_score_": {"tf": 1}, "ifri_mini_ml_lib.model_selection.RandomSearchCV.best_score_": {"tf": 1}, "ifri_mini_ml_lib.neural_networks.MLPClassifier.score": {"tf": 1}, "ifri_mini_ml_lib.neural_networks.MLPRegressor.score": {"tf": 1}}, "df": 5}, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"ifri_mini_ml_lib.model_selection.BayesianSearchCV.scoring": {"tf": 1}, "ifri_mini_ml_lib.model_selection.GridSearchCV.scoring": {"tf": 1}, "ifri_mini_ml_lib.model_selection.RandomSearchCV.scoring": {"tf": 1}}, "df": 3}}}}}}, "o": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "v": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"ifri_mini_ml_lib.neural_networks.MLPClassifier.solver": {"tf": 1}, "ifri_mini_ml_lib.neural_networks.MLPRegressor.solver": {"tf": 1}}, "df": 2}}}}}, "h": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "f": {"docs": {}, "df": 0, "f": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "e": {"docs": {"ifri_mini_ml_lib.neural_networks.MLPClassifier.shuffle": {"tf": 1}, "ifri_mini_ml_lib.neural_networks.MLPRegressor.shuffle": {"tf": 1}}, "df": 2}}}}}}, "v": {"docs": {}, "df": 0, "r": {"docs": {"ifri_mini_ml_lib.regression.SVR": {"tf": 1}, "ifri_mini_ml_lib.regression.SVR.__init__": {"tf": 1}, "ifri_mini_ml_lib.regression.SVR.kerlist": {"tf": 1}, "ifri_mini_ml_lib.regression.SVR.eps": {"tf": 1}, "ifri_mini_ml_lib.regression.SVR.train_X": {"tf": 1}, "ifri_mini_ml_lib.regression.SVR.train_y": {"tf": 1}, "ifri_mini_ml_lib.regression.SVR.test_X": {"tf": 1}, "ifri_mini_ml_lib.regression.SVR.test_y": {"tf": 1}, "ifri_mini_ml_lib.regression.SVR.ker": {"tf": 1}, "ifri_mini_ml_lib.regression.SVR.linear_kernel": {"tf": 1}, "ifri_mini_ml_lib.regression.SVR.polynomial_kernel": {"tf": 1}, "ifri_mini_ml_lib.regression.SVR.rbf_kernel": {"tf": 1}, "ifri_mini_ml_lib.regression.SVR.sigmoid_kernel": {"tf": 1}, "ifri_mini_ml_lib.regression.SVR.get_kernel": {"tf": 1}, "ifri_mini_ml_lib.regression.SVR.fit": {"tf": 1}, "ifri_mini_ml_lib.regression.SVR.predict": {"tf": 1}, "ifri_mini_ml_lib.regression.SVR.set_params": {"tf": 1}}, "df": 17}}}, "c": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "f": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "e": {"docs": {"ifri_mini_ml_lib.association_rules.Apriori.min_confidence": {"tf": 1}, "ifri_mini_ml_lib.association_rules.Eclat.min_confidence": {"tf": 1}, "ifri_mini_ml_lib.association_rules.FPGrowth.min_confidence": {"tf": 1}}, "df": 3}}}}}}, "u": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"ifri_mini_ml_lib.metrics.evaluation_metrics.confusion_matrix": {"tf": 1}}, "df": 1}}}}}}, "v": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "t": {"docs": {"ifri_mini_ml_lib.association_rules.DataAdapter.convert_to_transactions": {"tf": 1}}, "df": 1}}}}}, "u": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "t": {"docs": {"ifri_mini_ml_lib.neural_networks.MLPClassifier.no_improvement_count": {"tf": 1}, "ifri_mini_ml_lib.neural_networks.MLPRegressor.no_improvement_count": {"tf": 1}}, "df": 2}}}, "m": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "t": {"docs": {"ifri_mini_ml_lib.preprocessing.dimensionality_reduction.PCA.n_component": {"tf": 1}}, "df": 1, "s": {"docs": {"ifri_mini_ml_lib.preprocessing.dimensionality_reduction.PCA.components": {"tf": 1}, "ifri_mini_ml_lib.preprocessing.dimensionality_reduction.TSNE.n_components": {"tf": 1}}, "df": 2}}}}}}}}, "v": {"docs": {"ifri_mini_ml_lib.preprocessing.dimensionality_reduction.PCA.cov": {"tf": 1}, "ifri_mini_ml_lib.preprocessing.dimensionality_reduction.PCA.plot_cov_matrix": {"tf": 1}}, "df": 2}, "l": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "n": {"docs": {"ifri_mini_ml_lib.preprocessing.preparation.CategoricalEncoder.target_column": {"tf": 1}}, "df": 1, "s": {"docs": {"ifri_mini_ml_lib.preprocessing.preparation.MinMaxScaler.columns": {"tf": 1}, "ifri_mini_ml_lib.preprocessing.preparation.StandardScaler.columns": {"tf": 1}}, "df": 2}}}}}}, "s": {"docs": {}, "df": 0, "v": {"docs": {"ifri_mini_ml_lib.association_rules.DataAdapter.load_csv_to_transactions": {"tf": 1}}, "df": 1}}, "l": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "f": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"ifri_mini_ml_lib.classification": {"tf": 1}, "ifri_mini_ml_lib.classification.DecisionTree": {"tf": 1}, "ifri_mini_ml_lib.classification.DecisionTree.__init__": {"tf": 1}, "ifri_mini_ml_lib.classification.DecisionTree.max_depth": {"tf": 1}, "ifri_mini_ml_lib.classification.DecisionTree.min_samples_split": {"tf": 1}, "ifri_mini_ml_lib.classification.DecisionTree.min_samples_leaf": {"tf": 1}, "ifri_mini_ml_lib.classification.DecisionTree.min_impurity_decrease": {"tf": 1}, "ifri_mini_ml_lib.classification.DecisionTree.tree": {"tf": 1}, "ifri_mini_ml_lib.classification.DecisionTree.fit": {"tf": 1}, "ifri_mini_ml_lib.classification.DecisionTree.predict": {"tf": 1}, "ifri_mini_ml_lib.classification.KNN": {"tf": 1}, "ifri_mini_ml_lib.classification.KNN.__init__": {"tf": 1}, "ifri_mini_ml_lib.classification.KNN.k": {"tf": 1}, "ifri_mini_ml_lib.classification.KNN.task": {"tf": 1}, "ifri_mini_ml_lib.classification.KNN.fit": {"tf": 1}, "ifri_mini_ml_lib.classification.KNN.predict": {"tf": 1}, "ifri_mini_ml_lib.classification.LogisticRegression": {"tf": 1}, "ifri_mini_ml_lib.classification.LogisticRegression.__init__": {"tf": 1}, "ifri_mini_ml_lib.classification.LogisticRegression.learning_rate": {"tf": 1}, "ifri_mini_ml_lib.classification.LogisticRegression.momentum": {"tf": 1}, "ifri_mini_ml_lib.classification.LogisticRegression.max_iter": {"tf": 1}, "ifri_mini_ml_lib.classification.LogisticRegression.tol": {"tf": 1}, "ifri_mini_ml_lib.classification.LogisticRegression.weights": {"tf": 1}, "ifri_mini_ml_lib.classification.LogisticRegression.bias": {"tf": 1}, "ifri_mini_ml_lib.classification.LogisticRegression.loss_history": {"tf": 1}, "ifri_mini_ml_lib.classification.LogisticRegression.fit": {"tf": 1}, "ifri_mini_ml_lib.classification.LogisticRegression.predict_proba": {"tf": 1}, "ifri_mini_ml_lib.classification.LogisticRegression.predict": {"tf": 1}}, "df": 28}}}}}}}}}, "e": {"docs": {}, "df": 0, "s": {"docs": {"ifri_mini_ml_lib.neural_networks.MLPClassifier.classes_": {"tf": 1}}, "df": 1}}}}}, "u": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"ifri_mini_ml_lib.clustering": {"tf": 1}, "ifri_mini_ml_lib.clustering.KMeans": {"tf": 1}, "ifri_mini_ml_lib.clustering.KMeans.__init__": {"tf": 1}, "ifri_mini_ml_lib.clustering.KMeans.n_clusters": {"tf": 1}, "ifri_mini_ml_lib.clustering.KMeans.max_iter": {"tf": 1}, "ifri_mini_ml_lib.clustering.KMeans.tol": {"tf": 1}, "ifri_mini_ml_lib.clustering.KMeans.init": {"tf": 1}, "ifri_mini_ml_lib.clustering.KMeans.random_state": {"tf": 1}, "ifri_mini_ml_lib.clustering.KMeans.centroids": {"tf": 1}, "ifri_mini_ml_lib.clustering.KMeans.labels": {"tf": 1}, "ifri_mini_ml_lib.clustering.KMeans.fit": {"tf": 1}, "ifri_mini_ml_lib.clustering.KMeans.predict": {"tf": 1}, "ifri_mini_ml_lib.clustering.KMeans.fit_predict": {"tf": 1}, "ifri_mini_ml_lib.clustering.KMeans.plot_clusters": {"tf": 1}, "ifri_mini_ml_lib.clustering.DBSCAN": {"tf": 1}, "ifri_mini_ml_lib.clustering.DBSCAN.__init__": {"tf": 1}, "ifri_mini_ml_lib.clustering.DBSCAN.eps": {"tf": 1}, "ifri_mini_ml_lib.clustering.DBSCAN.min_samples": {"tf": 1}, "ifri_mini_ml_lib.clustering.DBSCAN.labels": {"tf": 1}, "ifri_mini_ml_lib.clustering.DBSCAN.fit_predict": {"tf": 1}, "ifri_mini_ml_lib.clustering.DBSCAN.plot_clusters": {"tf": 1}, "ifri_mini_ml_lib.clustering.HierarchicalClustering": {"tf": 1}, "ifri_mini_ml_lib.clustering.HierarchicalClustering.__init__": {"tf": 1}, "ifri_mini_ml_lib.clustering.HierarchicalClustering.n_clusters": {"tf": 1}, "ifri_mini_ml_lib.clustering.HierarchicalClustering.linkage": {"tf": 1}, "ifri_mini_ml_lib.clustering.HierarchicalClustering.method": {"tf": 1}, "ifri_mini_ml_lib.clustering.HierarchicalClustering.labels": {"tf": 1}, "ifri_mini_ml_lib.clustering.HierarchicalClustering.linked_matrix": {"tf": 1}, "ifri_mini_ml_lib.clustering.HierarchicalClustering.fit_predict": {"tf": 1}, "ifri_mini_ml_lib.clustering.HierarchicalClustering.plot_dendrogram": {"tf": 1}, "ifri_mini_ml_lib.clustering.HierarchicalClustering.plot_clusters": {"tf": 1}}, "df": 31}}}, "s": {"docs": {"ifri_mini_ml_lib.clustering.KMeans.n_clusters": {"tf": 1}, "ifri_mini_ml_lib.clustering.KMeans.plot_clusters": {"tf": 1}, "ifri_mini_ml_lib.clustering.DBSCAN.plot_clusters": {"tf": 1}, "ifri_mini_ml_lib.clustering.HierarchicalClustering.n_clusters": {"tf": 1}, "ifri_mini_ml_lib.clustering.HierarchicalClustering.plot_clusters": {"tf": 1}}, "df": 5}}}}}}}, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "s": {"docs": {"ifri_mini_ml_lib.clustering.KMeans.centroids": {"tf": 1}}, "df": 1}}}}}}}}, "a": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {"ifri_mini_ml_lib.metrics.evaluation_metrics.calculate_inertia": {"tf": 1}, "ifri_mini_ml_lib.metrics.evaluation_metrics.calculate_silhouette": {"tf": 1}}, "df": 2}}}}}}}, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"ifri_mini_ml_lib.preprocessing.preparation.CategoricalEncoder": {"tf": 1}, "ifri_mini_ml_lib.preprocessing.preparation.CategoricalEncoder.__init__": {"tf": 1}, "ifri_mini_ml_lib.preprocessing.preparation.CategoricalEncoder.encoding_type": {"tf": 1}, "ifri_mini_ml_lib.preprocessing.preparation.CategoricalEncoder.target_column": {"tf": 1}, "ifri_mini_ml_lib.preprocessing.preparation.CategoricalEncoder.mapping": {"tf": 1}, "ifri_mini_ml_lib.preprocessing.preparation.CategoricalEncoder.fit": {"tf": 1}, "ifri_mini_ml_lib.preprocessing.preparation.CategoricalEncoder.transform": {"tf": 1}, "ifri_mini_ml_lib.preprocessing.preparation.CategoricalEncoder.fit_transform": {"tf": 1}}, "df": 8}}}}}}}}}}}}}}}}}, "v": {"docs": {"ifri_mini_ml_lib.model_selection.BayesianSearchCV.cv": {"tf": 1}}, "df": 1}, "h": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "e": {"docs": {"ifri_mini_ml_lib.neural_networks.MLPClassifier.n_iter_no_change": {"tf": 1}, "ifri_mini_ml_lib.neural_networks.MLPRegressor.n_iter_no_change": {"tf": 1}}, "df": 2}}}}}, "u": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "v": {"docs": {}, "df": 0, "e": {"docs": {"ifri_mini_ml_lib.preprocessing.dimensionality_reduction.PCA.plot_cumulative_explained_variance_ratio": {"tf": 1}}, "df": 1}}}}}}}}}}, "f": {"1": {"docs": {"ifri_mini_ml_lib.metrics.evaluation_metrics.f1_score": {"tf": 1}}, "df": 1}, "docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "q": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "t": {"docs": {"ifri_mini_ml_lib.association_rules.Apriori.frequent_itemsets_": {"tf": 1}, "ifri_mini_ml_lib.association_rules.Apriori.get_frequent_itemsets": {"tf": 1}, "ifri_mini_ml_lib.association_rules.Eclat.frequent_itemsets": {"tf": 1}, "ifri_mini_ml_lib.association_rules.Eclat.frequent_TIDsets": {"tf": 1}, "ifri_mini_ml_lib.association_rules.Eclat.get_frequent_itemsets": {"tf": 1}, "ifri_mini_ml_lib.association_rules.FPGrowth.frequent_itemsets_dict": {"tf": 1}, "ifri_mini_ml_lib.association_rules.FPGrowth.get_frequent_itemsets": {"tf": 1}}, "df": 7}}}}}}, "a": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"ifri_mini_ml_lib.neural_networks.MLPClassifier.validation_fraction": {"tf": 1}, "ifri_mini_ml_lib.neural_networks.MLPRegressor.validation_fraction": {"tf": 1}}, "df": 2}}}}}}}, "i": {"docs": {}, "df": 0, "t": {"docs": {"ifri_mini_ml_lib.association_rules.Apriori.fit": {"tf": 1}, "ifri_mini_ml_lib.association_rules.Eclat.fit": {"tf": 1}, "ifri_mini_ml_lib.association_rules.FPGrowth.fit": {"tf": 1}, "ifri_mini_ml_lib.classification.DecisionTree.fit": {"tf": 1}, "ifri_mini_ml_lib.classification.KNN.fit": {"tf": 1}, "ifri_mini_ml_lib.classification.LogisticRegression.fit": {"tf": 1}, "ifri_mini_ml_lib.clustering.KMeans.fit": {"tf": 1}, "ifri_mini_ml_lib.clustering.KMeans.fit_predict": {"tf": 1}, "ifri_mini_ml_lib.clustering.DBSCAN.fit_predict": {"tf": 1}, "ifri_mini_ml_lib.clustering.HierarchicalClustering.fit_predict": {"tf": 1}, "ifri_mini_ml_lib.model_selection.BaggingClassifier.fit": {"tf": 1}, "ifri_mini_ml_lib.model_selection.BaggingRegressor.fit": {"tf": 1}, "ifri_mini_ml_lib.model_selection.BayesianSearchCV.fit": {"tf": 1}, "ifri_mini_ml_lib.model_selection.GridSearchCV.fit": {"tf": 1}, "ifri_mini_ml_lib.model_selection.RandomSearchCV.fit": {"tf": 1}, "ifri_mini_ml_lib.neural_networks.MLPClassifier.fit": {"tf": 1}, "ifri_mini_ml_lib.neural_networks.MLPRegressor.fit": {"tf": 1}, "ifri_mini_ml_lib.preprocessing.dimensionality_reduction.PCA.fit": {"tf": 1}, "ifri_mini_ml_lib.preprocessing.dimensionality_reduction.PCA.fit_transform": {"tf": 1}, "ifri_mini_ml_lib.preprocessing.dimensionality_reduction.TSNE.fit": {"tf": 1}, "ifri_mini_ml_lib.preprocessing.dimensionality_reduction.TSNE.fit_transform": {"tf": 1}, "ifri_mini_ml_lib.preprocessing.preparation.MinMaxScaler.fit": {"tf": 1}, "ifri_mini_ml_lib.preprocessing.preparation.MinMaxScaler.fit_transform": {"tf": 1}, "ifri_mini_ml_lib.preprocessing.preparation.StandardScaler.fit": {"tf": 1}, "ifri_mini_ml_lib.preprocessing.preparation.StandardScaler.fit_transform": {"tf": 1}, "ifri_mini_ml_lib.preprocessing.preparation.CategoricalEncoder.fit": {"tf": 1}, "ifri_mini_ml_lib.preprocessing.preparation.CategoricalEncoder.fit_transform": {"tf": 1}, "ifri_mini_ml_lib.regression.LinearRegression.fit": {"tf": 1}, "ifri_mini_ml_lib.regression.PolynomialRegression.fit": {"tf": 1}, "ifri_mini_ml_lib.regression.SVR.fit": {"tf": 1}}, "df": 30}}, "p": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "w": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "h": {"docs": {"ifri_mini_ml_lib.association_rules.FPGrowth": {"tf": 1}, "ifri_mini_ml_lib.association_rules.FPGrowth.__init__": {"tf": 1}, "ifri_mini_ml_lib.association_rules.FPGrowth.min_support": {"tf": 1}, "ifri_mini_ml_lib.association_rules.FPGrowth.min_confidence": {"tf": 1}, "ifri_mini_ml_lib.association_rules.FPGrowth.frequent_itemsets_dict": {"tf": 1}, "ifri_mini_ml_lib.association_rules.FPGrowth.rules_": {"tf": 1}, "ifri_mini_ml_lib.association_rules.FPGrowth.header_table": {"tf": 1}, "ifri_mini_ml_lib.association_rules.FPGrowth.n_transactions": {"tf": 1}, "ifri_mini_ml_lib.association_rules.FPGrowth.fit": {"tf": 1}, "ifri_mini_ml_lib.association_rules.FPGrowth.get_frequent_itemsets": {"tf": 1}, "ifri_mini_ml_lib.association_rules.FPGrowth.get_rules": {"tf": 1}}, "df": 11}}}}}}, "r": {"docs": {"ifri_mini_ml_lib.metrics.bias_evaluation.tpr_fpr_by_group": {"tf": 1}}, "df": 1}}, "u": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "c": {"docs": {"ifri_mini_ml_lib.neural_networks.MLPClassifier.activation_func": {"tf": 1}, "ifri_mini_ml_lib.neural_networks.MLPRegressor.activation_func": {"tf": 1}}, "df": 2, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "s": {"docs": {"ifri_mini_ml_lib.neural_networks.MLPClassifier.activation_functions": {"tf": 1}, "ifri_mini_ml_lib.neural_networks.MLPRegressor.activation_functions": {"tf": 1}}, "df": 2}}}}}}}}, "o": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "d": {"docs": {"ifri_mini_ml_lib.preprocessing.preparation.DataSplitter.k_fold_split": {"tf": 1}}, "df": 1}}}}, "g": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "t": {"docs": {"ifri_mini_ml_lib.association_rules.Apriori.get_frequent_itemsets": {"tf": 1}, "ifri_mini_ml_lib.association_rules.Apriori.get_rules": {"tf": 1}, "ifri_mini_ml_lib.association_rules.Eclat.get_single_items_TIDset": {"tf": 1}, "ifri_mini_ml_lib.association_rules.Eclat.get_frequent_itemsets": {"tf": 1}, "ifri_mini_ml_lib.association_rules.Eclat.get_rules": {"tf": 1}, "ifri_mini_ml_lib.association_rules.FPGrowth.get_frequent_itemsets": {"tf": 1}, "ifri_mini_ml_lib.association_rules.FPGrowth.get_rules": {"tf": 1}, "ifri_mini_ml_lib.model_selection.BayesianSearchCV.get_best_params": {"tf": 1}, "ifri_mini_ml_lib.regression.SVR.get_kernel": {"tf": 1}}, "df": 9}, "n": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {"ifri_mini_ml_lib.preprocessing.dimensionality_reduction.TSNE.generate_test_data": {"tf": 1}}, "df": 1}}}}}}}, "r": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "p": {"docs": {"ifri_mini_ml_lib.metrics.bias_evaluation.selection_rate_per_group": {"tf": 1}, "ifri_mini_ml_lib.metrics.bias_evaluation.tpr_fpr_by_group": {"tf": 1}}, "df": 2}}}, "i": {"docs": {}, "df": 0, "d": {"docs": {"ifri_mini_ml_lib.model_selection.GridSearchCV.param_grid": {"tf": 1}, "ifri_mini_ml_lib.model_selection.RandomSearchCV.param_grid": {"tf": 1}}, "df": 2, "s": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "h": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "v": {"docs": {"ifri_mini_ml_lib.model_selection.GridSearchCV": {"tf": 1}, "ifri_mini_ml_lib.model_selection.GridSearchCV.__init__": {"tf": 1}, "ifri_mini_ml_lib.model_selection.GridSearchCV.model": {"tf": 1}, "ifri_mini_ml_lib.model_selection.GridSearchCV.param_grid": {"tf": 1}, "ifri_mini_ml_lib.model_selection.GridSearchCV.k": {"tf": 1}, "ifri_mini_ml_lib.model_selection.GridSearchCV.scoring": {"tf": 1}, "ifri_mini_ml_lib.model_selection.GridSearchCV.stratified": {"tf": 1}, "ifri_mini_ml_lib.model_selection.GridSearchCV.best_params_": {"tf": 1}, "ifri_mini_ml_lib.model_selection.GridSearchCV.best_score_": {"tf": 1}, "ifri_mini_ml_lib.model_selection.GridSearchCV.best_estimator_": {"tf": 1}, "ifri_mini_ml_lib.model_selection.GridSearchCV.fit": {"tf": 1}}, "df": 11}}}}}}}}}}, "a": {"docs": {}, "df": 0, "d": {"docs": {"ifri_mini_ml_lib.preprocessing.dimensionality_reduction.TSNE.min_grad_norm": {"tf": 1}}, "df": 1}}}, "p": {"docs": {"ifri_mini_ml_lib.model_selection.BayesianSearchCV.gp": {"tf": 1}}, "df": 1}}, "e": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {"ifri_mini_ml_lib.association_rules.Eclat": {"tf": 1}, "ifri_mini_ml_lib.association_rules.Eclat.__init__": {"tf": 1}, "ifri_mini_ml_lib.association_rules.Eclat.min_support": {"tf": 1}, "ifri_mini_ml_lib.association_rules.Eclat.min_confidence": {"tf": 1}, "ifri_mini_ml_lib.association_rules.Eclat.frequent_itemsets": {"tf": 1}, "ifri_mini_ml_lib.association_rules.Eclat.frequent_TIDsets": {"tf": 1}, "ifri_mini_ml_lib.association_rules.Eclat.rules_": {"tf": 1}, "ifri_mini_ml_lib.association_rules.Eclat.n_transactions": {"tf": 1}, "ifri_mini_ml_lib.association_rules.Eclat.fit": {"tf": 1}, "ifri_mini_ml_lib.association_rules.Eclat.get_single_items_TIDset": {"tf": 1}, "ifri_mini_ml_lib.association_rules.Eclat.get_frequent_itemsets": {"tf": 1}, "ifri_mini_ml_lib.association_rules.Eclat.get_rules": {"tf": 1}}, "df": 12}}}}, "p": {"docs": {}, "df": 0, "s": {"docs": {"ifri_mini_ml_lib.clustering.DBSCAN.eps": {"tf": 1}, "ifri_mini_ml_lib.regression.SVR.eps": {"tf": 1}}, "df": 2, "i": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"ifri_mini_ml_lib.neural_networks.MLPClassifier.epsilon": {"tf": 1}, "ifri_mini_ml_lib.neural_networks.MLPRegressor.epsilon": {"tf": 1}}, "df": 2}}}}}, "o": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "h": {"docs": {}, "df": 0, "s": {"docs": {"ifri_mini_ml_lib.regression.LinearRegression.epochs": {"tf": 1}, "ifri_mini_ml_lib.regression.PolynomialRegression.epochs": {"tf": 1}}, "df": 2}}}}}, "v": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"ifri_mini_ml_lib.metrics.bias_evaluation": {"tf": 1}, "ifri_mini_ml_lib.metrics.bias_evaluation.selection_rate": {"tf": 1}, "ifri_mini_ml_lib.metrics.bias_evaluation.selection_rate_per_group": {"tf": 1}, "ifri_mini_ml_lib.metrics.bias_evaluation.demographic_parity_ratio": {"tf": 1}, "ifri_mini_ml_lib.metrics.bias_evaluation.demographic_parity_difference": {"tf": 1}, "ifri_mini_ml_lib.metrics.bias_evaluation.tpr_fpr_by_group": {"tf": 1}, "ifri_mini_ml_lib.metrics.bias_evaluation.equalized_odds_ratio": {"tf": 1}, "ifri_mini_ml_lib.metrics.bias_evaluation.equalized_odds_difference": {"tf": 1}, "ifri_mini_ml_lib.metrics.evaluation_metrics": {"tf": 1}, "ifri_mini_ml_lib.metrics.evaluation_metrics.evaluate_model": {"tf": 1}, "ifri_mini_ml_lib.metrics.evaluation_metrics.confusion_matrix": {"tf": 1}, "ifri_mini_ml_lib.metrics.evaluation_metrics.accuracy": {"tf": 1}, "ifri_mini_ml_lib.metrics.evaluation_metrics.precision": {"tf": 1}, "ifri_mini_ml_lib.metrics.evaluation_metrics.recall": {"tf": 1}, "ifri_mini_ml_lib.metrics.evaluation_metrics.f1_score": {"tf": 1}, "ifri_mini_ml_lib.metrics.evaluation_metrics.calculate_inertia": {"tf": 1}, "ifri_mini_ml_lib.metrics.evaluation_metrics.calculate_silhouette": {"tf": 1}}, "df": 17}}}, "e": {"docs": {"ifri_mini_ml_lib.metrics.evaluation_metrics.evaluate_model": {"tf": 1}}, "df": 1}}}}}}}, "q": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "z": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "d": {"docs": {"ifri_mini_ml_lib.metrics.bias_evaluation.equalized_odds_ratio": {"tf": 1}, "ifri_mini_ml_lib.metrics.bias_evaluation.equalized_odds_difference": {"tf": 1}}, "df": 2}}}}}}}}, "s": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {"ifri_mini_ml_lib.model_selection.BayesianSearchCV.estimator": {"tf": 1}, "ifri_mini_ml_lib.model_selection.GridSearchCV.best_estimator_": {"tf": 1}, "ifri_mini_ml_lib.model_selection.RandomSearchCV.best_estimator_": {"tf": 1}}, "df": 3, "s": {"docs": {"ifri_mini_ml_lib.model_selection.BaggingClassifier.n_estimators": {"tf": 1}, "ifri_mini_ml_lib.model_selection.BaggingRegressor.n_estimators": {"tf": 1}}, "df": 2}}}}}}}}}, "a": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "y": {"docs": {"ifri_mini_ml_lib.neural_networks.MLPClassifier.early_stopping": {"tf": 1}, "ifri_mini_ml_lib.neural_networks.MLPRegressor.early_stopping": {"tf": 1}, "ifri_mini_ml_lib.preprocessing.dimensionality_reduction.TSNE.early_exaggeration": {"tf": 1}}, "df": 3}}}}, "i": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {"ifri_mini_ml_lib.preprocessing.dimensionality_reduction.PCA.eigen_values": {"tf": 1}, "ifri_mini_ml_lib.preprocessing.dimensionality_reduction.PCA.eigen_vectors": {"tf": 1}}, "df": 2}}}}, "x": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "d": {"docs": {"ifri_mini_ml_lib.preprocessing.dimensionality_reduction.PCA.explained_variances": {"tf": 1}, "ifri_mini_ml_lib.preprocessing.dimensionality_reduction.PCA.explained_variances_ratio": {"tf": 1}, "ifri_mini_ml_lib.preprocessing.dimensionality_reduction.PCA.plot_cumulative_explained_variance_ratio": {"tf": 1}}, "df": 3}}}}}}}, "a": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"ifri_mini_ml_lib.preprocessing.dimensionality_reduction.TSNE.early_exaggeration": {"tf": 1}}, "df": 1}}}}}}}}}}}, "m": {"docs": {}, "df": 0, "b": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"ifri_mini_ml_lib.preprocessing.dimensionality_reduction.TSNE.embedding_": {"tf": 1}}, "df": 1}}}}}}}}, "n": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"ifri_mini_ml_lib.preprocessing.preparation.CategoricalEncoder.encoding_type": {"tf": 1}}, "df": 1}}}}}}}}, "t": {"docs": {"ifri_mini_ml_lib.neural_networks.MLPClassifier.t": {"tf": 1}, "ifri_mini_ml_lib.neural_networks.MLPRegressor.t": {"tf": 1}}, "df": 2, "i": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "t": {"docs": {"ifri_mini_ml_lib.association_rules.Eclat.get_single_items_TIDset": {"tf": 1}}, "df": 1, "s": {"docs": {"ifri_mini_ml_lib.association_rules.Eclat.frequent_TIDsets": {"tf": 1}}, "df": 1}}}}}}, "r": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "s": {"docs": {"ifri_mini_ml_lib.association_rules.Eclat.n_transactions": {"tf": 1}, "ifri_mini_ml_lib.association_rules.FPGrowth.n_transactions": {"tf": 1}, "ifri_mini_ml_lib.association_rules.DataAdapter.convert_to_transactions": {"tf": 1}, "ifri_mini_ml_lib.association_rules.DataAdapter.load_csv_to_transactions": {"tf": 1}}, "df": 4}}}}}}}, "f": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "m": {"docs": {"ifri_mini_ml_lib.preprocessing.dimensionality_reduction.PCA.transform": {"tf": 1}, "ifri_mini_ml_lib.preprocessing.dimensionality_reduction.PCA.fit_transform": {"tf": 1}, "ifri_mini_ml_lib.preprocessing.dimensionality_reduction.TSNE.fit_transform": {"tf": 1}, "ifri_mini_ml_lib.preprocessing.preparation.MinMaxScaler.transform": {"tf": 1}, "ifri_mini_ml_lib.preprocessing.preparation.MinMaxScaler.fit_transform": {"tf": 1}, "ifri_mini_ml_lib.preprocessing.preparation.MinMaxScaler.inverse_transform": {"tf": 1}, "ifri_mini_ml_lib.preprocessing.preparation.StandardScaler.transform": {"tf": 1}, "ifri_mini_ml_lib.preprocessing.preparation.StandardScaler.fit_transform": {"tf": 1}, "ifri_mini_ml_lib.preprocessing.preparation.StandardScaler.inverse_transform": {"tf": 1}, "ifri_mini_ml_lib.preprocessing.preparation.CategoricalEncoder.transform": {"tf": 1}, "ifri_mini_ml_lib.preprocessing.preparation.CategoricalEncoder.fit_transform": {"tf": 1}}, "df": 11}}}}}}, "i": {"docs": {}, "df": 0, "n": {"docs": {"ifri_mini_ml_lib.preprocessing.preparation.DataSplitter.train_test_split": {"tf": 1}, "ifri_mini_ml_lib.preprocessing.preparation.DataSplitter.stratified_train_test_split": {"tf": 1}, "ifri_mini_ml_lib.preprocessing.preparation.DataSplitter.temporal_train_test_split": {"tf": 1}, "ifri_mini_ml_lib.regression.SVR.train_X": {"tf": 1}, "ifri_mini_ml_lib.regression.SVR.train_y": {"tf": 1}}, "df": 5, "e": {"docs": {}, "df": 0, "d": {"docs": {"ifri_mini_ml_lib.neural_networks.MLPClassifier.trained": {"tf": 1}, "ifri_mini_ml_lib.neural_networks.MLPRegressor.trained": {"tf": 1}}, "df": 2}}}}}, "e": {"docs": {}, "df": 0, "e": {"docs": {"ifri_mini_ml_lib.classification.DecisionTree.tree": {"tf": 1}}, "df": 1}}}, "a": {"docs": {}, "df": 0, "b": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "e": {"docs": {"ifri_mini_ml_lib.association_rules.FPGrowth.header_table": {"tf": 1}}, "df": 1}}}, "s": {"docs": {}, "df": 0, "k": {"docs": {"ifri_mini_ml_lib.classification.KNN.task": {"tf": 1}}, "df": 1}}, "r": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "t": {"docs": {"ifri_mini_ml_lib.preprocessing.preparation.CategoricalEncoder.target_column": {"tf": 1}}, "df": 1}}}}}, "o": {"docs": {"ifri_mini_ml_lib.association_rules.DataAdapter.convert_to_transactions": {"tf": 1}, "ifri_mini_ml_lib.association_rules.DataAdapter.load_csv_to_transactions": {"tf": 1}}, "df": 2, "l": {"docs": {"ifri_mini_ml_lib.classification.LogisticRegression.tol": {"tf": 1}, "ifri_mini_ml_lib.clustering.KMeans.tol": {"tf": 1}, "ifri_mini_ml_lib.neural_networks.MLPClassifier.tol": {"tf": 1}, "ifri_mini_ml_lib.neural_networks.MLPRegressor.tol": {"tf": 1}}, "df": 4}}, "p": {"docs": {}, "df": 0, "r": {"docs": {"ifri_mini_ml_lib.metrics.bias_evaluation.tpr_fpr_by_group": {"tf": 1}}, "df": 1}}, "y": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "e": {"docs": {"ifri_mini_ml_lib.preprocessing.preparation.CategoricalEncoder.encoding_type": {"tf": 1}}, "df": 1, "s": {"docs": {"ifri_mini_ml_lib.model_selection.BayesianSearchCV.param_types": {"tf": 1}}, "df": 1}}}}, "s": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "e": {"docs": {"ifri_mini_ml_lib.preprocessing.dimensionality_reduction.TSNE": {"tf": 1}, "ifri_mini_ml_lib.preprocessing.dimensionality_reduction.TSNE.__init__": {"tf": 1}, "ifri_mini_ml_lib.preprocessing.dimensionality_reduction.TSNE.n_components": {"tf": 1}, "ifri_mini_ml_lib.preprocessing.dimensionality_reduction.TSNE.perplexity": {"tf": 1}, "ifri_mini_ml_lib.preprocessing.dimensionality_reduction.TSNE.early_exaggeration": {"tf": 1}, "ifri_mini_ml_lib.preprocessing.dimensionality_reduction.TSNE.learning_rate": {"tf": 1}, "ifri_mini_ml_lib.preprocessing.dimensionality_reduction.TSNE.n_iter": {"tf": 1}, "ifri_mini_ml_lib.preprocessing.dimensionality_reduction.TSNE.init": {"tf": 1}, "ifri_mini_ml_lib.preprocessing.dimensionality_reduction.TSNE.min_grad_norm": {"tf": 1}, "ifri_mini_ml_lib.preprocessing.dimensionality_reduction.TSNE.random_state": {"tf": 1}, "ifri_mini_ml_lib.preprocessing.dimensionality_reduction.TSNE.verbose": {"tf": 1}, "ifri_mini_ml_lib.preprocessing.dimensionality_reduction.TSNE.embedding_": {"tf": 1}, "ifri_mini_ml_lib.preprocessing.dimensionality_reduction.TSNE.kl_divergence_": {"tf": 1}, "ifri_mini_ml_lib.preprocessing.dimensionality_reduction.TSNE.n_iter_": {"tf": 1}, "ifri_mini_ml_lib.preprocessing.dimensionality_reduction.TSNE.rng": {"tf": 1}, "ifri_mini_ml_lib.preprocessing.dimensionality_reduction.TSNE.fit": {"tf": 1}, "ifri_mini_ml_lib.preprocessing.dimensionality_reduction.TSNE.fit_transform": {"tf": 1}, "ifri_mini_ml_lib.preprocessing.dimensionality_reduction.TSNE.generate_test_data": {"tf": 1}, "ifri_mini_ml_lib.preprocessing.dimensionality_reduction.TSNE.plot_results": {"tf": 1}}, "df": 19}}}, "e": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "t": {"docs": {"ifri_mini_ml_lib.preprocessing.dimensionality_reduction.TSNE.generate_test_data": {"tf": 1}, "ifri_mini_ml_lib.preprocessing.preparation.DataSplitter.train_test_split": {"tf": 1}, "ifri_mini_ml_lib.preprocessing.preparation.DataSplitter.stratified_train_test_split": {"tf": 1}, "ifri_mini_ml_lib.preprocessing.preparation.DataSplitter.temporal_train_test_split": {"tf": 1}, "ifri_mini_ml_lib.regression.SVR.test_X": {"tf": 1}, "ifri_mini_ml_lib.regression.SVR.test_y": {"tf": 1}}, "df": 6}}, "m": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "l": {"docs": {"ifri_mini_ml_lib.preprocessing.preparation.DataSplitter.temporal_train_test_split": {"tf": 1}}, "df": 1}}}}}}}}, "n": {"docs": {"ifri_mini_ml_lib.association_rules.Eclat.n_transactions": {"tf": 1}, "ifri_mini_ml_lib.association_rules.FPGrowth.n_transactions": {"tf": 1}, "ifri_mini_ml_lib.clustering.KMeans.n_clusters": {"tf": 1}, "ifri_mini_ml_lib.clustering.HierarchicalClustering.n_clusters": {"tf": 1}, "ifri_mini_ml_lib.model_selection.BaggingClassifier.n_estimators": {"tf": 1}, "ifri_mini_ml_lib.model_selection.BaggingRegressor.n_estimators": {"tf": 1}, "ifri_mini_ml_lib.model_selection.BayesianSearchCV.n_iter": {"tf": 1}, "ifri_mini_ml_lib.model_selection.RandomSearchCV.n_iter": {"tf": 1}, "ifri_mini_ml_lib.neural_networks.MLPClassifier.n_iter_no_change": {"tf": 1}, "ifri_mini_ml_lib.neural_networks.MLPClassifier.n_layers": {"tf": 1}, "ifri_mini_ml_lib.neural_networks.MLPClassifier.n_outputs": {"tf": 1}, "ifri_mini_ml_lib.neural_networks.MLPRegressor.n_iter_no_change": {"tf": 1}, "ifri_mini_ml_lib.neural_networks.MLPRegressor.n_layers": {"tf": 1}, "ifri_mini_ml_lib.neural_networks.MLPRegressor.n_outputs": {"tf": 1}, "ifri_mini_ml_lib.preprocessing.dimensionality_reduction.PCA.n_component": {"tf": 1}, "ifri_mini_ml_lib.preprocessing.dimensionality_reduction.TSNE.n_components": {"tf": 1}, "ifri_mini_ml_lib.preprocessing.dimensionality_reduction.TSNE.n_iter": {"tf": 1}, "ifri_mini_ml_lib.preprocessing.dimensionality_reduction.TSNE.n_iter_": {"tf": 1}}, "df": 18, "e": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "l": {"docs": {"ifri_mini_ml_lib.neural_networks": {"tf": 1}, "ifri_mini_ml_lib.neural_networks.MLPClassifier": {"tf": 1}, "ifri_mini_ml_lib.neural_networks.MLPClassifier.__init__": {"tf": 1}, "ifri_mini_ml_lib.neural_networks.MLPClassifier.hidden_layer_sizes": {"tf": 1}, "ifri_mini_ml_lib.neural_networks.MLPClassifier.activation": {"tf": 1}, "ifri_mini_ml_lib.neural_networks.MLPClassifier.solver": {"tf": 1}, "ifri_mini_ml_lib.neural_networks.MLPClassifier.alpha": {"tf": 1}, "ifri_mini_ml_lib.neural_networks.MLPClassifier.batch_size": {"tf": 1}, "ifri_mini_ml_lib.neural_networks.MLPClassifier.learning_rate": {"tf": 1}, "ifri_mini_ml_lib.neural_networks.MLPClassifier.max_iter": {"tf": 1}, "ifri_mini_ml_lib.neural_networks.MLPClassifier.shuffle": {"tf": 1}, "ifri_mini_ml_lib.neural_networks.MLPClassifier.beta1": {"tf": 1}, "ifri_mini_ml_lib.neural_networks.MLPClassifier.beta2": {"tf": 1}, "ifri_mini_ml_lib.neural_networks.MLPClassifier.epsilon": {"tf": 1}, "ifri_mini_ml_lib.neural_networks.MLPClassifier.momentum": {"tf": 1}, "ifri_mini_ml_lib.neural_networks.MLPClassifier.tol": {"tf": 1}, "ifri_mini_ml_lib.neural_networks.MLPClassifier.early_stopping": {"tf": 1}, "ifri_mini_ml_lib.neural_networks.MLPClassifier.validation_fraction": {"tf": 1}, "ifri_mini_ml_lib.neural_networks.MLPClassifier.n_iter_no_change": {"tf": 1}, "ifri_mini_ml_lib.neural_networks.MLPClassifier.activation_functions": {"tf": 1}, "ifri_mini_ml_lib.neural_networks.MLPClassifier.activation_derivatives": {"tf": 1}, "ifri_mini_ml_lib.neural_networks.MLPClassifier.activation_func": {"tf": 1}, "ifri_mini_ml_lib.neural_networks.MLPClassifier.activation_derivative": {"tf": 1}, "ifri_mini_ml_lib.neural_networks.MLPClassifier.weights": {"tf": 1}, "ifri_mini_ml_lib.neural_networks.MLPClassifier.biases": {"tf": 1}, "ifri_mini_ml_lib.neural_networks.MLPClassifier.n_layers": {"tf": 1}, "ifri_mini_ml_lib.neural_networks.MLPClassifier.n_outputs": {"tf": 1}, "ifri_mini_ml_lib.neural_networks.MLPClassifier.velocity_weights": {"tf": 1}, "ifri_mini_ml_lib.neural_networks.MLPClassifier.velocity_biases": {"tf": 1}, "ifri_mini_ml_lib.neural_networks.MLPClassifier.m_weights": {"tf": 1}, "ifri_mini_ml_lib.neural_networks.MLPClassifier.m_biases": {"tf": 1}, "ifri_mini_ml_lib.neural_networks.MLPClassifier.v_weights": {"tf": 1}, "ifri_mini_ml_lib.neural_networks.MLPClassifier.v_biases": {"tf": 1}, "ifri_mini_ml_lib.neural_networks.MLPClassifier.t": {"tf": 1}, "ifri_mini_ml_lib.neural_networks.MLPClassifier.loss_history": {"tf": 1}, "ifri_mini_ml_lib.neural_networks.MLPClassifier.val_loss_history": {"tf": 1}, "ifri_mini_ml_lib.neural_networks.MLPClassifier.best_loss": {"tf": 1}, "ifri_mini_ml_lib.neural_networks.MLPClassifier.no_improvement_count": {"tf": 1}, "ifri_mini_ml_lib.neural_networks.MLPClassifier.trained": {"tf": 1}, "ifri_mini_ml_lib.neural_networks.MLPClassifier.classes_": {"tf": 1}, "ifri_mini_ml_lib.neural_networks.MLPClassifier.fit": {"tf": 1}, "ifri_mini_ml_lib.neural_networks.MLPClassifier.predict": {"tf": 1}, "ifri_mini_ml_lib.neural_networks.MLPClassifier.predict_proba": {"tf": 1}, "ifri_mini_ml_lib.neural_networks.MLPClassifier.score": {"tf": 1}, "ifri_mini_ml_lib.neural_networks.MLPRegressor": {"tf": 1}, "ifri_mini_ml_lib.neural_networks.MLPRegressor.__init__": {"tf": 1}, "ifri_mini_ml_lib.neural_networks.MLPRegressor.hidden_layer_sizes": {"tf": 1}, "ifri_mini_ml_lib.neural_networks.MLPRegressor.activation": {"tf": 1}, "ifri_mini_ml_lib.neural_networks.MLPRegressor.solver": {"tf": 1}, "ifri_mini_ml_lib.neural_networks.MLPRegressor.alpha": {"tf": 1}, "ifri_mini_ml_lib.neural_networks.MLPRegressor.batch_size": {"tf": 1}, "ifri_mini_ml_lib.neural_networks.MLPRegressor.learning_rate": {"tf": 1}, "ifri_mini_ml_lib.neural_networks.MLPRegressor.max_iter": {"tf": 1}, "ifri_mini_ml_lib.neural_networks.MLPRegressor.shuffle": {"tf": 1}, "ifri_mini_ml_lib.neural_networks.MLPRegressor.beta1": {"tf": 1}, "ifri_mini_ml_lib.neural_networks.MLPRegressor.beta2": {"tf": 1}, "ifri_mini_ml_lib.neural_networks.MLPRegressor.epsilon": {"tf": 1}, "ifri_mini_ml_lib.neural_networks.MLPRegressor.momentum": {"tf": 1}, "ifri_mini_ml_lib.neural_networks.MLPRegressor.tol": {"tf": 1}, "ifri_mini_ml_lib.neural_networks.MLPRegressor.early_stopping": {"tf": 1}, "ifri_mini_ml_lib.neural_networks.MLPRegressor.validation_fraction": {"tf": 1}, "ifri_mini_ml_lib.neural_networks.MLPRegressor.n_iter_no_change": {"tf": 1}, "ifri_mini_ml_lib.neural_networks.MLPRegressor.activation_functions": {"tf": 1}, "ifri_mini_ml_lib.neural_networks.MLPRegressor.activation_derivatives": {"tf": 1}, "ifri_mini_ml_lib.neural_networks.MLPRegressor.activation_func": {"tf": 1}, "ifri_mini_ml_lib.neural_networks.MLPRegressor.activation_derivative": {"tf": 1}, "ifri_mini_ml_lib.neural_networks.MLPRegressor.weights": {"tf": 1}, "ifri_mini_ml_lib.neural_networks.MLPRegressor.biases": {"tf": 1}, "ifri_mini_ml_lib.neural_networks.MLPRegressor.n_layers": {"tf": 1}, "ifri_mini_ml_lib.neural_networks.MLPRegressor.n_outputs": {"tf": 1}, "ifri_mini_ml_lib.neural_networks.MLPRegressor.velocity_weights": {"tf": 1}, "ifri_mini_ml_lib.neural_networks.MLPRegressor.velocity_biases": {"tf": 1}, "ifri_mini_ml_lib.neural_networks.MLPRegressor.m_weights": {"tf": 1}, "ifri_mini_ml_lib.neural_networks.MLPRegressor.m_biases": {"tf": 1}, "ifri_mini_ml_lib.neural_networks.MLPRegressor.v_weights": {"tf": 1}, "ifri_mini_ml_lib.neural_networks.MLPRegressor.v_biases": {"tf": 1}, "ifri_mini_ml_lib.neural_networks.MLPRegressor.t": {"tf": 1}, "ifri_mini_ml_lib.neural_networks.MLPRegressor.loss_history": {"tf": 1}, "ifri_mini_ml_lib.neural_networks.MLPRegressor.val_loss_history": {"tf": 1}, "ifri_mini_ml_lib.neural_networks.MLPRegressor.best_loss": {"tf": 1}, "ifri_mini_ml_lib.neural_networks.MLPRegressor.no_improvement_count": {"tf": 1}, "ifri_mini_ml_lib.neural_networks.MLPRegressor.trained": {"tf": 1}, "ifri_mini_ml_lib.neural_networks.MLPRegressor.fit": {"tf": 1}, "ifri_mini_ml_lib.neural_networks.MLPRegressor.predict": {"tf": 1}, "ifri_mini_ml_lib.neural_networks.MLPRegressor.score": {"tf": 1}}, "df": 85}}}}, "t": {"docs": {}, "df": 0, "w": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "k": {"docs": {}, "df": 0, "s": {"docs": {"ifri_mini_ml_lib.neural_networks": {"tf": 1}, "ifri_mini_ml_lib.neural_networks.MLPClassifier": {"tf": 1}, "ifri_mini_ml_lib.neural_networks.MLPClassifier.__init__": {"tf": 1}, "ifri_mini_ml_lib.neural_networks.MLPClassifier.hidden_layer_sizes": {"tf": 1}, "ifri_mini_ml_lib.neural_networks.MLPClassifier.activation": {"tf": 1}, "ifri_mini_ml_lib.neural_networks.MLPClassifier.solver": {"tf": 1}, "ifri_mini_ml_lib.neural_networks.MLPClassifier.alpha": {"tf": 1}, "ifri_mini_ml_lib.neural_networks.MLPClassifier.batch_size": {"tf": 1}, "ifri_mini_ml_lib.neural_networks.MLPClassifier.learning_rate": {"tf": 1}, "ifri_mini_ml_lib.neural_networks.MLPClassifier.max_iter": {"tf": 1}, "ifri_mini_ml_lib.neural_networks.MLPClassifier.shuffle": {"tf": 1}, "ifri_mini_ml_lib.neural_networks.MLPClassifier.beta1": {"tf": 1}, "ifri_mini_ml_lib.neural_networks.MLPClassifier.beta2": {"tf": 1}, "ifri_mini_ml_lib.neural_networks.MLPClassifier.epsilon": {"tf": 1}, "ifri_mini_ml_lib.neural_networks.MLPClassifier.momentum": {"tf": 1}, "ifri_mini_ml_lib.neural_networks.MLPClassifier.tol": {"tf": 1}, "ifri_mini_ml_lib.neural_networks.MLPClassifier.early_stopping": {"tf": 1}, "ifri_mini_ml_lib.neural_networks.MLPClassifier.validation_fraction": {"tf": 1}, "ifri_mini_ml_lib.neural_networks.MLPClassifier.n_iter_no_change": {"tf": 1}, "ifri_mini_ml_lib.neural_networks.MLPClassifier.activation_functions": {"tf": 1}, "ifri_mini_ml_lib.neural_networks.MLPClassifier.activation_derivatives": {"tf": 1}, "ifri_mini_ml_lib.neural_networks.MLPClassifier.activation_func": {"tf": 1}, "ifri_mini_ml_lib.neural_networks.MLPClassifier.activation_derivative": {"tf": 1}, "ifri_mini_ml_lib.neural_networks.MLPClassifier.weights": {"tf": 1}, "ifri_mini_ml_lib.neural_networks.MLPClassifier.biases": {"tf": 1}, "ifri_mini_ml_lib.neural_networks.MLPClassifier.n_layers": {"tf": 1}, "ifri_mini_ml_lib.neural_networks.MLPClassifier.n_outputs": {"tf": 1}, "ifri_mini_ml_lib.neural_networks.MLPClassifier.velocity_weights": {"tf": 1}, "ifri_mini_ml_lib.neural_networks.MLPClassifier.velocity_biases": {"tf": 1}, "ifri_mini_ml_lib.neural_networks.MLPClassifier.m_weights": {"tf": 1}, "ifri_mini_ml_lib.neural_networks.MLPClassifier.m_biases": {"tf": 1}, "ifri_mini_ml_lib.neural_networks.MLPClassifier.v_weights": {"tf": 1}, "ifri_mini_ml_lib.neural_networks.MLPClassifier.v_biases": {"tf": 1}, "ifri_mini_ml_lib.neural_networks.MLPClassifier.t": {"tf": 1}, "ifri_mini_ml_lib.neural_networks.MLPClassifier.loss_history": {"tf": 1}, "ifri_mini_ml_lib.neural_networks.MLPClassifier.val_loss_history": {"tf": 1}, "ifri_mini_ml_lib.neural_networks.MLPClassifier.best_loss": {"tf": 1}, "ifri_mini_ml_lib.neural_networks.MLPClassifier.no_improvement_count": {"tf": 1}, "ifri_mini_ml_lib.neural_networks.MLPClassifier.trained": {"tf": 1}, "ifri_mini_ml_lib.neural_networks.MLPClassifier.classes_": {"tf": 1}, "ifri_mini_ml_lib.neural_networks.MLPClassifier.fit": {"tf": 1}, "ifri_mini_ml_lib.neural_networks.MLPClassifier.predict": {"tf": 1}, "ifri_mini_ml_lib.neural_networks.MLPClassifier.predict_proba": {"tf": 1}, "ifri_mini_ml_lib.neural_networks.MLPClassifier.score": {"tf": 1}, "ifri_mini_ml_lib.neural_networks.MLPRegressor": {"tf": 1}, "ifri_mini_ml_lib.neural_networks.MLPRegressor.__init__": {"tf": 1}, "ifri_mini_ml_lib.neural_networks.MLPRegressor.hidden_layer_sizes": {"tf": 1}, "ifri_mini_ml_lib.neural_networks.MLPRegressor.activation": {"tf": 1}, "ifri_mini_ml_lib.neural_networks.MLPRegressor.solver": {"tf": 1}, "ifri_mini_ml_lib.neural_networks.MLPRegressor.alpha": {"tf": 1}, "ifri_mini_ml_lib.neural_networks.MLPRegressor.batch_size": {"tf": 1}, "ifri_mini_ml_lib.neural_networks.MLPRegressor.learning_rate": {"tf": 1}, "ifri_mini_ml_lib.neural_networks.MLPRegressor.max_iter": {"tf": 1}, "ifri_mini_ml_lib.neural_networks.MLPRegressor.shuffle": {"tf": 1}, "ifri_mini_ml_lib.neural_networks.MLPRegressor.beta1": {"tf": 1}, "ifri_mini_ml_lib.neural_networks.MLPRegressor.beta2": {"tf": 1}, "ifri_mini_ml_lib.neural_networks.MLPRegressor.epsilon": {"tf": 1}, "ifri_mini_ml_lib.neural_networks.MLPRegressor.momentum": {"tf": 1}, "ifri_mini_ml_lib.neural_networks.MLPRegressor.tol": {"tf": 1}, "ifri_mini_ml_lib.neural_networks.MLPRegressor.early_stopping": {"tf": 1}, "ifri_mini_ml_lib.neural_networks.MLPRegressor.validation_fraction": {"tf": 1}, "ifri_mini_ml_lib.neural_networks.MLPRegressor.n_iter_no_change": {"tf": 1}, "ifri_mini_ml_lib.neural_networks.MLPRegressor.activation_functions": {"tf": 1}, "ifri_mini_ml_lib.neural_networks.MLPRegressor.activation_derivatives": {"tf": 1}, "ifri_mini_ml_lib.neural_networks.MLPRegressor.activation_func": {"tf": 1}, "ifri_mini_ml_lib.neural_networks.MLPRegressor.activation_derivative": {"tf": 1}, "ifri_mini_ml_lib.neural_networks.MLPRegressor.weights": {"tf": 1}, "ifri_mini_ml_lib.neural_networks.MLPRegressor.biases": {"tf": 1}, "ifri_mini_ml_lib.neural_networks.MLPRegressor.n_layers": {"tf": 1}, "ifri_mini_ml_lib.neural_networks.MLPRegressor.n_outputs": {"tf": 1}, "ifri_mini_ml_lib.neural_networks.MLPRegressor.velocity_weights": {"tf": 1}, "ifri_mini_ml_lib.neural_networks.MLPRegressor.velocity_biases": {"tf": 1}, "ifri_mini_ml_lib.neural_networks.MLPRegressor.m_weights": {"tf": 1}, "ifri_mini_ml_lib.neural_networks.MLPRegressor.m_biases": {"tf": 1}, "ifri_mini_ml_lib.neural_networks.MLPRegressor.v_weights": {"tf": 1}, "ifri_mini_ml_lib.neural_networks.MLPRegressor.v_biases": {"tf": 1}, "ifri_mini_ml_lib.neural_networks.MLPRegressor.t": {"tf": 1}, "ifri_mini_ml_lib.neural_networks.MLPRegressor.loss_history": {"tf": 1}, "ifri_mini_ml_lib.neural_networks.MLPRegressor.val_loss_history": {"tf": 1}, "ifri_mini_ml_lib.neural_networks.MLPRegressor.best_loss": {"tf": 1}, "ifri_mini_ml_lib.neural_networks.MLPRegressor.no_improvement_count": {"tf": 1}, "ifri_mini_ml_lib.neural_networks.MLPRegressor.trained": {"tf": 1}, "ifri_mini_ml_lib.neural_networks.MLPRegressor.fit": {"tf": 1}, "ifri_mini_ml_lib.neural_networks.MLPRegressor.predict": {"tf": 1}, "ifri_mini_ml_lib.neural_networks.MLPRegressor.score": {"tf": 1}}, "df": 85}}}}}}}, "o": {"docs": {"ifri_mini_ml_lib.neural_networks.MLPClassifier.n_iter_no_change": {"tf": 1}, "ifri_mini_ml_lib.neural_networks.MLPClassifier.no_improvement_count": {"tf": 1}, "ifri_mini_ml_lib.neural_networks.MLPRegressor.n_iter_no_change": {"tf": 1}, "ifri_mini_ml_lib.neural_networks.MLPRegressor.no_improvement_count": {"tf": 1}}, "df": 4, "r": {"docs": {}, "df": 0, "m": {"docs": {"ifri_mini_ml_lib.preprocessing.dimensionality_reduction.TSNE.min_grad_norm": {"tf": 1}}, "df": 1}}}}, "d": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "t": {"docs": {"ifri_mini_ml_lib.association_rules.FPGrowth.frequent_itemsets_dict": {"tf": 1}}, "df": 1}}, "f": {"docs": {}, "df": 0, "f": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "e": {"docs": {"ifri_mini_ml_lib.metrics.bias_evaluation.demographic_parity_difference": {"tf": 1}, "ifri_mini_ml_lib.metrics.bias_evaluation.equalized_odds_difference": {"tf": 1}}, "df": 2}}}}}}}}, "m": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "y": {"docs": {"ifri_mini_ml_lib.preprocessing.dimensionality_reduction": {"tf": 1}, "ifri_mini_ml_lib.preprocessing.dimensionality_reduction.PCA": {"tf": 1}, "ifri_mini_ml_lib.preprocessing.dimensionality_reduction.PCA.__init__": {"tf": 1}, "ifri_mini_ml_lib.preprocessing.dimensionality_reduction.PCA.n_component": {"tf": 1}, "ifri_mini_ml_lib.preprocessing.dimensionality_reduction.PCA.mean": {"tf": 1}, "ifri_mini_ml_lib.preprocessing.dimensionality_reduction.PCA.cov": {"tf": 1}, "ifri_mini_ml_lib.preprocessing.dimensionality_reduction.PCA.eigen_values": {"tf": 1}, "ifri_mini_ml_lib.preprocessing.dimensionality_reduction.PCA.eigen_vectors": {"tf": 1}, "ifri_mini_ml_lib.preprocessing.dimensionality_reduction.PCA.components": {"tf": 1}, "ifri_mini_ml_lib.preprocessing.dimensionality_reduction.PCA.fit": {"tf": 1}, "ifri_mini_ml_lib.preprocessing.dimensionality_reduction.PCA.transform": {"tf": 1}, "ifri_mini_ml_lib.preprocessing.dimensionality_reduction.PCA.fit_transform": {"tf": 1}, "ifri_mini_ml_lib.preprocessing.dimensionality_reduction.PCA.plot_cov_matrix": {"tf": 1}, "ifri_mini_ml_lib.preprocessing.dimensionality_reduction.PCA.explained_variances": {"tf": 1}, "ifri_mini_ml_lib.preprocessing.dimensionality_reduction.PCA.explained_variances_ratio": {"tf": 1}, "ifri_mini_ml_lib.preprocessing.dimensionality_reduction.PCA.plot_cumulative_explained_variance_ratio": {"tf": 1}, "ifri_mini_ml_lib.preprocessing.dimensionality_reduction.TSNE": {"tf": 1}, "ifri_mini_ml_lib.preprocessing.dimensionality_reduction.TSNE.__init__": {"tf": 1}, "ifri_mini_ml_lib.preprocessing.dimensionality_reduction.TSNE.n_components": {"tf": 1}, "ifri_mini_ml_lib.preprocessing.dimensionality_reduction.TSNE.perplexity": {"tf": 1}, "ifri_mini_ml_lib.preprocessing.dimensionality_reduction.TSNE.early_exaggeration": {"tf": 1}, "ifri_mini_ml_lib.preprocessing.dimensionality_reduction.TSNE.learning_rate": {"tf": 1}, "ifri_mini_ml_lib.preprocessing.dimensionality_reduction.TSNE.n_iter": {"tf": 1}, "ifri_mini_ml_lib.preprocessing.dimensionality_reduction.TSNE.init": {"tf": 1}, "ifri_mini_ml_lib.preprocessing.dimensionality_reduction.TSNE.min_grad_norm": {"tf": 1}, "ifri_mini_ml_lib.preprocessing.dimensionality_reduction.TSNE.random_state": {"tf": 1}, "ifri_mini_ml_lib.preprocessing.dimensionality_reduction.TSNE.verbose": {"tf": 1}, "ifri_mini_ml_lib.preprocessing.dimensionality_reduction.TSNE.embedding_": {"tf": 1}, "ifri_mini_ml_lib.preprocessing.dimensionality_reduction.TSNE.kl_divergence_": {"tf": 1}, "ifri_mini_ml_lib.preprocessing.dimensionality_reduction.TSNE.n_iter_": {"tf": 1}, "ifri_mini_ml_lib.preprocessing.dimensionality_reduction.TSNE.rng": {"tf": 1}, "ifri_mini_ml_lib.preprocessing.dimensionality_reduction.TSNE.fit": {"tf": 1}, "ifri_mini_ml_lib.preprocessing.dimensionality_reduction.TSNE.fit_transform": {"tf": 1}, "ifri_mini_ml_lib.preprocessing.dimensionality_reduction.TSNE.generate_test_data": {"tf": 1}, "ifri_mini_ml_lib.preprocessing.dimensionality_reduction.TSNE.plot_results": {"tf": 1}}, "df": 35}}}}}}}}}}}}, "v": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "e": {"docs": {"ifri_mini_ml_lib.preprocessing.dimensionality_reduction.TSNE.kl_divergence_": {"tf": 1}}, "df": 1}}}}}}}}}, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "a": {"docs": {"ifri_mini_ml_lib.preprocessing.dimensionality_reduction.TSNE.generate_test_data": {"tf": 1}}, "df": 1, "a": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"ifri_mini_ml_lib.association_rules.DataAdapter": {"tf": 1}, "ifri_mini_ml_lib.association_rules.DataAdapter.convert_to_transactions": {"tf": 1}, "ifri_mini_ml_lib.association_rules.DataAdapter.load_csv_to_transactions": {"tf": 1}}, "df": 3}}}}}}}, "f": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "e": {"docs": {"ifri_mini_ml_lib.preprocessing.preparation.StandardScaler.is_dataframe": {"tf": 1}}, "df": 1}}}}}, "s": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"ifri_mini_ml_lib.preprocessing.preparation.DataSplitter": {"tf": 1}, "ifri_mini_ml_lib.preprocessing.preparation.DataSplitter.__init__": {"tf": 1}, "ifri_mini_ml_lib.preprocessing.preparation.DataSplitter.seed": {"tf": 1}, "ifri_mini_ml_lib.preprocessing.preparation.DataSplitter.train_test_split": {"tf": 1}, "ifri_mini_ml_lib.preprocessing.preparation.DataSplitter.stratified_train_test_split": {"tf": 1}, "ifri_mini_ml_lib.preprocessing.preparation.DataSplitter.temporal_train_test_split": {"tf": 1}, "ifri_mini_ml_lib.preprocessing.preparation.DataSplitter.k_fold_split": {"tf": 1}}, "df": 7}}}}}}}}}}}, "e": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "e": {"docs": {"ifri_mini_ml_lib.classification.DecisionTree": {"tf": 1}, "ifri_mini_ml_lib.classification.DecisionTree.__init__": {"tf": 1}, "ifri_mini_ml_lib.classification.DecisionTree.max_depth": {"tf": 1}, "ifri_mini_ml_lib.classification.DecisionTree.min_samples_split": {"tf": 1}, "ifri_mini_ml_lib.classification.DecisionTree.min_samples_leaf": {"tf": 1}, "ifri_mini_ml_lib.classification.DecisionTree.min_impurity_decrease": {"tf": 1}, "ifri_mini_ml_lib.classification.DecisionTree.tree": {"tf": 1}, "ifri_mini_ml_lib.classification.DecisionTree.fit": {"tf": 1}, "ifri_mini_ml_lib.classification.DecisionTree.predict": {"tf": 1}}, "df": 9}}}}}}}}}, "r": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "e": {"docs": {"ifri_mini_ml_lib.classification.DecisionTree.min_impurity_decrease": {"tf": 1}}, "df": 1}}}}}}, "p": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "h": {"docs": {"ifri_mini_ml_lib.classification.DecisionTree.max_depth": {"tf": 1}}, "df": 1}}}, "n": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "m": {"docs": {"ifri_mini_ml_lib.clustering.HierarchicalClustering.plot_dendrogram": {"tf": 1}}, "df": 1}}}}}}}}, "m": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "h": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "c": {"docs": {"ifri_mini_ml_lib.metrics.bias_evaluation.demographic_parity_ratio": {"tf": 1}, "ifri_mini_ml_lib.metrics.bias_evaluation.demographic_parity_difference": {"tf": 1}}, "df": 2}}}}}}}}}, "r": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "v": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "v": {"docs": {}, "df": 0, "e": {"docs": {"ifri_mini_ml_lib.neural_networks.MLPClassifier.activation_derivative": {"tf": 1}, "ifri_mini_ml_lib.neural_networks.MLPRegressor.activation_derivative": {"tf": 1}}, "df": 2, "s": {"docs": {"ifri_mini_ml_lib.neural_networks.MLPClassifier.activation_derivatives": {"tf": 1}, "ifri_mini_ml_lib.neural_networks.MLPRegressor.activation_derivatives": {"tf": 1}}, "df": 2}}}}}}}}}, "f": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "t": {"docs": {"ifri_mini_ml_lib.preprocessing.preparation.MissingValueHandler.impute_default": {"tf": 1}}, "df": 1}}}}}, "g": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "e": {"docs": {"ifri_mini_ml_lib.regression.PolynomialRegression.degree": {"tf": 1}}, "df": 1}}}}}, "b": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "n": {"docs": {"ifri_mini_ml_lib.clustering.DBSCAN": {"tf": 1}, "ifri_mini_ml_lib.clustering.DBSCAN.__init__": {"tf": 1}, "ifri_mini_ml_lib.clustering.DBSCAN.eps": {"tf": 1}, "ifri_mini_ml_lib.clustering.DBSCAN.min_samples": {"tf": 1}, "ifri_mini_ml_lib.clustering.DBSCAN.labels": {"tf": 1}, "ifri_mini_ml_lib.clustering.DBSCAN.fit_predict": {"tf": 1}, "ifri_mini_ml_lib.clustering.DBSCAN.plot_clusters": {"tf": 1}}, "df": 7}}}}}}, "h": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"ifri_mini_ml_lib.association_rules.FPGrowth.header_table": {"tf": 1}}, "df": 1}}}}}, "i": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "y": {"docs": {"ifri_mini_ml_lib.classification.LogisticRegression.loss_history": {"tf": 1}, "ifri_mini_ml_lib.model_selection.BayesianSearchCV.history_": {"tf": 1}, "ifri_mini_ml_lib.neural_networks.MLPClassifier.loss_history": {"tf": 1}, "ifri_mini_ml_lib.neural_networks.MLPClassifier.val_loss_history": {"tf": 1}, "ifri_mini_ml_lib.neural_networks.MLPRegressor.loss_history": {"tf": 1}, "ifri_mini_ml_lib.neural_networks.MLPRegressor.val_loss_history": {"tf": 1}}, "df": 6}}}}}, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "h": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"ifri_mini_ml_lib.clustering.HierarchicalClustering": {"tf": 1}, "ifri_mini_ml_lib.clustering.HierarchicalClustering.__init__": {"tf": 1}, "ifri_mini_ml_lib.clustering.HierarchicalClustering.n_clusters": {"tf": 1}, "ifri_mini_ml_lib.clustering.HierarchicalClustering.linkage": {"tf": 1}, "ifri_mini_ml_lib.clustering.HierarchicalClustering.method": {"tf": 1}, "ifri_mini_ml_lib.clustering.HierarchicalClustering.labels": {"tf": 1}, "ifri_mini_ml_lib.clustering.HierarchicalClustering.linked_matrix": {"tf": 1}, "ifri_mini_ml_lib.clustering.HierarchicalClustering.fit_predict": {"tf": 1}, "ifri_mini_ml_lib.clustering.HierarchicalClustering.plot_dendrogram": {"tf": 1}, "ifri_mini_ml_lib.clustering.HierarchicalClustering.plot_clusters": {"tf": 1}}, "df": 10}}}}}}}}}}}}}}}}}}}}, "d": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {"ifri_mini_ml_lib.neural_networks.MLPClassifier.hidden_layer_sizes": {"tf": 1}, "ifri_mini_ml_lib.neural_networks.MLPRegressor.hidden_layer_sizes": {"tf": 1}}, "df": 2}}}}}}, "p": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "t": {"docs": {"ifri_mini_ml_lib.classification.DecisionTree.predict": {"tf": 1}, "ifri_mini_ml_lib.classification.KNN.predict": {"tf": 1}, "ifri_mini_ml_lib.classification.LogisticRegression.predict_proba": {"tf": 1}, "ifri_mini_ml_lib.classification.LogisticRegression.predict": {"tf": 1}, "ifri_mini_ml_lib.clustering.KMeans.predict": {"tf": 1}, "ifri_mini_ml_lib.clustering.KMeans.fit_predict": {"tf": 1}, "ifri_mini_ml_lib.clustering.DBSCAN.fit_predict": {"tf": 1}, "ifri_mini_ml_lib.clustering.HierarchicalClustering.fit_predict": {"tf": 1}, "ifri_mini_ml_lib.model_selection.BaggingClassifier.predict": {"tf": 1}, "ifri_mini_ml_lib.model_selection.BaggingRegressor.predict": {"tf": 1}, "ifri_mini_ml_lib.neural_networks.MLPClassifier.predict": {"tf": 1}, "ifri_mini_ml_lib.neural_networks.MLPClassifier.predict_proba": {"tf": 1}, "ifri_mini_ml_lib.neural_networks.MLPRegressor.predict": {"tf": 1}, "ifri_mini_ml_lib.regression.LinearRegression.predict": {"tf": 1}, "ifri_mini_ml_lib.regression.PolynomialRegression.predict": {"tf": 1}, "ifri_mini_ml_lib.regression.SVR.predict": {"tf": 1}}, "df": 16}}}}, "c": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"ifri_mini_ml_lib.metrics.evaluation_metrics.precision": {"tf": 1}}, "df": 1}}}}}}, "t": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "d": {"docs": {"ifri_mini_ml_lib.model_selection.BaggingClassifier.pretrained": {"tf": 1}, "ifri_mini_ml_lib.model_selection.BaggingRegressor.pretrained": {"tf": 1}}, "df": 2}}}}}}}, "p": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"ifri_mini_ml_lib.preprocessing": {"tf": 1}, "ifri_mini_ml_lib.preprocessing.dimensionality_reduction": {"tf": 1}, "ifri_mini_ml_lib.preprocessing.dimensionality_reduction.PCA": {"tf": 1}, "ifri_mini_ml_lib.preprocessing.dimensionality_reduction.PCA.__init__": {"tf": 1}, "ifri_mini_ml_lib.preprocessing.dimensionality_reduction.PCA.n_component": {"tf": 1}, "ifri_mini_ml_lib.preprocessing.dimensionality_reduction.PCA.mean": {"tf": 1}, "ifri_mini_ml_lib.preprocessing.dimensionality_reduction.PCA.cov": {"tf": 1}, "ifri_mini_ml_lib.preprocessing.dimensionality_reduction.PCA.eigen_values": {"tf": 1}, "ifri_mini_ml_lib.preprocessing.dimensionality_reduction.PCA.eigen_vectors": {"tf": 1}, "ifri_mini_ml_lib.preprocessing.dimensionality_reduction.PCA.components": {"tf": 1}, "ifri_mini_ml_lib.preprocessing.dimensionality_reduction.PCA.fit": {"tf": 1}, "ifri_mini_ml_lib.preprocessing.dimensionality_reduction.PCA.transform": {"tf": 1}, "ifri_mini_ml_lib.preprocessing.dimensionality_reduction.PCA.fit_transform": {"tf": 1}, "ifri_mini_ml_lib.preprocessing.dimensionality_reduction.PCA.plot_cov_matrix": {"tf": 1}, "ifri_mini_ml_lib.preprocessing.dimensionality_reduction.PCA.explained_variances": {"tf": 1}, "ifri_mini_ml_lib.preprocessing.dimensionality_reduction.PCA.explained_variances_ratio": {"tf": 1}, "ifri_mini_ml_lib.preprocessing.dimensionality_reduction.PCA.plot_cumulative_explained_variance_ratio": {"tf": 1}, "ifri_mini_ml_lib.preprocessing.dimensionality_reduction.TSNE": {"tf": 1}, "ifri_mini_ml_lib.preprocessing.dimensionality_reduction.TSNE.__init__": {"tf": 1}, "ifri_mini_ml_lib.preprocessing.dimensionality_reduction.TSNE.n_components": {"tf": 1}, "ifri_mini_ml_lib.preprocessing.dimensionality_reduction.TSNE.perplexity": {"tf": 1}, "ifri_mini_ml_lib.preprocessing.dimensionality_reduction.TSNE.early_exaggeration": {"tf": 1}, "ifri_mini_ml_lib.preprocessing.dimensionality_reduction.TSNE.learning_rate": {"tf": 1}, "ifri_mini_ml_lib.preprocessing.dimensionality_reduction.TSNE.n_iter": {"tf": 1}, "ifri_mini_ml_lib.preprocessing.dimensionality_reduction.TSNE.init": {"tf": 1}, "ifri_mini_ml_lib.preprocessing.dimensionality_reduction.TSNE.min_grad_norm": {"tf": 1}, "ifri_mini_ml_lib.preprocessing.dimensionality_reduction.TSNE.random_state": {"tf": 1}, "ifri_mini_ml_lib.preprocessing.dimensionality_reduction.TSNE.verbose": {"tf": 1}, "ifri_mini_ml_lib.preprocessing.dimensionality_reduction.TSNE.embedding_": {"tf": 1}, "ifri_mini_ml_lib.preprocessing.dimensionality_reduction.TSNE.kl_divergence_": {"tf": 1}, "ifri_mini_ml_lib.preprocessing.dimensionality_reduction.TSNE.n_iter_": {"tf": 1}, "ifri_mini_ml_lib.preprocessing.dimensionality_reduction.TSNE.rng": {"tf": 1}, "ifri_mini_ml_lib.preprocessing.dimensionality_reduction.TSNE.fit": {"tf": 1}, "ifri_mini_ml_lib.preprocessing.dimensionality_reduction.TSNE.fit_transform": {"tf": 1}, "ifri_mini_ml_lib.preprocessing.dimensionality_reduction.TSNE.generate_test_data": {"tf": 1}, "ifri_mini_ml_lib.preprocessing.dimensionality_reduction.TSNE.plot_results": {"tf": 1}, "ifri_mini_ml_lib.preprocessing.preparation": {"tf": 1}, "ifri_mini_ml_lib.preprocessing.preparation.MinMaxScaler": {"tf": 1}, "ifri_mini_ml_lib.preprocessing.preparation.MinMaxScaler.__init__": {"tf": 1}, "ifri_mini_ml_lib.preprocessing.preparation.MinMaxScaler.min_": {"tf": 1}, "ifri_mini_ml_lib.preprocessing.preparation.MinMaxScaler.max_": {"tf": 1}, "ifri_mini_ml_lib.preprocessing.preparation.MinMaxScaler.columns": {"tf": 1}, "ifri_mini_ml_lib.preprocessing.preparation.MinMaxScaler.fit": {"tf": 1}, "ifri_mini_ml_lib.preprocessing.preparation.MinMaxScaler.transform": {"tf": 1}, "ifri_mini_ml_lib.preprocessing.preparation.MinMaxScaler.fit_transform": {"tf": 1}, "ifri_mini_ml_lib.preprocessing.preparation.MinMaxScaler.inverse_transform": {"tf": 1}, "ifri_mini_ml_lib.preprocessing.preparation.MissingValueHandler": {"tf": 1}, "ifri_mini_ml_lib.preprocessing.preparation.MissingValueHandler.remove_missing": {"tf": 1}, "ifri_mini_ml_lib.preprocessing.preparation.MissingValueHandler.impute_statistical": {"tf": 1}, "ifri_mini_ml_lib.preprocessing.preparation.MissingValueHandler.impute_default": {"tf": 1}, "ifri_mini_ml_lib.preprocessing.preparation.MissingValueHandler.impute_knn": {"tf": 1}, "ifri_mini_ml_lib.preprocessing.preparation.MissingValueHandler.impute_regression": {"tf": 1}, "ifri_mini_ml_lib.preprocessing.preparation.StandardScaler": {"tf": 1}, "ifri_mini_ml_lib.preprocessing.preparation.StandardScaler.__init__": {"tf": 1}, "ifri_mini_ml_lib.preprocessing.preparation.StandardScaler.mean_": {"tf": 1}, "ifri_mini_ml_lib.preprocessing.preparation.StandardScaler.std_": {"tf": 1}, "ifri_mini_ml_lib.preprocessing.preparation.StandardScaler.is_dataframe": {"tf": 1}, "ifri_mini_ml_lib.preprocessing.preparation.StandardScaler.columns": {"tf": 1}, "ifri_mini_ml_lib.preprocessing.preparation.StandardScaler.fit": {"tf": 1}, "ifri_mini_ml_lib.preprocessing.preparation.StandardScaler.transform": {"tf": 1}, "ifri_mini_ml_lib.preprocessing.preparation.StandardScaler.fit_transform": {"tf": 1}, "ifri_mini_ml_lib.preprocessing.preparation.StandardScaler.inverse_transform": {"tf": 1}, "ifri_mini_ml_lib.preprocessing.preparation.CategoricalEncoder": {"tf": 1}, "ifri_mini_ml_lib.preprocessing.preparation.CategoricalEncoder.__init__": {"tf": 1}, "ifri_mini_ml_lib.preprocessing.preparation.CategoricalEncoder.encoding_type": {"tf": 1}, "ifri_mini_ml_lib.preprocessing.preparation.CategoricalEncoder.target_column": {"tf": 1}, "ifri_mini_ml_lib.preprocessing.preparation.CategoricalEncoder.mapping": {"tf": 1}, "ifri_mini_ml_lib.preprocessing.preparation.CategoricalEncoder.fit": {"tf": 1}, "ifri_mini_ml_lib.preprocessing.preparation.CategoricalEncoder.transform": {"tf": 1}, "ifri_mini_ml_lib.preprocessing.preparation.CategoricalEncoder.fit_transform": {"tf": 1}, "ifri_mini_ml_lib.preprocessing.preparation.DataSplitter": {"tf": 1}, "ifri_mini_ml_lib.preprocessing.preparation.DataSplitter.__init__": {"tf": 1}, "ifri_mini_ml_lib.preprocessing.preparation.DataSplitter.seed": {"tf": 1}, "ifri_mini_ml_lib.preprocessing.preparation.DataSplitter.train_test_split": {"tf": 1}, "ifri_mini_ml_lib.preprocessing.preparation.DataSplitter.stratified_train_test_split": {"tf": 1}, "ifri_mini_ml_lib.preprocessing.preparation.DataSplitter.temporal_train_test_split": {"tf": 1}, "ifri_mini_ml_lib.preprocessing.preparation.DataSplitter.k_fold_split": {"tf": 1}}, "df": 77}}}}}}}}}, "a": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"ifri_mini_ml_lib.preprocessing.preparation": {"tf": 1}, "ifri_mini_ml_lib.preprocessing.preparation.MinMaxScaler": {"tf": 1}, "ifri_mini_ml_lib.preprocessing.preparation.MinMaxScaler.__init__": {"tf": 1}, "ifri_mini_ml_lib.preprocessing.preparation.MinMaxScaler.min_": {"tf": 1}, "ifri_mini_ml_lib.preprocessing.preparation.MinMaxScaler.max_": {"tf": 1}, "ifri_mini_ml_lib.preprocessing.preparation.MinMaxScaler.columns": {"tf": 1}, "ifri_mini_ml_lib.preprocessing.preparation.MinMaxScaler.fit": {"tf": 1}, "ifri_mini_ml_lib.preprocessing.preparation.MinMaxScaler.transform": {"tf": 1}, "ifri_mini_ml_lib.preprocessing.preparation.MinMaxScaler.fit_transform": {"tf": 1}, "ifri_mini_ml_lib.preprocessing.preparation.MinMaxScaler.inverse_transform": {"tf": 1}, "ifri_mini_ml_lib.preprocessing.preparation.MissingValueHandler": {"tf": 1}, "ifri_mini_ml_lib.preprocessing.preparation.MissingValueHandler.remove_missing": {"tf": 1}, "ifri_mini_ml_lib.preprocessing.preparation.MissingValueHandler.impute_statistical": {"tf": 1}, "ifri_mini_ml_lib.preprocessing.preparation.MissingValueHandler.impute_default": {"tf": 1}, "ifri_mini_ml_lib.preprocessing.preparation.MissingValueHandler.impute_knn": {"tf": 1}, "ifri_mini_ml_lib.preprocessing.preparation.MissingValueHandler.impute_regression": {"tf": 1}, "ifri_mini_ml_lib.preprocessing.preparation.StandardScaler": {"tf": 1}, "ifri_mini_ml_lib.preprocessing.preparation.StandardScaler.__init__": {"tf": 1}, "ifri_mini_ml_lib.preprocessing.preparation.StandardScaler.mean_": {"tf": 1}, "ifri_mini_ml_lib.preprocessing.preparation.StandardScaler.std_": {"tf": 1}, "ifri_mini_ml_lib.preprocessing.preparation.StandardScaler.is_dataframe": {"tf": 1}, "ifri_mini_ml_lib.preprocessing.preparation.StandardScaler.columns": {"tf": 1}, "ifri_mini_ml_lib.preprocessing.preparation.StandardScaler.fit": {"tf": 1}, "ifri_mini_ml_lib.preprocessing.preparation.StandardScaler.transform": {"tf": 1}, "ifri_mini_ml_lib.preprocessing.preparation.StandardScaler.fit_transform": {"tf": 1}, "ifri_mini_ml_lib.preprocessing.preparation.StandardScaler.inverse_transform": {"tf": 1}, "ifri_mini_ml_lib.preprocessing.preparation.CategoricalEncoder": {"tf": 1}, "ifri_mini_ml_lib.preprocessing.preparation.CategoricalEncoder.__init__": {"tf": 1}, "ifri_mini_ml_lib.preprocessing.preparation.CategoricalEncoder.encoding_type": {"tf": 1}, "ifri_mini_ml_lib.preprocessing.preparation.CategoricalEncoder.target_column": {"tf": 1}, "ifri_mini_ml_lib.preprocessing.preparation.CategoricalEncoder.mapping": {"tf": 1}, "ifri_mini_ml_lib.preprocessing.preparation.CategoricalEncoder.fit": {"tf": 1}, "ifri_mini_ml_lib.preprocessing.preparation.CategoricalEncoder.transform": {"tf": 1}, "ifri_mini_ml_lib.preprocessing.preparation.CategoricalEncoder.fit_transform": {"tf": 1}, "ifri_mini_ml_lib.preprocessing.preparation.DataSplitter": {"tf": 1}, "ifri_mini_ml_lib.preprocessing.preparation.DataSplitter.__init__": {"tf": 1}, "ifri_mini_ml_lib.preprocessing.preparation.DataSplitter.seed": {"tf": 1}, "ifri_mini_ml_lib.preprocessing.preparation.DataSplitter.train_test_split": {"tf": 1}, "ifri_mini_ml_lib.preprocessing.preparation.DataSplitter.stratified_train_test_split": {"tf": 1}, "ifri_mini_ml_lib.preprocessing.preparation.DataSplitter.temporal_train_test_split": {"tf": 1}, "ifri_mini_ml_lib.preprocessing.preparation.DataSplitter.k_fold_split": {"tf": 1}}, "df": 41}}}}}}}}}, "o": {"docs": {}, "df": 0, "b": {"docs": {}, "df": 0, "a": {"docs": {"ifri_mini_ml_lib.classification.LogisticRegression.predict_proba": {"tf": 1}, "ifri_mini_ml_lib.neural_networks.MLPClassifier.predict_proba": {"tf": 1}}, "df": 2}}}}, "l": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "t": {"docs": {"ifri_mini_ml_lib.clustering.KMeans.plot_clusters": {"tf": 1}, "ifri_mini_ml_lib.clustering.DBSCAN.plot_clusters": {"tf": 1}, "ifri_mini_ml_lib.clustering.HierarchicalClustering.plot_dendrogram": {"tf": 1}, "ifri_mini_ml_lib.clustering.HierarchicalClustering.plot_clusters": {"tf": 1}, "ifri_mini_ml_lib.preprocessing.dimensionality_reduction.PCA.plot_cov_matrix": {"tf": 1}, "ifri_mini_ml_lib.preprocessing.dimensionality_reduction.PCA.plot_cumulative_explained_variance_ratio": {"tf": 1}, "ifri_mini_ml_lib.preprocessing.dimensionality_reduction.TSNE.plot_results": {"tf": 1}}, "df": 7}}}, "e": {"docs": {}, "df": 0, "r": {"docs": {"ifri_mini_ml_lib.metrics.bias_evaluation.selection_rate_per_group": {"tf": 1}}, "df": 1, "p": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "x": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "y": {"docs": {"ifri_mini_ml_lib.preprocessing.dimensionality_reduction.TSNE.perplexity": {"tf": 1}}, "df": 1}}}}}}}}}, "a": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "y": {"docs": {"ifri_mini_ml_lib.metrics.bias_evaluation.demographic_parity_ratio": {"tf": 1}, "ifri_mini_ml_lib.metrics.bias_evaluation.demographic_parity_difference": {"tf": 1}}, "df": 2}}}, "a": {"docs": {}, "df": 0, "m": {"docs": {"ifri_mini_ml_lib.model_selection.BayesianSearchCV.param_bounds": {"tf": 1}, "ifri_mini_ml_lib.model_selection.BayesianSearchCV.param_types": {"tf": 1}, "ifri_mini_ml_lib.model_selection.GridSearchCV.param_grid": {"tf": 1}, "ifri_mini_ml_lib.model_selection.RandomSearchCV.param_grid": {"tf": 1}}, "df": 4, "s": {"docs": {"ifri_mini_ml_lib.model_selection.BayesianSearchCV.get_best_params": {"tf": 1}, "ifri_mini_ml_lib.model_selection.GridSearchCV.best_params_": {"tf": 1}, "ifri_mini_ml_lib.model_selection.RandomSearchCV.best_params_": {"tf": 1}, "ifri_mini_ml_lib.regression.SVR.set_params": {"tf": 1}}, "df": 4}}}}}, "o": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "s": {"docs": {"ifri_mini_ml_lib.model_selection.BayesianSearchCV.init_points": {"tf": 1}}, "df": 1}}}}, "l": {"docs": {}, "df": 0, "y": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "l": {"docs": {"ifri_mini_ml_lib.regression.SVR.polynomial_kernel": {"tf": 1}}, "df": 1, "r": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"ifri_mini_ml_lib.regression.PolynomialRegression": {"tf": 1}, "ifri_mini_ml_lib.regression.PolynomialRegression.__init__": {"tf": 1}, "ifri_mini_ml_lib.regression.PolynomialRegression.degree": {"tf": 1}, "ifri_mini_ml_lib.regression.PolynomialRegression.method": {"tf": 1}, "ifri_mini_ml_lib.regression.PolynomialRegression.learning_rate": {"tf": 1}, "ifri_mini_ml_lib.regression.PolynomialRegression.epochs": {"tf": 1}, "ifri_mini_ml_lib.regression.PolynomialRegression.w": {"tf": 1}, "ifri_mini_ml_lib.regression.PolynomialRegression.b": {"tf": 1}, "ifri_mini_ml_lib.regression.PolynomialRegression.fit": {"tf": 1}, "ifri_mini_ml_lib.regression.PolynomialRegression.predict": {"tf": 1}}, "df": 10}}}}}}}}}}}}}}}}}}}, "c": {"docs": {}, "df": 0, "a": {"docs": {"ifri_mini_ml_lib.preprocessing.dimensionality_reduction.PCA": {"tf": 1}, "ifri_mini_ml_lib.preprocessing.dimensionality_reduction.PCA.__init__": {"tf": 1}, "ifri_mini_ml_lib.preprocessing.dimensionality_reduction.PCA.n_component": {"tf": 1}, "ifri_mini_ml_lib.preprocessing.dimensionality_reduction.PCA.mean": {"tf": 1}, "ifri_mini_ml_lib.preprocessing.dimensionality_reduction.PCA.cov": {"tf": 1}, "ifri_mini_ml_lib.preprocessing.dimensionality_reduction.PCA.eigen_values": {"tf": 1}, "ifri_mini_ml_lib.preprocessing.dimensionality_reduction.PCA.eigen_vectors": {"tf": 1}, "ifri_mini_ml_lib.preprocessing.dimensionality_reduction.PCA.components": {"tf": 1}, "ifri_mini_ml_lib.preprocessing.dimensionality_reduction.PCA.fit": {"tf": 1}, "ifri_mini_ml_lib.preprocessing.dimensionality_reduction.PCA.transform": {"tf": 1}, "ifri_mini_ml_lib.preprocessing.dimensionality_reduction.PCA.fit_transform": {"tf": 1}, "ifri_mini_ml_lib.preprocessing.dimensionality_reduction.PCA.plot_cov_matrix": {"tf": 1}, "ifri_mini_ml_lib.preprocessing.dimensionality_reduction.PCA.explained_variances": {"tf": 1}, "ifri_mini_ml_lib.preprocessing.dimensionality_reduction.PCA.explained_variances_ratio": {"tf": 1}, "ifri_mini_ml_lib.preprocessing.dimensionality_reduction.PCA.plot_cumulative_explained_variance_ratio": {"tf": 1}}, "df": 15}}}, "k": {"docs": {"ifri_mini_ml_lib.classification.KNN.k": {"tf": 1}, "ifri_mini_ml_lib.model_selection.GridSearchCV.k": {"tf": 1}, "ifri_mini_ml_lib.model_selection.RandomSearchCV.k": {"tf": 1}, "ifri_mini_ml_lib.preprocessing.preparation.DataSplitter.k_fold_split": {"tf": 1}}, "df": 4, "n": {"docs": {}, "df": 0, "n": {"docs": {"ifri_mini_ml_lib.classification.KNN": {"tf": 1}, "ifri_mini_ml_lib.classification.KNN.__init__": {"tf": 1}, "ifri_mini_ml_lib.classification.KNN.k": {"tf": 1}, "ifri_mini_ml_lib.classification.KNN.task": {"tf": 1}, "ifri_mini_ml_lib.classification.KNN.fit": {"tf": 1}, "ifri_mini_ml_lib.classification.KNN.predict": {"tf": 1}, "ifri_mini_ml_lib.preprocessing.preparation.MissingValueHandler.impute_knn": {"tf": 1}}, "df": 7}}, "m": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "s": {"docs": {"ifri_mini_ml_lib.clustering.KMeans": {"tf": 1}, "ifri_mini_ml_lib.clustering.KMeans.__init__": {"tf": 1}, "ifri_mini_ml_lib.clustering.KMeans.n_clusters": {"tf": 1}, "ifri_mini_ml_lib.clustering.KMeans.max_iter": {"tf": 1}, "ifri_mini_ml_lib.clustering.KMeans.tol": {"tf": 1}, "ifri_mini_ml_lib.clustering.KMeans.init": {"tf": 1}, "ifri_mini_ml_lib.clustering.KMeans.random_state": {"tf": 1}, "ifri_mini_ml_lib.clustering.KMeans.centroids": {"tf": 1}, "ifri_mini_ml_lib.clustering.KMeans.labels": {"tf": 1}, "ifri_mini_ml_lib.clustering.KMeans.fit": {"tf": 1}, "ifri_mini_ml_lib.clustering.KMeans.predict": {"tf": 1}, "ifri_mini_ml_lib.clustering.KMeans.fit_predict": {"tf": 1}, "ifri_mini_ml_lib.clustering.KMeans.plot_clusters": {"tf": 1}}, "df": 13}}}}}, "l": {"docs": {"ifri_mini_ml_lib.preprocessing.dimensionality_reduction.TSNE.kl_divergence_": {"tf": 1}}, "df": 1}, "e": {"docs": {}, "df": 0, "r": {"docs": {"ifri_mini_ml_lib.regression.SVR.ker": {"tf": 1}}, "df": 1, "l": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "t": {"docs": {"ifri_mini_ml_lib.regression.SVR.kerlist": {"tf": 1}}, "df": 1}}}}, "n": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "l": {"docs": {"ifri_mini_ml_lib.regression.SVR.linear_kernel": {"tf": 1}, "ifri_mini_ml_lib.regression.SVR.polynomial_kernel": {"tf": 1}, "ifri_mini_ml_lib.regression.SVR.rbf_kernel": {"tf": 1}, "ifri_mini_ml_lib.regression.SVR.sigmoid_kernel": {"tf": 1}, "ifri_mini_ml_lib.regression.SVR.get_kernel": {"tf": 1}}, "df": 5}}}}}}, "w": {"docs": {"ifri_mini_ml_lib.regression.LinearRegression.w": {"tf": 1}, "ifri_mini_ml_lib.regression.PolynomialRegression.w": {"tf": 1}}, "df": 2, "e": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "h": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "s": {"docs": {"ifri_mini_ml_lib.classification.LogisticRegression.weights": {"tf": 1}, "ifri_mini_ml_lib.neural_networks.MLPClassifier.weights": {"tf": 1}, "ifri_mini_ml_lib.neural_networks.MLPClassifier.velocity_weights": {"tf": 1}, "ifri_mini_ml_lib.neural_networks.MLPClassifier.m_weights": {"tf": 1}, "ifri_mini_ml_lib.neural_networks.MLPClassifier.v_weights": {"tf": 1}, "ifri_mini_ml_lib.neural_networks.MLPRegressor.weights": {"tf": 1}, "ifri_mini_ml_lib.neural_networks.MLPRegressor.velocity_weights": {"tf": 1}, "ifri_mini_ml_lib.neural_networks.MLPRegressor.m_weights": {"tf": 1}, "ifri_mini_ml_lib.neural_networks.MLPRegressor.v_weights": {"tf": 1}}, "df": 9}}}}}}}, "b": {"docs": {"ifri_mini_ml_lib.regression.LinearRegression.b": {"tf": 1}, "ifri_mini_ml_lib.regression.PolynomialRegression.b": {"tf": 1}}, "df": 2, "i": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "s": {"docs": {"ifri_mini_ml_lib.classification.LogisticRegression.bias": {"tf": 1}, "ifri_mini_ml_lib.metrics.bias_evaluation": {"tf": 1}, "ifri_mini_ml_lib.metrics.bias_evaluation.selection_rate": {"tf": 1}, "ifri_mini_ml_lib.metrics.bias_evaluation.selection_rate_per_group": {"tf": 1}, "ifri_mini_ml_lib.metrics.bias_evaluation.demographic_parity_ratio": {"tf": 1}, "ifri_mini_ml_lib.metrics.bias_evaluation.demographic_parity_difference": {"tf": 1}, "ifri_mini_ml_lib.metrics.bias_evaluation.tpr_fpr_by_group": {"tf": 1}, "ifri_mini_ml_lib.metrics.bias_evaluation.equalized_odds_ratio": {"tf": 1}, "ifri_mini_ml_lib.metrics.bias_evaluation.equalized_odds_difference": {"tf": 1}}, "df": 9, "e": {"docs": {}, "df": 0, "s": {"docs": {"ifri_mini_ml_lib.neural_networks.MLPClassifier.biases": {"tf": 1}, "ifri_mini_ml_lib.neural_networks.MLPClassifier.velocity_biases": {"tf": 1}, "ifri_mini_ml_lib.neural_networks.MLPClassifier.m_biases": {"tf": 1}, "ifri_mini_ml_lib.neural_networks.MLPClassifier.v_biases": {"tf": 1}, "ifri_mini_ml_lib.neural_networks.MLPRegressor.biases": {"tf": 1}, "ifri_mini_ml_lib.neural_networks.MLPRegressor.velocity_biases": {"tf": 1}, "ifri_mini_ml_lib.neural_networks.MLPRegressor.m_biases": {"tf": 1}, "ifri_mini_ml_lib.neural_networks.MLPRegressor.v_biases": {"tf": 1}}, "df": 8}}}}}, "y": {"docs": {"ifri_mini_ml_lib.metrics.bias_evaluation.tpr_fpr_by_group": {"tf": 1}}, "df": 1}, "a": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "f": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"ifri_mini_ml_lib.model_selection.BaggingClassifier": {"tf": 1}, "ifri_mini_ml_lib.model_selection.BaggingClassifier.__init__": {"tf": 1}, "ifri_mini_ml_lib.model_selection.BaggingClassifier.base_model": {"tf": 1}, "ifri_mini_ml_lib.model_selection.BaggingClassifier.n_estimators": {"tf": 1}, "ifri_mini_ml_lib.model_selection.BaggingClassifier.random_state": {"tf": 1}, "ifri_mini_ml_lib.model_selection.BaggingClassifier.models": {"tf": 1}, "ifri_mini_ml_lib.model_selection.BaggingClassifier.pretrained": {"tf": 1}, "ifri_mini_ml_lib.model_selection.BaggingClassifier.fit": {"tf": 1}, "ifri_mini_ml_lib.model_selection.BaggingClassifier.predict": {"tf": 1}}, "df": 9}}}}}}}}}}, "r": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {"ifri_mini_ml_lib.model_selection.BaggingRegressor": {"tf": 1}, "ifri_mini_ml_lib.model_selection.BaggingRegressor.__init__": {"tf": 1}, "ifri_mini_ml_lib.model_selection.BaggingRegressor.base_model": {"tf": 1}, "ifri_mini_ml_lib.model_selection.BaggingRegressor.n_estimators": {"tf": 1}, "ifri_mini_ml_lib.model_selection.BaggingRegressor.random_state": {"tf": 1}, "ifri_mini_ml_lib.model_selection.BaggingRegressor.models": {"tf": 1}, "ifri_mini_ml_lib.model_selection.BaggingRegressor.pretrained": {"tf": 1}, "ifri_mini_ml_lib.model_selection.BaggingRegressor.fit": {"tf": 1}, "ifri_mini_ml_lib.model_selection.BaggingRegressor.predict": {"tf": 1}}, "df": 9}}}}}}}}}}}}}}, "s": {"docs": {}, "df": 0, "e": {"docs": {"ifri_mini_ml_lib.model_selection.BaggingClassifier.base_model": {"tf": 1}, "ifri_mini_ml_lib.model_selection.BaggingRegressor.base_model": {"tf": 1}}, "df": 2}}, "y": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "h": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "v": {"docs": {"ifri_mini_ml_lib.model_selection.BayesianSearchCV": {"tf": 1}, "ifri_mini_ml_lib.model_selection.BayesianSearchCV.__init__": {"tf": 1}, "ifri_mini_ml_lib.model_selection.BayesianSearchCV.estimator": {"tf": 1}, "ifri_mini_ml_lib.model_selection.BayesianSearchCV.param_bounds": {"tf": 1}, "ifri_mini_ml_lib.model_selection.BayesianSearchCV.n_iter": {"tf": 1}, "ifri_mini_ml_lib.model_selection.BayesianSearchCV.init_points": {"tf": 1}, "ifri_mini_ml_lib.model_selection.BayesianSearchCV.cv": {"tf": 1}, "ifri_mini_ml_lib.model_selection.BayesianSearchCV.scoring": {"tf": 1}, "ifri_mini_ml_lib.model_selection.BayesianSearchCV.stratified": {"tf": 1}, "ifri_mini_ml_lib.model_selection.BayesianSearchCV.param_types": {"tf": 1}, "ifri_mini_ml_lib.model_selection.BayesianSearchCV.random_state": {"tf": 1}, "ifri_mini_ml_lib.model_selection.BayesianSearchCV.X_obs": {"tf": 1}, "ifri_mini_ml_lib.model_selection.BayesianSearchCV.y_obs": {"tf": 1}, "ifri_mini_ml_lib.model_selection.BayesianSearchCV.gp": {"tf": 1}, "ifri_mini_ml_lib.model_selection.BayesianSearchCV.maximize": {"tf": 1}, "ifri_mini_ml_lib.model_selection.BayesianSearchCV.history_": {"tf": 1}, "ifri_mini_ml_lib.model_selection.BayesianSearchCV.fit": {"tf": 1}, "ifri_mini_ml_lib.model_selection.BayesianSearchCV.get_best_params": {"tf": 1}}, "df": 18}}}}}}}}}}}}}}, "t": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "h": {"docs": {"ifri_mini_ml_lib.neural_networks.MLPClassifier.batch_size": {"tf": 1}, "ifri_mini_ml_lib.neural_networks.MLPRegressor.batch_size": {"tf": 1}}, "df": 2}}}}, "o": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "s": {"docs": {"ifri_mini_ml_lib.model_selection.BayesianSearchCV.param_bounds": {"tf": 1}}, "df": 1}}}}}, "e": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "t": {"docs": {"ifri_mini_ml_lib.model_selection.BayesianSearchCV.get_best_params": {"tf": 1}, "ifri_mini_ml_lib.model_selection.GridSearchCV.best_params_": {"tf": 1}, "ifri_mini_ml_lib.model_selection.GridSearchCV.best_score_": {"tf": 1}, "ifri_mini_ml_lib.model_selection.GridSearchCV.best_estimator_": {"tf": 1}, "ifri_mini_ml_lib.model_selection.RandomSearchCV.best_params_": {"tf": 1}, "ifri_mini_ml_lib.model_selection.RandomSearchCV.best_score_": {"tf": 1}, "ifri_mini_ml_lib.model_selection.RandomSearchCV.best_estimator_": {"tf": 1}, "ifri_mini_ml_lib.neural_networks.MLPClassifier.best_loss": {"tf": 1}, "ifri_mini_ml_lib.neural_networks.MLPRegressor.best_loss": {"tf": 1}}, "df": 9}}, "t": {"docs": {}, "df": 0, "a": {"1": {"docs": {"ifri_mini_ml_lib.neural_networks.MLPClassifier.beta1": {"tf": 1}, "ifri_mini_ml_lib.neural_networks.MLPRegressor.beta1": {"tf": 1}}, "df": 2}, "2": {"docs": {"ifri_mini_ml_lib.neural_networks.MLPClassifier.beta2": {"tf": 1}, "ifri_mini_ml_lib.neural_networks.MLPRegressor.beta2": {"tf": 1}}, "df": 2}, "docs": {}, "df": 0}}}}, "o": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "s": {"docs": {"ifri_mini_ml_lib.metrics.bias_evaluation.equalized_odds_ratio": {"tf": 1}, "ifri_mini_ml_lib.metrics.bias_evaluation.equalized_odds_difference": {"tf": 1}}, "df": 2}}}, "b": {"docs": {}, "df": 0, "s": {"docs": {"ifri_mini_ml_lib.model_selection.BayesianSearchCV.X_obs": {"tf": 1}, "ifri_mini_ml_lib.model_selection.BayesianSearchCV.y_obs": {"tf": 1}}, "df": 2}}, "u": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "s": {"docs": {"ifri_mini_ml_lib.neural_networks.MLPClassifier.n_outputs": {"tf": 1}, "ifri_mini_ml_lib.neural_networks.MLPRegressor.n_outputs": {"tf": 1}}, "df": 2}}}}}}}, "x": {"docs": {"ifri_mini_ml_lib.model_selection.BayesianSearchCV.X_obs": {"tf": 1}, "ifri_mini_ml_lib.regression.SVR.train_X": {"tf": 1}, "ifri_mini_ml_lib.regression.SVR.test_X": {"tf": 1}}, "df": 3}, "y": {"docs": {"ifri_mini_ml_lib.model_selection.BayesianSearchCV.y_obs": {"tf": 1}, "ifri_mini_ml_lib.regression.SVR.train_y": {"tf": 1}, "ifri_mini_ml_lib.regression.SVR.test_y": {"tf": 1}}, "df": 3}, "v": {"docs": {"ifri_mini_ml_lib.neural_networks.MLPClassifier.v_weights": {"tf": 1}, "ifri_mini_ml_lib.neural_networks.MLPClassifier.v_biases": {"tf": 1}, "ifri_mini_ml_lib.neural_networks.MLPRegressor.v_weights": {"tf": 1}, "ifri_mini_ml_lib.neural_networks.MLPRegressor.v_biases": {"tf": 1}}, "df": 4, "a": {"docs": {}, "df": 0, "l": {"docs": {"ifri_mini_ml_lib.neural_networks.MLPClassifier.val_loss_history": {"tf": 1}, "ifri_mini_ml_lib.neural_networks.MLPRegressor.val_loss_history": {"tf": 1}}, "df": 2, "i": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"ifri_mini_ml_lib.neural_networks.MLPClassifier.validation_fraction": {"tf": 1}, "ifri_mini_ml_lib.neural_networks.MLPRegressor.validation_fraction": {"tf": 1}}, "df": 2}}}}}}}, "u": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {"ifri_mini_ml_lib.preprocessing.dimensionality_reduction.PCA.eigen_values": {"tf": 1}}, "df": 1}}}}, "r": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "e": {"docs": {"ifri_mini_ml_lib.preprocessing.dimensionality_reduction.PCA.plot_cumulative_explained_variance_ratio": {"tf": 1}}, "df": 1, "s": {"docs": {"ifri_mini_ml_lib.preprocessing.dimensionality_reduction.PCA.explained_variances": {"tf": 1}, "ifri_mini_ml_lib.preprocessing.dimensionality_reduction.PCA.explained_variances_ratio": {"tf": 1}}, "df": 2}}}}}}}}, "e": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "y": {"docs": {"ifri_mini_ml_lib.neural_networks.MLPClassifier.velocity_weights": {"tf": 1}, "ifri_mini_ml_lib.neural_networks.MLPClassifier.velocity_biases": {"tf": 1}, "ifri_mini_ml_lib.neural_networks.MLPRegressor.velocity_weights": {"tf": 1}, "ifri_mini_ml_lib.neural_networks.MLPRegressor.velocity_biases": {"tf": 1}}, "df": 4}}}}}}, "c": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "s": {"docs": {"ifri_mini_ml_lib.preprocessing.dimensionality_reduction.PCA.eigen_vectors": {"tf": 1}}, "df": 1}}}}}, "r": {"docs": {}, "df": 0, "b": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "e": {"docs": {"ifri_mini_ml_lib.preprocessing.dimensionality_reduction.TSNE.verbose": {"tf": 1}}, "df": 1}}}}}}}}}, "annotation": {"root": {"docs": {}, "df": 0}}, "default_value": {"root": {"docs": {"ifri_mini_ml_lib.regression.SVR.kerlist": {"tf": 1.4142135623730951}}, "df": 1, "x": {"2": {"7": {"docs": {"ifri_mini_ml_lib.regression.SVR.kerlist": {"tf": 2.8284271247461903}}, "df": 1}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "l": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {"ifri_mini_ml_lib.regression.SVR.kerlist": {"tf": 1}}, "df": 1}}}, "p": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "y": {"docs": {"ifri_mini_ml_lib.regression.SVR.kerlist": {"tf": 1}}, "df": 1}}}}, "r": {"docs": {}, "df": 0, "b": {"docs": {}, "df": 0, "f": {"docs": {"ifri_mini_ml_lib.regression.SVR.kerlist": {"tf": 1}}, "df": 1}}}, "s": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "g": {"docs": {"ifri_mini_ml_lib.regression.SVR.kerlist": {"tf": 1}}, "df": 1}}}}}, "signature": {"root": {"0": {"0": {"0": {"1": {"docs": {"ifri_mini_ml_lib.classification.LogisticRegression.__init__": {"tf": 1}, "ifri_mini_ml_lib.clustering.KMeans.__init__": {"tf": 1}, "ifri_mini_ml_lib.neural_networks.MLPClassifier.__init__": {"tf": 1.4142135623730951}, "ifri_mini_ml_lib.neural_networks.MLPRegressor.__init__": {"tf": 1.4142135623730951}}, "df": 4}, "docs": {}, "df": 0}, "1": {"docs": {"ifri_mini_ml_lib.neural_networks.MLPClassifier.__init__": {"tf": 1}, "ifri_mini_ml_lib.neural_networks.MLPRegressor.__init__": {"tf": 1}}, "df": 2}, "docs": {}, "df": 0}, "1": {"docs": {"ifri_mini_ml_lib.classification.LogisticRegression.__init__": {"tf": 1}, "ifri_mini_ml_lib.regression.LinearRegression.__init__": {"tf": 1}, "ifri_mini_ml_lib.regression.PolynomialRegression.__init__": {"tf": 1}, "ifri_mini_ml_lib.regression.SVR.__init__": {"tf": 1}}, "df": 4}, "7": {"docs": {"ifri_mini_ml_lib.preprocessing.dimensionality_reduction.TSNE.__init__": {"tf": 1}}, "df": 1}, "8": {"docs": {"ifri_mini_ml_lib.neural_networks.MLPClassifier.__init__": {"tf": 1}, "ifri_mini_ml_lib.neural_networks.MLPRegressor.__init__": {"tf": 1}}, "df": 2}, "docs": {"ifri_mini_ml_lib.classification.DecisionTree.__init__": {"tf": 1.4142135623730951}, "ifri_mini_ml_lib.classification.DecisionTree.fit": {"tf": 1}, "ifri_mini_ml_lib.classification.LogisticRegression.__init__": {"tf": 1.7320508075688772}, "ifri_mini_ml_lib.classification.LogisticRegression.predict": {"tf": 1}, "ifri_mini_ml_lib.clustering.KMeans.__init__": {"tf": 1}, "ifri_mini_ml_lib.clustering.DBSCAN.__init__": {"tf": 1}, "ifri_mini_ml_lib.neural_networks.MLPClassifier.__init__": {"tf": 2.6457513110645907}, "ifri_mini_ml_lib.neural_networks.MLPRegressor.__init__": {"tf": 2.6457513110645907}, "ifri_mini_ml_lib.preprocessing.dimensionality_reduction.TSNE.__init__": {"tf": 2}, "ifri_mini_ml_lib.preprocessing.preparation.MinMaxScaler.__init__": {"tf": 1}, "ifri_mini_ml_lib.preprocessing.preparation.MissingValueHandler.remove_missing": {"tf": 1.4142135623730951}, "ifri_mini_ml_lib.preprocessing.preparation.MissingValueHandler.impute_default": {"tf": 1}, "ifri_mini_ml_lib.preprocessing.preparation.DataSplitter.train_test_split": {"tf": 1.4142135623730951}, "ifri_mini_ml_lib.preprocessing.preparation.DataSplitter.stratified_train_test_split": {"tf": 1.4142135623730951}, "ifri_mini_ml_lib.preprocessing.preparation.DataSplitter.temporal_train_test_split": {"tf": 1.4142135623730951}, "ifri_mini_ml_lib.regression.LinearRegression.__init__": {"tf": 1}, "ifri_mini_ml_lib.regression.PolynomialRegression.__init__": {"tf": 1}, "ifri_mini_ml_lib.regression.SVR.__init__": {"tf": 1.4142135623730951}}, "df": 18}, "1": {"0": {"0": {"0": {"docs": {"ifri_mini_ml_lib.classification.LogisticRegression.__init__": {"tf": 1}, "ifri_mini_ml_lib.preprocessing.dimensionality_reduction.TSNE.__init__": {"tf": 1}, "ifri_mini_ml_lib.regression.LinearRegression.__init__": {"tf": 1}, "ifri_mini_ml_lib.regression.PolynomialRegression.__init__": {"tf": 1}}, "df": 4}, "docs": {"ifri_mini_ml_lib.neural_networks.MLPClassifier.__init__": {"tf": 1}, "ifri_mini_ml_lib.neural_networks.MLPRegressor.__init__": {"tf": 1}}, "df": 2}, "docs": {"ifri_mini_ml_lib.model_selection.BaggingClassifier.__init__": {"tf": 1}, "ifri_mini_ml_lib.model_selection.BaggingRegressor.__init__": {"tf": 1}, "ifri_mini_ml_lib.model_selection.RandomSearchCV.__init__": {"tf": 1}, "ifri_mini_ml_lib.neural_networks.MLPClassifier.__init__": {"tf": 1}, "ifri_mini_ml_lib.neural_networks.MLPRegressor.__init__": {"tf": 1}}, "df": 5}, "2": {"docs": {"ifri_mini_ml_lib.preprocessing.dimensionality_reduction.TSNE.__init__": {"tf": 1}}, "df": 1}, "docs": {"ifri_mini_ml_lib.classification.DecisionTree.__init__": {"tf": 1}, "ifri_mini_ml_lib.metrics.bias_evaluation.selection_rate": {"tf": 1}, "ifri_mini_ml_lib.metrics.bias_evaluation.demographic_parity_ratio": {"tf": 1}, "ifri_mini_ml_lib.metrics.bias_evaluation.demographic_parity_difference": {"tf": 1}, "ifri_mini_ml_lib.metrics.bias_evaluation.tpr_fpr_by_group": {"tf": 1}, "ifri_mini_ml_lib.metrics.bias_evaluation.equalized_odds_ratio": {"tf": 1}, "ifri_mini_ml_lib.metrics.bias_evaluation.equalized_odds_difference": {"tf": 1}, "ifri_mini_ml_lib.metrics.evaluation_metrics.precision": {"tf": 1}, "ifri_mini_ml_lib.metrics.evaluation_metrics.recall": {"tf": 1}, "ifri_mini_ml_lib.metrics.evaluation_metrics.f1_score": {"tf": 1}, "ifri_mini_ml_lib.neural_networks.MLPClassifier.__init__": {"tf": 1}, "ifri_mini_ml_lib.neural_networks.MLPRegressor.__init__": {"tf": 1}, "ifri_mini_ml_lib.preprocessing.preparation.MinMaxScaler.__init__": {"tf": 1}, "ifri_mini_ml_lib.regression.SVR.__init__": {"tf": 1.4142135623730951}}, "df": 14, "e": {"docs": {"ifri_mini_ml_lib.neural_networks.MLPClassifier.__init__": {"tf": 1}, "ifri_mini_ml_lib.neural_networks.MLPRegressor.__init__": {"tf": 1}, "ifri_mini_ml_lib.preprocessing.dimensionality_reduction.TSNE.__init__": {"tf": 1}}, "df": 3}}, "2": {"0": {"0": {"docs": {"ifri_mini_ml_lib.neural_networks.MLPClassifier.__init__": {"tf": 1}, "ifri_mini_ml_lib.neural_networks.MLPRegressor.__init__": {"tf": 1}, "ifri_mini_ml_lib.preprocessing.dimensionality_reduction.TSNE.__init__": {"tf": 1}}, "df": 3}, "docs": {"ifri_mini_ml_lib.model_selection.BayesianSearchCV.__init__": {"tf": 1}}, "df": 1}, "docs": {"ifri_mini_ml_lib.classification.DecisionTree.__init__": {"tf": 1}, "ifri_mini_ml_lib.preprocessing.dimensionality_reduction.TSNE.__init__": {"tf": 1}, "ifri_mini_ml_lib.preprocessing.preparation.DataSplitter.train_test_split": {"tf": 1.4142135623730951}, "ifri_mini_ml_lib.preprocessing.preparation.DataSplitter.stratified_train_test_split": {"tf": 1.4142135623730951}, "ifri_mini_ml_lib.preprocessing.preparation.DataSplitter.temporal_train_test_split": {"tf": 1.4142135623730951}, "ifri_mini_ml_lib.regression.PolynomialRegression.__init__": {"tf": 1}, "ifri_mini_ml_lib.regression.SVR.__init__": {"tf": 1}}, "df": 7}, "3": {"0": {"0": {"docs": {"ifri_mini_ml_lib.clustering.KMeans.__init__": {"tf": 1}, "ifri_mini_ml_lib.preprocessing.dimensionality_reduction.TSNE.generate_test_data": {"tf": 1}}, "df": 2}, "docs": {"ifri_mini_ml_lib.preprocessing.dimensionality_reduction.TSNE.__init__": {"tf": 1}}, "df": 1}, "2": {"docs": {"ifri_mini_ml_lib.neural_networks.MLPClassifier.__init__": {"tf": 1}, "ifri_mini_ml_lib.neural_networks.MLPRegressor.__init__": {"tf": 1}}, "df": 2}, "9": {"docs": {"ifri_mini_ml_lib.association_rules.DataAdapter.convert_to_transactions": {"tf": 1.4142135623730951}, "ifri_mini_ml_lib.association_rules.DataAdapter.load_csv_to_transactions": {"tf": 1.4142135623730951}, "ifri_mini_ml_lib.classification.KNN.__init__": {"tf": 1.4142135623730951}, "ifri_mini_ml_lib.clustering.KMeans.__init__": {"tf": 1.4142135623730951}, "ifri_mini_ml_lib.clustering.HierarchicalClustering.__init__": {"tf": 2}, "ifri_mini_ml_lib.neural_networks.MLPClassifier.__init__": {"tf": 2}, "ifri_mini_ml_lib.neural_networks.MLPRegressor.__init__": {"tf": 2}, "ifri_mini_ml_lib.preprocessing.dimensionality_reduction.TSNE.__init__": {"tf": 1.4142135623730951}, "ifri_mini_ml_lib.preprocessing.dimensionality_reduction.TSNE.generate_test_data": {"tf": 1.4142135623730951}, "ifri_mini_ml_lib.preprocessing.preparation.MissingValueHandler.impute_statistical": {"tf": 1.4142135623730951}, "ifri_mini_ml_lib.preprocessing.preparation.MissingValueHandler.impute_knn": {"tf": 1.4142135623730951}, "ifri_mini_ml_lib.preprocessing.preparation.CategoricalEncoder.__init__": {"tf": 1.4142135623730951}, "ifri_mini_ml_lib.regression.LinearRegression.__init__": {"tf": 1.4142135623730951}, "ifri_mini_ml_lib.regression.PolynomialRegression.__init__": {"tf": 1.4142135623730951}}, "df": 14}, "docs": {"ifri_mini_ml_lib.classification.KNN.__init__": {"tf": 1}, "ifri_mini_ml_lib.clustering.KMeans.__init__": {"tf": 1}, "ifri_mini_ml_lib.preprocessing.preparation.MissingValueHandler.impute_knn": {"tf": 1}, "ifri_mini_ml_lib.regression.SVR.__init__": {"tf": 1}}, "df": 4}, "4": {"2": {"docs": {"ifri_mini_ml_lib.model_selection.BayesianSearchCV.__init__": {"tf": 1}}, "df": 1}, "docs": {}, "df": 0}, "5": {"docs": {"ifri_mini_ml_lib.classification.LogisticRegression.predict": {"tf": 1}, "ifri_mini_ml_lib.clustering.DBSCAN.__init__": {"tf": 1.4142135623730951}, "ifri_mini_ml_lib.model_selection.BayesianSearchCV.__init__": {"tf": 1.4142135623730951}, "ifri_mini_ml_lib.model_selection.GridSearchCV.__init__": {"tf": 1}, "ifri_mini_ml_lib.model_selection.RandomSearchCV.__init__": {"tf": 1}, "ifri_mini_ml_lib.preprocessing.preparation.MissingValueHandler.remove_missing": {"tf": 1}, "ifri_mini_ml_lib.preprocessing.preparation.DataSplitter.k_fold_split": {"tf": 1}}, "df": 7}, "9": {"9": {"9": {"docs": {"ifri_mini_ml_lib.neural_networks.MLPClassifier.__init__": {"tf": 1}, "ifri_mini_ml_lib.neural_networks.MLPRegressor.__init__": {"tf": 1}}, "df": 2}, "docs": {}, "df": 0}, "docs": {"ifri_mini_ml_lib.classification.LogisticRegression.__init__": {"tf": 1}, "ifri_mini_ml_lib.neural_networks.MLPClassifier.__init__": {"tf": 1.4142135623730951}, "ifri_mini_ml_lib.neural_networks.MLPRegressor.__init__": {"tf": 1.4142135623730951}}, "df": 3}, "docs": {"ifri_mini_ml_lib.association_rules.Apriori.__init__": {"tf": 4.47213595499958}, "ifri_mini_ml_lib.association_rules.Apriori.fit": {"tf": 4.242640687119285}, "ifri_mini_ml_lib.association_rules.Apriori.get_frequent_itemsets": {"tf": 3.1622776601683795}, "ifri_mini_ml_lib.association_rules.Apriori.get_rules": {"tf": 3.1622776601683795}, "ifri_mini_ml_lib.association_rules.Eclat.__init__": {"tf": 4.47213595499958}, "ifri_mini_ml_lib.association_rules.Eclat.fit": {"tf": 3.7416573867739413}, "ifri_mini_ml_lib.association_rules.Eclat.get_single_items_TIDset": {"tf": 4.242640687119285}, "ifri_mini_ml_lib.association_rules.Eclat.get_frequent_itemsets": {"tf": 3.1622776601683795}, "ifri_mini_ml_lib.association_rules.Eclat.get_rules": {"tf": 3.1622776601683795}, "ifri_mini_ml_lib.association_rules.FPGrowth.__init__": {"tf": 4.47213595499958}, "ifri_mini_ml_lib.association_rules.FPGrowth.fit": {"tf": 3.7416573867739413}, "ifri_mini_ml_lib.association_rules.FPGrowth.get_frequent_itemsets": {"tf": 3.1622776601683795}, "ifri_mini_ml_lib.association_rules.FPGrowth.get_rules": {"tf": 3.1622776601683795}, "ifri_mini_ml_lib.association_rules.DataAdapter.convert_to_transactions": {"tf": 10.535653752852738}, "ifri_mini_ml_lib.association_rules.DataAdapter.load_csv_to_transactions": {"tf": 7.874007874011811}, "ifri_mini_ml_lib.classification.DecisionTree.__init__": {"tf": 6.324555320336759}, "ifri_mini_ml_lib.classification.DecisionTree.fit": {"tf": 5.0990195135927845}, "ifri_mini_ml_lib.classification.DecisionTree.predict": {"tf": 3.7416573867739413}, "ifri_mini_ml_lib.classification.KNN.__init__": {"tf": 4.69041575982343}, "ifri_mini_ml_lib.classification.KNN.fit": {"tf": 4.242640687119285}, "ifri_mini_ml_lib.classification.KNN.predict": {"tf": 3.7416573867739413}, "ifri_mini_ml_lib.classification.LogisticRegression.__init__": {"tf": 6}, "ifri_mini_ml_lib.classification.LogisticRegression.fit": {"tf": 4.242640687119285}, "ifri_mini_ml_lib.classification.LogisticRegression.predict_proba": {"tf": 3.7416573867739413}, "ifri_mini_ml_lib.classification.LogisticRegression.predict": {"tf": 4.69041575982343}, "ifri_mini_ml_lib.clustering.KMeans.__init__": {"tf": 7.14142842854285}, "ifri_mini_ml_lib.clustering.KMeans.fit": {"tf": 3.7416573867739413}, "ifri_mini_ml_lib.clustering.KMeans.predict": {"tf": 3.7416573867739413}, "ifri_mini_ml_lib.clustering.KMeans.fit_predict": {"tf": 3.7416573867739413}, "ifri_mini_ml_lib.clustering.KMeans.plot_clusters": {"tf": 3.7416573867739413}, "ifri_mini_ml_lib.clustering.DBSCAN.__init__": {"tf": 4.47213595499958}, "ifri_mini_ml_lib.clustering.DBSCAN.fit_predict": {"tf": 3.7416573867739413}, "ifri_mini_ml_lib.clustering.DBSCAN.plot_clusters": {"tf": 3.7416573867739413}, "ifri_mini_ml_lib.clustering.HierarchicalClustering.__init__": {"tf": 5.656854249492381}, "ifri_mini_ml_lib.clustering.HierarchicalClustering.fit_predict": {"tf": 4.69041575982343}, "ifri_mini_ml_lib.clustering.HierarchicalClustering.plot_dendrogram": {"tf": 4.242640687119285}, "ifri_mini_ml_lib.clustering.HierarchicalClustering.plot_clusters": {"tf": 3.7416573867739413}, "ifri_mini_ml_lib.metrics.bias_evaluation.selection_rate": {"tf": 9.16515138991168}, "ifri_mini_ml_lib.metrics.bias_evaluation.selection_rate_per_group": {"tf": 9.746794344808963}, "ifri_mini_ml_lib.metrics.bias_evaluation.demographic_parity_ratio": {"tf": 9.539392014169456}, "ifri_mini_ml_lib.metrics.bias_evaluation.demographic_parity_difference": {"tf": 9.539392014169456}, "ifri_mini_ml_lib.metrics.bias_evaluation.tpr_fpr_by_group": {"tf": 9.38083151964686}, "ifri_mini_ml_lib.metrics.bias_evaluation.equalized_odds_ratio": {"tf": 9.643650760992955}, "ifri_mini_ml_lib.metrics.bias_evaluation.equalized_odds_difference": {"tf": 9.643650760992955}, "ifri_mini_ml_lib.metrics.evaluation_metrics.evaluate_model": {"tf": 3.7416573867739413}, "ifri_mini_ml_lib.metrics.evaluation_metrics.confusion_matrix": {"tf": 4.69041575982343}, "ifri_mini_ml_lib.metrics.evaluation_metrics.accuracy": {"tf": 3.7416573867739413}, "ifri_mini_ml_lib.metrics.evaluation_metrics.precision": {"tf": 4.69041575982343}, "ifri_mini_ml_lib.metrics.evaluation_metrics.recall": {"tf": 4.69041575982343}, "ifri_mini_ml_lib.metrics.evaluation_metrics.f1_score": {"tf": 4.69041575982343}, "ifri_mini_ml_lib.metrics.evaluation_metrics.calculate_inertia": {"tf": 4.242640687119285}, "ifri_mini_ml_lib.metrics.evaluation_metrics.calculate_silhouette": {"tf": 3.7416573867739413}, "ifri_mini_ml_lib.model_selection.BaggingClassifier.__init__": {"tf": 6.324555320336759}, "ifri_mini_ml_lib.model_selection.BaggingClassifier.fit": {"tf": 4.242640687119285}, "ifri_mini_ml_lib.model_selection.BaggingClassifier.predict": {"tf": 3.7416573867739413}, "ifri_mini_ml_lib.model_selection.BaggingRegressor.__init__": {"tf": 6.324555320336759}, "ifri_mini_ml_lib.model_selection.BaggingRegressor.fit": {"tf": 4.242640687119285}, "ifri_mini_ml_lib.model_selection.BaggingRegressor.predict": {"tf": 3.7416573867739413}, "ifri_mini_ml_lib.model_selection.BayesianSearchCV.__init__": {"tf": 8.831760866327848}, "ifri_mini_ml_lib.model_selection.BayesianSearchCV.fit": {"tf": 4.242640687119285}, "ifri_mini_ml_lib.model_selection.BayesianSearchCV.get_best_params": {"tf": 3.1622776601683795}, "ifri_mini_ml_lib.model_selection.GridSearchCV.__init__": {"tf": 5.656854249492381}, "ifri_mini_ml_lib.model_selection.GridSearchCV.fit": {"tf": 4.242640687119285}, "ifri_mini_ml_lib.model_selection.RandomSearchCV.__init__": {"tf": 7.416198487095663}, "ifri_mini_ml_lib.model_selection.RandomSearchCV.fit": {"tf": 4.242640687119285}, "ifri_mini_ml_lib.neural_networks.MLPClassifier.__init__": {"tf": 16.911534525287763}, "ifri_mini_ml_lib.neural_networks.MLPClassifier.fit": {"tf": 7.14142842854285}, "ifri_mini_ml_lib.neural_networks.MLPClassifier.predict": {"tf": 5.291502622129181}, "ifri_mini_ml_lib.neural_networks.MLPClassifier.predict_proba": {"tf": 5.291502622129181}, "ifri_mini_ml_lib.neural_networks.MLPClassifier.score": {"tf": 6}, "ifri_mini_ml_lib.neural_networks.MLPRegressor.__init__": {"tf": 16.911534525287763}, "ifri_mini_ml_lib.neural_networks.MLPRegressor.fit": {"tf": 7.14142842854285}, "ifri_mini_ml_lib.neural_networks.MLPRegressor.predict": {"tf": 5.291502622129181}, "ifri_mini_ml_lib.neural_networks.MLPRegressor.score": {"tf": 6}, "ifri_mini_ml_lib.preprocessing.dimensionality_reduction.PCA.__init__": {"tf": 3.4641016151377544}, "ifri_mini_ml_lib.preprocessing.dimensionality_reduction.PCA.fit": {"tf": 6.48074069840786}, "ifri_mini_ml_lib.preprocessing.dimensionality_reduction.PCA.transform": {"tf": 5.291502622129181}, "ifri_mini_ml_lib.preprocessing.dimensionality_reduction.PCA.fit_transform": {"tf": 5.291502622129181}, "ifri_mini_ml_lib.preprocessing.dimensionality_reduction.PCA.plot_cov_matrix": {"tf": 3.4641016151377544}, "ifri_mini_ml_lib.preprocessing.dimensionality_reduction.PCA.explained_variances": {"tf": 4}, "ifri_mini_ml_lib.preprocessing.dimensionality_reduction.PCA.explained_variances_ratio": {"tf": 4}, "ifri_mini_ml_lib.preprocessing.dimensionality_reduction.PCA.plot_cumulative_explained_variance_ratio": {"tf": 3.4641016151377544}, "ifri_mini_ml_lib.preprocessing.dimensionality_reduction.TSNE.__init__": {"tf": 9.327379053088816}, "ifri_mini_ml_lib.preprocessing.dimensionality_reduction.TSNE.fit": {"tf": 6.48074069840786}, "ifri_mini_ml_lib.preprocessing.dimensionality_reduction.TSNE.fit_transform": {"tf": 5.291502622129181}, "ifri_mini_ml_lib.preprocessing.dimensionality_reduction.TSNE.generate_test_data": {"tf": 5.656854249492381}, "ifri_mini_ml_lib.preprocessing.dimensionality_reduction.TSNE.plot_results": {"tf": 5.0990195135927845}, "ifri_mini_ml_lib.preprocessing.preparation.MinMaxScaler.__init__": {"tf": 4.795831523312719}, "ifri_mini_ml_lib.preprocessing.preparation.MinMaxScaler.fit": {"tf": 3.7416573867739413}, "ifri_mini_ml_lib.preprocessing.preparation.MinMaxScaler.transform": {"tf": 3.7416573867739413}, "ifri_mini_ml_lib.preprocessing.preparation.MinMaxScaler.fit_transform": {"tf": 3.7416573867739413}, "ifri_mini_ml_lib.preprocessing.preparation.MinMaxScaler.inverse_transform": {"tf": 3.7416573867739413}, "ifri_mini_ml_lib.preprocessing.preparation.MissingValueHandler.remove_missing": {"tf": 5.477225575051661}, "ifri_mini_ml_lib.preprocessing.preparation.MissingValueHandler.impute_statistical": {"tf": 4.898979485566356}, "ifri_mini_ml_lib.preprocessing.preparation.MissingValueHandler.impute_default": {"tf": 4.69041575982343}, "ifri_mini_ml_lib.preprocessing.preparation.MissingValueHandler.impute_knn": {"tf": 5.656854249492381}, "ifri_mini_ml_lib.preprocessing.preparation.MissingValueHandler.impute_regression": {"tf": 4.242640687119285}, "ifri_mini_ml_lib.preprocessing.preparation.StandardScaler.__init__": {"tf": 2}, "ifri_mini_ml_lib.preprocessing.preparation.StandardScaler.fit": {"tf": 3.7416573867739413}, "ifri_mini_ml_lib.preprocessing.preparation.StandardScaler.transform": {"tf": 3.7416573867739413}, "ifri_mini_ml_lib.preprocessing.preparation.StandardScaler.fit_transform": {"tf": 3.7416573867739413}, "ifri_mini_ml_lib.preprocessing.preparation.StandardScaler.inverse_transform": {"tf": 3.7416573867739413}, "ifri_mini_ml_lib.preprocessing.preparation.CategoricalEncoder.__init__": {"tf": 4.69041575982343}, "ifri_mini_ml_lib.preprocessing.preparation.CategoricalEncoder.fit": {"tf": 4.69041575982343}, "ifri_mini_ml_lib.preprocessing.preparation.CategoricalEncoder.transform": {"tf": 3.7416573867739413}, "ifri_mini_ml_lib.preprocessing.preparation.CategoricalEncoder.fit_transform": {"tf": 4.69041575982343}, "ifri_mini_ml_lib.preprocessing.preparation.DataSplitter.__init__": {"tf": 3.4641016151377544}, "ifri_mini_ml_lib.preprocessing.preparation.DataSplitter.train_test_split": {"tf": 6.782329983125268}, "ifri_mini_ml_lib.preprocessing.preparation.DataSplitter.stratified_train_test_split": {"tf": 6.48074069840786}, "ifri_mini_ml_lib.preprocessing.preparation.DataSplitter.temporal_train_test_split": {"tf": 6.782329983125268}, "ifri_mini_ml_lib.preprocessing.preparation.DataSplitter.k_fold_split": {"tf": 5.477225575051661}, "ifri_mini_ml_lib.regression.LinearRegression.__init__": {"tf": 7.14142842854285}, "ifri_mini_ml_lib.regression.LinearRegression.fit": {"tf": 8.426149773176359}, "ifri_mini_ml_lib.regression.LinearRegression.predict": {"tf": 6.244997998398398}, "ifri_mini_ml_lib.regression.PolynomialRegression.__init__": {"tf": 8.660254037844387}, "ifri_mini_ml_lib.regression.PolynomialRegression.fit": {"tf": 8.426149773176359}, "ifri_mini_ml_lib.regression.PolynomialRegression.predict": {"tf": 6.244997998398398}, "ifri_mini_ml_lib.regression.SVR.__init__": {"tf": 10.295630140987}, "ifri_mini_ml_lib.regression.SVR.linear_kernel": {"tf": 7.3484692283495345}, "ifri_mini_ml_lib.regression.SVR.polynomial_kernel": {"tf": 4.69041575982343}, "ifri_mini_ml_lib.regression.SVR.rbf_kernel": {"tf": 4.69041575982343}, "ifri_mini_ml_lib.regression.SVR.sigmoid_kernel": {"tf": 4.69041575982343}, "ifri_mini_ml_lib.regression.SVR.get_kernel": {"tf": 4.123105625617661}, "ifri_mini_ml_lib.regression.SVR.fit": {"tf": 6}, "ifri_mini_ml_lib.regression.SVR.predict": {"tf": 7.211102550927978}, "ifri_mini_ml_lib.regression.SVR.set_params": {"tf": 4}}, "df": 126, "m": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {"ifri_mini_ml_lib.association_rules.Apriori.__init__": {"tf": 1.4142135623730951}, "ifri_mini_ml_lib.association_rules.Eclat.__init__": {"tf": 1.4142135623730951}, "ifri_mini_ml_lib.association_rules.FPGrowth.__init__": {"tf": 1.4142135623730951}, "ifri_mini_ml_lib.classification.DecisionTree.__init__": {"tf": 1.7320508075688772}, "ifri_mini_ml_lib.clustering.DBSCAN.__init__": {"tf": 1}, "ifri_mini_ml_lib.preprocessing.dimensionality_reduction.TSNE.__init__": {"tf": 1}}, "df": 6, "i": {"docs": {"ifri_mini_ml_lib.neural_networks.MLPClassifier.fit": {"tf": 1}, "ifri_mini_ml_lib.neural_networks.MLPRegressor.fit": {"tf": 1}, "ifri_mini_ml_lib.preprocessing.dimensionality_reduction.PCA.fit": {"tf": 1}, "ifri_mini_ml_lib.preprocessing.dimensionality_reduction.TSNE.fit": {"tf": 1}, "ifri_mini_ml_lib.regression.LinearRegression.fit": {"tf": 1}, "ifri_mini_ml_lib.regression.PolynomialRegression.fit": {"tf": 1}}, "df": 6}}}, "o": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "e": {"docs": {"ifri_mini_ml_lib.association_rules.DataAdapter.convert_to_transactions": {"tf": 1}}, "df": 1, "l": {"docs": {"ifri_mini_ml_lib.model_selection.BaggingClassifier.__init__": {"tf": 1}, "ifri_mini_ml_lib.model_selection.BaggingRegressor.__init__": {"tf": 1}, "ifri_mini_ml_lib.model_selection.GridSearchCV.__init__": {"tf": 1}, "ifri_mini_ml_lib.model_selection.RandomSearchCV.__init__": {"tf": 1}}, "df": 4, "s": {"docs": {"ifri_mini_ml_lib.model_selection.BaggingClassifier.__init__": {"tf": 1}, "ifri_mini_ml_lib.model_selection.BaggingRegressor.__init__": {"tf": 1}}, "df": 2}}}}, "m": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "m": {"docs": {"ifri_mini_ml_lib.classification.LogisticRegression.__init__": {"tf": 1}, "ifri_mini_ml_lib.neural_networks.MLPClassifier.__init__": {"tf": 1}, "ifri_mini_ml_lib.neural_networks.MLPRegressor.__init__": {"tf": 1}}, "df": 3}}}}}}}, "a": {"docs": {}, "df": 0, "x": {"docs": {"ifri_mini_ml_lib.classification.DecisionTree.__init__": {"tf": 1}, "ifri_mini_ml_lib.classification.LogisticRegression.__init__": {"tf": 1}, "ifri_mini_ml_lib.clustering.KMeans.__init__": {"tf": 1}, "ifri_mini_ml_lib.neural_networks.MLPClassifier.__init__": {"tf": 1}, "ifri_mini_ml_lib.neural_networks.MLPRegressor.__init__": {"tf": 1}}, "df": 5, "i": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "z": {"docs": {}, "df": 0, "e": {"docs": {"ifri_mini_ml_lib.model_selection.BayesianSearchCV.__init__": {"tf": 1}}, "df": 1}}}}}}}, "e": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "h": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "d": {"docs": {"ifri_mini_ml_lib.clustering.HierarchicalClustering.__init__": {"tf": 1}, "ifri_mini_ml_lib.regression.LinearRegression.__init__": {"tf": 1}, "ifri_mini_ml_lib.regression.PolynomialRegression.__init__": {"tf": 1}}, "df": 3}}}}, "a": {"docs": {}, "df": 0, "n": {"docs": {"ifri_mini_ml_lib.preprocessing.preparation.MissingValueHandler.impute_statistical": {"tf": 1}}, "df": 1}}}, "l": {"docs": {"ifri_mini_ml_lib.neural_networks.MLPClassifier.fit": {"tf": 1}, "ifri_mini_ml_lib.neural_networks.MLPRegressor.fit": {"tf": 1}, "ifri_mini_ml_lib.preprocessing.dimensionality_reduction.PCA.fit": {"tf": 1}, "ifri_mini_ml_lib.preprocessing.dimensionality_reduction.TSNE.fit": {"tf": 1}, "ifri_mini_ml_lib.regression.LinearRegression.fit": {"tf": 1}, "ifri_mini_ml_lib.regression.PolynomialRegression.fit": {"tf": 1}}, "df": 6, "p": {"docs": {"ifri_mini_ml_lib.neural_networks.MLPClassifier.fit": {"tf": 1}, "ifri_mini_ml_lib.neural_networks.MLPRegressor.fit": {"tf": 1}}, "df": 2, "c": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "f": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"ifri_mini_ml_lib.neural_networks.MLPClassifier.fit": {"tf": 1}}, "df": 1}}}}}}}}}}, "r": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {"ifri_mini_ml_lib.neural_networks.MLPRegressor.fit": {"tf": 1}}, "df": 1}}}}}}}}}}}}, "s": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "t": {"docs": {"ifri_mini_ml_lib.association_rules.Apriori.__init__": {"tf": 1}, "ifri_mini_ml_lib.association_rules.Eclat.__init__": {"tf": 1}, "ifri_mini_ml_lib.association_rules.FPGrowth.__init__": {"tf": 1}}, "df": 3}}}}}}, "e": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "f": {"docs": {"ifri_mini_ml_lib.association_rules.Apriori.fit": {"tf": 1}, "ifri_mini_ml_lib.association_rules.Apriori.get_frequent_itemsets": {"tf": 1}, "ifri_mini_ml_lib.association_rules.Apriori.get_rules": {"tf": 1}, "ifri_mini_ml_lib.association_rules.Eclat.fit": {"tf": 1}, "ifri_mini_ml_lib.association_rules.Eclat.get_single_items_TIDset": {"tf": 1}, "ifri_mini_ml_lib.association_rules.Eclat.get_frequent_itemsets": {"tf": 1}, "ifri_mini_ml_lib.association_rules.Eclat.get_rules": {"tf": 1}, "ifri_mini_ml_lib.association_rules.FPGrowth.fit": {"tf": 1}, "ifri_mini_ml_lib.association_rules.FPGrowth.get_frequent_itemsets": {"tf": 1}, "ifri_mini_ml_lib.association_rules.FPGrowth.get_rules": {"tf": 1}, "ifri_mini_ml_lib.classification.DecisionTree.fit": {"tf": 1}, "ifri_mini_ml_lib.classification.DecisionTree.predict": {"tf": 1}, "ifri_mini_ml_lib.classification.KNN.fit": {"tf": 1}, "ifri_mini_ml_lib.classification.KNN.predict": {"tf": 1}, "ifri_mini_ml_lib.classification.LogisticRegression.fit": {"tf": 1}, "ifri_mini_ml_lib.classification.LogisticRegression.predict_proba": {"tf": 1}, "ifri_mini_ml_lib.classification.LogisticRegression.predict": {"tf": 1}, "ifri_mini_ml_lib.clustering.KMeans.fit": {"tf": 1}, "ifri_mini_ml_lib.clustering.KMeans.predict": {"tf": 1}, "ifri_mini_ml_lib.clustering.KMeans.fit_predict": {"tf": 1}, "ifri_mini_ml_lib.clustering.KMeans.plot_clusters": {"tf": 1}, "ifri_mini_ml_lib.clustering.DBSCAN.fit_predict": {"tf": 1}, "ifri_mini_ml_lib.clustering.DBSCAN.plot_clusters": {"tf": 1}, "ifri_mini_ml_lib.clustering.HierarchicalClustering.fit_predict": {"tf": 1}, "ifri_mini_ml_lib.clustering.HierarchicalClustering.plot_dendrogram": {"tf": 1}, "ifri_mini_ml_lib.clustering.HierarchicalClustering.plot_clusters": {"tf": 1}, "ifri_mini_ml_lib.model_selection.BaggingClassifier.fit": {"tf": 1}, "ifri_mini_ml_lib.model_selection.BaggingClassifier.predict": {"tf": 1}, "ifri_mini_ml_lib.model_selection.BaggingRegressor.fit": {"tf": 1}, "ifri_mini_ml_lib.model_selection.BaggingRegressor.predict": {"tf": 1}, "ifri_mini_ml_lib.model_selection.BayesianSearchCV.fit": {"tf": 1}, "ifri_mini_ml_lib.model_selection.BayesianSearchCV.get_best_params": {"tf": 1}, "ifri_mini_ml_lib.model_selection.GridSearchCV.fit": {"tf": 1}, "ifri_mini_ml_lib.model_selection.RandomSearchCV.fit": {"tf": 1}, "ifri_mini_ml_lib.neural_networks.MLPClassifier.fit": {"tf": 1}, "ifri_mini_ml_lib.neural_networks.MLPClassifier.predict": {"tf": 1}, "ifri_mini_ml_lib.neural_networks.MLPClassifier.predict_proba": {"tf": 1}, "ifri_mini_ml_lib.neural_networks.MLPClassifier.score": {"tf": 1}, "ifri_mini_ml_lib.neural_networks.MLPRegressor.fit": {"tf": 1}, "ifri_mini_ml_lib.neural_networks.MLPRegressor.predict": {"tf": 1}, "ifri_mini_ml_lib.neural_networks.MLPRegressor.score": {"tf": 1}, "ifri_mini_ml_lib.preprocessing.dimensionality_reduction.PCA.fit": {"tf": 1}, "ifri_mini_ml_lib.preprocessing.dimensionality_reduction.PCA.transform": {"tf": 1}, "ifri_mini_ml_lib.preprocessing.dimensionality_reduction.PCA.fit_transform": {"tf": 1}, "ifri_mini_ml_lib.preprocessing.dimensionality_reduction.PCA.plot_cov_matrix": {"tf": 1}, "ifri_mini_ml_lib.preprocessing.dimensionality_reduction.PCA.explained_variances": {"tf": 1}, "ifri_mini_ml_lib.preprocessing.dimensionality_reduction.PCA.explained_variances_ratio": {"tf": 1}, "ifri_mini_ml_lib.preprocessing.dimensionality_reduction.PCA.plot_cumulative_explained_variance_ratio": {"tf": 1}, "ifri_mini_ml_lib.preprocessing.dimensionality_reduction.TSNE.fit": {"tf": 1}, "ifri_mini_ml_lib.preprocessing.dimensionality_reduction.TSNE.fit_transform": {"tf": 1}, "ifri_mini_ml_lib.preprocessing.preparation.MinMaxScaler.fit": {"tf": 1}, "ifri_mini_ml_lib.preprocessing.preparation.MinMaxScaler.transform": {"tf": 1}, "ifri_mini_ml_lib.preprocessing.preparation.MinMaxScaler.fit_transform": {"tf": 1}, "ifri_mini_ml_lib.preprocessing.preparation.MinMaxScaler.inverse_transform": {"tf": 1}, "ifri_mini_ml_lib.preprocessing.preparation.MissingValueHandler.remove_missing": {"tf": 1}, "ifri_mini_ml_lib.preprocessing.preparation.MissingValueHandler.impute_statistical": {"tf": 1}, "ifri_mini_ml_lib.preprocessing.preparation.MissingValueHandler.impute_default": {"tf": 1}, "ifri_mini_ml_lib.preprocessing.preparation.MissingValueHandler.impute_knn": {"tf": 1}, "ifri_mini_ml_lib.preprocessing.preparation.MissingValueHandler.impute_regression": {"tf": 1}, "ifri_mini_ml_lib.preprocessing.preparation.StandardScaler.fit": {"tf": 1}, "ifri_mini_ml_lib.preprocessing.preparation.StandardScaler.transform": {"tf": 1}, "ifri_mini_ml_lib.preprocessing.preparation.StandardScaler.fit_transform": {"tf": 1}, "ifri_mini_ml_lib.preprocessing.preparation.StandardScaler.inverse_transform": {"tf": 1}, "ifri_mini_ml_lib.preprocessing.preparation.CategoricalEncoder.fit": {"tf": 1}, "ifri_mini_ml_lib.preprocessing.preparation.CategoricalEncoder.transform": {"tf": 1}, "ifri_mini_ml_lib.preprocessing.preparation.CategoricalEncoder.fit_transform": {"tf": 1}, "ifri_mini_ml_lib.preprocessing.preparation.DataSplitter.train_test_split": {"tf": 1}, "ifri_mini_ml_lib.preprocessing.preparation.DataSplitter.stratified_train_test_split": {"tf": 1}, "ifri_mini_ml_lib.preprocessing.preparation.DataSplitter.temporal_train_test_split": {"tf": 1}, "ifri_mini_ml_lib.preprocessing.preparation.DataSplitter.k_fold_split": {"tf": 1}, "ifri_mini_ml_lib.regression.LinearRegression.fit": {"tf": 1}, "ifri_mini_ml_lib.regression.LinearRegression.predict": {"tf": 1}, "ifri_mini_ml_lib.regression.PolynomialRegression.fit": {"tf": 1}, "ifri_mini_ml_lib.regression.PolynomialRegression.predict": {"tf": 1}, "ifri_mini_ml_lib.regression.SVR.linear_kernel": {"tf": 1}, "ifri_mini_ml_lib.regression.SVR.polynomial_kernel": {"tf": 1}, "ifri_mini_ml_lib.regression.SVR.rbf_kernel": {"tf": 1}, "ifri_mini_ml_lib.regression.SVR.sigmoid_kernel": {"tf": 1}, "ifri_mini_ml_lib.regression.SVR.get_kernel": {"tf": 1}, "ifri_mini_ml_lib.regression.SVR.fit": {"tf": 1}, "ifri_mini_ml_lib.regression.SVR.predict": {"tf": 1}, "ifri_mini_ml_lib.regression.SVR.set_params": {"tf": 1}}, "df": 82}}, "p": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {"ifri_mini_ml_lib.association_rules.DataAdapter.convert_to_transactions": {"tf": 1}, "ifri_mini_ml_lib.association_rules.DataAdapter.load_csv_to_transactions": {"tf": 1}}, "df": 2}}}}}}}, "t": {"docs": {"ifri_mini_ml_lib.association_rules.DataAdapter.convert_to_transactions": {"tf": 1}, "ifri_mini_ml_lib.association_rules.DataAdapter.load_csv_to_transactions": {"tf": 1}, "ifri_mini_ml_lib.preprocessing.preparation.DataSplitter.train_test_split": {"tf": 1}, "ifri_mini_ml_lib.preprocessing.preparation.DataSplitter.stratified_train_test_split": {"tf": 1}, "ifri_mini_ml_lib.preprocessing.preparation.DataSplitter.temporal_train_test_split": {"tf": 1}}, "df": 5}, "n": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "v": {"docs": {}, "df": 0, "e": {"docs": {"ifri_mini_ml_lib.metrics.bias_evaluation.selection_rate_per_group": {"tf": 1}, "ifri_mini_ml_lib.metrics.bias_evaluation.demographic_parity_ratio": {"tf": 1}, "ifri_mini_ml_lib.metrics.bias_evaluation.demographic_parity_difference": {"tf": 1}, "ifri_mini_ml_lib.metrics.bias_evaluation.tpr_fpr_by_group": {"tf": 1}, "ifri_mini_ml_lib.metrics.bias_evaluation.equalized_odds_ratio": {"tf": 1}, "ifri_mini_ml_lib.metrics.bias_evaluation.equalized_odds_difference": {"tf": 1}}, "df": 6}}}}}}}, "e": {"docs": {}, "df": 0, "d": {"docs": {"ifri_mini_ml_lib.preprocessing.preparation.DataSplitter.__init__": {"tf": 1}}, "df": 1}}}, "t": {"docs": {}, "df": 0, "r": {"docs": {"ifri_mini_ml_lib.association_rules.DataAdapter.convert_to_transactions": {"tf": 1.7320508075688772}, "ifri_mini_ml_lib.association_rules.DataAdapter.load_csv_to_transactions": {"tf": 1.7320508075688772}, "ifri_mini_ml_lib.neural_networks.MLPClassifier.__init__": {"tf": 1.4142135623730951}, "ifri_mini_ml_lib.neural_networks.MLPRegressor.__init__": {"tf": 1.4142135623730951}, "ifri_mini_ml_lib.regression.LinearRegression.__init__": {"tf": 1}, "ifri_mini_ml_lib.regression.PolynomialRegression.__init__": {"tf": 1}, "ifri_mini_ml_lib.regression.SVR.__init__": {"tf": 1}}, "df": 7, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "f": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "d": {"docs": {"ifri_mini_ml_lib.model_selection.BayesianSearchCV.__init__": {"tf": 1}, "ifri_mini_ml_lib.model_selection.GridSearchCV.__init__": {"tf": 1}, "ifri_mini_ml_lib.model_selection.RandomSearchCV.__init__": {"tf": 1}}, "df": 3}}}}}, "e": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "y": {"docs": {"ifri_mini_ml_lib.preprocessing.preparation.MissingValueHandler.impute_statistical": {"tf": 1}}, "df": 1}}}}}}, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {"ifri_mini_ml_lib.clustering.KMeans.__init__": {"tf": 1}, "ifri_mini_ml_lib.model_selection.BaggingClassifier.__init__": {"tf": 1}, "ifri_mini_ml_lib.model_selection.BaggingRegressor.__init__": {"tf": 1}, "ifri_mini_ml_lib.model_selection.BayesianSearchCV.__init__": {"tf": 1}, "ifri_mini_ml_lib.model_selection.RandomSearchCV.__init__": {"tf": 1}, "ifri_mini_ml_lib.neural_networks.MLPClassifier.__init__": {"tf": 1}, "ifri_mini_ml_lib.neural_networks.MLPRegressor.__init__": {"tf": 1}, "ifri_mini_ml_lib.preprocessing.dimensionality_reduction.TSNE.__init__": {"tf": 1}, "ifri_mini_ml_lib.preprocessing.dimensionality_reduction.TSNE.generate_test_data": {"tf": 1}}, "df": 9}}}, "o": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"ifri_mini_ml_lib.neural_networks.MLPClassifier.__init__": {"tf": 1}, "ifri_mini_ml_lib.neural_networks.MLPRegressor.__init__": {"tf": 1}}, "df": 2}}}}}}}, "a": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "e": {"docs": {"ifri_mini_ml_lib.metrics.bias_evaluation.selection_rate": {"tf": 1}, "ifri_mini_ml_lib.metrics.bias_evaluation.selection_rate_per_group": {"tf": 1}, "ifri_mini_ml_lib.metrics.bias_evaluation.demographic_parity_ratio": {"tf": 1}, "ifri_mini_ml_lib.metrics.bias_evaluation.demographic_parity_difference": {"tf": 1}}, "df": 4, "s": {"docs": {"ifri_mini_ml_lib.classification.DecisionTree.__init__": {"tf": 1.4142135623730951}, "ifri_mini_ml_lib.clustering.DBSCAN.__init__": {"tf": 1}, "ifri_mini_ml_lib.preprocessing.dimensionality_reduction.TSNE.generate_test_data": {"tf": 1}}, "df": 3}}}}}}, "p": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "t": {"docs": {"ifri_mini_ml_lib.classification.DecisionTree.__init__": {"tf": 1}}, "df": 1}}}}, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "e": {"docs": {"ifri_mini_ml_lib.clustering.HierarchicalClustering.__init__": {"tf": 1}}, "df": 1}}}}, "z": {"docs": {}, "df": 0, "e": {"docs": {"ifri_mini_ml_lib.neural_networks.MLPClassifier.__init__": {"tf": 1}, "ifri_mini_ml_lib.neural_networks.MLPRegressor.__init__": {"tf": 1}, "ifri_mini_ml_lib.preprocessing.preparation.DataSplitter.train_test_split": {"tf": 1.4142135623730951}, "ifri_mini_ml_lib.preprocessing.preparation.DataSplitter.stratified_train_test_split": {"tf": 1.4142135623730951}, "ifri_mini_ml_lib.preprocessing.preparation.DataSplitter.temporal_train_test_split": {"tf": 1.4142135623730951}, "ifri_mini_ml_lib.regression.SVR.__init__": {"tf": 1}}, "df": 6, "s": {"docs": {"ifri_mini_ml_lib.neural_networks.MLPClassifier.__init__": {"tf": 1}, "ifri_mini_ml_lib.neural_networks.MLPRegressor.__init__": {"tf": 1}}, "df": 2}}}}, "c": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"ifri_mini_ml_lib.model_selection.BayesianSearchCV.__init__": {"tf": 1}, "ifri_mini_ml_lib.model_selection.GridSearchCV.__init__": {"tf": 1}, "ifri_mini_ml_lib.model_selection.RandomSearchCV.__init__": {"tf": 1}}, "df": 3}}}}}, "a": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "d": {"docs": {"ifri_mini_ml_lib.preprocessing.preparation.MinMaxScaler.inverse_transform": {"tf": 1}, "ifri_mini_ml_lib.preprocessing.preparation.StandardScaler.inverse_transform": {"tf": 1}}, "df": 2}}}}}, "o": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "v": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"ifri_mini_ml_lib.neural_networks.MLPClassifier.__init__": {"tf": 1}, "ifri_mini_ml_lib.neural_networks.MLPRegressor.__init__": {"tf": 1}}, "df": 2}}}}}, "g": {"docs": {}, "df": 0, "d": {"docs": {"ifri_mini_ml_lib.neural_networks.MLPClassifier.__init__": {"tf": 1}, "ifri_mini_ml_lib.neural_networks.MLPRegressor.__init__": {"tf": 1}}, "df": 2}}, "h": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "f": {"docs": {}, "df": 0, "f": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "e": {"docs": {"ifri_mini_ml_lib.neural_networks.MLPClassifier.__init__": {"tf": 1}, "ifri_mini_ml_lib.neural_networks.MLPRegressor.__init__": {"tf": 1}}, "df": 2}}}}}}, "n": {"docs": {}, "df": 0, "e": {"docs": {"ifri_mini_ml_lib.preprocessing.dimensionality_reduction.TSNE.fit": {"tf": 1}}, "df": 1}}, "q": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {"ifri_mini_ml_lib.regression.LinearRegression.__init__": {"tf": 1}, "ifri_mini_ml_lib.regression.PolynomialRegression.__init__": {"tf": 1}}, "df": 2}}}}}}}, "f": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {"ifri_mini_ml_lib.association_rules.Apriori.__init__": {"tf": 1.4142135623730951}, "ifri_mini_ml_lib.association_rules.Eclat.__init__": {"tf": 1.4142135623730951}, "ifri_mini_ml_lib.association_rules.FPGrowth.__init__": {"tf": 1.4142135623730951}, "ifri_mini_ml_lib.metrics.bias_evaluation.selection_rate": {"tf": 1}, "ifri_mini_ml_lib.metrics.bias_evaluation.selection_rate_per_group": {"tf": 1}, "ifri_mini_ml_lib.metrics.bias_evaluation.demographic_parity_ratio": {"tf": 1.4142135623730951}, "ifri_mini_ml_lib.metrics.bias_evaluation.demographic_parity_difference": {"tf": 1.4142135623730951}, "ifri_mini_ml_lib.metrics.bias_evaluation.tpr_fpr_by_group": {"tf": 1.4142135623730951}, "ifri_mini_ml_lib.metrics.bias_evaluation.equalized_odds_ratio": {"tf": 1.7320508075688772}, "ifri_mini_ml_lib.metrics.bias_evaluation.equalized_odds_difference": {"tf": 1.7320508075688772}, "ifri_mini_ml_lib.neural_networks.MLPClassifier.__init__": {"tf": 2.8284271247461903}, "ifri_mini_ml_lib.neural_networks.MLPClassifier.score": {"tf": 1}, "ifri_mini_ml_lib.neural_networks.MLPRegressor.__init__": {"tf": 2.8284271247461903}, "ifri_mini_ml_lib.neural_networks.MLPRegressor.score": {"tf": 1}, "ifri_mini_ml_lib.regression.LinearRegression.__init__": {"tf": 1}, "ifri_mini_ml_lib.regression.LinearRegression.predict": {"tf": 1}, "ifri_mini_ml_lib.regression.PolynomialRegression.__init__": {"tf": 1}, "ifri_mini_ml_lib.regression.PolynomialRegression.predict": {"tf": 1}, "ifri_mini_ml_lib.regression.SVR.__init__": {"tf": 2.23606797749979}}, "df": 19}}}}, "r": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "e": {"docs": {"ifri_mini_ml_lib.association_rules.DataAdapter.convert_to_transactions": {"tf": 1}, "ifri_mini_ml_lib.regression.SVR.predict": {"tf": 1}}, "df": 2}}, "c": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"ifri_mini_ml_lib.neural_networks.MLPClassifier.__init__": {"tf": 1}, "ifri_mini_ml_lib.neural_networks.MLPRegressor.__init__": {"tf": 1}}, "df": 2}}}}}}}, "a": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "e": {"docs": {"ifri_mini_ml_lib.association_rules.DataAdapter.convert_to_transactions": {"tf": 1}, "ifri_mini_ml_lib.model_selection.GridSearchCV.__init__": {"tf": 1}, "ifri_mini_ml_lib.model_selection.RandomSearchCV.__init__": {"tf": 1}, "ifri_mini_ml_lib.neural_networks.MLPClassifier.__init__": {"tf": 1}, "ifri_mini_ml_lib.neural_networks.MLPRegressor.__init__": {"tf": 1}, "ifri_mini_ml_lib.preprocessing.preparation.DataSplitter.train_test_split": {"tf": 1}, "ifri_mini_ml_lib.preprocessing.preparation.DataSplitter.stratified_train_test_split": {"tf": 1}, "ifri_mini_ml_lib.preprocessing.preparation.DataSplitter.temporal_train_test_split": {"tf": 1}}, "df": 8}}}}, "i": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "e": {"docs": {"ifri_mini_ml_lib.association_rules.DataAdapter.load_csv_to_transactions": {"tf": 1}}, "df": 1}}}, "e": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "e": {"docs": {"ifri_mini_ml_lib.preprocessing.preparation.MinMaxScaler.__init__": {"tf": 1}}, "df": 1, "s": {"docs": {"ifri_mini_ml_lib.metrics.bias_evaluation.selection_rate_per_group": {"tf": 1}, "ifri_mini_ml_lib.metrics.bias_evaluation.demographic_parity_ratio": {"tf": 1}, "ifri_mini_ml_lib.metrics.bias_evaluation.demographic_parity_difference": {"tf": 1}, "ifri_mini_ml_lib.metrics.bias_evaluation.tpr_fpr_by_group": {"tf": 1}, "ifri_mini_ml_lib.metrics.bias_evaluation.equalized_odds_ratio": {"tf": 1}, "ifri_mini_ml_lib.metrics.bias_evaluation.equalized_odds_difference": {"tf": 1}}, "df": 6}}}}}}}}, "c": {"docs": {"ifri_mini_ml_lib.regression.SVR.__init__": {"tf": 1.4142135623730951}}, "df": 1, "o": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "f": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "e": {"docs": {"ifri_mini_ml_lib.association_rules.Apriori.__init__": {"tf": 1}, "ifri_mini_ml_lib.association_rules.Eclat.__init__": {"tf": 1}, "ifri_mini_ml_lib.association_rules.FPGrowth.__init__": {"tf": 1}}, "df": 3}}}}}}}}, "r": {"docs": {}, "df": 0, "e": {"docs": {"ifri_mini_ml_lib.association_rules.DataAdapter.convert_to_transactions": {"tf": 1}, "ifri_mini_ml_lib.regression.SVR.predict": {"tf": 1}}, "df": 2}}, "l": {"docs": {"ifri_mini_ml_lib.preprocessing.preparation.MissingValueHandler.impute_regression": {"tf": 1}}, "df": 1, "u": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "n": {"docs": {"ifri_mini_ml_lib.preprocessing.preparation.CategoricalEncoder.__init__": {"tf": 1}}, "df": 1, "s": {"docs": {"ifri_mini_ml_lib.association_rules.DataAdapter.convert_to_transactions": {"tf": 1}}, "df": 1}}}}}, "m": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "t": {"docs": {"ifri_mini_ml_lib.preprocessing.dimensionality_reduction.PCA.__init__": {"tf": 1}}, "df": 1, "s": {"docs": {"ifri_mini_ml_lib.preprocessing.dimensionality_reduction.TSNE.__init__": {"tf": 1}}, "df": 1}}}}}}}}}, "l": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "s": {"docs": {"ifri_mini_ml_lib.metrics.evaluation_metrics.precision": {"tf": 1}, "ifri_mini_ml_lib.metrics.evaluation_metrics.recall": {"tf": 1}, "ifri_mini_ml_lib.metrics.evaluation_metrics.f1_score": {"tf": 1}}, "df": 3, "i": {"docs": {}, "df": 0, "f": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"ifri_mini_ml_lib.classification.KNN.__init__": {"tf": 1}}, "df": 1}}}}}}, "e": {"docs": {}, "df": 0, "r": {"docs": {"ifri_mini_ml_lib.neural_networks.MLPClassifier.fit": {"tf": 1}}, "df": 1}}}}}, "e": {"docs": {}, "df": 0, "s": {"docs": {"ifri_mini_ml_lib.metrics.evaluation_metrics.confusion_matrix": {"tf": 1}}, "df": 1}}}}}, "u": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "s": {"docs": {"ifri_mini_ml_lib.clustering.KMeans.__init__": {"tf": 1}, "ifri_mini_ml_lib.clustering.HierarchicalClustering.__init__": {"tf": 1}}, "df": 2}}}}}}}, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "s": {"docs": {"ifri_mini_ml_lib.metrics.evaluation_metrics.calculate_inertia": {"tf": 1}}, "df": 1}}}}}}}}, "v": {"docs": {"ifri_mini_ml_lib.model_selection.BayesianSearchCV.__init__": {"tf": 1}}, "df": 1}, "h": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "e": {"docs": {"ifri_mini_ml_lib.neural_networks.MLPClassifier.__init__": {"tf": 1}, "ifri_mini_ml_lib.neural_networks.MLPRegressor.__init__": {"tf": 1}}, "df": 2}}}}}, "a": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "e": {"docs": {"ifri_mini_ml_lib.preprocessing.dimensionality_reduction.TSNE.generate_test_data": {"tf": 1}}, "df": 1}}, "l": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "b": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "e": {"docs": {"ifri_mini_ml_lib.regression.SVR.get_kernel": {"tf": 1}}, "df": 1}}}}}}}}, "t": {"docs": {"ifri_mini_ml_lib.preprocessing.dimensionality_reduction.TSNE.fit": {"tf": 1}}, "df": 1, "r": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "s": {"docs": {"ifri_mini_ml_lib.association_rules.Apriori.fit": {"tf": 1}, "ifri_mini_ml_lib.association_rules.Eclat.fit": {"tf": 1}, "ifri_mini_ml_lib.association_rules.Eclat.get_single_items_TIDset": {"tf": 1}, "ifri_mini_ml_lib.association_rules.FPGrowth.fit": {"tf": 1}}, "df": 4}}}}}}}}}}, "u": {"docs": {}, "df": 0, "e": {"docs": {"ifri_mini_ml_lib.metrics.bias_evaluation.selection_rate": {"tf": 1}, "ifri_mini_ml_lib.metrics.bias_evaluation.selection_rate_per_group": {"tf": 1}, "ifri_mini_ml_lib.metrics.bias_evaluation.tpr_fpr_by_group": {"tf": 1}, "ifri_mini_ml_lib.metrics.bias_evaluation.equalized_odds_ratio": {"tf": 1}, "ifri_mini_ml_lib.metrics.bias_evaluation.equalized_odds_difference": {"tf": 1}, "ifri_mini_ml_lib.metrics.evaluation_metrics.evaluate_model": {"tf": 1}, "ifri_mini_ml_lib.metrics.evaluation_metrics.confusion_matrix": {"tf": 1}, "ifri_mini_ml_lib.metrics.evaluation_metrics.accuracy": {"tf": 1}, "ifri_mini_ml_lib.metrics.evaluation_metrics.precision": {"tf": 1}, "ifri_mini_ml_lib.metrics.evaluation_metrics.recall": {"tf": 1}, "ifri_mini_ml_lib.metrics.evaluation_metrics.f1_score": {"tf": 1}, "ifri_mini_ml_lib.neural_networks.MLPClassifier.__init__": {"tf": 1}, "ifri_mini_ml_lib.neural_networks.MLPRegressor.__init__": {"tf": 1}}, "df": 13}}}, "a": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "k": {"docs": {"ifri_mini_ml_lib.classification.KNN.__init__": {"tf": 1}, "ifri_mini_ml_lib.preprocessing.preparation.MissingValueHandler.impute_knn": {"tf": 1}}, "df": 2}}, "r": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "t": {"docs": {"ifri_mini_ml_lib.preprocessing.preparation.MissingValueHandler.impute_regression": {"tf": 1}, "ifri_mini_ml_lib.preprocessing.preparation.CategoricalEncoder.__init__": {"tf": 1}}, "df": 2}}}}}, "o": {"docs": {}, "df": 0, "l": {"docs": {"ifri_mini_ml_lib.classification.LogisticRegression.__init__": {"tf": 1}, "ifri_mini_ml_lib.clustering.KMeans.__init__": {"tf": 1}, "ifri_mini_ml_lib.neural_networks.MLPClassifier.__init__": {"tf": 1}, "ifri_mini_ml_lib.neural_networks.MLPRegressor.__init__": {"tf": 1}}, "df": 4}}, "h": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "h": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "d": {"docs": {"ifri_mini_ml_lib.classification.LogisticRegression.predict": {"tf": 1}, "ifri_mini_ml_lib.preprocessing.preparation.MissingValueHandler.remove_missing": {"tf": 1}}, "df": 2}}}}}}}}, "u": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "e": {"docs": {"ifri_mini_ml_lib.metrics.bias_evaluation.demographic_parity_ratio": {"tf": 1}, "ifri_mini_ml_lib.metrics.bias_evaluation.demographic_parity_difference": {"tf": 1}, "ifri_mini_ml_lib.metrics.bias_evaluation.tpr_fpr_by_group": {"tf": 1}, "ifri_mini_ml_lib.metrics.bias_evaluation.equalized_odds_ratio": {"tf": 1}, "ifri_mini_ml_lib.metrics.bias_evaluation.equalized_odds_difference": {"tf": 1}, "ifri_mini_ml_lib.neural_networks.MLPClassifier.__init__": {"tf": 1}, "ifri_mini_ml_lib.neural_networks.MLPRegressor.__init__": {"tf": 1}}, "df": 7}}}}, "y": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "e": {"docs": {"ifri_mini_ml_lib.preprocessing.preparation.CategoricalEncoder.__init__": {"tf": 1}}, "df": 1, "s": {"docs": {"ifri_mini_ml_lib.model_selection.BayesianSearchCV.__init__": {"tf": 1}}, "df": 1}}}}, "s": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "e": {"docs": {"ifri_mini_ml_lib.preprocessing.dimensionality_reduction.TSNE.fit": {"tf": 1}}, "df": 1}}}, "i": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "e": {"docs": {"ifri_mini_ml_lib.preprocessing.dimensionality_reduction.TSNE.plot_results": {"tf": 1}}, "df": 1}}}}, "e": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "t": {"docs": {"ifri_mini_ml_lib.preprocessing.preparation.DataSplitter.train_test_split": {"tf": 1}, "ifri_mini_ml_lib.preprocessing.preparation.DataSplitter.stratified_train_test_split": {"tf": 1}, "ifri_mini_ml_lib.preprocessing.preparation.DataSplitter.temporal_train_test_split": {"tf": 1}, "ifri_mini_ml_lib.regression.SVR.__init__": {"tf": 1}, "ifri_mini_ml_lib.regression.SVR.predict": {"tf": 1}}, "df": 5}}}}, "l": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "t": {"docs": {"ifri_mini_ml_lib.association_rules.Apriori.fit": {"tf": 1}, "ifri_mini_ml_lib.association_rules.DataAdapter.convert_to_transactions": {"tf": 1.7320508075688772}, "ifri_mini_ml_lib.association_rules.DataAdapter.load_csv_to_transactions": {"tf": 1}, "ifri_mini_ml_lib.regression.LinearRegression.fit": {"tf": 1.4142135623730951}, "ifri_mini_ml_lib.regression.LinearRegression.predict": {"tf": 1.4142135623730951}, "ifri_mini_ml_lib.regression.PolynomialRegression.fit": {"tf": 1.4142135623730951}, "ifri_mini_ml_lib.regression.PolynomialRegression.predict": {"tf": 1.4142135623730951}}, "df": 7}}, "n": {"docs": {}, "df": 0, "k": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "e": {"docs": {"ifri_mini_ml_lib.clustering.HierarchicalClustering.__init__": {"tf": 1}}, "df": 1}}}}, "e": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "r": {"docs": {"ifri_mini_ml_lib.regression.LinearRegression.fit": {"tf": 1}}, "df": 1, "r": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"ifri_mini_ml_lib.regression.LinearRegression.fit": {"tf": 1}}, "df": 1}}}}}}}}}}}}}}, "b": {"docs": {"ifri_mini_ml_lib.neural_networks.MLPClassifier.fit": {"tf": 1}, "ifri_mini_ml_lib.neural_networks.MLPRegressor.fit": {"tf": 1}, "ifri_mini_ml_lib.preprocessing.dimensionality_reduction.PCA.fit": {"tf": 1}, "ifri_mini_ml_lib.preprocessing.dimensionality_reduction.TSNE.fit": {"tf": 1}, "ifri_mini_ml_lib.regression.LinearRegression.fit": {"tf": 1}, "ifri_mini_ml_lib.regression.PolynomialRegression.fit": {"tf": 1}}, "df": 6}}, "e": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "f": {"docs": {"ifri_mini_ml_lib.classification.DecisionTree.__init__": {"tf": 1}}, "df": 1}, "r": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"ifri_mini_ml_lib.classification.LogisticRegression.__init__": {"tf": 1}, "ifri_mini_ml_lib.neural_networks.MLPClassifier.__init__": {"tf": 1}, "ifri_mini_ml_lib.neural_networks.MLPRegressor.__init__": {"tf": 1}, "ifri_mini_ml_lib.preprocessing.dimensionality_reduction.TSNE.__init__": {"tf": 1}, "ifri_mini_ml_lib.regression.LinearRegression.__init__": {"tf": 1}, "ifri_mini_ml_lib.regression.PolynomialRegression.__init__": {"tf": 1}}, "df": 6}}}}}, "s": {"docs": {}, "df": 0, "t": {"docs": {"ifri_mini_ml_lib.regression.LinearRegression.__init__": {"tf": 1}, "ifri_mini_ml_lib.regression.PolynomialRegression.__init__": {"tf": 1}}, "df": 2}}}}, "a": {"docs": {}, "df": 0, "b": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "l": {"docs": {"ifri_mini_ml_lib.metrics.bias_evaluation.selection_rate": {"tf": 1}, "ifri_mini_ml_lib.metrics.bias_evaluation.selection_rate_per_group": {"tf": 1}, "ifri_mini_ml_lib.metrics.bias_evaluation.demographic_parity_ratio": {"tf": 1}, "ifri_mini_ml_lib.metrics.bias_evaluation.demographic_parity_difference": {"tf": 1}, "ifri_mini_ml_lib.metrics.bias_evaluation.tpr_fpr_by_group": {"tf": 1}, "ifri_mini_ml_lib.metrics.bias_evaluation.equalized_odds_ratio": {"tf": 1}, "ifri_mini_ml_lib.metrics.bias_evaluation.equalized_odds_difference": {"tf": 1}}, "df": 7, "s": {"docs": {"ifri_mini_ml_lib.clustering.HierarchicalClustering.plot_dendrogram": {"tf": 1}, "ifri_mini_ml_lib.metrics.evaluation_metrics.calculate_inertia": {"tf": 1}, "ifri_mini_ml_lib.metrics.evaluation_metrics.calculate_silhouette": {"tf": 1}}, "df": 3}}}}, "y": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"ifri_mini_ml_lib.neural_networks.MLPClassifier.__init__": {"tf": 1}, "ifri_mini_ml_lib.neural_networks.MLPRegressor.__init__": {"tf": 1}}, "df": 2}}}}}, "i": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "s": {"docs": {"ifri_mini_ml_lib.association_rules.Eclat.get_single_items_TIDset": {"tf": 1}}, "df": 1}}, "r": {"docs": {"ifri_mini_ml_lib.classification.LogisticRegression.__init__": {"tf": 1}, "ifri_mini_ml_lib.clustering.KMeans.__init__": {"tf": 1}, "ifri_mini_ml_lib.model_selection.BayesianSearchCV.__init__": {"tf": 1}, "ifri_mini_ml_lib.model_selection.RandomSearchCV.__init__": {"tf": 1}, "ifri_mini_ml_lib.neural_networks.MLPClassifier.__init__": {"tf": 1.4142135623730951}, "ifri_mini_ml_lib.neural_networks.MLPRegressor.__init__": {"tf": 1.4142135623730951}, "ifri_mini_ml_lib.preprocessing.dimensionality_reduction.TSNE.__init__": {"tf": 1}}, "df": 7}}}, "n": {"docs": {}, "df": 0, "t": {"docs": {"ifri_mini_ml_lib.association_rules.DataAdapter.load_csv_to_transactions": {"tf": 1}, "ifri_mini_ml_lib.neural_networks.MLPClassifier.__init__": {"tf": 2.23606797749979}, "ifri_mini_ml_lib.neural_networks.MLPRegressor.__init__": {"tf": 2.23606797749979}, "ifri_mini_ml_lib.preprocessing.dimensionality_reduction.PCA.__init__": {"tf": 1}, "ifri_mini_ml_lib.regression.LinearRegression.__init__": {"tf": 1}, "ifri_mini_ml_lib.regression.PolynomialRegression.__init__": {"tf": 1.4142135623730951}, "ifri_mini_ml_lib.regression.SVR.__init__": {"tf": 1.4142135623730951}}, "df": 7}, "i": {"docs": {}, "df": 0, "t": {"docs": {"ifri_mini_ml_lib.clustering.KMeans.__init__": {"tf": 1}, "ifri_mini_ml_lib.model_selection.BayesianSearchCV.__init__": {"tf": 1}, "ifri_mini_ml_lib.preprocessing.dimensionality_reduction.TSNE.__init__": {"tf": 1}}, "df": 3}}}, "m": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "y": {"docs": {"ifri_mini_ml_lib.classification.DecisionTree.__init__": {"tf": 1}}, "df": 1}}}}}}}, "f": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "i": {"docs": {"ifri_mini_ml_lib.neural_networks.MLPClassifier.fit": {"tf": 1}, "ifri_mini_ml_lib.neural_networks.MLPRegressor.fit": {"tf": 1}, "ifri_mini_ml_lib.preprocessing.dimensionality_reduction.PCA.fit": {"tf": 1}, "ifri_mini_ml_lib.preprocessing.dimensionality_reduction.TSNE.fit": {"tf": 1}, "ifri_mini_ml_lib.regression.LinearRegression.fit": {"tf": 1}, "ifri_mini_ml_lib.regression.PolynomialRegression.fit": {"tf": 1}}, "df": 6}}}}, "d": {"docs": {"ifri_mini_ml_lib.regression.SVR.__init__": {"tf": 1}}, "df": 1, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "a": {"docs": {"ifri_mini_ml_lib.association_rules.DataAdapter.convert_to_transactions": {"tf": 1}, "ifri_mini_ml_lib.clustering.DBSCAN.fit_predict": {"tf": 1}, "ifri_mini_ml_lib.clustering.DBSCAN.plot_clusters": {"tf": 1}, "ifri_mini_ml_lib.clustering.HierarchicalClustering.fit_predict": {"tf": 1}, "ifri_mini_ml_lib.clustering.HierarchicalClustering.plot_clusters": {"tf": 1}, "ifri_mini_ml_lib.metrics.evaluation_metrics.calculate_inertia": {"tf": 1}, "ifri_mini_ml_lib.metrics.evaluation_metrics.calculate_silhouette": {"tf": 1}}, "df": 7, "f": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "e": {"docs": {"ifri_mini_ml_lib.association_rules.DataAdapter.convert_to_transactions": {"tf": 1}, "ifri_mini_ml_lib.regression.SVR.predict": {"tf": 1}}, "df": 2}}}}}}}}, "e": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "h": {"docs": {"ifri_mini_ml_lib.classification.DecisionTree.__init__": {"tf": 1}, "ifri_mini_ml_lib.classification.DecisionTree.fit": {"tf": 1}}, "df": 2}}}, "c": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "e": {"docs": {"ifri_mini_ml_lib.classification.DecisionTree.__init__": {"tf": 1}}, "df": 1}}}}}}, "g": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "e": {"docs": {"ifri_mini_ml_lib.regression.PolynomialRegression.__init__": {"tf": 1}}, "df": 1}}}}}, "i": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "t": {"docs": {"ifri_mini_ml_lib.metrics.bias_evaluation.selection_rate_per_group": {"tf": 1}, "ifri_mini_ml_lib.metrics.bias_evaluation.demographic_parity_ratio": {"tf": 1}, "ifri_mini_ml_lib.metrics.bias_evaluation.demographic_parity_difference": {"tf": 1}, "ifri_mini_ml_lib.metrics.bias_evaluation.tpr_fpr_by_group": {"tf": 1.4142135623730951}, "ifri_mini_ml_lib.metrics.bias_evaluation.equalized_odds_ratio": {"tf": 1.4142135623730951}, "ifri_mini_ml_lib.metrics.bias_evaluation.equalized_odds_difference": {"tf": 1.4142135623730951}}, "df": 6}}, "m": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "y": {"docs": {"ifri_mini_ml_lib.preprocessing.dimensionality_reduction.PCA.fit": {"tf": 1}, "ifri_mini_ml_lib.preprocessing.dimensionality_reduction.TSNE.fit": {"tf": 1}}, "df": 2}}}}}}}}}}}}}, "f": {"docs": {"ifri_mini_ml_lib.regression.PolynomialRegression.__init__": {"tf": 1}}, "df": 1}}, "u": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"ifri_mini_ml_lib.association_rules.DataAdapter.convert_to_transactions": {"tf": 1}, "ifri_mini_ml_lib.regression.LinearRegression.fit": {"tf": 1.4142135623730951}, "ifri_mini_ml_lib.regression.LinearRegression.predict": {"tf": 1}, "ifri_mini_ml_lib.regression.PolynomialRegression.fit": {"tf": 1.4142135623730951}, "ifri_mini_ml_lib.regression.PolynomialRegression.predict": {"tf": 1}, "ifri_mini_ml_lib.regression.SVR.predict": {"tf": 1}}, "df": 6}}}}}, "p": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "s": {"docs": {"ifri_mini_ml_lib.association_rules.DataAdapter.convert_to_transactions": {"tf": 1}, "ifri_mini_ml_lib.regression.SVR.predict": {"tf": 1}}, "df": 2}}}}, "t": {"docs": {}, "df": 0, "h": {"docs": {"ifri_mini_ml_lib.association_rules.DataAdapter.load_csv_to_transactions": {"tf": 1}}, "df": 1}}, "r": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "m": {"docs": {"ifri_mini_ml_lib.model_selection.BayesianSearchCV.__init__": {"tf": 1.4142135623730951}, "ifri_mini_ml_lib.model_selection.GridSearchCV.__init__": {"tf": 1}, "ifri_mini_ml_lib.model_selection.RandomSearchCV.__init__": {"tf": 1}}, "df": 3}}}}, "r": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "d": {"docs": {"ifri_mini_ml_lib.metrics.bias_evaluation.selection_rate": {"tf": 1}, "ifri_mini_ml_lib.metrics.bias_evaluation.selection_rate_per_group": {"tf": 1}, "ifri_mini_ml_lib.metrics.bias_evaluation.demographic_parity_ratio": {"tf": 1}, "ifri_mini_ml_lib.metrics.bias_evaluation.demographic_parity_difference": {"tf": 1}, "ifri_mini_ml_lib.metrics.bias_evaluation.tpr_fpr_by_group": {"tf": 1}, "ifri_mini_ml_lib.metrics.bias_evaluation.equalized_odds_ratio": {"tf": 1}, "ifri_mini_ml_lib.metrics.bias_evaluation.equalized_odds_difference": {"tf": 1}, "ifri_mini_ml_lib.metrics.evaluation_metrics.evaluate_model": {"tf": 1}, "ifri_mini_ml_lib.metrics.evaluation_metrics.confusion_matrix": {"tf": 1}, "ifri_mini_ml_lib.metrics.evaluation_metrics.accuracy": {"tf": 1}, "ifri_mini_ml_lib.metrics.evaluation_metrics.precision": {"tf": 1}, "ifri_mini_ml_lib.metrics.evaluation_metrics.recall": {"tf": 1}, "ifri_mini_ml_lib.metrics.evaluation_metrics.f1_score": {"tf": 1}}, "df": 13}, "t": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "d": {"docs": {"ifri_mini_ml_lib.model_selection.BaggingClassifier.__init__": {"tf": 1}, "ifri_mini_ml_lib.model_selection.BaggingRegressor.__init__": {"tf": 1}}, "df": 2}}}}}}}, "p": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"ifri_mini_ml_lib.preprocessing.dimensionality_reduction.PCA.fit": {"tf": 1}, "ifri_mini_ml_lib.preprocessing.dimensionality_reduction.TSNE.fit": {"tf": 1}}, "df": 2}}}}}}}}}}}}, "o": {"docs": {}, "df": 0, "s": {"docs": {"ifri_mini_ml_lib.metrics.bias_evaluation.selection_rate": {"tf": 1}, "ifri_mini_ml_lib.metrics.bias_evaluation.selection_rate_per_group": {"tf": 1}, "ifri_mini_ml_lib.metrics.bias_evaluation.demographic_parity_ratio": {"tf": 1}, "ifri_mini_ml_lib.metrics.bias_evaluation.demographic_parity_difference": {"tf": 1}, "ifri_mini_ml_lib.metrics.bias_evaluation.tpr_fpr_by_group": {"tf": 1}, "ifri_mini_ml_lib.metrics.bias_evaluation.equalized_odds_ratio": {"tf": 1}, "ifri_mini_ml_lib.metrics.bias_evaluation.equalized_odds_difference": {"tf": 1}}, "df": 7, "i": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "v": {"docs": {}, "df": 0, "e": {"docs": {"ifri_mini_ml_lib.metrics.evaluation_metrics.precision": {"tf": 1}, "ifri_mini_ml_lib.metrics.evaluation_metrics.recall": {"tf": 1}, "ifri_mini_ml_lib.metrics.evaluation_metrics.f1_score": {"tf": 1}}, "df": 3}}}}}}, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "s": {"docs": {"ifri_mini_ml_lib.model_selection.BayesianSearchCV.__init__": {"tf": 1}}, "df": 1}}}}, "l": {"docs": {}, "df": 0, "y": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "l": {"docs": {"ifri_mini_ml_lib.regression.PolynomialRegression.fit": {"tf": 1}}, "df": 1, "r": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"ifri_mini_ml_lib.regression.PolynomialRegression.fit": {"tf": 1}}, "df": 1}}}}}}}}}}}}}}}}}}}, "c": {"docs": {}, "df": 0, "a": {"docs": {"ifri_mini_ml_lib.preprocessing.dimensionality_reduction.PCA.fit": {"tf": 1.4142135623730951}, "ifri_mini_ml_lib.preprocessing.dimensionality_reduction.TSNE.__init__": {"tf": 1}}, "df": 2}}, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "x": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "y": {"docs": {"ifri_mini_ml_lib.preprocessing.dimensionality_reduction.TSNE.__init__": {"tf": 1}}, "df": 1}}}}}}}}}}, "n": {"docs": {"ifri_mini_ml_lib.clustering.KMeans.__init__": {"tf": 1}, "ifri_mini_ml_lib.clustering.HierarchicalClustering.__init__": {"tf": 1}, "ifri_mini_ml_lib.model_selection.BaggingClassifier.__init__": {"tf": 1}, "ifri_mini_ml_lib.model_selection.BaggingRegressor.__init__": {"tf": 1}, "ifri_mini_ml_lib.model_selection.BayesianSearchCV.__init__": {"tf": 1}, "ifri_mini_ml_lib.model_selection.RandomSearchCV.__init__": {"tf": 1}, "ifri_mini_ml_lib.neural_networks.MLPClassifier.__init__": {"tf": 1}, "ifri_mini_ml_lib.neural_networks.MLPRegressor.__init__": {"tf": 1}, "ifri_mini_ml_lib.preprocessing.dimensionality_reduction.PCA.__init__": {"tf": 1}, "ifri_mini_ml_lib.preprocessing.dimensionality_reduction.TSNE.__init__": {"tf": 1.4142135623730951}, "ifri_mini_ml_lib.preprocessing.dimensionality_reduction.TSNE.generate_test_data": {"tf": 1}}, "df": 11, "u": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "y": {"docs": {"ifri_mini_ml_lib.association_rules.DataAdapter.convert_to_transactions": {"tf": 1}, "ifri_mini_ml_lib.metrics.bias_evaluation.selection_rate": {"tf": 1.7320508075688772}, "ifri_mini_ml_lib.metrics.bias_evaluation.selection_rate_per_group": {"tf": 2}, "ifri_mini_ml_lib.metrics.bias_evaluation.demographic_parity_ratio": {"tf": 1.7320508075688772}, "ifri_mini_ml_lib.metrics.bias_evaluation.demographic_parity_difference": {"tf": 1.7320508075688772}, "ifri_mini_ml_lib.metrics.bias_evaluation.tpr_fpr_by_group": {"tf": 1.7320508075688772}, "ifri_mini_ml_lib.metrics.bias_evaluation.equalized_odds_ratio": {"tf": 1.7320508075688772}, "ifri_mini_ml_lib.metrics.bias_evaluation.equalized_odds_difference": {"tf": 1.7320508075688772}, "ifri_mini_ml_lib.neural_networks.MLPClassifier.fit": {"tf": 1.4142135623730951}, "ifri_mini_ml_lib.neural_networks.MLPClassifier.predict": {"tf": 1.4142135623730951}, "ifri_mini_ml_lib.neural_networks.MLPClassifier.predict_proba": {"tf": 1.4142135623730951}, "ifri_mini_ml_lib.neural_networks.MLPClassifier.score": {"tf": 1.4142135623730951}, "ifri_mini_ml_lib.neural_networks.MLPRegressor.fit": {"tf": 1.4142135623730951}, "ifri_mini_ml_lib.neural_networks.MLPRegressor.predict": {"tf": 1.4142135623730951}, "ifri_mini_ml_lib.neural_networks.MLPRegressor.score": {"tf": 1.4142135623730951}, "ifri_mini_ml_lib.preprocessing.dimensionality_reduction.PCA.fit": {"tf": 1}, "ifri_mini_ml_lib.preprocessing.dimensionality_reduction.PCA.transform": {"tf": 1.4142135623730951}, "ifri_mini_ml_lib.preprocessing.dimensionality_reduction.PCA.fit_transform": {"tf": 1.4142135623730951}, "ifri_mini_ml_lib.preprocessing.dimensionality_reduction.PCA.explained_variances": {"tf": 1}, "ifri_mini_ml_lib.preprocessing.dimensionality_reduction.PCA.explained_variances_ratio": {"tf": 1}, "ifri_mini_ml_lib.preprocessing.dimensionality_reduction.TSNE.fit": {"tf": 1}, "ifri_mini_ml_lib.preprocessing.dimensionality_reduction.TSNE.fit_transform": {"tf": 1.4142135623730951}, "ifri_mini_ml_lib.regression.LinearRegression.fit": {"tf": 1.4142135623730951}, "ifri_mini_ml_lib.regression.LinearRegression.predict": {"tf": 1}, "ifri_mini_ml_lib.regression.PolynomialRegression.fit": {"tf": 1.4142135623730951}, "ifri_mini_ml_lib.regression.PolynomialRegression.predict": {"tf": 1}, "ifri_mini_ml_lib.regression.SVR.linear_kernel": {"tf": 1.7320508075688772}, "ifri_mini_ml_lib.regression.SVR.fit": {"tf": 1.4142135623730951}, "ifri_mini_ml_lib.regression.SVR.predict": {"tf": 1.4142135623730951}}, "df": 29}}}}, "d": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "y": {"docs": {"ifri_mini_ml_lib.association_rules.DataAdapter.convert_to_transactions": {"tf": 1}, "ifri_mini_ml_lib.metrics.bias_evaluation.selection_rate": {"tf": 1.7320508075688772}, "ifri_mini_ml_lib.metrics.bias_evaluation.selection_rate_per_group": {"tf": 2}, "ifri_mini_ml_lib.metrics.bias_evaluation.demographic_parity_ratio": {"tf": 1.7320508075688772}, "ifri_mini_ml_lib.metrics.bias_evaluation.demographic_parity_difference": {"tf": 1.7320508075688772}, "ifri_mini_ml_lib.metrics.bias_evaluation.tpr_fpr_by_group": {"tf": 1.7320508075688772}, "ifri_mini_ml_lib.metrics.bias_evaluation.equalized_odds_ratio": {"tf": 1.7320508075688772}, "ifri_mini_ml_lib.metrics.bias_evaluation.equalized_odds_difference": {"tf": 1.7320508075688772}, "ifri_mini_ml_lib.neural_networks.MLPClassifier.fit": {"tf": 1.4142135623730951}, "ifri_mini_ml_lib.neural_networks.MLPClassifier.predict": {"tf": 1.4142135623730951}, "ifri_mini_ml_lib.neural_networks.MLPClassifier.predict_proba": {"tf": 1.4142135623730951}, "ifri_mini_ml_lib.neural_networks.MLPClassifier.score": {"tf": 1.4142135623730951}, "ifri_mini_ml_lib.neural_networks.MLPRegressor.fit": {"tf": 1.4142135623730951}, "ifri_mini_ml_lib.neural_networks.MLPRegressor.predict": {"tf": 1.4142135623730951}, "ifri_mini_ml_lib.neural_networks.MLPRegressor.score": {"tf": 1.4142135623730951}, "ifri_mini_ml_lib.preprocessing.dimensionality_reduction.PCA.fit": {"tf": 1}, "ifri_mini_ml_lib.preprocessing.dimensionality_reduction.PCA.transform": {"tf": 1.4142135623730951}, "ifri_mini_ml_lib.preprocessing.dimensionality_reduction.PCA.fit_transform": {"tf": 1.4142135623730951}, "ifri_mini_ml_lib.preprocessing.dimensionality_reduction.PCA.explained_variances": {"tf": 1}, "ifri_mini_ml_lib.preprocessing.dimensionality_reduction.PCA.explained_variances_ratio": {"tf": 1}, "ifri_mini_ml_lib.preprocessing.dimensionality_reduction.TSNE.fit": {"tf": 1}, "ifri_mini_ml_lib.preprocessing.dimensionality_reduction.TSNE.fit_transform": {"tf": 1.4142135623730951}, "ifri_mini_ml_lib.regression.LinearRegression.fit": {"tf": 1.4142135623730951}, "ifri_mini_ml_lib.regression.LinearRegression.predict": {"tf": 1}, "ifri_mini_ml_lib.regression.PolynomialRegression.fit": {"tf": 1.4142135623730951}, "ifri_mini_ml_lib.regression.PolynomialRegression.predict": {"tf": 1}, "ifri_mini_ml_lib.regression.SVR.linear_kernel": {"tf": 1.7320508075688772}, "ifri_mini_ml_lib.regression.SVR.fit": {"tf": 1.4142135623730951}, "ifri_mini_ml_lib.regression.SVR.predict": {"tf": 1.4142135623730951}}, "df": 29}}}}}}, "o": {"docs": {"ifri_mini_ml_lib.neural_networks.MLPClassifier.__init__": {"tf": 1}, "ifri_mini_ml_lib.neural_networks.MLPRegressor.__init__": {"tf": 1}}, "df": 2, "n": {"docs": {}, "df": 0, "e": {"docs": {"ifri_mini_ml_lib.association_rules.DataAdapter.convert_to_transactions": {"tf": 1}, "ifri_mini_ml_lib.association_rules.DataAdapter.load_csv_to_transactions": {"tf": 1}, "ifri_mini_ml_lib.classification.DecisionTree.__init__": {"tf": 1}, "ifri_mini_ml_lib.clustering.KMeans.__init__": {"tf": 1}, "ifri_mini_ml_lib.clustering.HierarchicalClustering.__init__": {"tf": 1}, "ifri_mini_ml_lib.clustering.HierarchicalClustering.fit_predict": {"tf": 1}, "ifri_mini_ml_lib.clustering.HierarchicalClustering.plot_dendrogram": {"tf": 1}, "ifri_mini_ml_lib.metrics.bias_evaluation.selection_rate": {"tf": 1}, "ifri_mini_ml_lib.metrics.bias_evaluation.selection_rate_per_group": {"tf": 1}, "ifri_mini_ml_lib.metrics.bias_evaluation.demographic_parity_ratio": {"tf": 1}, "ifri_mini_ml_lib.metrics.bias_evaluation.demographic_parity_difference": {"tf": 1}, "ifri_mini_ml_lib.metrics.evaluation_metrics.confusion_matrix": {"tf": 1}, "ifri_mini_ml_lib.model_selection.BaggingClassifier.__init__": {"tf": 1.7320508075688772}, "ifri_mini_ml_lib.model_selection.BaggingRegressor.__init__": {"tf": 1.7320508075688772}, "ifri_mini_ml_lib.model_selection.BayesianSearchCV.__init__": {"tf": 1.4142135623730951}, "ifri_mini_ml_lib.model_selection.RandomSearchCV.__init__": {"tf": 1}, "ifri_mini_ml_lib.neural_networks.MLPClassifier.__init__": {"tf": 1}, "ifri_mini_ml_lib.neural_networks.MLPRegressor.__init__": {"tf": 1}, "ifri_mini_ml_lib.preprocessing.dimensionality_reduction.PCA.plot_cov_matrix": {"tf": 1}, "ifri_mini_ml_lib.preprocessing.dimensionality_reduction.PCA.plot_cumulative_explained_variance_ratio": {"tf": 1}, "ifri_mini_ml_lib.preprocessing.dimensionality_reduction.TSNE.__init__": {"tf": 1}, "ifri_mini_ml_lib.preprocessing.dimensionality_reduction.TSNE.generate_test_data": {"tf": 1}, "ifri_mini_ml_lib.preprocessing.dimensionality_reduction.TSNE.plot_results": {"tf": 1}, "ifri_mini_ml_lib.preprocessing.preparation.CategoricalEncoder.__init__": {"tf": 1}, "ifri_mini_ml_lib.preprocessing.preparation.CategoricalEncoder.fit": {"tf": 1}, "ifri_mini_ml_lib.preprocessing.preparation.CategoricalEncoder.fit_transform": {"tf": 1}, "ifri_mini_ml_lib.preprocessing.preparation.DataSplitter.__init__": {"tf": 1}, "ifri_mini_ml_lib.preprocessing.preparation.DataSplitter.train_test_split": {"tf": 1}, "ifri_mini_ml_lib.preprocessing.preparation.DataSplitter.temporal_train_test_split": {"tf": 1}, "ifri_mini_ml_lib.preprocessing.preparation.DataSplitter.k_fold_split": {"tf": 1}, "ifri_mini_ml_lib.regression.PolynomialRegression.__init__": {"tf": 1}, "ifri_mini_ml_lib.regression.SVR.linear_kernel": {"tf": 1}, "ifri_mini_ml_lib.regression.SVR.polynomial_kernel": {"tf": 1}, "ifri_mini_ml_lib.regression.SVR.rbf_kernel": {"tf": 1}, "ifri_mini_ml_lib.regression.SVR.sigmoid_kernel": {"tf": 1}, "ifri_mini_ml_lib.regression.SVR.fit": {"tf": 1}}, "df": 36}}, "r": {"docs": {}, "df": 0, "m": {"docs": {"ifri_mini_ml_lib.preprocessing.dimensionality_reduction.TSNE.__init__": {"tf": 1}}, "df": 1}}}, "e": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "l": {"docs": {"ifri_mini_ml_lib.neural_networks.MLPClassifier.fit": {"tf": 1}, "ifri_mini_ml_lib.neural_networks.MLPRegressor.fit": {"tf": 1}}, "df": 2}}}}, "t": {"docs": {}, "df": 0, "w": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "k": {"docs": {}, "df": 0, "s": {"docs": {"ifri_mini_ml_lib.neural_networks.MLPClassifier.fit": {"tf": 1}, "ifri_mini_ml_lib.neural_networks.MLPRegressor.fit": {"tf": 1}}, "df": 2}}}}}}}}, "b": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "y": {"docs": {"ifri_mini_ml_lib.association_rules.DataAdapter.convert_to_transactions": {"tf": 1}}, "df": 1}}}}}, "o": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "l": {"docs": {"ifri_mini_ml_lib.association_rules.DataAdapter.convert_to_transactions": {"tf": 1}, "ifri_mini_ml_lib.neural_networks.MLPClassifier.__init__": {"tf": 1.4142135623730951}, "ifri_mini_ml_lib.neural_networks.MLPRegressor.__init__": {"tf": 1.4142135623730951}}, "df": 3}}, "u": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "s": {"docs": {"ifri_mini_ml_lib.model_selection.BayesianSearchCV.__init__": {"tf": 1}}, "df": 1}}}}}, "a": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "e": {"docs": {"ifri_mini_ml_lib.model_selection.BaggingClassifier.__init__": {"tf": 1}, "ifri_mini_ml_lib.model_selection.BaggingRegressor.__init__": {"tf": 1}}, "df": 2}}, "t": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "h": {"docs": {"ifri_mini_ml_lib.neural_networks.MLPClassifier.__init__": {"tf": 1}, "ifri_mini_ml_lib.neural_networks.MLPRegressor.__init__": {"tf": 1}}, "df": 2}}}}, "e": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "a": {"1": {"docs": {"ifri_mini_ml_lib.neural_networks.MLPClassifier.__init__": {"tf": 1}, "ifri_mini_ml_lib.neural_networks.MLPRegressor.__init__": {"tf": 1}}, "df": 2}, "2": {"docs": {"ifri_mini_ml_lib.neural_networks.MLPClassifier.__init__": {"tf": 1}, "ifri_mini_ml_lib.neural_networks.MLPRegressor.__init__": {"tf": 1}}, "df": 2}, "docs": {}, "df": 0}}}, "l": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "b": {"docs": {}, "df": 0, "s": {"docs": {"ifri_mini_ml_lib.preprocessing.dimensionality_reduction.TSNE.generate_test_data": {"tf": 1}}, "df": 1}}}}}, "o": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "l": {"docs": {"ifri_mini_ml_lib.association_rules.DataAdapter.convert_to_transactions": {"tf": 1}, "ifri_mini_ml_lib.association_rules.DataAdapter.load_csv_to_transactions": {"tf": 1}, "ifri_mini_ml_lib.metrics.bias_evaluation.selection_rate": {"tf": 1.4142135623730951}, "ifri_mini_ml_lib.metrics.bias_evaluation.selection_rate_per_group": {"tf": 1.4142135623730951}, "ifri_mini_ml_lib.metrics.bias_evaluation.demographic_parity_ratio": {"tf": 1}, "ifri_mini_ml_lib.metrics.bias_evaluation.demographic_parity_difference": {"tf": 1}, "ifri_mini_ml_lib.neural_networks.MLPClassifier.__init__": {"tf": 1}, "ifri_mini_ml_lib.neural_networks.MLPRegressor.__init__": {"tf": 1}, "ifri_mini_ml_lib.regression.SVR.linear_kernel": {"tf": 1}, "ifri_mini_ml_lib.regression.SVR.get_kernel": {"tf": 1}}, "df": 10}}}}}}}, "n": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "h": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "t": {"docs": {"ifri_mini_ml_lib.preprocessing.preparation.CategoricalEncoder.__init__": {"tf": 1}}, "df": 1}}}}}}, "h": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"ifri_mini_ml_lib.association_rules.DataAdapter.load_csv_to_transactions": {"tf": 1}}, "df": 1}}}}}, "i": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {"ifri_mini_ml_lib.neural_networks.MLPClassifier.__init__": {"tf": 1}, "ifri_mini_ml_lib.neural_networks.MLPRegressor.__init__": {"tf": 1}}, "df": 2}}}}}}, "x": {"docs": {"ifri_mini_ml_lib.classification.DecisionTree.fit": {"tf": 1}, "ifri_mini_ml_lib.classification.DecisionTree.predict": {"tf": 1}, "ifri_mini_ml_lib.classification.KNN.fit": {"tf": 1}, "ifri_mini_ml_lib.classification.KNN.predict": {"tf": 1}, "ifri_mini_ml_lib.classification.LogisticRegression.fit": {"tf": 1}, "ifri_mini_ml_lib.classification.LogisticRegression.predict_proba": {"tf": 1}, "ifri_mini_ml_lib.classification.LogisticRegression.predict": {"tf": 1}, "ifri_mini_ml_lib.clustering.KMeans.fit": {"tf": 1}, "ifri_mini_ml_lib.clustering.KMeans.predict": {"tf": 1}, "ifri_mini_ml_lib.clustering.KMeans.fit_predict": {"tf": 1}, "ifri_mini_ml_lib.clustering.KMeans.plot_clusters": {"tf": 1}, "ifri_mini_ml_lib.model_selection.BaggingClassifier.fit": {"tf": 1}, "ifri_mini_ml_lib.model_selection.BaggingClassifier.predict": {"tf": 1}, "ifri_mini_ml_lib.model_selection.BaggingRegressor.fit": {"tf": 1}, "ifri_mini_ml_lib.model_selection.BaggingRegressor.predict": {"tf": 1}, "ifri_mini_ml_lib.model_selection.BayesianSearchCV.fit": {"tf": 1}, "ifri_mini_ml_lib.model_selection.GridSearchCV.fit": {"tf": 1}, "ifri_mini_ml_lib.model_selection.RandomSearchCV.fit": {"tf": 1}, "ifri_mini_ml_lib.neural_networks.MLPClassifier.fit": {"tf": 1}, "ifri_mini_ml_lib.neural_networks.MLPClassifier.predict": {"tf": 1}, "ifri_mini_ml_lib.neural_networks.MLPClassifier.predict_proba": {"tf": 1}, "ifri_mini_ml_lib.neural_networks.MLPClassifier.score": {"tf": 1}, "ifri_mini_ml_lib.neural_networks.MLPRegressor.fit": {"tf": 1}, "ifri_mini_ml_lib.neural_networks.MLPRegressor.predict": {"tf": 1}, "ifri_mini_ml_lib.neural_networks.MLPRegressor.score": {"tf": 1}, "ifri_mini_ml_lib.preprocessing.dimensionality_reduction.PCA.fit": {"tf": 1}, "ifri_mini_ml_lib.preprocessing.dimensionality_reduction.PCA.transform": {"tf": 1}, "ifri_mini_ml_lib.preprocessing.dimensionality_reduction.PCA.fit_transform": {"tf": 1}, "ifri_mini_ml_lib.preprocessing.dimensionality_reduction.TSNE.fit": {"tf": 1}, "ifri_mini_ml_lib.preprocessing.dimensionality_reduction.TSNE.fit_transform": {"tf": 1}, "ifri_mini_ml_lib.preprocessing.dimensionality_reduction.TSNE.plot_results": {"tf": 1}, "ifri_mini_ml_lib.preprocessing.preparation.MinMaxScaler.fit": {"tf": 1}, "ifri_mini_ml_lib.preprocessing.preparation.MinMaxScaler.transform": {"tf": 1}, "ifri_mini_ml_lib.preprocessing.preparation.MinMaxScaler.fit_transform": {"tf": 1}, "ifri_mini_ml_lib.preprocessing.preparation.MinMaxScaler.inverse_transform": {"tf": 1}, "ifri_mini_ml_lib.preprocessing.preparation.MissingValueHandler.remove_missing": {"tf": 1}, "ifri_mini_ml_lib.preprocessing.preparation.MissingValueHandler.impute_statistical": {"tf": 1}, "ifri_mini_ml_lib.preprocessing.preparation.MissingValueHandler.impute_default": {"tf": 1}, "ifri_mini_ml_lib.preprocessing.preparation.MissingValueHandler.impute_knn": {"tf": 1}, "ifri_mini_ml_lib.preprocessing.preparation.MissingValueHandler.impute_regression": {"tf": 1}, "ifri_mini_ml_lib.preprocessing.preparation.StandardScaler.fit": {"tf": 1}, "ifri_mini_ml_lib.preprocessing.preparation.StandardScaler.transform": {"tf": 1}, "ifri_mini_ml_lib.preprocessing.preparation.StandardScaler.fit_transform": {"tf": 1}, "ifri_mini_ml_lib.preprocessing.preparation.StandardScaler.inverse_transform": {"tf": 1}, "ifri_mini_ml_lib.preprocessing.preparation.CategoricalEncoder.fit": {"tf": 1}, "ifri_mini_ml_lib.preprocessing.preparation.CategoricalEncoder.transform": {"tf": 1}, "ifri_mini_ml_lib.preprocessing.preparation.CategoricalEncoder.fit_transform": {"tf": 1}, "ifri_mini_ml_lib.preprocessing.preparation.DataSplitter.train_test_split": {"tf": 1}, "ifri_mini_ml_lib.preprocessing.preparation.DataSplitter.stratified_train_test_split": {"tf": 1}, "ifri_mini_ml_lib.preprocessing.preparation.DataSplitter.temporal_train_test_split": {"tf": 1}, "ifri_mini_ml_lib.preprocessing.preparation.DataSplitter.k_fold_split": {"tf": 1}, "ifri_mini_ml_lib.regression.LinearRegression.fit": {"tf": 1}, "ifri_mini_ml_lib.regression.LinearRegression.predict": {"tf": 1}, "ifri_mini_ml_lib.regression.PolynomialRegression.fit": {"tf": 1}, "ifri_mini_ml_lib.regression.PolynomialRegression.predict": {"tf": 1}, "ifri_mini_ml_lib.regression.SVR.linear_kernel": {"tf": 1}, "ifri_mini_ml_lib.regression.SVR.polynomial_kernel": {"tf": 1}, "ifri_mini_ml_lib.regression.SVR.rbf_kernel": {"tf": 1}, "ifri_mini_ml_lib.regression.SVR.sigmoid_kernel": {"tf": 1}, "ifri_mini_ml_lib.regression.SVR.fit": {"tf": 1}, "ifri_mini_ml_lib.regression.SVR.predict": {"tf": 1}}, "df": 61}, "y": {"docs": {"ifri_mini_ml_lib.classification.DecisionTree.fit": {"tf": 1}, "ifri_mini_ml_lib.classification.KNN.fit": {"tf": 1}, "ifri_mini_ml_lib.classification.LogisticRegression.fit": {"tf": 1}, "ifri_mini_ml_lib.metrics.bias_evaluation.selection_rate": {"tf": 1.4142135623730951}, "ifri_mini_ml_lib.metrics.bias_evaluation.selection_rate_per_group": {"tf": 1.4142135623730951}, "ifri_mini_ml_lib.metrics.bias_evaluation.demographic_parity_ratio": {"tf": 1}, "ifri_mini_ml_lib.metrics.bias_evaluation.demographic_parity_difference": {"tf": 1}, "ifri_mini_ml_lib.metrics.bias_evaluation.tpr_fpr_by_group": {"tf": 1.4142135623730951}, "ifri_mini_ml_lib.metrics.bias_evaluation.equalized_odds_ratio": {"tf": 1.4142135623730951}, "ifri_mini_ml_lib.metrics.bias_evaluation.equalized_odds_difference": {"tf": 1.4142135623730951}, "ifri_mini_ml_lib.metrics.evaluation_metrics.evaluate_model": {"tf": 1.4142135623730951}, "ifri_mini_ml_lib.metrics.evaluation_metrics.confusion_matrix": {"tf": 1.4142135623730951}, "ifri_mini_ml_lib.metrics.evaluation_metrics.accuracy": {"tf": 1.4142135623730951}, "ifri_mini_ml_lib.metrics.evaluation_metrics.precision": {"tf": 1.4142135623730951}, "ifri_mini_ml_lib.metrics.evaluation_metrics.recall": {"tf": 1.4142135623730951}, "ifri_mini_ml_lib.metrics.evaluation_metrics.f1_score": {"tf": 1.4142135623730951}, "ifri_mini_ml_lib.model_selection.BaggingClassifier.fit": {"tf": 1}, "ifri_mini_ml_lib.model_selection.BaggingRegressor.fit": {"tf": 1}, "ifri_mini_ml_lib.model_selection.BayesianSearchCV.fit": {"tf": 1}, "ifri_mini_ml_lib.model_selection.GridSearchCV.fit": {"tf": 1}, "ifri_mini_ml_lib.model_selection.RandomSearchCV.fit": {"tf": 1}, "ifri_mini_ml_lib.neural_networks.MLPClassifier.fit": {"tf": 1}, "ifri_mini_ml_lib.neural_networks.MLPClassifier.score": {"tf": 1}, "ifri_mini_ml_lib.neural_networks.MLPRegressor.fit": {"tf": 1}, "ifri_mini_ml_lib.neural_networks.MLPRegressor.score": {"tf": 1}, "ifri_mini_ml_lib.preprocessing.dimensionality_reduction.TSNE.plot_results": {"tf": 1}, "ifri_mini_ml_lib.preprocessing.preparation.CategoricalEncoder.fit": {"tf": 1}, "ifri_mini_ml_lib.preprocessing.preparation.CategoricalEncoder.fit_transform": {"tf": 1}, "ifri_mini_ml_lib.preprocessing.preparation.DataSplitter.train_test_split": {"tf": 1}, "ifri_mini_ml_lib.preprocessing.preparation.DataSplitter.stratified_train_test_split": {"tf": 1}, "ifri_mini_ml_lib.preprocessing.preparation.DataSplitter.temporal_train_test_split": {"tf": 1}, "ifri_mini_ml_lib.preprocessing.preparation.DataSplitter.k_fold_split": {"tf": 1}, "ifri_mini_ml_lib.regression.LinearRegression.fit": {"tf": 1}, "ifri_mini_ml_lib.regression.PolynomialRegression.fit": {"tf": 1}, "ifri_mini_ml_lib.regression.SVR.linear_kernel": {"tf": 1}, "ifri_mini_ml_lib.regression.SVR.polynomial_kernel": {"tf": 1}, "ifri_mini_ml_lib.regression.SVR.rbf_kernel": {"tf": 1}, "ifri_mini_ml_lib.regression.SVR.sigmoid_kernel": {"tf": 1}, "ifri_mini_ml_lib.regression.SVR.fit": {"tf": 1}}, "df": 39}, "k": {"docs": {"ifri_mini_ml_lib.classification.KNN.__init__": {"tf": 1}, "ifri_mini_ml_lib.model_selection.GridSearchCV.__init__": {"tf": 1}, "ifri_mini_ml_lib.model_selection.RandomSearchCV.__init__": {"tf": 1}, "ifri_mini_ml_lib.preprocessing.preparation.MissingValueHandler.impute_knn": {"tf": 1}, "ifri_mini_ml_lib.preprocessing.preparation.DataSplitter.k_fold_split": {"tf": 1}}, "df": 5, "m": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "s": {"docs": {"ifri_mini_ml_lib.clustering.HierarchicalClustering.fit_predict": {"tf": 1}}, "df": 1}}}}}, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "l": {"docs": {"ifri_mini_ml_lib.regression.SVR.__init__": {"tf": 1}}, "df": 1}}}}}, "w": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "s": {"docs": {"ifri_mini_ml_lib.regression.SVR.set_params": {"tf": 1}}, "df": 1}}}}}}, "r": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {"ifri_mini_ml_lib.classification.LogisticRegression.__init__": {"tf": 1}, "ifri_mini_ml_lib.neural_networks.MLPClassifier.__init__": {"tf": 1}, "ifri_mini_ml_lib.neural_networks.MLPRegressor.__init__": {"tf": 1}, "ifri_mini_ml_lib.preprocessing.dimensionality_reduction.TSNE.__init__": {"tf": 1}, "ifri_mini_ml_lib.regression.LinearRegression.__init__": {"tf": 1}, "ifri_mini_ml_lib.regression.PolynomialRegression.__init__": {"tf": 1}}, "df": 6}}, "n": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "m": {"docs": {"ifri_mini_ml_lib.clustering.KMeans.__init__": {"tf": 1.4142135623730951}, "ifri_mini_ml_lib.model_selection.BaggingClassifier.__init__": {"tf": 1}, "ifri_mini_ml_lib.model_selection.BaggingRegressor.__init__": {"tf": 1}, "ifri_mini_ml_lib.model_selection.BayesianSearchCV.__init__": {"tf": 1}, "ifri_mini_ml_lib.model_selection.RandomSearchCV.__init__": {"tf": 1}, "ifri_mini_ml_lib.neural_networks.MLPClassifier.__init__": {"tf": 1}, "ifri_mini_ml_lib.neural_networks.MLPRegressor.__init__": {"tf": 1}, "ifri_mini_ml_lib.preprocessing.dimensionality_reduction.TSNE.__init__": {"tf": 1}, "ifri_mini_ml_lib.preprocessing.dimensionality_reduction.TSNE.generate_test_data": {"tf": 1}}, "df": 9}}}, "g": {"docs": {}, "df": 0, "e": {"docs": {"ifri_mini_ml_lib.preprocessing.preparation.MinMaxScaler.__init__": {"tf": 1}}, "df": 1}}}}, "e": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "u": {"docs": {"ifri_mini_ml_lib.neural_networks.MLPClassifier.__init__": {"tf": 1}, "ifri_mini_ml_lib.neural_networks.MLPRegressor.__init__": {"tf": 1}}, "df": 2}}, "g": {"docs": {"ifri_mini_ml_lib.regression.SVR.__init__": {"tf": 1}}, "df": 1, "r": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {"ifri_mini_ml_lib.neural_networks.MLPRegressor.fit": {"tf": 1}}, "df": 1}}, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"ifri_mini_ml_lib.preprocessing.preparation.MissingValueHandler.impute_knn": {"tf": 1}, "ifri_mini_ml_lib.regression.LinearRegression.fit": {"tf": 1}, "ifri_mini_ml_lib.regression.PolynomialRegression.fit": {"tf": 1}}, "df": 3}}}}}}}}, "d": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"ifri_mini_ml_lib.preprocessing.dimensionality_reduction.PCA.fit": {"tf": 1}, "ifri_mini_ml_lib.preprocessing.dimensionality_reduction.TSNE.fit": {"tf": 1}}, "df": 2}}}}}}}}}, "e": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "s": {"docs": {"ifri_mini_ml_lib.clustering.DBSCAN.__init__": {"tf": 1}}, "df": 1, "i": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"ifri_mini_ml_lib.neural_networks.MLPClassifier.__init__": {"tf": 1}, "ifri_mini_ml_lib.neural_networks.MLPRegressor.__init__": {"tf": 1}, "ifri_mini_ml_lib.regression.SVR.__init__": {"tf": 1}}, "df": 3}}}}}, "o": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "h": {"docs": {}, "df": 0, "s": {"docs": {"ifri_mini_ml_lib.regression.LinearRegression.__init__": {"tf": 1}, "ifri_mini_ml_lib.regression.PolynomialRegression.__init__": {"tf": 1}}, "df": 2}}}}}, "s": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {"ifri_mini_ml_lib.model_selection.BayesianSearchCV.__init__": {"tf": 1}}, "df": 1, "s": {"docs": {"ifri_mini_ml_lib.model_selection.BaggingClassifier.__init__": {"tf": 1}, "ifri_mini_ml_lib.model_selection.BaggingRegressor.__init__": {"tf": 1}}, "df": 2}}}}}}}}}, "a": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "y": {"docs": {"ifri_mini_ml_lib.neural_networks.MLPClassifier.__init__": {"tf": 1}, "ifri_mini_ml_lib.neural_networks.MLPRegressor.__init__": {"tf": 1}, "ifri_mini_ml_lib.preprocessing.dimensionality_reduction.TSNE.__init__": {"tf": 1}}, "df": 3}}}}, "x": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"ifri_mini_ml_lib.preprocessing.dimensionality_reduction.TSNE.__init__": {"tf": 1}}, "df": 1}}}}}}}}}}}, "n": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"ifri_mini_ml_lib.preprocessing.preparation.CategoricalEncoder.__init__": {"tf": 1}}, "df": 1}}}}}}}}, "a": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "v": {"docs": {}, "df": 0, "e": {"docs": {"ifri_mini_ml_lib.clustering.HierarchicalClustering.__init__": {"tf": 1}}, "df": 1}}}}}}}}}}}}, "n": {"docs": {}, "df": 0, "y": {"docs": {"ifri_mini_ml_lib.metrics.bias_evaluation.selection_rate": {"tf": 1}, "ifri_mini_ml_lib.metrics.bias_evaluation.selection_rate_per_group": {"tf": 1.4142135623730951}, "ifri_mini_ml_lib.metrics.bias_evaluation.demographic_parity_ratio": {"tf": 1.4142135623730951}, "ifri_mini_ml_lib.metrics.bias_evaluation.demographic_parity_difference": {"tf": 1.4142135623730951}, "ifri_mini_ml_lib.metrics.bias_evaluation.tpr_fpr_by_group": {"tf": 1.7320508075688772}, "ifri_mini_ml_lib.metrics.bias_evaluation.equalized_odds_ratio": {"tf": 1.7320508075688772}, "ifri_mini_ml_lib.metrics.bias_evaluation.equalized_odds_difference": {"tf": 1.7320508075688772}}, "df": 7}}, "c": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "v": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"ifri_mini_ml_lib.neural_networks.MLPClassifier.__init__": {"tf": 1}, "ifri_mini_ml_lib.neural_networks.MLPRegressor.__init__": {"tf": 1}}, "df": 2}}}}}}}}}, "l": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "h": {"docs": {}, "df": 0, "a": {"docs": {"ifri_mini_ml_lib.neural_networks.MLPClassifier.__init__": {"tf": 1}, "ifri_mini_ml_lib.neural_networks.MLPRegressor.__init__": {"tf": 1}, "ifri_mini_ml_lib.regression.SVR.__init__": {"tf": 1}}, "df": 3}}}}, "x": {"docs": {"ifri_mini_ml_lib.preprocessing.dimensionality_reduction.TSNE.plot_results": {"tf": 1}}, "df": 1, "i": {"docs": {}, "df": 0, "s": {"docs": {"ifri_mini_ml_lib.preprocessing.preparation.MissingValueHandler.remove_missing": {"tf": 1}}, "df": 1}}}}, "w": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "h": {"docs": {}, "df": 0, "t": {"docs": {"ifri_mini_ml_lib.metrics.bias_evaluation.selection_rate": {"tf": 1}, "ifri_mini_ml_lib.metrics.bias_evaluation.selection_rate_per_group": {"tf": 1}, "ifri_mini_ml_lib.metrics.bias_evaluation.demographic_parity_ratio": {"tf": 1}, "ifri_mini_ml_lib.metrics.bias_evaluation.demographic_parity_difference": {"tf": 1}}, "df": 4}}}}}}, "g": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "d": {"docs": {"ifri_mini_ml_lib.model_selection.GridSearchCV.__init__": {"tf": 1}, "ifri_mini_ml_lib.model_selection.RandomSearchCV.__init__": {"tf": 1}}, "df": 2}}, "a": {"docs": {}, "df": 0, "d": {"docs": {"ifri_mini_ml_lib.preprocessing.dimensionality_reduction.TSNE.__init__": {"tf": 1}}, "df": 1}}}, "a": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "a": {"docs": {"ifri_mini_ml_lib.regression.SVR.__init__": {"tf": 1}}, "df": 1}}}}}, "v": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "l": {"docs": {"ifri_mini_ml_lib.preprocessing.preparation.DataSplitter.train_test_split": {"tf": 1.4142135623730951}, "ifri_mini_ml_lib.preprocessing.preparation.DataSplitter.stratified_train_test_split": {"tf": 1.4142135623730951}, "ifri_mini_ml_lib.preprocessing.preparation.DataSplitter.temporal_train_test_split": {"tf": 1.4142135623730951}}, "df": 3, "i": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"ifri_mini_ml_lib.neural_networks.MLPClassifier.__init__": {"tf": 1}, "ifri_mini_ml_lib.neural_networks.MLPRegressor.__init__": {"tf": 1}}, "df": 2}}}}}}}, "u": {"docs": {}, "df": 0, "e": {"docs": {"ifri_mini_ml_lib.preprocessing.preparation.MissingValueHandler.impute_default": {"tf": 1}}, "df": 1}}}}, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "b": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "e": {"docs": {"ifri_mini_ml_lib.preprocessing.dimensionality_reduction.TSNE.__init__": {"tf": 1}}, "df": 1}}}}}}}}}, "bases": {"root": {"docs": {}, "df": 0}}, "doc": {"root": {"0": {"0": {"1": {"docs": {"ifri_mini_ml_lib.model_selection.BayesianSearchCV.__init__": {"tf": 1}}, "df": 1}, "docs": {}, "df": 0}, "1": {"docs": {"ifri_mini_ml_lib.classification.LogisticRegression": {"tf": 1}, "ifri_mini_ml_lib.classification.LogisticRegression.__init__": {"tf": 1}, "ifri_mini_ml_lib.model_selection.BayesianSearchCV.get_best_params": {"tf": 1}, "ifri_mini_ml_lib.regression.LinearRegression": {"tf": 1}, "ifri_mini_ml_lib.regression.PolynomialRegression": {"tf": 1}, "ifri_mini_ml_lib.regression.SVR": {"tf": 1}}, "df": 6}, "docs": {"ifri_mini_ml_lib.association_rules.Apriori": {"tf": 2.6457513110645907}, "ifri_mini_ml_lib.association_rules.Eclat": {"tf": 3.4641016151377544}, "ifri_mini_ml_lib.association_rules.FPGrowth": {"tf": 3.3166247903554}, "ifri_mini_ml_lib.association_rules.DataAdapter": {"tf": 2.23606797749979}, "ifri_mini_ml_lib.classification.DecisionTree": {"tf": 1.4142135623730951}, "ifri_mini_ml_lib.classification.LogisticRegression": {"tf": 1}, "ifri_mini_ml_lib.classification.LogisticRegression.__init__": {"tf": 1}, "ifri_mini_ml_lib.classification.LogisticRegression.predict": {"tf": 1.4142135623730951}, "ifri_mini_ml_lib.clustering.KMeans.__init__": {"tf": 1}, "ifri_mini_ml_lib.clustering.DBSCAN": {"tf": 1}, "ifri_mini_ml_lib.clustering.DBSCAN.__init__": {"tf": 1}, "ifri_mini_ml_lib.metrics.bias_evaluation.selection_rate": {"tf": 1}, "ifri_mini_ml_lib.metrics.bias_evaluation.demographic_parity_ratio": {"tf": 1}, "ifri_mini_ml_lib.metrics.evaluation_metrics.confusion_matrix": {"tf": 1.7320508075688772}, "ifri_mini_ml_lib.metrics.evaluation_metrics.precision": {"tf": 1}, "ifri_mini_ml_lib.metrics.evaluation_metrics.recall": {"tf": 1}, "ifri_mini_ml_lib.metrics.evaluation_metrics.f1_score": {"tf": 1.4142135623730951}, "ifri_mini_ml_lib.model_selection.BayesianSearchCV.__init__": {"tf": 1.7320508075688772}, "ifri_mini_ml_lib.model_selection.BayesianSearchCV.get_best_params": {"tf": 1.4142135623730951}, "ifri_mini_ml_lib.model_selection.GridSearchCV": {"tf": 1}, "ifri_mini_ml_lib.preprocessing.dimensionality_reduction.TSNE.__init__": {"tf": 2.23606797749979}, "ifri_mini_ml_lib.preprocessing.preparation.MinMaxScaler": {"tf": 1}, "ifri_mini_ml_lib.preprocessing.preparation.MinMaxScaler.__init__": {"tf": 1.4142135623730951}, "ifri_mini_ml_lib.preprocessing.preparation.MissingValueHandler.remove_missing": {"tf": 2}, "ifri_mini_ml_lib.preprocessing.preparation.StandardScaler": {"tf": 1}, "ifri_mini_ml_lib.preprocessing.preparation.DataSplitter.train_test_split": {"tf": 2}, "ifri_mini_ml_lib.preprocessing.preparation.DataSplitter.stratified_train_test_split": {"tf": 1.7320508075688772}, "ifri_mini_ml_lib.preprocessing.preparation.DataSplitter.temporal_train_test_split": {"tf": 1.4142135623730951}, "ifri_mini_ml_lib.regression.LinearRegression": {"tf": 1}, "ifri_mini_ml_lib.regression.LinearRegression.predict": {"tf": 1}, "ifri_mini_ml_lib.regression.PolynomialRegression": {"tf": 1}, "ifri_mini_ml_lib.regression.PolynomialRegression.predict": {"tf": 1}, "ifri_mini_ml_lib.regression.SVR": {"tf": 2}, "ifri_mini_ml_lib.regression.SVR.set_params": {"tf": 1.4142135623730951}}, "df": 34}, "1": {"0": {"0": {"0": {"docs": {"ifri_mini_ml_lib.classification.LogisticRegression": {"tf": 1}, "ifri_mini_ml_lib.classification.LogisticRegression.__init__": {"tf": 1}, "ifri_mini_ml_lib.preprocessing.dimensionality_reduction.TSNE.__init__": {"tf": 1}, "ifri_mini_ml_lib.regression.LinearRegression": {"tf": 1}, "ifri_mini_ml_lib.regression.PolynomialRegression": {"tf": 1}}, "df": 5}, "docs": {"ifri_mini_ml_lib.metrics.evaluation_metrics.confusion_matrix": {"tf": 1}, "ifri_mini_ml_lib.model_selection.BayesianSearchCV.__init__": {"tf": 1}, "ifri_mini_ml_lib.preprocessing.dimensionality_reduction.TSNE.fit": {"tf": 1}}, "df": 3}, "docs": {"ifri_mini_ml_lib.metrics.evaluation_metrics.confusion_matrix": {"tf": 1}, "ifri_mini_ml_lib.model_selection.BaggingClassifier": {"tf": 1}, "ifri_mini_ml_lib.model_selection.BaggingRegressor": {"tf": 1}, "ifri_mini_ml_lib.model_selection.BayesianSearchCV.get_best_params": {"tf": 1}, "ifri_mini_ml_lib.model_selection.GridSearchCV": {"tf": 1}, "ifri_mini_ml_lib.model_selection.RandomSearchCV": {"tf": 1}, "ifri_mini_ml_lib.preprocessing.dimensionality_reduction.TSNE.fit": {"tf": 1}}, "df": 7}, "2": {"3": {"docs": {"ifri_mini_ml_lib.model_selection.BaggingClassifier": {"tf": 1}, "ifri_mini_ml_lib.model_selection.BaggingRegressor": {"tf": 1}}, "df": 2}, "docs": {"ifri_mini_ml_lib.preprocessing.dimensionality_reduction.TSNE.__init__": {"tf": 1}}, "df": 1}, "6": {"docs": {"ifri_mini_ml_lib.regression.PolynomialRegression.predict": {"tf": 1}}, "df": 1}, "9": {"9": {"4": {"docs": {"ifri_mini_ml_lib.association_rules.Apriori": {"tf": 1}}, "df": 1}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "docs": {"ifri_mini_ml_lib.association_rules.Apriori": {"tf": 1.4142135623730951}, "ifri_mini_ml_lib.association_rules.Eclat": {"tf": 2}, "ifri_mini_ml_lib.association_rules.FPGrowth": {"tf": 1.4142135623730951}, "ifri_mini_ml_lib.association_rules.DataAdapter": {"tf": 3.1622776601683795}, "ifri_mini_ml_lib.classification.DecisionTree": {"tf": 1}, "ifri_mini_ml_lib.classification.LogisticRegression.predict_proba": {"tf": 1}, "ifri_mini_ml_lib.classification.LogisticRegression.predict": {"tf": 1}, "ifri_mini_ml_lib.clustering.DBSCAN.plot_clusters": {"tf": 1}, "ifri_mini_ml_lib.metrics.bias_evaluation.selection_rate": {"tf": 2.23606797749979}, "ifri_mini_ml_lib.metrics.bias_evaluation.demographic_parity_ratio": {"tf": 1.4142135623730951}, "ifri_mini_ml_lib.metrics.evaluation_metrics.confusion_matrix": {"tf": 1.7320508075688772}, "ifri_mini_ml_lib.metrics.evaluation_metrics.precision": {"tf": 1}, "ifri_mini_ml_lib.metrics.evaluation_metrics.recall": {"tf": 1}, "ifri_mini_ml_lib.metrics.evaluation_metrics.f1_score": {"tf": 1}, "ifri_mini_ml_lib.metrics.evaluation_metrics.calculate_silhouette": {"tf": 1.4142135623730951}, "ifri_mini_ml_lib.model_selection.BaggingClassifier": {"tf": 1}, "ifri_mini_ml_lib.model_selection.BaggingRegressor": {"tf": 1}, "ifri_mini_ml_lib.model_selection.BayesianSearchCV.__init__": {"tf": 1.4142135623730951}, "ifri_mini_ml_lib.model_selection.GridSearchCV": {"tf": 1.4142135623730951}, "ifri_mini_ml_lib.preprocessing.dimensionality_reduction.PCA.fit": {"tf": 1}, "ifri_mini_ml_lib.preprocessing.dimensionality_reduction.PCA.explained_variances_ratio": {"tf": 1}, "ifri_mini_ml_lib.preprocessing.dimensionality_reduction.TSNE.__init__": {"tf": 1}, "ifri_mini_ml_lib.preprocessing.preparation.MinMaxScaler": {"tf": 1}, "ifri_mini_ml_lib.preprocessing.preparation.MinMaxScaler.__init__": {"tf": 2}, "ifri_mini_ml_lib.preprocessing.preparation.MinMaxScaler.fit": {"tf": 1}, "ifri_mini_ml_lib.preprocessing.preparation.MinMaxScaler.transform": {"tf": 1}, "ifri_mini_ml_lib.preprocessing.preparation.MissingValueHandler.remove_missing": {"tf": 1.4142135623730951}, "ifri_mini_ml_lib.preprocessing.preparation.MissingValueHandler.impute_default": {"tf": 1}, "ifri_mini_ml_lib.preprocessing.preparation.StandardScaler": {"tf": 1}, "ifri_mini_ml_lib.preprocessing.preparation.DataSplitter.train_test_split": {"tf": 1}, "ifri_mini_ml_lib.preprocessing.preparation.DataSplitter.stratified_train_test_split": {"tf": 1}, "ifri_mini_ml_lib.regression.LinearRegression.fit": {"tf": 1}, "ifri_mini_ml_lib.regression.PolynomialRegression.fit": {"tf": 1.4142135623730951}, "ifri_mini_ml_lib.regression.SVR": {"tf": 2}}, "df": 34, "/": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "e": {"docs": {"ifri_mini_ml_lib.association_rules.DataAdapter.convert_to_transactions": {"tf": 1}}, "df": 1}}}}}, "e": {"docs": {"ifri_mini_ml_lib.classification.LogisticRegression.__init__": {"tf": 1}, "ifri_mini_ml_lib.clustering.KMeans": {"tf": 1}, "ifri_mini_ml_lib.clustering.KMeans.__init__": {"tf": 1}, "ifri_mini_ml_lib.preprocessing.dimensionality_reduction.TSNE.__init__": {"tf": 1}}, "df": 4}, "d": {"docs": {"ifri_mini_ml_lib.clustering.KMeans.plot_clusters": {"tf": 1}, "ifri_mini_ml_lib.clustering.DBSCAN.plot_clusters": {"tf": 1}, "ifri_mini_ml_lib.clustering.HierarchicalClustering.plot_clusters": {"tf": 1}}, "df": 3}}, "2": {"0": {"0": {"docs": {"ifri_mini_ml_lib.preprocessing.dimensionality_reduction.TSNE.__init__": {"tf": 1}}, "df": 1}, "docs": {"ifri_mini_ml_lib.model_selection.BayesianSearchCV.__init__": {"tf": 1}, "ifri_mini_ml_lib.preprocessing.dimensionality_reduction.TSNE.__init__": {"tf": 1}}, "df": 2}, "docs": {"ifri_mini_ml_lib.association_rules.Apriori": {"tf": 1}, "ifri_mini_ml_lib.association_rules.Eclat": {"tf": 1}, "ifri_mini_ml_lib.association_rules.DataAdapter": {"tf": 1}, "ifri_mini_ml_lib.classification.DecisionTree": {"tf": 1}, "ifri_mini_ml_lib.metrics.evaluation_metrics.f1_score": {"tf": 1}, "ifri_mini_ml_lib.model_selection.BaggingClassifier": {"tf": 1}, "ifri_mini_ml_lib.model_selection.BaggingRegressor": {"tf": 1}, "ifri_mini_ml_lib.model_selection.RandomSearchCV": {"tf": 1}, "ifri_mini_ml_lib.preprocessing.dimensionality_reduction.PCA.__init__": {"tf": 1}, "ifri_mini_ml_lib.preprocessing.dimensionality_reduction.PCA.fit": {"tf": 1}, "ifri_mini_ml_lib.preprocessing.dimensionality_reduction.PCA.transform": {"tf": 1}, "ifri_mini_ml_lib.preprocessing.dimensionality_reduction.TSNE": {"tf": 1}, "ifri_mini_ml_lib.preprocessing.dimensionality_reduction.TSNE.__init__": {"tf": 1.4142135623730951}, "ifri_mini_ml_lib.preprocessing.preparation.MinMaxScaler.fit": {"tf": 1}, "ifri_mini_ml_lib.preprocessing.preparation.MinMaxScaler.transform": {"tf": 1}, "ifri_mini_ml_lib.preprocessing.preparation.DataSplitter.train_test_split": {"tf": 1.4142135623730951}, "ifri_mini_ml_lib.preprocessing.preparation.DataSplitter.stratified_train_test_split": {"tf": 1.4142135623730951}, "ifri_mini_ml_lib.preprocessing.preparation.DataSplitter.temporal_train_test_split": {"tf": 1.4142135623730951}, "ifri_mini_ml_lib.regression.LinearRegression.fit": {"tf": 1.4142135623730951}, "ifri_mini_ml_lib.regression.PolynomialRegression": {"tf": 1}, "ifri_mini_ml_lib.regression.PolynomialRegression.fit": {"tf": 1.4142135623730951}, "ifri_mini_ml_lib.regression.SVR": {"tf": 1}, "ifri_mini_ml_lib.regression.SVR.set_params": {"tf": 1}}, "df": 23, "f": {"docs": {"ifri_mini_ml_lib.association_rules.Apriori": {"tf": 1.4142135623730951}, "ifri_mini_ml_lib.association_rules.Eclat": {"tf": 1.7320508075688772}, "ifri_mini_ml_lib.association_rules.FPGrowth": {"tf": 1.7320508075688772}}, "df": 3}, "d": {"docs": {"ifri_mini_ml_lib.clustering.KMeans.plot_clusters": {"tf": 1}, "ifri_mini_ml_lib.clustering.DBSCAN.plot_clusters": {"tf": 1}, "ifri_mini_ml_lib.clustering.HierarchicalClustering.plot_clusters": {"tf": 1}, "ifri_mini_ml_lib.preprocessing.dimensionality_reduction.PCA.fit": {"tf": 1}, "ifri_mini_ml_lib.preprocessing.dimensionality_reduction.TSNE.plot_results": {"tf": 1}}, "df": 5}}, "3": {"0": {"0": {"docs": {"ifri_mini_ml_lib.clustering.KMeans": {"tf": 1}, "ifri_mini_ml_lib.clustering.KMeans.__init__": {"tf": 1}, "ifri_mini_ml_lib.preprocessing.dimensionality_reduction.TSNE.generate_test_data": {"tf": 1}}, "df": 3}, "docs": {"ifri_mini_ml_lib.model_selection.BayesianSearchCV.__init__": {"tf": 1}, "ifri_mini_ml_lib.preprocessing.dimensionality_reduction.TSNE.__init__": {"tf": 1}}, "df": 2}, "9": {"docs": {"ifri_mini_ml_lib.association_rules.Apriori": {"tf": 6.928203230275509}, "ifri_mini_ml_lib.association_rules.Eclat": {"tf": 6.928203230275509}, "ifri_mini_ml_lib.association_rules.DataAdapter": {"tf": 9.273618495495704}, "ifri_mini_ml_lib.clustering.KMeans": {"tf": 1.4142135623730951}, "ifri_mini_ml_lib.clustering.HierarchicalClustering": {"tf": 2}, "ifri_mini_ml_lib.clustering.HierarchicalClustering.plot_dendrogram": {"tf": 2}}, "df": 6}, "docs": {"ifri_mini_ml_lib.classification.KNN": {"tf": 1.4142135623730951}, "ifri_mini_ml_lib.clustering.KMeans": {"tf": 1}, "ifri_mini_ml_lib.clustering.KMeans.__init__": {"tf": 1}, "ifri_mini_ml_lib.clustering.DBSCAN.plot_clusters": {"tf": 1}, "ifri_mini_ml_lib.clustering.HierarchicalClustering": {"tf": 1}, "ifri_mini_ml_lib.clustering.HierarchicalClustering.plot_dendrogram": {"tf": 1}, "ifri_mini_ml_lib.model_selection.RandomSearchCV": {"tf": 1.4142135623730951}, "ifri_mini_ml_lib.preprocessing.dimensionality_reduction.PCA.fit": {"tf": 1}, "ifri_mini_ml_lib.preprocessing.dimensionality_reduction.PCA.transform": {"tf": 1}, "ifri_mini_ml_lib.preprocessing.dimensionality_reduction.TSNE": {"tf": 1}, "ifri_mini_ml_lib.preprocessing.dimensionality_reduction.TSNE.fit": {"tf": 1}, "ifri_mini_ml_lib.preprocessing.preparation.MinMaxScaler.fit": {"tf": 1}, "ifri_mini_ml_lib.preprocessing.preparation.MinMaxScaler.transform": {"tf": 1}, "ifri_mini_ml_lib.preprocessing.preparation.DataSplitter.train_test_split": {"tf": 1}, "ifri_mini_ml_lib.regression.LinearRegression.fit": {"tf": 1}, "ifri_mini_ml_lib.regression.PolynomialRegression.fit": {"tf": 1}, "ifri_mini_ml_lib.regression.SVR": {"tf": 1}}, "df": 17, "d": {"docs": {"ifri_mini_ml_lib.clustering.KMeans.plot_clusters": {"tf": 1.7320508075688772}, "ifri_mini_ml_lib.clustering.DBSCAN.plot_clusters": {"tf": 1.4142135623730951}, "ifri_mini_ml_lib.clustering.HierarchicalClustering.plot_clusters": {"tf": 1.4142135623730951}, "ifri_mini_ml_lib.preprocessing.dimensionality_reduction.TSNE.plot_results": {"tf": 1}}, "df": 4}}, "4": {"2": {"docs": {"ifri_mini_ml_lib.clustering.KMeans": {"tf": 1}, "ifri_mini_ml_lib.model_selection.RandomSearchCV": {"tf": 1}, "ifri_mini_ml_lib.preprocessing.preparation.DataSplitter.train_test_split": {"tf": 1}, "ifri_mini_ml_lib.preprocessing.preparation.DataSplitter.stratified_train_test_split": {"tf": 1}, "ifri_mini_ml_lib.preprocessing.preparation.DataSplitter.k_fold_split": {"tf": 1}}, "df": 5}, "docs": {"ifri_mini_ml_lib.association_rules.Apriori": {"tf": 1}, "ifri_mini_ml_lib.association_rules.Eclat": {"tf": 1}, "ifri_mini_ml_lib.association_rules.FPGrowth": {"tf": 1}, "ifri_mini_ml_lib.classification.LogisticRegression.__init__": {"tf": 1}, "ifri_mini_ml_lib.clustering.KMeans": {"tf": 1}, "ifri_mini_ml_lib.clustering.KMeans.__init__": {"tf": 1}, "ifri_mini_ml_lib.model_selection.RandomSearchCV": {"tf": 1}, "ifri_mini_ml_lib.preprocessing.dimensionality_reduction.PCA.fit": {"tf": 1}, "ifri_mini_ml_lib.preprocessing.preparation.MinMaxScaler.fit": {"tf": 1}, "ifri_mini_ml_lib.preprocessing.preparation.MinMaxScaler.transform": {"tf": 1}, "ifri_mini_ml_lib.preprocessing.preparation.MissingValueHandler.remove_missing": {"tf": 1}, "ifri_mini_ml_lib.regression.LinearRegression.fit": {"tf": 1}, "ifri_mini_ml_lib.regression.LinearRegression.predict": {"tf": 1}, "ifri_mini_ml_lib.regression.PolynomialRegression.fit": {"tf": 1}, "ifri_mini_ml_lib.regression.PolynomialRegression.predict": {"tf": 1}}, "df": 15}, "5": {"0": {"docs": {"ifri_mini_ml_lib.metrics.evaluation_metrics.confusion_matrix": {"tf": 1}, "ifri_mini_ml_lib.preprocessing.dimensionality_reduction.TSNE": {"tf": 1}}, "df": 2}, "docs": {"ifri_mini_ml_lib.association_rules.DataAdapter": {"tf": 1}, "ifri_mini_ml_lib.classification.KNN": {"tf": 1}, "ifri_mini_ml_lib.classification.LogisticRegression.predict": {"tf": 1}, "ifri_mini_ml_lib.clustering.KMeans.__init__": {"tf": 1}, "ifri_mini_ml_lib.clustering.DBSCAN": {"tf": 1.4142135623730951}, "ifri_mini_ml_lib.clustering.DBSCAN.__init__": {"tf": 1.4142135623730951}, "ifri_mini_ml_lib.metrics.evaluation_metrics.confusion_matrix": {"tf": 1}, "ifri_mini_ml_lib.model_selection.BaggingClassifier": {"tf": 1}, "ifri_mini_ml_lib.model_selection.BaggingRegressor": {"tf": 1}, "ifri_mini_ml_lib.model_selection.BayesianSearchCV.__init__": {"tf": 1.4142135623730951}, "ifri_mini_ml_lib.model_selection.GridSearchCV": {"tf": 1.4142135623730951}, "ifri_mini_ml_lib.model_selection.RandomSearchCV": {"tf": 1.7320508075688772}, "ifri_mini_ml_lib.preprocessing.dimensionality_reduction.PCA.fit": {"tf": 1}, "ifri_mini_ml_lib.preprocessing.dimensionality_reduction.TSNE": {"tf": 1}, "ifri_mini_ml_lib.preprocessing.preparation.MissingValueHandler.impute_knn": {"tf": 1}, "ifri_mini_ml_lib.preprocessing.preparation.DataSplitter.k_fold_split": {"tf": 1.4142135623730951}, "ifri_mini_ml_lib.regression.SVR.set_params": {"tf": 1}}, "df": 17}, "6": {"0": {"docs": {"ifri_mini_ml_lib.association_rules.Apriori": {"tf": 1.4142135623730951}, "ifri_mini_ml_lib.association_rules.Eclat": {"tf": 1}, "ifri_mini_ml_lib.association_rules.FPGrowth": {"tf": 1}}, "df": 3}, "docs": {"ifri_mini_ml_lib.association_rules.Apriori": {"tf": 1}, "ifri_mini_ml_lib.association_rules.Eclat": {"tf": 1}, "ifri_mini_ml_lib.association_rules.FPGrowth": {"tf": 1}, "ifri_mini_ml_lib.model_selection.RandomSearchCV": {"tf": 1}, "ifri_mini_ml_lib.preprocessing.dimensionality_reduction.PCA.fit": {"tf": 1}, "ifri_mini_ml_lib.regression.LinearRegression.fit": {"tf": 1}}, "df": 6}, "7": {"5": {"docs": {"ifri_mini_ml_lib.association_rules.Apriori": {"tf": 1.4142135623730951}, "ifri_mini_ml_lib.association_rules.Eclat": {"tf": 1.4142135623730951}, "ifri_mini_ml_lib.association_rules.FPGrowth": {"tf": 1.4142135623730951}}, "df": 3}, "docs": {"ifri_mini_ml_lib.model_selection.RandomSearchCV": {"tf": 1}, "ifri_mini_ml_lib.preprocessing.dimensionality_reduction.TSNE.__init__": {"tf": 1}}, "df": 2}, "8": {"0": {"docs": {"ifri_mini_ml_lib.association_rules.Eclat": {"tf": 1.4142135623730951}, "ifri_mini_ml_lib.association_rules.FPGrowth": {"tf": 1.4142135623730951}}, "df": 2}, "docs": {"ifri_mini_ml_lib.regression.LinearRegression.predict": {"tf": 1}}, "df": 1}, "9": {"4": {"docs": {"ifri_mini_ml_lib.association_rules.Eclat": {"tf": 1.4142135623730951}, "ifri_mini_ml_lib.association_rules.FPGrowth": {"tf": 1.4142135623730951}}, "df": 2}, "docs": {"ifri_mini_ml_lib.regression.PolynomialRegression.fit": {"tf": 1}}, "df": 1}, "docs": {"ifri_mini_ml_lib": {"tf": 6.557438524302}, "ifri_mini_ml_lib.association_rules": {"tf": 1.7320508075688772}, "ifri_mini_ml_lib.association_rules.Apriori": {"tf": 22.271057451320086}, "ifri_mini_ml_lib.association_rules.Apriori.__init__": {"tf": 1.7320508075688772}, "ifri_mini_ml_lib.association_rules.Apriori.min_support": {"tf": 1.7320508075688772}, "ifri_mini_ml_lib.association_rules.Apriori.min_confidence": {"tf": 1.7320508075688772}, "ifri_mini_ml_lib.association_rules.Apriori.frequent_itemsets_": {"tf": 1.7320508075688772}, "ifri_mini_ml_lib.association_rules.Apriori.rules_": {"tf": 1.7320508075688772}, "ifri_mini_ml_lib.association_rules.Apriori.fit": {"tf": 2.8284271247461903}, "ifri_mini_ml_lib.association_rules.Apriori.get_frequent_itemsets": {"tf": 2.23606797749979}, "ifri_mini_ml_lib.association_rules.Apriori.get_rules": {"tf": 2.23606797749979}, "ifri_mini_ml_lib.association_rules.Eclat": {"tf": 23.874672772626646}, "ifri_mini_ml_lib.association_rules.Eclat.__init__": {"tf": 1.7320508075688772}, "ifri_mini_ml_lib.association_rules.Eclat.min_support": {"tf": 1.7320508075688772}, "ifri_mini_ml_lib.association_rules.Eclat.min_confidence": {"tf": 1.7320508075688772}, "ifri_mini_ml_lib.association_rules.Eclat.frequent_itemsets": {"tf": 1.7320508075688772}, "ifri_mini_ml_lib.association_rules.Eclat.frequent_TIDsets": {"tf": 1.7320508075688772}, "ifri_mini_ml_lib.association_rules.Eclat.rules_": {"tf": 1.7320508075688772}, "ifri_mini_ml_lib.association_rules.Eclat.n_transactions": {"tf": 1.7320508075688772}, "ifri_mini_ml_lib.association_rules.Eclat.fit": {"tf": 2.8284271247461903}, "ifri_mini_ml_lib.association_rules.Eclat.get_single_items_TIDset": {"tf": 1.4142135623730951}, "ifri_mini_ml_lib.association_rules.Eclat.get_frequent_itemsets": {"tf": 2.23606797749979}, "ifri_mini_ml_lib.association_rules.Eclat.get_rules": {"tf": 2.23606797749979}, "ifri_mini_ml_lib.association_rules.FPGrowth": {"tf": 7.54983443527075}, "ifri_mini_ml_lib.association_rules.FPGrowth.__init__": {"tf": 1.7320508075688772}, "ifri_mini_ml_lib.association_rules.FPGrowth.min_support": {"tf": 1.7320508075688772}, "ifri_mini_ml_lib.association_rules.FPGrowth.min_confidence": {"tf": 1.7320508075688772}, "ifri_mini_ml_lib.association_rules.FPGrowth.frequent_itemsets_dict": {"tf": 1.7320508075688772}, "ifri_mini_ml_lib.association_rules.FPGrowth.rules_": {"tf": 1.7320508075688772}, "ifri_mini_ml_lib.association_rules.FPGrowth.header_table": {"tf": 1.7320508075688772}, "ifri_mini_ml_lib.association_rules.FPGrowth.n_transactions": {"tf": 1.7320508075688772}, "ifri_mini_ml_lib.association_rules.FPGrowth.fit": {"tf": 2.8284271247461903}, "ifri_mini_ml_lib.association_rules.FPGrowth.get_frequent_itemsets": {"tf": 2.23606797749979}, "ifri_mini_ml_lib.association_rules.FPGrowth.get_rules": {"tf": 2.23606797749979}, "ifri_mini_ml_lib.association_rules.DataAdapter": {"tf": 26.589471600616662}, "ifri_mini_ml_lib.association_rules.DataAdapter.convert_to_transactions": {"tf": 3}, "ifri_mini_ml_lib.association_rules.DataAdapter.load_csv_to_transactions": {"tf": 3}, "ifri_mini_ml_lib.classification": {"tf": 1.7320508075688772}, "ifri_mini_ml_lib.classification.DecisionTree": {"tf": 3.605551275463989}, "ifri_mini_ml_lib.classification.DecisionTree.__init__": {"tf": 1.7320508075688772}, "ifri_mini_ml_lib.classification.DecisionTree.max_depth": {"tf": 1.7320508075688772}, "ifri_mini_ml_lib.classification.DecisionTree.min_samples_split": {"tf": 1.7320508075688772}, "ifri_mini_ml_lib.classification.DecisionTree.min_samples_leaf": {"tf": 1.7320508075688772}, "ifri_mini_ml_lib.classification.DecisionTree.min_impurity_decrease": {"tf": 1.7320508075688772}, "ifri_mini_ml_lib.classification.DecisionTree.tree": {"tf": 1.7320508075688772}, "ifri_mini_ml_lib.classification.DecisionTree.fit": {"tf": 3.872983346207417}, "ifri_mini_ml_lib.classification.DecisionTree.predict": {"tf": 3.3166247903554}, "ifri_mini_ml_lib.classification.KNN": {"tf": 6.082762530298219}, "ifri_mini_ml_lib.classification.KNN.__init__": {"tf": 2.8284271247461903}, "ifri_mini_ml_lib.classification.KNN.k": {"tf": 1.7320508075688772}, "ifri_mini_ml_lib.classification.KNN.task": {"tf": 1.7320508075688772}, "ifri_mini_ml_lib.classification.KNN.fit": {"tf": 3.3166247903554}, "ifri_mini_ml_lib.classification.KNN.predict": {"tf": 3.605551275463989}, "ifri_mini_ml_lib.classification.LogisticRegression": {"tf": 5.0990195135927845}, "ifri_mini_ml_lib.classification.LogisticRegression.__init__": {"tf": 3}, "ifri_mini_ml_lib.classification.LogisticRegression.learning_rate": {"tf": 1.7320508075688772}, "ifri_mini_ml_lib.classification.LogisticRegression.momentum": {"tf": 1.7320508075688772}, "ifri_mini_ml_lib.classification.LogisticRegression.max_iter": {"tf": 1.7320508075688772}, "ifri_mini_ml_lib.classification.LogisticRegression.tol": {"tf": 1.7320508075688772}, "ifri_mini_ml_lib.classification.LogisticRegression.weights": {"tf": 1.7320508075688772}, "ifri_mini_ml_lib.classification.LogisticRegression.bias": {"tf": 1.7320508075688772}, "ifri_mini_ml_lib.classification.LogisticRegression.loss_history": {"tf": 1.7320508075688772}, "ifri_mini_ml_lib.classification.LogisticRegression.fit": {"tf": 3.605551275463989}, "ifri_mini_ml_lib.classification.LogisticRegression.predict_proba": {"tf": 3.1622776601683795}, "ifri_mini_ml_lib.classification.LogisticRegression.predict": {"tf": 3.7416573867739413}, "ifri_mini_ml_lib.clustering": {"tf": 1.7320508075688772}, "ifri_mini_ml_lib.clustering.KMeans": {"tf": 12.649110640673518}, "ifri_mini_ml_lib.clustering.KMeans.__init__": {"tf": 6.708203932499369}, "ifri_mini_ml_lib.clustering.KMeans.n_clusters": {"tf": 1.7320508075688772}, "ifri_mini_ml_lib.clustering.KMeans.max_iter": {"tf": 1.7320508075688772}, "ifri_mini_ml_lib.clustering.KMeans.tol": {"tf": 1.7320508075688772}, "ifri_mini_ml_lib.clustering.KMeans.init": {"tf": 1.7320508075688772}, "ifri_mini_ml_lib.clustering.KMeans.random_state": {"tf": 1.7320508075688772}, "ifri_mini_ml_lib.clustering.KMeans.centroids": {"tf": 1.7320508075688772}, "ifri_mini_ml_lib.clustering.KMeans.labels": {"tf": 1.7320508075688772}, "ifri_mini_ml_lib.clustering.KMeans.fit": {"tf": 6.164414002968976}, "ifri_mini_ml_lib.clustering.KMeans.predict": {"tf": 5.656854249492381}, "ifri_mini_ml_lib.clustering.KMeans.fit_predict": {"tf": 5.385164807134504}, "ifri_mini_ml_lib.clustering.KMeans.plot_clusters": {"tf": 6.324555320336759}, "ifri_mini_ml_lib.clustering.DBSCAN": {"tf": 10.344080432788601}, "ifri_mini_ml_lib.clustering.DBSCAN.__init__": {"tf": 7.211102550927978}, "ifri_mini_ml_lib.clustering.DBSCAN.eps": {"tf": 1.7320508075688772}, "ifri_mini_ml_lib.clustering.DBSCAN.min_samples": {"tf": 1.7320508075688772}, "ifri_mini_ml_lib.clustering.DBSCAN.labels": {"tf": 1.7320508075688772}, "ifri_mini_ml_lib.clustering.DBSCAN.fit_predict": {"tf": 6.48074069840786}, "ifri_mini_ml_lib.clustering.DBSCAN.plot_clusters": {"tf": 6}, "ifri_mini_ml_lib.clustering.HierarchicalClustering": {"tf": 11.224972160321824}, "ifri_mini_ml_lib.clustering.HierarchicalClustering.__init__": {"tf": 3}, "ifri_mini_ml_lib.clustering.HierarchicalClustering.n_clusters": {"tf": 1.7320508075688772}, "ifri_mini_ml_lib.clustering.HierarchicalClustering.linkage": {"tf": 1.7320508075688772}, "ifri_mini_ml_lib.clustering.HierarchicalClustering.method": {"tf": 1.7320508075688772}, "ifri_mini_ml_lib.clustering.HierarchicalClustering.labels": {"tf": 1.7320508075688772}, "ifri_mini_ml_lib.clustering.HierarchicalClustering.linked_matrix": {"tf": 1.7320508075688772}, "ifri_mini_ml_lib.clustering.HierarchicalClustering.fit_predict": {"tf": 2.6457513110645907}, "ifri_mini_ml_lib.clustering.HierarchicalClustering.plot_dendrogram": {"tf": 10.099504938362077}, "ifri_mini_ml_lib.clustering.HierarchicalClustering.plot_clusters": {"tf": 6}, "ifri_mini_ml_lib.metrics": {"tf": 1.7320508075688772}, "ifri_mini_ml_lib.metrics.bias_evaluation": {"tf": 1.7320508075688772}, "ifri_mini_ml_lib.metrics.bias_evaluation.selection_rate": {"tf": 4}, "ifri_mini_ml_lib.metrics.bias_evaluation.selection_rate_per_group": {"tf": 3.7416573867739413}, "ifri_mini_ml_lib.metrics.bias_evaluation.demographic_parity_ratio": {"tf": 4.358898943540674}, "ifri_mini_ml_lib.metrics.bias_evaluation.demographic_parity_difference": {"tf": 3.605551275463989}, "ifri_mini_ml_lib.metrics.bias_evaluation.tpr_fpr_by_group": {"tf": 3.605551275463989}, "ifri_mini_ml_lib.metrics.bias_evaluation.equalized_odds_ratio": {"tf": 3.605551275463989}, "ifri_mini_ml_lib.metrics.bias_evaluation.equalized_odds_difference": {"tf": 3.605551275463989}, "ifri_mini_ml_lib.metrics.evaluation_metrics": {"tf": 1.7320508075688772}, "ifri_mini_ml_lib.metrics.evaluation_metrics.evaluate_model": {"tf": 1.7320508075688772}, "ifri_mini_ml_lib.metrics.evaluation_metrics.confusion_matrix": {"tf": 3.4641016151377544}, "ifri_mini_ml_lib.metrics.evaluation_metrics.accuracy": {"tf": 3.4641016151377544}, "ifri_mini_ml_lib.metrics.evaluation_metrics.precision": {"tf": 3.7416573867739413}, "ifri_mini_ml_lib.metrics.evaluation_metrics.recall": {"tf": 3.7416573867739413}, "ifri_mini_ml_lib.metrics.evaluation_metrics.f1_score": {"tf": 4}, "ifri_mini_ml_lib.metrics.evaluation_metrics.calculate_inertia": {"tf": 5.385164807134504}, "ifri_mini_ml_lib.metrics.evaluation_metrics.calculate_silhouette": {"tf": 8.366600265340756}, "ifri_mini_ml_lib.model_selection": {"tf": 1.7320508075688772}, "ifri_mini_ml_lib.model_selection.BaggingClassifier": {"tf": 6.324555320336759}, "ifri_mini_ml_lib.model_selection.BaggingClassifier.__init__": {"tf": 1.7320508075688772}, "ifri_mini_ml_lib.model_selection.BaggingClassifier.base_model": {"tf": 1.7320508075688772}, "ifri_mini_ml_lib.model_selection.BaggingClassifier.n_estimators": {"tf": 1.7320508075688772}, "ifri_mini_ml_lib.model_selection.BaggingClassifier.random_state": {"tf": 1.7320508075688772}, "ifri_mini_ml_lib.model_selection.BaggingClassifier.models": {"tf": 1.7320508075688772}, "ifri_mini_ml_lib.model_selection.BaggingClassifier.pretrained": {"tf": 1.7320508075688772}, "ifri_mini_ml_lib.model_selection.BaggingClassifier.fit": {"tf": 5.196152422706632}, "ifri_mini_ml_lib.model_selection.BaggingClassifier.predict": {"tf": 5.196152422706632}, "ifri_mini_ml_lib.model_selection.BaggingRegressor": {"tf": 6.324555320336759}, "ifri_mini_ml_lib.model_selection.BaggingRegressor.__init__": {"tf": 1.7320508075688772}, "ifri_mini_ml_lib.model_selection.BaggingRegressor.base_model": {"tf": 1.7320508075688772}, "ifri_mini_ml_lib.model_selection.BaggingRegressor.n_estimators": {"tf": 1.7320508075688772}, "ifri_mini_ml_lib.model_selection.BaggingRegressor.random_state": {"tf": 1.7320508075688772}, "ifri_mini_ml_lib.model_selection.BaggingRegressor.models": {"tf": 1.7320508075688772}, "ifri_mini_ml_lib.model_selection.BaggingRegressor.pretrained": {"tf": 1.7320508075688772}, "ifri_mini_ml_lib.model_selection.BaggingRegressor.fit": {"tf": 5.196152422706632}, "ifri_mini_ml_lib.model_selection.BaggingRegressor.predict": {"tf": 5.196152422706632}, "ifri_mini_ml_lib.model_selection.BayesianSearchCV": {"tf": 1.7320508075688772}, "ifri_mini_ml_lib.model_selection.BayesianSearchCV.__init__": {"tf": 5.385164807134504}, "ifri_mini_ml_lib.model_selection.BayesianSearchCV.estimator": {"tf": 1.7320508075688772}, "ifri_mini_ml_lib.model_selection.BayesianSearchCV.param_bounds": {"tf": 1.7320508075688772}, "ifri_mini_ml_lib.model_selection.BayesianSearchCV.n_iter": {"tf": 1.7320508075688772}, "ifri_mini_ml_lib.model_selection.BayesianSearchCV.init_points": {"tf": 1.7320508075688772}, "ifri_mini_ml_lib.model_selection.BayesianSearchCV.cv": {"tf": 1.7320508075688772}, "ifri_mini_ml_lib.model_selection.BayesianSearchCV.scoring": {"tf": 1.7320508075688772}, "ifri_mini_ml_lib.model_selection.BayesianSearchCV.stratified": {"tf": 1.7320508075688772}, "ifri_mini_ml_lib.model_selection.BayesianSearchCV.param_types": {"tf": 1.7320508075688772}, "ifri_mini_ml_lib.model_selection.BayesianSearchCV.random_state": {"tf": 1.7320508075688772}, "ifri_mini_ml_lib.model_selection.BayesianSearchCV.X_obs": {"tf": 1.7320508075688772}, "ifri_mini_ml_lib.model_selection.BayesianSearchCV.y_obs": {"tf": 1.7320508075688772}, "ifri_mini_ml_lib.model_selection.BayesianSearchCV.gp": {"tf": 1.7320508075688772}, "ifri_mini_ml_lib.model_selection.BayesianSearchCV.maximize": {"tf": 1.7320508075688772}, "ifri_mini_ml_lib.model_selection.BayesianSearchCV.history_": {"tf": 1.7320508075688772}, "ifri_mini_ml_lib.model_selection.BayesianSearchCV.fit": {"tf": 5}, "ifri_mini_ml_lib.model_selection.BayesianSearchCV.get_best_params": {"tf": 5.0990195135927845}, "ifri_mini_ml_lib.model_selection.GridSearchCV": {"tf": 5.744562646538029}, "ifri_mini_ml_lib.model_selection.GridSearchCV.__init__": {"tf": 1.7320508075688772}, "ifri_mini_ml_lib.model_selection.GridSearchCV.model": {"tf": 1.7320508075688772}, "ifri_mini_ml_lib.model_selection.GridSearchCV.param_grid": {"tf": 1.7320508075688772}, "ifri_mini_ml_lib.model_selection.GridSearchCV.k": {"tf": 1.7320508075688772}, "ifri_mini_ml_lib.model_selection.GridSearchCV.scoring": {"tf": 1.7320508075688772}, "ifri_mini_ml_lib.model_selection.GridSearchCV.stratified": {"tf": 1.7320508075688772}, "ifri_mini_ml_lib.model_selection.GridSearchCV.best_params_": {"tf": 1.7320508075688772}, "ifri_mini_ml_lib.model_selection.GridSearchCV.best_score_": {"tf": 1.7320508075688772}, "ifri_mini_ml_lib.model_selection.GridSearchCV.best_estimator_": {"tf": 1.7320508075688772}, "ifri_mini_ml_lib.model_selection.GridSearchCV.fit": {"tf": 5}, "ifri_mini_ml_lib.model_selection.RandomSearchCV": {"tf": 7.681145747868608}, "ifri_mini_ml_lib.model_selection.RandomSearchCV.__init__": {"tf": 1.7320508075688772}, "ifri_mini_ml_lib.model_selection.RandomSearchCV.model": {"tf": 1.7320508075688772}, "ifri_mini_ml_lib.model_selection.RandomSearchCV.param_grid": {"tf": 1.7320508075688772}, "ifri_mini_ml_lib.model_selection.RandomSearchCV.n_iter": {"tf": 1.7320508075688772}, "ifri_mini_ml_lib.model_selection.RandomSearchCV.k": {"tf": 1.7320508075688772}, "ifri_mini_ml_lib.model_selection.RandomSearchCV.scoring": {"tf": 1.7320508075688772}, "ifri_mini_ml_lib.model_selection.RandomSearchCV.stratified": {"tf": 1.7320508075688772}, "ifri_mini_ml_lib.model_selection.RandomSearchCV.random_state": {"tf": 1.7320508075688772}, "ifri_mini_ml_lib.model_selection.RandomSearchCV.best_params_": {"tf": 1.7320508075688772}, "ifri_mini_ml_lib.model_selection.RandomSearchCV.best_score_": {"tf": 1.7320508075688772}, "ifri_mini_ml_lib.model_selection.RandomSearchCV.best_estimator_": {"tf": 1.7320508075688772}, "ifri_mini_ml_lib.model_selection.RandomSearchCV.fit": {"tf": 5.196152422706632}, "ifri_mini_ml_lib.neural_networks": {"tf": 1.7320508075688772}, "ifri_mini_ml_lib.neural_networks.MLPClassifier": {"tf": 1.4142135623730951}, "ifri_mini_ml_lib.neural_networks.MLPClassifier.__init__": {"tf": 4.795831523312719}, "ifri_mini_ml_lib.neural_networks.MLPClassifier.hidden_layer_sizes": {"tf": 1.7320508075688772}, "ifri_mini_ml_lib.neural_networks.MLPClassifier.activation": {"tf": 1.7320508075688772}, "ifri_mini_ml_lib.neural_networks.MLPClassifier.solver": {"tf": 1.7320508075688772}, "ifri_mini_ml_lib.neural_networks.MLPClassifier.alpha": {"tf": 1.7320508075688772}, "ifri_mini_ml_lib.neural_networks.MLPClassifier.batch_size": {"tf": 1.7320508075688772}, "ifri_mini_ml_lib.neural_networks.MLPClassifier.learning_rate": {"tf": 1.7320508075688772}, "ifri_mini_ml_lib.neural_networks.MLPClassifier.max_iter": {"tf": 1.7320508075688772}, "ifri_mini_ml_lib.neural_networks.MLPClassifier.shuffle": {"tf": 1.7320508075688772}, "ifri_mini_ml_lib.neural_networks.MLPClassifier.beta1": {"tf": 1.7320508075688772}, "ifri_mini_ml_lib.neural_networks.MLPClassifier.beta2": {"tf": 1.7320508075688772}, "ifri_mini_ml_lib.neural_networks.MLPClassifier.epsilon": {"tf": 1.7320508075688772}, "ifri_mini_ml_lib.neural_networks.MLPClassifier.momentum": {"tf": 1.7320508075688772}, "ifri_mini_ml_lib.neural_networks.MLPClassifier.tol": {"tf": 1.7320508075688772}, "ifri_mini_ml_lib.neural_networks.MLPClassifier.early_stopping": {"tf": 1.7320508075688772}, "ifri_mini_ml_lib.neural_networks.MLPClassifier.validation_fraction": {"tf": 1.7320508075688772}, "ifri_mini_ml_lib.neural_networks.MLPClassifier.n_iter_no_change": {"tf": 1.7320508075688772}, "ifri_mini_ml_lib.neural_networks.MLPClassifier.activation_functions": {"tf": 1.7320508075688772}, "ifri_mini_ml_lib.neural_networks.MLPClassifier.activation_derivatives": {"tf": 1.7320508075688772}, "ifri_mini_ml_lib.neural_networks.MLPClassifier.activation_func": {"tf": 1.7320508075688772}, "ifri_mini_ml_lib.neural_networks.MLPClassifier.activation_derivative": {"tf": 1.7320508075688772}, "ifri_mini_ml_lib.neural_networks.MLPClassifier.weights": {"tf": 1.7320508075688772}, "ifri_mini_ml_lib.neural_networks.MLPClassifier.biases": {"tf": 1.7320508075688772}, "ifri_mini_ml_lib.neural_networks.MLPClassifier.n_layers": {"tf": 1.7320508075688772}, "ifri_mini_ml_lib.neural_networks.MLPClassifier.n_outputs": {"tf": 1.7320508075688772}, "ifri_mini_ml_lib.neural_networks.MLPClassifier.velocity_weights": {"tf": 1.7320508075688772}, "ifri_mini_ml_lib.neural_networks.MLPClassifier.velocity_biases": {"tf": 1.7320508075688772}, "ifri_mini_ml_lib.neural_networks.MLPClassifier.m_weights": {"tf": 1.7320508075688772}, "ifri_mini_ml_lib.neural_networks.MLPClassifier.m_biases": {"tf": 1.7320508075688772}, "ifri_mini_ml_lib.neural_networks.MLPClassifier.v_weights": {"tf": 1.7320508075688772}, "ifri_mini_ml_lib.neural_networks.MLPClassifier.v_biases": {"tf": 1.7320508075688772}, "ifri_mini_ml_lib.neural_networks.MLPClassifier.t": {"tf": 1.7320508075688772}, "ifri_mini_ml_lib.neural_networks.MLPClassifier.loss_history": {"tf": 1.7320508075688772}, "ifri_mini_ml_lib.neural_networks.MLPClassifier.val_loss_history": {"tf": 1.7320508075688772}, "ifri_mini_ml_lib.neural_networks.MLPClassifier.best_loss": {"tf": 1.7320508075688772}, "ifri_mini_ml_lib.neural_networks.MLPClassifier.no_improvement_count": {"tf": 1.7320508075688772}, "ifri_mini_ml_lib.neural_networks.MLPClassifier.trained": {"tf": 1.7320508075688772}, "ifri_mini_ml_lib.neural_networks.MLPClassifier.classes_": {"tf": 1.7320508075688772}, "ifri_mini_ml_lib.neural_networks.MLPClassifier.fit": {"tf": 3.605551275463989}, "ifri_mini_ml_lib.neural_networks.MLPClassifier.predict": {"tf": 3.4641016151377544}, "ifri_mini_ml_lib.neural_networks.MLPClassifier.predict_proba": {"tf": 3.4641016151377544}, "ifri_mini_ml_lib.neural_networks.MLPClassifier.score": {"tf": 3.605551275463989}, "ifri_mini_ml_lib.neural_networks.MLPRegressor": {"tf": 1.4142135623730951}, "ifri_mini_ml_lib.neural_networks.MLPRegressor.__init__": {"tf": 4.795831523312719}, "ifri_mini_ml_lib.neural_networks.MLPRegressor.hidden_layer_sizes": {"tf": 1.7320508075688772}, "ifri_mini_ml_lib.neural_networks.MLPRegressor.activation": {"tf": 1.7320508075688772}, "ifri_mini_ml_lib.neural_networks.MLPRegressor.solver": {"tf": 1.7320508075688772}, "ifri_mini_ml_lib.neural_networks.MLPRegressor.alpha": {"tf": 1.7320508075688772}, "ifri_mini_ml_lib.neural_networks.MLPRegressor.batch_size": {"tf": 1.7320508075688772}, "ifri_mini_ml_lib.neural_networks.MLPRegressor.learning_rate": {"tf": 1.7320508075688772}, "ifri_mini_ml_lib.neural_networks.MLPRegressor.max_iter": {"tf": 1.7320508075688772}, "ifri_mini_ml_lib.neural_networks.MLPRegressor.shuffle": {"tf": 1.7320508075688772}, "ifri_mini_ml_lib.neural_networks.MLPRegressor.beta1": {"tf": 1.7320508075688772}, "ifri_mini_ml_lib.neural_networks.MLPRegressor.beta2": {"tf": 1.7320508075688772}, "ifri_mini_ml_lib.neural_networks.MLPRegressor.epsilon": {"tf": 1.7320508075688772}, "ifri_mini_ml_lib.neural_networks.MLPRegressor.momentum": {"tf": 1.7320508075688772}, "ifri_mini_ml_lib.neural_networks.MLPRegressor.tol": {"tf": 1.7320508075688772}, "ifri_mini_ml_lib.neural_networks.MLPRegressor.early_stopping": {"tf": 1.7320508075688772}, "ifri_mini_ml_lib.neural_networks.MLPRegressor.validation_fraction": {"tf": 1.7320508075688772}, "ifri_mini_ml_lib.neural_networks.MLPRegressor.n_iter_no_change": {"tf": 1.7320508075688772}, "ifri_mini_ml_lib.neural_networks.MLPRegressor.activation_functions": {"tf": 1.7320508075688772}, "ifri_mini_ml_lib.neural_networks.MLPRegressor.activation_derivatives": {"tf": 1.7320508075688772}, "ifri_mini_ml_lib.neural_networks.MLPRegressor.activation_func": {"tf": 1.7320508075688772}, "ifri_mini_ml_lib.neural_networks.MLPRegressor.activation_derivative": {"tf": 1.7320508075688772}, "ifri_mini_ml_lib.neural_networks.MLPRegressor.weights": {"tf": 1.7320508075688772}, "ifri_mini_ml_lib.neural_networks.MLPRegressor.biases": {"tf": 1.7320508075688772}, "ifri_mini_ml_lib.neural_networks.MLPRegressor.n_layers": {"tf": 1.7320508075688772}, "ifri_mini_ml_lib.neural_networks.MLPRegressor.n_outputs": {"tf": 1.7320508075688772}, "ifri_mini_ml_lib.neural_networks.MLPRegressor.velocity_weights": {"tf": 1.7320508075688772}, "ifri_mini_ml_lib.neural_networks.MLPRegressor.velocity_biases": {"tf": 1.7320508075688772}, "ifri_mini_ml_lib.neural_networks.MLPRegressor.m_weights": {"tf": 1.7320508075688772}, "ifri_mini_ml_lib.neural_networks.MLPRegressor.m_biases": {"tf": 1.7320508075688772}, "ifri_mini_ml_lib.neural_networks.MLPRegressor.v_weights": {"tf": 1.7320508075688772}, "ifri_mini_ml_lib.neural_networks.MLPRegressor.v_biases": {"tf": 1.7320508075688772}, "ifri_mini_ml_lib.neural_networks.MLPRegressor.t": {"tf": 1.7320508075688772}, "ifri_mini_ml_lib.neural_networks.MLPRegressor.loss_history": {"tf": 1.7320508075688772}, "ifri_mini_ml_lib.neural_networks.MLPRegressor.val_loss_history": {"tf": 1.7320508075688772}, "ifri_mini_ml_lib.neural_networks.MLPRegressor.best_loss": {"tf": 1.7320508075688772}, "ifri_mini_ml_lib.neural_networks.MLPRegressor.no_improvement_count": {"tf": 1.7320508075688772}, "ifri_mini_ml_lib.neural_networks.MLPRegressor.trained": {"tf": 1.7320508075688772}, "ifri_mini_ml_lib.neural_networks.MLPRegressor.fit": {"tf": 3.605551275463989}, "ifri_mini_ml_lib.neural_networks.MLPRegressor.predict": {"tf": 3.4641016151377544}, "ifri_mini_ml_lib.neural_networks.MLPRegressor.score": {"tf": 3.605551275463989}, "ifri_mini_ml_lib.preprocessing": {"tf": 1.7320508075688772}, "ifri_mini_ml_lib.preprocessing.dimensionality_reduction": {"tf": 1.7320508075688772}, "ifri_mini_ml_lib.preprocessing.dimensionality_reduction.PCA": {"tf": 3.4641016151377544}, "ifri_mini_ml_lib.preprocessing.dimensionality_reduction.PCA.__init__": {"tf": 4.795831523312719}, "ifri_mini_ml_lib.preprocessing.dimensionality_reduction.PCA.n_component": {"tf": 1.7320508075688772}, "ifri_mini_ml_lib.preprocessing.dimensionality_reduction.PCA.mean": {"tf": 1.7320508075688772}, "ifri_mini_ml_lib.preprocessing.dimensionality_reduction.PCA.cov": {"tf": 1.7320508075688772}, "ifri_mini_ml_lib.preprocessing.dimensionality_reduction.PCA.eigen_values": {"tf": 1.7320508075688772}, "ifri_mini_ml_lib.preprocessing.dimensionality_reduction.PCA.eigen_vectors": {"tf": 1.7320508075688772}, "ifri_mini_ml_lib.preprocessing.dimensionality_reduction.PCA.components": {"tf": 1.7320508075688772}, "ifri_mini_ml_lib.preprocessing.dimensionality_reduction.PCA.fit": {"tf": 5.0990195135927845}, "ifri_mini_ml_lib.preprocessing.dimensionality_reduction.PCA.transform": {"tf": 5.196152422706632}, "ifri_mini_ml_lib.preprocessing.dimensionality_reduction.PCA.fit_transform": {"tf": 5.0990195135927845}, "ifri_mini_ml_lib.preprocessing.dimensionality_reduction.PCA.plot_cov_matrix": {"tf": 4.47213595499958}, "ifri_mini_ml_lib.preprocessing.dimensionality_reduction.PCA.explained_variances": {"tf": 4.69041575982343}, "ifri_mini_ml_lib.preprocessing.dimensionality_reduction.PCA.explained_variances_ratio": {"tf": 4.795831523312719}, "ifri_mini_ml_lib.preprocessing.dimensionality_reduction.PCA.plot_cumulative_explained_variance_ratio": {"tf": 4.47213595499958}, "ifri_mini_ml_lib.preprocessing.dimensionality_reduction.TSNE": {"tf": 3.605551275463989}, "ifri_mini_ml_lib.preprocessing.dimensionality_reduction.TSNE.__init__": {"tf": 5.656854249492381}, "ifri_mini_ml_lib.preprocessing.dimensionality_reduction.TSNE.n_components": {"tf": 1.7320508075688772}, "ifri_mini_ml_lib.preprocessing.dimensionality_reduction.TSNE.perplexity": {"tf": 1.7320508075688772}, "ifri_mini_ml_lib.preprocessing.dimensionality_reduction.TSNE.early_exaggeration": {"tf": 1.7320508075688772}, "ifri_mini_ml_lib.preprocessing.dimensionality_reduction.TSNE.learning_rate": {"tf": 1.7320508075688772}, "ifri_mini_ml_lib.preprocessing.dimensionality_reduction.TSNE.n_iter": {"tf": 1.7320508075688772}, "ifri_mini_ml_lib.preprocessing.dimensionality_reduction.TSNE.init": {"tf": 1.7320508075688772}, "ifri_mini_ml_lib.preprocessing.dimensionality_reduction.TSNE.min_grad_norm": {"tf": 1.7320508075688772}, "ifri_mini_ml_lib.preprocessing.dimensionality_reduction.TSNE.random_state": {"tf": 1.7320508075688772}, "ifri_mini_ml_lib.preprocessing.dimensionality_reduction.TSNE.verbose": {"tf": 1.7320508075688772}, "ifri_mini_ml_lib.preprocessing.dimensionality_reduction.TSNE.embedding_": {"tf": 1.7320508075688772}, "ifri_mini_ml_lib.preprocessing.dimensionality_reduction.TSNE.kl_divergence_": {"tf": 1.7320508075688772}, "ifri_mini_ml_lib.preprocessing.dimensionality_reduction.TSNE.n_iter_": {"tf": 1.7320508075688772}, "ifri_mini_ml_lib.preprocessing.dimensionality_reduction.TSNE.rng": {"tf": 1.7320508075688772}, "ifri_mini_ml_lib.preprocessing.dimensionality_reduction.TSNE.fit": {"tf": 5.385164807134504}, "ifri_mini_ml_lib.preprocessing.dimensionality_reduction.TSNE.fit_transform": {"tf": 5.0990195135927845}, "ifri_mini_ml_lib.preprocessing.dimensionality_reduction.TSNE.generate_test_data": {"tf": 5.291502622129181}, "ifri_mini_ml_lib.preprocessing.dimensionality_reduction.TSNE.plot_results": {"tf": 5.0990195135927845}, "ifri_mini_ml_lib.preprocessing.preparation": {"tf": 1.7320508075688772}, "ifri_mini_ml_lib.preprocessing.preparation.MinMaxScaler": {"tf": 3}, "ifri_mini_ml_lib.preprocessing.preparation.MinMaxScaler.__init__": {"tf": 5.0990195135927845}, "ifri_mini_ml_lib.preprocessing.preparation.MinMaxScaler.min_": {"tf": 1.7320508075688772}, "ifri_mini_ml_lib.preprocessing.preparation.MinMaxScaler.max_": {"tf": 1.7320508075688772}, "ifri_mini_ml_lib.preprocessing.preparation.MinMaxScaler.columns": {"tf": 1.7320508075688772}, "ifri_mini_ml_lib.preprocessing.preparation.MinMaxScaler.fit": {"tf": 5.0990195135927845}, "ifri_mini_ml_lib.preprocessing.preparation.MinMaxScaler.transform": {"tf": 5.385164807134504}, "ifri_mini_ml_lib.preprocessing.preparation.MinMaxScaler.fit_transform": {"tf": 5}, "ifri_mini_ml_lib.preprocessing.preparation.MinMaxScaler.inverse_transform": {"tf": 5.291502622129181}, "ifri_mini_ml_lib.preprocessing.preparation.MissingValueHandler": {"tf": 1.7320508075688772}, "ifri_mini_ml_lib.preprocessing.preparation.MissingValueHandler.remove_missing": {"tf": 5.477225575051661}, "ifri_mini_ml_lib.preprocessing.preparation.MissingValueHandler.impute_statistical": {"tf": 5.385164807134504}, "ifri_mini_ml_lib.preprocessing.preparation.MissingValueHandler.impute_default": {"tf": 5.477225575051661}, "ifri_mini_ml_lib.preprocessing.preparation.MissingValueHandler.impute_knn": {"tf": 5.385164807134504}, "ifri_mini_ml_lib.preprocessing.preparation.MissingValueHandler.impute_regression": {"tf": 5.656854249492381}, "ifri_mini_ml_lib.preprocessing.preparation.StandardScaler": {"tf": 3.872983346207417}, "ifri_mini_ml_lib.preprocessing.preparation.StandardScaler.__init__": {"tf": 1.7320508075688772}, "ifri_mini_ml_lib.preprocessing.preparation.StandardScaler.mean_": {"tf": 1.7320508075688772}, "ifri_mini_ml_lib.preprocessing.preparation.StandardScaler.std_": {"tf": 1.7320508075688772}, "ifri_mini_ml_lib.preprocessing.preparation.StandardScaler.is_dataframe": {"tf": 1.7320508075688772}, "ifri_mini_ml_lib.preprocessing.preparation.StandardScaler.columns": {"tf": 1.7320508075688772}, "ifri_mini_ml_lib.preprocessing.preparation.StandardScaler.fit": {"tf": 3.1622776601683795}, "ifri_mini_ml_lib.preprocessing.preparation.StandardScaler.transform": {"tf": 4}, "ifri_mini_ml_lib.preprocessing.preparation.StandardScaler.fit_transform": {"tf": 3.605551275463989}, "ifri_mini_ml_lib.preprocessing.preparation.StandardScaler.inverse_transform": {"tf": 4}, "ifri_mini_ml_lib.preprocessing.preparation.CategoricalEncoder": {"tf": 3.1622776601683795}, "ifri_mini_ml_lib.preprocessing.preparation.CategoricalEncoder.__init__": {"tf": 1.7320508075688772}, "ifri_mini_ml_lib.preprocessing.preparation.CategoricalEncoder.encoding_type": {"tf": 1.7320508075688772}, "ifri_mini_ml_lib.preprocessing.preparation.CategoricalEncoder.target_column": {"tf": 1.7320508075688772}, "ifri_mini_ml_lib.preprocessing.preparation.CategoricalEncoder.mapping": {"tf": 1.7320508075688772}, "ifri_mini_ml_lib.preprocessing.preparation.CategoricalEncoder.fit": {"tf": 3.605551275463989}, "ifri_mini_ml_lib.preprocessing.preparation.CategoricalEncoder.transform": {"tf": 3.3166247903554}, "ifri_mini_ml_lib.preprocessing.preparation.CategoricalEncoder.fit_transform": {"tf": 3.605551275463989}, "ifri_mini_ml_lib.preprocessing.preparation.DataSplitter": {"tf": 1.7320508075688772}, "ifri_mini_ml_lib.preprocessing.preparation.DataSplitter.__init__": {"tf": 2.6457513110645907}, "ifri_mini_ml_lib.preprocessing.preparation.DataSplitter.seed": {"tf": 1.7320508075688772}, "ifri_mini_ml_lib.preprocessing.preparation.DataSplitter.train_test_split": {"tf": 5.477225575051661}, "ifri_mini_ml_lib.preprocessing.preparation.DataSplitter.stratified_train_test_split": {"tf": 5.477225575051661}, "ifri_mini_ml_lib.preprocessing.preparation.DataSplitter.temporal_train_test_split": {"tf": 5.477225575051661}, "ifri_mini_ml_lib.preprocessing.preparation.DataSplitter.k_fold_split": {"tf": 5.385164807134504}, "ifri_mini_ml_lib.regression": {"tf": 1.7320508075688772}, "ifri_mini_ml_lib.regression.LinearRegression": {"tf": 3}, "ifri_mini_ml_lib.regression.LinearRegression.__init__": {"tf": 1.7320508075688772}, "ifri_mini_ml_lib.regression.LinearRegression.method": {"tf": 1.7320508075688772}, "ifri_mini_ml_lib.regression.LinearRegression.learning_rate": {"tf": 1.7320508075688772}, "ifri_mini_ml_lib.regression.LinearRegression.epochs": {"tf": 1.7320508075688772}, "ifri_mini_ml_lib.regression.LinearRegression.w": {"tf": 1.7320508075688772}, "ifri_mini_ml_lib.regression.LinearRegression.b": {"tf": 1.7320508075688772}, "ifri_mini_ml_lib.regression.LinearRegression.fit": {"tf": 5}, "ifri_mini_ml_lib.regression.LinearRegression.predict": {"tf": 5.0990195135927845}, "ifri_mini_ml_lib.regression.PolynomialRegression": {"tf": 3.1622776601683795}, "ifri_mini_ml_lib.regression.PolynomialRegression.__init__": {"tf": 1.7320508075688772}, "ifri_mini_ml_lib.regression.PolynomialRegression.degree": {"tf": 1.7320508075688772}, "ifri_mini_ml_lib.regression.PolynomialRegression.method": {"tf": 1.7320508075688772}, "ifri_mini_ml_lib.regression.PolynomialRegression.learning_rate": {"tf": 1.7320508075688772}, "ifri_mini_ml_lib.regression.PolynomialRegression.epochs": {"tf": 1.7320508075688772}, "ifri_mini_ml_lib.regression.PolynomialRegression.w": {"tf": 1.7320508075688772}, "ifri_mini_ml_lib.regression.PolynomialRegression.b": {"tf": 1.7320508075688772}, "ifri_mini_ml_lib.regression.PolynomialRegression.fit": {"tf": 5}, "ifri_mini_ml_lib.regression.PolynomialRegression.predict": {"tf": 5.0990195135927845}, "ifri_mini_ml_lib.regression.SVR": {"tf": 4.123105625617661}, "ifri_mini_ml_lib.regression.SVR.__init__": {"tf": 1.7320508075688772}, "ifri_mini_ml_lib.regression.SVR.kerlist": {"tf": 1.7320508075688772}, "ifri_mini_ml_lib.regression.SVR.eps": {"tf": 1.7320508075688772}, "ifri_mini_ml_lib.regression.SVR.train_X": {"tf": 1.7320508075688772}, "ifri_mini_ml_lib.regression.SVR.train_y": {"tf": 1.7320508075688772}, "ifri_mini_ml_lib.regression.SVR.test_X": {"tf": 1.7320508075688772}, "ifri_mini_ml_lib.regression.SVR.test_y": {"tf": 1.7320508075688772}, "ifri_mini_ml_lib.regression.SVR.ker": {"tf": 2.449489742783178}, "ifri_mini_ml_lib.regression.SVR.linear_kernel": {"tf": 3.3166247903554}, "ifri_mini_ml_lib.regression.SVR.polynomial_kernel": {"tf": 3.3166247903554}, "ifri_mini_ml_lib.regression.SVR.rbf_kernel": {"tf": 3.3166247903554}, "ifri_mini_ml_lib.regression.SVR.sigmoid_kernel": {"tf": 3.3166247903554}, "ifri_mini_ml_lib.regression.SVR.get_kernel": {"tf": 2.449489742783178}, "ifri_mini_ml_lib.regression.SVR.fit": {"tf": 3.605551275463989}, "ifri_mini_ml_lib.regression.SVR.predict": {"tf": 3.605551275463989}, "ifri_mini_ml_lib.regression.SVR.set_params": {"tf": 3.4641016151377544}}, "df": 374, "i": {"docs": {"ifri_mini_ml_lib.metrics.bias_evaluation.selection_rate": {"tf": 1}}, "df": 1, "f": {"docs": {"ifri_mini_ml_lib.association_rules.Apriori": {"tf": 1}, "ifri_mini_ml_lib.association_rules.Eclat": {"tf": 1}, "ifri_mini_ml_lib.association_rules.FPGrowth": {"tf": 1}, "ifri_mini_ml_lib.association_rules.DataAdapter.convert_to_transactions": {"tf": 1.7320508075688772}, "ifri_mini_ml_lib.association_rules.DataAdapter.load_csv_to_transactions": {"tf": 1.4142135623730951}, "ifri_mini_ml_lib.classification.DecisionTree.predict": {"tf": 1}, "ifri_mini_ml_lib.clustering.KMeans.plot_clusters": {"tf": 1}, "ifri_mini_ml_lib.clustering.HierarchicalClustering.__init__": {"tf": 1}, "ifri_mini_ml_lib.metrics.evaluation_metrics.confusion_matrix": {"tf": 1}, "ifri_mini_ml_lib.metrics.evaluation_metrics.precision": {"tf": 1}, "ifri_mini_ml_lib.metrics.evaluation_metrics.recall": {"tf": 1}, "ifri_mini_ml_lib.metrics.evaluation_metrics.f1_score": {"tf": 1}, "ifri_mini_ml_lib.neural_networks.MLPClassifier.__init__": {"tf": 1.4142135623730951}, "ifri_mini_ml_lib.neural_networks.MLPRegressor.__init__": {"tf": 1.4142135623730951}, "ifri_mini_ml_lib.preprocessing.dimensionality_reduction.TSNE.fit": {"tf": 1}, "ifri_mini_ml_lib.preprocessing.preparation.MinMaxScaler.transform": {"tf": 1}, "ifri_mini_ml_lib.preprocessing.preparation.MinMaxScaler.inverse_transform": {"tf": 1}, "ifri_mini_ml_lib.preprocessing.preparation.MissingValueHandler.impute_regression": {"tf": 1}, "ifri_mini_ml_lib.preprocessing.preparation.StandardScaler": {"tf": 1}, "ifri_mini_ml_lib.preprocessing.preparation.StandardScaler.transform": {"tf": 1}, "ifri_mini_ml_lib.preprocessing.preparation.StandardScaler.inverse_transform": {"tf": 1}, "ifri_mini_ml_lib.preprocessing.preparation.CategoricalEncoder.fit": {"tf": 1}, "ifri_mini_ml_lib.preprocessing.preparation.DataSplitter.train_test_split": {"tf": 2}, "ifri_mini_ml_lib.preprocessing.preparation.DataSplitter.stratified_train_test_split": {"tf": 1.4142135623730951}, "ifri_mini_ml_lib.preprocessing.preparation.DataSplitter.temporal_train_test_split": {"tf": 2}, "ifri_mini_ml_lib.preprocessing.preparation.DataSplitter.k_fold_split": {"tf": 1.4142135623730951}}, "df": 26, "r": {"docs": {}, "df": 0, "i": {"docs": {"ifri_mini_ml_lib": {"tf": 1}, "ifri_mini_ml_lib.association_rules.Apriori": {"tf": 1.4142135623730951}, "ifri_mini_ml_lib.association_rules.Eclat": {"tf": 1.4142135623730951}, "ifri_mini_ml_lib.association_rules.FPGrowth": {"tf": 1.4142135623730951}, "ifri_mini_ml_lib.association_rules.DataAdapter": {"tf": 1}, "ifri_mini_ml_lib.clustering.KMeans": {"tf": 1}, "ifri_mini_ml_lib.clustering.DBSCAN": {"tf": 1}, "ifri_mini_ml_lib.clustering.HierarchicalClustering": {"tf": 1}, "ifri_mini_ml_lib.model_selection.BayesianSearchCV.__init__": {"tf": 1.4142135623730951}, "ifri_mini_ml_lib.model_selection.GridSearchCV": {"tf": 1.4142135623730951}, "ifri_mini_ml_lib.model_selection.RandomSearchCV": {"tf": 1.7320508075688772}}, "df": 11}}}, "m": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "t": {"docs": {"ifri_mini_ml_lib.model_selection.BayesianSearchCV.__init__": {"tf": 1}, "ifri_mini_ml_lib.model_selection.GridSearchCV": {"tf": 1}, "ifri_mini_ml_lib.model_selection.RandomSearchCV": {"tf": 1}}, "df": 3, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"ifri_mini_ml_lib": {"tf": 1}, "ifri_mini_ml_lib.classification.DecisionTree": {"tf": 1}, "ifri_mini_ml_lib.clustering.KMeans": {"tf": 1.4142135623730951}, "ifri_mini_ml_lib.model_selection.BaggingClassifier": {"tf": 1}, "ifri_mini_ml_lib.model_selection.BaggingRegressor": {"tf": 1}, "ifri_mini_ml_lib.model_selection.GridSearchCV": {"tf": 1}, "ifri_mini_ml_lib.model_selection.RandomSearchCV": {"tf": 1}, "ifri_mini_ml_lib.preprocessing.dimensionality_reduction.PCA": {"tf": 1}, "ifri_mini_ml_lib.preprocessing.dimensionality_reduction.TSNE": {"tf": 1}, "ifri_mini_ml_lib.preprocessing.preparation.MinMaxScaler": {"tf": 1}, "ifri_mini_ml_lib.preprocessing.preparation.StandardScaler": {"tf": 1}, "ifri_mini_ml_lib.regression.LinearRegression": {"tf": 1}, "ifri_mini_ml_lib.regression.PolynomialRegression": {"tf": 1}}, "df": 13}}}}}, "s": {"docs": {"ifri_mini_ml_lib.classification.KNN": {"tf": 1}, "ifri_mini_ml_lib.classification.LogisticRegression": {"tf": 1}, "ifri_mini_ml_lib.classification.LogisticRegression.fit": {"tf": 1}}, "df": 3}, "e": {"docs": {}, "df": 0, "d": {"docs": {"ifri_mini_ml_lib.classification.LogisticRegression": {"tf": 1}}, "df": 1}}, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"ifri_mini_ml_lib.model_selection.BaggingClassifier": {"tf": 1}, "ifri_mini_ml_lib.model_selection.BaggingRegressor": {"tf": 1}}, "df": 2}}}}}}}}}, "o": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "t": {"docs": {"ifri_mini_ml_lib.association_rules.Apriori": {"tf": 1}, "ifri_mini_ml_lib.association_rules.Eclat": {"tf": 1}, "ifri_mini_ml_lib.association_rules.FPGrowth": {"tf": 1}, "ifri_mini_ml_lib.association_rules.DataAdapter": {"tf": 1.4142135623730951}, "ifri_mini_ml_lib.clustering.KMeans": {"tf": 1}, "ifri_mini_ml_lib.clustering.DBSCAN": {"tf": 1}, "ifri_mini_ml_lib.clustering.HierarchicalClustering": {"tf": 1}, "ifri_mini_ml_lib.model_selection.BayesianSearchCV.__init__": {"tf": 1.4142135623730951}, "ifri_mini_ml_lib.model_selection.GridSearchCV": {"tf": 1.4142135623730951}, "ifri_mini_ml_lib.model_selection.RandomSearchCV": {"tf": 1.4142135623730951}}, "df": 10}}}, "u": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "y": {"docs": {"ifri_mini_ml_lib.classification.DecisionTree": {"tf": 1.4142135623730951}}, "df": 1}}}}, "t": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"ifri_mini_ml_lib.preprocessing.preparation.MissingValueHandler": {"tf": 1}, "ifri_mini_ml_lib.preprocessing.preparation.MissingValueHandler.impute_statistical": {"tf": 1}}, "df": 2}}}}}, "e": {"docs": {"ifri_mini_ml_lib.preprocessing.preparation.MissingValueHandler.impute_statistical": {"tf": 1}, "ifri_mini_ml_lib.preprocessing.preparation.MissingValueHandler.impute_default": {"tf": 1}, "ifri_mini_ml_lib.preprocessing.preparation.MissingValueHandler.impute_knn": {"tf": 1}, "ifri_mini_ml_lib.preprocessing.preparation.MissingValueHandler.impute_regression": {"tf": 1.4142135623730951}}, "df": 4, "s": {"docs": {"ifri_mini_ml_lib.preprocessing.preparation.MissingValueHandler.impute_statistical": {"tf": 1}, "ifri_mini_ml_lib.preprocessing.preparation.MissingValueHandler.impute_knn": {"tf": 1}, "ifri_mini_ml_lib.preprocessing.preparation.MissingValueHandler.impute_regression": {"tf": 1}}, "df": 3}, "d": {"docs": {"ifri_mini_ml_lib.preprocessing.preparation.MissingValueHandler.impute_statistical": {"tf": 1}, "ifri_mini_ml_lib.preprocessing.preparation.MissingValueHandler.impute_default": {"tf": 1}, "ifri_mini_ml_lib.preprocessing.preparation.MissingValueHandler.impute_knn": {"tf": 1}, "ifri_mini_ml_lib.preprocessing.preparation.MissingValueHandler.impute_regression": {"tf": 1}}, "df": 4}}}}, "r": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "v": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "t": {"docs": {"ifri_mini_ml_lib.model_selection.BayesianSearchCV": {"tf": 1}, "ifri_mini_ml_lib.neural_networks.MLPClassifier.__init__": {"tf": 1}, "ifri_mini_ml_lib.neural_networks.MLPRegressor.__init__": {"tf": 1}}, "df": 3, "s": {"docs": {"ifri_mini_ml_lib.classification.LogisticRegression": {"tf": 1}}, "df": 1}}}}}}}}}}}, "n": {"docs": {"ifri_mini_ml_lib.association_rules.Apriori": {"tf": 1.7320508075688772}, "ifri_mini_ml_lib.association_rules.Eclat": {"tf": 1.4142135623730951}, "ifri_mini_ml_lib.association_rules.FPGrowth": {"tf": 1.4142135623730951}, "ifri_mini_ml_lib.association_rules.DataAdapter": {"tf": 1.4142135623730951}, "ifri_mini_ml_lib.association_rules.DataAdapter.load_csv_to_transactions": {"tf": 1}, "ifri_mini_ml_lib.classification.DecisionTree.predict": {"tf": 1}, "ifri_mini_ml_lib.classification.KNN.fit": {"tf": 1}, "ifri_mini_ml_lib.classification.KNN.predict": {"tf": 1}, "ifri_mini_ml_lib.clustering.KMeans.predict": {"tf": 1}, "ifri_mini_ml_lib.metrics.bias_evaluation.selection_rate_per_group": {"tf": 1}, "ifri_mini_ml_lib.metrics.evaluation_metrics.confusion_matrix": {"tf": 1}, "ifri_mini_ml_lib.neural_networks.MLPRegressor.predict": {"tf": 1}, "ifri_mini_ml_lib.preprocessing.preparation.MinMaxScaler.transform": {"tf": 1}, "ifri_mini_ml_lib.preprocessing.preparation.MinMaxScaler.fit_transform": {"tf": 1.4142135623730951}, "ifri_mini_ml_lib.preprocessing.preparation.MinMaxScaler.inverse_transform": {"tf": 1}, "ifri_mini_ml_lib.preprocessing.preparation.MissingValueHandler": {"tf": 1}, "ifri_mini_ml_lib.preprocessing.preparation.MissingValueHandler.impute_regression": {"tf": 1}, "ifri_mini_ml_lib.preprocessing.preparation.StandardScaler": {"tf": 1.4142135623730951}, "ifri_mini_ml_lib.preprocessing.preparation.CategoricalEncoder": {"tf": 1}, "ifri_mini_ml_lib.preprocessing.preparation.CategoricalEncoder.fit_transform": {"tf": 1}, "ifri_mini_ml_lib.preprocessing.preparation.DataSplitter.train_test_split": {"tf": 1.4142135623730951}, "ifri_mini_ml_lib.preprocessing.preparation.DataSplitter.stratified_train_test_split": {"tf": 1.4142135623730951}, "ifri_mini_ml_lib.preprocessing.preparation.DataSplitter.temporal_train_test_split": {"tf": 1.4142135623730951}, "ifri_mini_ml_lib.preprocessing.preparation.DataSplitter.k_fold_split": {"tf": 1}, "ifri_mini_ml_lib.regression.SVR": {"tf": 1.7320508075688772}}, "df": 25, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "a": {"docs": {"ifri_mini_ml_lib": {"tf": 1}, "ifri_mini_ml_lib.metrics.evaluation_metrics.calculate_inertia": {"tf": 2.8284271247461903}}, "df": 2}}}}}, "t": {"docs": {"ifri_mini_ml_lib.classification.DecisionTree": {"tf": 1.7320508075688772}, "ifri_mini_ml_lib.classification.DecisionTree.fit": {"tf": 1}, "ifri_mini_ml_lib.classification.KNN": {"tf": 1}, "ifri_mini_ml_lib.classification.KNN.__init__": {"tf": 1}, "ifri_mini_ml_lib.classification.LogisticRegression": {"tf": 1}, "ifri_mini_ml_lib.classification.LogisticRegression.__init__": {"tf": 1}, "ifri_mini_ml_lib.clustering.KMeans": {"tf": 1.7320508075688772}, "ifri_mini_ml_lib.clustering.KMeans.__init__": {"tf": 1.7320508075688772}, "ifri_mini_ml_lib.clustering.DBSCAN": {"tf": 1}, "ifri_mini_ml_lib.clustering.DBSCAN.__init__": {"tf": 1}, "ifri_mini_ml_lib.clustering.HierarchicalClustering": {"tf": 1}, "ifri_mini_ml_lib.clustering.HierarchicalClustering.__init__": {"tf": 1}, "ifri_mini_ml_lib.metrics.evaluation_metrics.precision": {"tf": 1}, "ifri_mini_ml_lib.metrics.evaluation_metrics.recall": {"tf": 1}, "ifri_mini_ml_lib.metrics.evaluation_metrics.f1_score": {"tf": 1}, "ifri_mini_ml_lib.model_selection.BaggingClassifier": {"tf": 1.4142135623730951}, "ifri_mini_ml_lib.model_selection.BaggingRegressor": {"tf": 1.4142135623730951}, "ifri_mini_ml_lib.model_selection.RandomSearchCV": {"tf": 1.7320508075688772}, "ifri_mini_ml_lib.neural_networks.MLPClassifier.__init__": {"tf": 2}, "ifri_mini_ml_lib.neural_networks.MLPRegressor.__init__": {"tf": 2}, "ifri_mini_ml_lib.preprocessing.dimensionality_reduction.PCA": {"tf": 1}, "ifri_mini_ml_lib.preprocessing.dimensionality_reduction.PCA.__init__": {"tf": 1}, "ifri_mini_ml_lib.preprocessing.dimensionality_reduction.TSNE": {"tf": 1.7320508075688772}, "ifri_mini_ml_lib.preprocessing.dimensionality_reduction.TSNE.__init__": {"tf": 2}, "ifri_mini_ml_lib.preprocessing.dimensionality_reduction.TSNE.generate_test_data": {"tf": 1.4142135623730951}, "ifri_mini_ml_lib.preprocessing.preparation.MissingValueHandler.remove_missing": {"tf": 1}, "ifri_mini_ml_lib.preprocessing.preparation.MissingValueHandler.impute_default": {"tf": 1}, "ifri_mini_ml_lib.preprocessing.preparation.MissingValueHandler.impute_knn": {"tf": 1}, "ifri_mini_ml_lib.preprocessing.preparation.DataSplitter.__init__": {"tf": 1}, "ifri_mini_ml_lib.preprocessing.preparation.DataSplitter.k_fold_split": {"tf": 1}, "ifri_mini_ml_lib.regression.LinearRegression": {"tf": 1}, "ifri_mini_ml_lib.regression.PolynomialRegression": {"tf": 1.4142135623730951}, "ifri_mini_ml_lib.regression.SVR": {"tf": 1}}, "df": 33, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"ifri_mini_ml_lib.association_rules.Apriori": {"tf": 1}}, "df": 1}}}}}}, "s": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"ifri_mini_ml_lib.association_rules.Eclat": {"tf": 1}}, "df": 1}}}}}}}, "n": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "l": {"docs": {"ifri_mini_ml_lib.regression.SVR.set_params": {"tf": 1}}, "df": 1, "l": {"docs": {}, "df": 0, "y": {"docs": {"ifri_mini_ml_lib.classification.DecisionTree.fit": {"tf": 1}}, "df": 1}}}}}, "c": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "t": {"docs": {"ifri_mini_ml_lib.classification.LogisticRegression": {"tf": 1}}, "df": 1}}}}}, "g": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"ifri_mini_ml_lib.preprocessing.preparation.CategoricalEncoder": {"tf": 1}}, "df": 1}}}}, "o": {"docs": {"ifri_mini_ml_lib.association_rules.DataAdapter": {"tf": 1}, "ifri_mini_ml_lib.association_rules.DataAdapter.convert_to_transactions": {"tf": 1}, "ifri_mini_ml_lib.association_rules.DataAdapter.load_csv_to_transactions": {"tf": 1}, "ifri_mini_ml_lib.clustering.KMeans": {"tf": 1}, "ifri_mini_ml_lib.preprocessing.dimensionality_reduction.PCA.transform": {"tf": 1}, "ifri_mini_ml_lib.preprocessing.preparation.DataSplitter.train_test_split": {"tf": 1}, "ifri_mini_ml_lib.preprocessing.preparation.DataSplitter.stratified_train_test_split": {"tf": 1}, "ifri_mini_ml_lib.preprocessing.preparation.DataSplitter.temporal_train_test_split": {"tf": 1}}, "df": 8}, "r": {"docs": {}, "df": 0, "a": {"docs": {"ifri_mini_ml_lib.clustering.KMeans": {"tf": 1}}, "df": 1}}}, "p": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "t": {"docs": {"ifri_mini_ml_lib.association_rules.Apriori.fit": {"tf": 1}, "ifri_mini_ml_lib.classification.DecisionTree.predict": {"tf": 1}, "ifri_mini_ml_lib.classification.KNN.predict": {"tf": 1.4142135623730951}, "ifri_mini_ml_lib.classification.LogisticRegression.fit": {"tf": 1}, "ifri_mini_ml_lib.classification.LogisticRegression.predict_proba": {"tf": 1.4142135623730951}, "ifri_mini_ml_lib.classification.LogisticRegression.predict": {"tf": 1.4142135623730951}, "ifri_mini_ml_lib.clustering.KMeans.fit": {"tf": 1}, "ifri_mini_ml_lib.clustering.KMeans.fit_predict": {"tf": 1}, "ifri_mini_ml_lib.clustering.DBSCAN.plot_clusters": {"tf": 1}, "ifri_mini_ml_lib.metrics.evaluation_metrics.calculate_inertia": {"tf": 1}, "ifri_mini_ml_lib.metrics.evaluation_metrics.calculate_silhouette": {"tf": 1}, "ifri_mini_ml_lib.model_selection.BaggingClassifier.predict": {"tf": 1}, "ifri_mini_ml_lib.model_selection.BaggingRegressor.predict": {"tf": 1}, "ifri_mini_ml_lib.model_selection.BayesianSearchCV.fit": {"tf": 1}, "ifri_mini_ml_lib.model_selection.GridSearchCV.fit": {"tf": 1}, "ifri_mini_ml_lib.preprocessing.dimensionality_reduction.PCA.fit_transform": {"tf": 1}, "ifri_mini_ml_lib.preprocessing.preparation.MinMaxScaler.fit": {"tf": 1}, "ifri_mini_ml_lib.preprocessing.preparation.MinMaxScaler.transform": {"tf": 1.4142135623730951}, "ifri_mini_ml_lib.preprocessing.preparation.MinMaxScaler.inverse_transform": {"tf": 1}, "ifri_mini_ml_lib.preprocessing.preparation.MissingValueHandler.remove_missing": {"tf": 1}, "ifri_mini_ml_lib.preprocessing.preparation.MissingValueHandler.impute_statistical": {"tf": 1}, "ifri_mini_ml_lib.preprocessing.preparation.MissingValueHandler.impute_default": {"tf": 1}, "ifri_mini_ml_lib.preprocessing.preparation.MissingValueHandler.impute_knn": {"tf": 1}, "ifri_mini_ml_lib.preprocessing.preparation.MissingValueHandler.impute_regression": {"tf": 1}, "ifri_mini_ml_lib.preprocessing.preparation.StandardScaler": {"tf": 1.4142135623730951}, "ifri_mini_ml_lib.preprocessing.preparation.StandardScaler.fit": {"tf": 1.4142135623730951}, "ifri_mini_ml_lib.preprocessing.preparation.StandardScaler.transform": {"tf": 1.4142135623730951}, "ifri_mini_ml_lib.preprocessing.preparation.StandardScaler.fit_transform": {"tf": 1}, "ifri_mini_ml_lib.preprocessing.preparation.CategoricalEncoder.fit": {"tf": 1}, "ifri_mini_ml_lib.preprocessing.preparation.CategoricalEncoder.transform": {"tf": 1}, "ifri_mini_ml_lib.regression.LinearRegression.predict": {"tf": 1}, "ifri_mini_ml_lib.regression.PolynomialRegression.predict": {"tf": 1}, "ifri_mini_ml_lib.regression.SVR.linear_kernel": {"tf": 1.4142135623730951}, "ifri_mini_ml_lib.regression.SVR.polynomial_kernel": {"tf": 1.4142135623730951}, "ifri_mini_ml_lib.regression.SVR.rbf_kernel": {"tf": 1.4142135623730951}, "ifri_mini_ml_lib.regression.SVR.sigmoid_kernel": {"tf": 1.4142135623730951}}, "df": 36}}}, "s": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "e": {"docs": {"ifri_mini_ml_lib.association_rules.Apriori.fit": {"tf": 1}, "ifri_mini_ml_lib.association_rules.Eclat.fit": {"tf": 1}, "ifri_mini_ml_lib.association_rules.FPGrowth.fit": {"tf": 1}, "ifri_mini_ml_lib.clustering.HierarchicalClustering.fit_predict": {"tf": 1}, "ifri_mini_ml_lib.model_selection.BayesianSearchCV.fit": {"tf": 1}, "ifri_mini_ml_lib.model_selection.GridSearchCV.fit": {"tf": 1}, "ifri_mini_ml_lib.preprocessing.dimensionality_reduction.PCA.fit": {"tf": 1}, "ifri_mini_ml_lib.preprocessing.dimensionality_reduction.TSNE.fit": {"tf": 1}, "ifri_mini_ml_lib.preprocessing.preparation.MinMaxScaler.__init__": {"tf": 1}}, "df": 9, "s": {"docs": {"ifri_mini_ml_lib.model_selection.BaggingClassifier.fit": {"tf": 1}, "ifri_mini_ml_lib.model_selection.BaggingRegressor.fit": {"tf": 1}}, "df": 2}}}}}, "e": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "d": {"docs": {"ifri_mini_ml_lib.model_selection.BaggingClassifier": {"tf": 1}, "ifri_mini_ml_lib.model_selection.BaggingRegressor": {"tf": 1}, "ifri_mini_ml_lib.preprocessing.preparation.MinMaxScaler": {"tf": 1}}, "df": 3}}}}}, "d": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "v": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "l": {"docs": {"ifri_mini_ml_lib.association_rules.Eclat.get_single_items_TIDset": {"tf": 1}}, "df": 1}}}}}}, "c": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"ifri_mini_ml_lib.metrics.evaluation_metrics.calculate_inertia": {"tf": 1}}, "df": 1}}}, "e": {"docs": {"ifri_mini_ml_lib.metrics.evaluation_metrics.calculate_silhouette": {"tf": 1}}, "df": 1, "s": {"docs": {"ifri_mini_ml_lib.metrics.evaluation_metrics.calculate_inertia": {"tf": 1}}, "df": 1}}}}}}, "e": {"docs": {}, "df": 0, "x": {"docs": {"ifri_mini_ml_lib.clustering.KMeans.predict": {"tf": 1.4142135623730951}, "ifri_mini_ml_lib.preprocessing.preparation.StandardScaler": {"tf": 1}}, "df": 2}}}, "f": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"ifri_mini_ml_lib.classification.DecisionTree": {"tf": 1}, "ifri_mini_ml_lib.classification.DecisionTree.fit": {"tf": 1}, "ifri_mini_ml_lib.preprocessing.preparation.CategoricalEncoder.fit": {"tf": 1}}, "df": 3}}}}}}}}, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "d": {"docs": {"ifri_mini_ml_lib.metrics.evaluation_metrics.confusion_matrix": {"tf": 1}}, "df": 1}}}}}}, "c": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "e": {"docs": {"ifri_mini_ml_lib.preprocessing.preparation.DataSplitter.train_test_split": {"tf": 1.4142135623730951}, "ifri_mini_ml_lib.preprocessing.preparation.DataSplitter.stratified_train_test_split": {"tf": 1.4142135623730951}, "ifri_mini_ml_lib.preprocessing.preparation.DataSplitter.temporal_train_test_split": {"tf": 1.4142135623730951}, "ifri_mini_ml_lib.regression.SVR": {"tf": 1}}, "df": 4, "s": {"docs": {"ifri_mini_ml_lib.classification.DecisionTree": {"tf": 1}, "ifri_mini_ml_lib.classification.LogisticRegression": {"tf": 1}, "ifri_mini_ml_lib.classification.LogisticRegression.fit": {"tf": 1.4142135623730951}, "ifri_mini_ml_lib.classification.LogisticRegression.predict": {"tf": 1}}, "df": 4}}}}}}, "i": {"docs": {}, "df": 0, "t": {"docs": {"ifri_mini_ml_lib.clustering.KMeans": {"tf": 1.4142135623730951}, "ifri_mini_ml_lib.clustering.KMeans.__init__": {"tf": 1.4142135623730951}, "ifri_mini_ml_lib.model_selection.BayesianSearchCV.__init__": {"tf": 1}, "ifri_mini_ml_lib.preprocessing.dimensionality_reduction.TSNE.__init__": {"tf": 1}}, "df": 4, "i": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "l": {"docs": {"ifri_mini_ml_lib.preprocessing.dimensionality_reduction.TSNE": {"tf": 1}, "ifri_mini_ml_lib.preprocessing.dimensionality_reduction.TSNE.__init__": {"tf": 1}}, "df": 2, "i": {"docs": {}, "df": 0, "z": {"docs": {}, "df": 0, "e": {"docs": {"ifri_mini_ml_lib.clustering.KMeans.__init__": {"tf": 1}, "ifri_mini_ml_lib.model_selection.BayesianSearchCV.__init__": {"tf": 1}, "ifri_mini_ml_lib.neural_networks.MLPClassifier.__init__": {"tf": 1}, "ifri_mini_ml_lib.neural_networks.MLPRegressor.__init__": {"tf": 1}, "ifri_mini_ml_lib.preprocessing.preparation.MinMaxScaler.__init__": {"tf": 1}, "ifri_mini_ml_lib.preprocessing.preparation.DataSplitter.__init__": {"tf": 1}}, "df": 6, "s": {"docs": {"ifri_mini_ml_lib.classification.KNN.__init__": {"tf": 1}, "ifri_mini_ml_lib.classification.LogisticRegression.__init__": {"tf": 1}, "ifri_mini_ml_lib.clustering.KMeans.__init__": {"tf": 1.4142135623730951}, "ifri_mini_ml_lib.clustering.KMeans.fit": {"tf": 1}, "ifri_mini_ml_lib.clustering.DBSCAN.__init__": {"tf": 1}, "ifri_mini_ml_lib.clustering.HierarchicalClustering.__init__": {"tf": 1}, "ifri_mini_ml_lib.preprocessing.dimensionality_reduction.PCA.__init__": {"tf": 1}, "ifri_mini_ml_lib.preprocessing.dimensionality_reduction.TSNE.__init__": {"tf": 1}, "ifri_mini_ml_lib.preprocessing.preparation.StandardScaler.__init__": {"tf": 1}}, "df": 9}, "d": {"docs": {"ifri_mini_ml_lib.preprocessing.preparation.MinMaxScaler.__init__": {"tf": 1}}, "df": 1}}, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"ifri_mini_ml_lib.clustering.KMeans": {"tf": 1}, "ifri_mini_ml_lib.model_selection.BayesianSearchCV.__init__": {"tf": 1.4142135623730951}, "ifri_mini_ml_lib.preprocessing.dimensionality_reduction.TSNE.__init__": {"tf": 1}, "ifri_mini_ml_lib.preprocessing.preparation.MinMaxScaler": {"tf": 1}}, "df": 4}}}}}}}}}}}}, "v": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "e": {"docs": {"ifri_mini_ml_lib.preprocessing.preparation.MinMaxScaler.inverse_transform": {"tf": 1}, "ifri_mini_ml_lib.preprocessing.preparation.StandardScaler.inverse_transform": {"tf": 1.4142135623730951}}, "df": 2}}}}}}, "s": {"docs": {"ifri_mini_ml_lib.association_rules.Apriori": {"tf": 1}, "ifri_mini_ml_lib.association_rules.Eclat": {"tf": 2}, "ifri_mini_ml_lib.association_rules.Eclat.fit": {"tf": 1}, "ifri_mini_ml_lib.association_rules.FPGrowth": {"tf": 1}, "ifri_mini_ml_lib.association_rules.FPGrowth.fit": {"tf": 1}, "ifri_mini_ml_lib.association_rules.DataAdapter.convert_to_transactions": {"tf": 1.7320508075688772}, "ifri_mini_ml_lib.association_rules.DataAdapter.load_csv_to_transactions": {"tf": 1}, "ifri_mini_ml_lib.classification.KNN": {"tf": 1.4142135623730951}, "ifri_mini_ml_lib.classification.KNN.fit": {"tf": 1}, "ifri_mini_ml_lib.classification.LogisticRegression.__init__": {"tf": 1.7320508075688772}, "ifri_mini_ml_lib.classification.LogisticRegression.predict": {"tf": 1}, "ifri_mini_ml_lib.clustering.KMeans.__init__": {"tf": 2.23606797749979}, "ifri_mini_ml_lib.clustering.KMeans.plot_clusters": {"tf": 1}, "ifri_mini_ml_lib.clustering.DBSCAN": {"tf": 1}, "ifri_mini_ml_lib.clustering.HierarchicalClustering.plot_clusters": {"tf": 1}, "ifri_mini_ml_lib.metrics.bias_evaluation.selection_rate": {"tf": 1}, "ifri_mini_ml_lib.metrics.evaluation_metrics.precision": {"tf": 1}, "ifri_mini_ml_lib.metrics.evaluation_metrics.recall": {"tf": 1}, "ifri_mini_ml_lib.metrics.evaluation_metrics.f1_score": {"tf": 1}, "ifri_mini_ml_lib.model_selection.BaggingClassifier": {"tf": 1.7320508075688772}, "ifri_mini_ml_lib.model_selection.BaggingRegressor": {"tf": 1.7320508075688772}, "ifri_mini_ml_lib.model_selection.RandomSearchCV": {"tf": 1.7320508075688772}, "ifri_mini_ml_lib.preprocessing.preparation.MinMaxScaler": {"tf": 1.4142135623730951}, "ifri_mini_ml_lib.preprocessing.preparation.StandardScaler": {"tf": 1}, "ifri_mini_ml_lib.preprocessing.preparation.StandardScaler.fit": {"tf": 1}, "ifri_mini_ml_lib.preprocessing.preparation.CategoricalEncoder": {"tf": 1.4142135623730951}, "ifri_mini_ml_lib.preprocessing.preparation.CategoricalEncoder.fit": {"tf": 1.4142135623730951}, "ifri_mini_ml_lib.preprocessing.preparation.DataSplitter.train_test_split": {"tf": 1.4142135623730951}, "ifri_mini_ml_lib.preprocessing.preparation.DataSplitter.temporal_train_test_split": {"tf": 1.4142135623730951}, "ifri_mini_ml_lib.preprocessing.preparation.DataSplitter.k_fold_split": {"tf": 1.4142135623730951}, "ifri_mini_ml_lib.regression.SVR": {"tf": 2.449489742783178}}, "df": 31}, "t": {"docs": {"ifri_mini_ml_lib.association_rules.DataAdapter.load_csv_to_transactions": {"tf": 1}, "ifri_mini_ml_lib.classification.DecisionTree": {"tf": 1}, "ifri_mini_ml_lib.classification.KNN.fit": {"tf": 1}, "ifri_mini_ml_lib.clustering.KMeans": {"tf": 1}, "ifri_mini_ml_lib.clustering.DBSCAN": {"tf": 1}, "ifri_mini_ml_lib.metrics.evaluation_metrics.calculate_silhouette": {"tf": 1}, "ifri_mini_ml_lib.model_selection.BaggingClassifier": {"tf": 1}, "ifri_mini_ml_lib.model_selection.BaggingRegressor": {"tf": 1}, "ifri_mini_ml_lib.model_selection.RandomSearchCV": {"tf": 1}, "ifri_mini_ml_lib.preprocessing.preparation.MinMaxScaler.fit_transform": {"tf": 1}, "ifri_mini_ml_lib.preprocessing.preparation.MissingValueHandler.impute_regression": {"tf": 1}, "ifri_mini_ml_lib.preprocessing.preparation.StandardScaler": {"tf": 1}, "ifri_mini_ml_lib.preprocessing.preparation.StandardScaler.fit_transform": {"tf": 1}, "ifri_mini_ml_lib.preprocessing.preparation.CategoricalEncoder.fit_transform": {"tf": 1}}, "df": 14, "e": {"docs": {}, "df": 0, "m": {"1": {"docs": {"ifri_mini_ml_lib.association_rules.DataAdapter": {"tf": 2}}, "df": 1}, "2": {"docs": {"ifri_mini_ml_lib.association_rules.DataAdapter": {"tf": 2.23606797749979}}, "df": 1}, "3": {"docs": {"ifri_mini_ml_lib.association_rules.DataAdapter": {"tf": 2}}, "df": 1}, "docs": {"ifri_mini_ml_lib.association_rules.Apriori": {"tf": 2.449489742783178}, "ifri_mini_ml_lib.association_rules.Eclat": {"tf": 2.8284271247461903}, "ifri_mini_ml_lib.association_rules.DataAdapter.convert_to_transactions": {"tf": 1}}, "df": 3, "s": {"docs": {"ifri_mini_ml_lib.association_rules.Eclat": {"tf": 1}, "ifri_mini_ml_lib.association_rules.Eclat.fit": {"tf": 1}, "ifri_mini_ml_lib.association_rules.Eclat.get_single_items_TIDset": {"tf": 1}, "ifri_mini_ml_lib.association_rules.FPGrowth.fit": {"tf": 1}, "ifri_mini_ml_lib.association_rules.DataAdapter.convert_to_transactions": {"tf": 1}}, "df": 5, "e": {"docs": {}, "df": 0, "t": {"docs": {"ifri_mini_ml_lib.association_rules.Apriori": {"tf": 1}, "ifri_mini_ml_lib.association_rules.Eclat": {"tf": 1.4142135623730951}, "ifri_mini_ml_lib.association_rules.FPGrowth": {"tf": 2.8284271247461903}}, "df": 3, "s": {"docs": {"ifri_mini_ml_lib.association_rules.Apriori": {"tf": 2.23606797749979}, "ifri_mini_ml_lib.association_rules.Apriori.fit": {"tf": 1}, "ifri_mini_ml_lib.association_rules.Apriori.get_frequent_itemsets": {"tf": 1.7320508075688772}, "ifri_mini_ml_lib.association_rules.Eclat": {"tf": 2.6457513110645907}, "ifri_mini_ml_lib.association_rules.Eclat.fit": {"tf": 1}, "ifri_mini_ml_lib.association_rules.Eclat.get_frequent_itemsets": {"tf": 1.7320508075688772}, "ifri_mini_ml_lib.association_rules.FPGrowth": {"tf": 2.23606797749979}, "ifri_mini_ml_lib.association_rules.FPGrowth.fit": {"tf": 1}, "ifri_mini_ml_lib.association_rules.FPGrowth.get_frequent_itemsets": {"tf": 1.4142135623730951}}, "df": 9, "[": {"docs": {}, "df": 0, ":": {"3": {"docs": {"ifri_mini_ml_lib.association_rules.FPGrowth": {"tf": 1}}, "df": 1}, "docs": {}, "df": 0}}}}}}}, "r": {"docs": {"ifri_mini_ml_lib.classification.LogisticRegression": {"tf": 1.4142135623730951}, "ifri_mini_ml_lib.classification.LogisticRegression.__init__": {"tf": 1}, "ifri_mini_ml_lib.clustering.KMeans": {"tf": 1.4142135623730951}, "ifri_mini_ml_lib.clustering.KMeans.__init__": {"tf": 1}, "ifri_mini_ml_lib.clustering.KMeans.fit": {"tf": 1}, "ifri_mini_ml_lib.model_selection.BayesianSearchCV.__init__": {"tf": 1.4142135623730951}, "ifri_mini_ml_lib.model_selection.RandomSearchCV": {"tf": 1.4142135623730951}, "ifri_mini_ml_lib.neural_networks.MLPClassifier.__init__": {"tf": 1.4142135623730951}, "ifri_mini_ml_lib.neural_networks.MLPRegressor.__init__": {"tf": 1.4142135623730951}, "ifri_mini_ml_lib.preprocessing.dimensionality_reduction.TSNE": {"tf": 1.4142135623730951}, "ifri_mini_ml_lib.preprocessing.dimensionality_reduction.TSNE.__init__": {"tf": 1}}, "df": 11, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "s": {"docs": {"ifri_mini_ml_lib.classification.LogisticRegression": {"tf": 1}, "ifri_mini_ml_lib.classification.LogisticRegression.__init__": {"tf": 1}, "ifri_mini_ml_lib.clustering.KMeans": {"tf": 1}, "ifri_mini_ml_lib.clustering.KMeans.__init__": {"tf": 1}, "ifri_mini_ml_lib.clustering.KMeans.fit": {"tf": 1}, "ifri_mini_ml_lib.model_selection.BayesianSearchCV.__init__": {"tf": 1}, "ifri_mini_ml_lib.neural_networks.MLPClassifier.__init__": {"tf": 1.4142135623730951}, "ifri_mini_ml_lib.neural_networks.MLPRegressor.__init__": {"tf": 1.4142135623730951}, "ifri_mini_ml_lib.preprocessing.dimensionality_reduction.TSNE": {"tf": 1.4142135623730951}, "ifri_mini_ml_lib.preprocessing.dimensionality_reduction.TSNE.__init__": {"tf": 1}, "ifri_mini_ml_lib.regression.LinearRegression": {"tf": 1}, "ifri_mini_ml_lib.regression.PolynomialRegression": {"tf": 1}}, "df": 12}}}, "v": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "y": {"docs": {"ifri_mini_ml_lib.clustering.KMeans": {"tf": 1}, "ifri_mini_ml_lib.clustering.KMeans.fit": {"tf": 1}}, "df": 2}}}}}}}}}, "s": {"docs": {"ifri_mini_ml_lib.association_rules.Eclat": {"tf": 1}, "ifri_mini_ml_lib.metrics.evaluation_metrics.calculate_inertia": {"tf": 1}, "ifri_mini_ml_lib.metrics.evaluation_metrics.calculate_silhouette": {"tf": 1}, "ifri_mini_ml_lib.preprocessing.preparation.StandardScaler.inverse_transform": {"tf": 1}}, "df": 4, "e": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "f": {"docs": {"ifri_mini_ml_lib.model_selection.BayesianSearchCV.fit": {"tf": 1}, "ifri_mini_ml_lib.model_selection.GridSearchCV.fit": {"tf": 1}}, "df": 2}}}}}, "d": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "f": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {"ifri_mini_ml_lib.clustering.DBSCAN": {"tf": 1}}, "df": 1}, "r": {"docs": {}, "df": 0, "s": {"docs": {"ifri_mini_ml_lib.metrics.bias_evaluation.selection_rate_per_group": {"tf": 1}, "ifri_mini_ml_lib.metrics.bias_evaluation.demographic_parity_ratio": {"tf": 1}, "ifri_mini_ml_lib.metrics.bias_evaluation.demographic_parity_difference": {"tf": 1}, "ifri_mini_ml_lib.metrics.bias_evaluation.tpr_fpr_by_group": {"tf": 1}, "ifri_mini_ml_lib.metrics.bias_evaluation.equalized_odds_ratio": {"tf": 1}}, "df": 5}}}}}}}}}}}, "m": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {"ifri_mini_ml_lib.association_rules.Apriori": {"tf": 2}, "ifri_mini_ml_lib.association_rules.Eclat": {"tf": 2}, "ifri_mini_ml_lib.association_rules.FPGrowth": {"tf": 2}, "ifri_mini_ml_lib.classification.DecisionTree": {"tf": 1.7320508075688772}, "ifri_mini_ml_lib.clustering.DBSCAN": {"tf": 1.7320508075688772}, "ifri_mini_ml_lib.clustering.DBSCAN.__init__": {"tf": 1.4142135623730951}, "ifri_mini_ml_lib.metrics.bias_evaluation.demographic_parity_ratio": {"tf": 1}, "ifri_mini_ml_lib.metrics.bias_evaluation.demographic_parity_difference": {"tf": 1}, "ifri_mini_ml_lib.model_selection.BayesianSearchCV.__init__": {"tf": 1}, "ifri_mini_ml_lib.model_selection.RandomSearchCV": {"tf": 1}, "ifri_mini_ml_lib.preprocessing.dimensionality_reduction.TSNE.__init__": {"tf": 1}, "ifri_mini_ml_lib.preprocessing.preparation.MinMaxScaler": {"tf": 1}, "ifri_mini_ml_lib.preprocessing.preparation.MinMaxScaler.__init__": {"tf": 1}, "ifri_mini_ml_lib.preprocessing.preparation.MinMaxScaler.transform": {"tf": 1}}, "df": 14, "i": {"docs": {"ifri_mini_ml_lib": {"tf": 1}, "ifri_mini_ml_lib.association_rules.Apriori": {"tf": 1.4142135623730951}, "ifri_mini_ml_lib.association_rules.Eclat": {"tf": 1.4142135623730951}, "ifri_mini_ml_lib.association_rules.FPGrowth": {"tf": 1.4142135623730951}, "ifri_mini_ml_lib.association_rules.DataAdapter": {"tf": 1}, "ifri_mini_ml_lib.clustering.KMeans": {"tf": 1}, "ifri_mini_ml_lib.clustering.DBSCAN": {"tf": 1}, "ifri_mini_ml_lib.clustering.HierarchicalClustering": {"tf": 1}, "ifri_mini_ml_lib.model_selection.BayesianSearchCV.__init__": {"tf": 1.4142135623730951}, "ifri_mini_ml_lib.model_selection.GridSearchCV": {"tf": 1.4142135623730951}, "ifri_mini_ml_lib.model_selection.RandomSearchCV": {"tf": 1.7320508075688772}, "ifri_mini_ml_lib.neural_networks.MLPRegressor.__init__": {"tf": 1}}, "df": 12, "m": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "m": {"docs": {"ifri_mini_ml_lib.association_rules.Apriori": {"tf": 1.4142135623730951}, "ifri_mini_ml_lib.association_rules.Eclat": {"tf": 1.4142135623730951}, "ifri_mini_ml_lib.association_rules.FPGrowth": {"tf": 1.4142135623730951}, "ifri_mini_ml_lib.classification.DecisionTree": {"tf": 2.23606797749979}, "ifri_mini_ml_lib.classification.LogisticRegression.__init__": {"tf": 1}, "ifri_mini_ml_lib.clustering.DBSCAN": {"tf": 1}, "ifri_mini_ml_lib.clustering.DBSCAN.__init__": {"tf": 1}, "ifri_mini_ml_lib.preprocessing.preparation.MinMaxScaler": {"tf": 1}, "ifri_mini_ml_lib.preprocessing.preparation.MinMaxScaler.fit": {"tf": 1}}, "df": 9}}, "i": {"docs": {}, "df": 0, "z": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"ifri_mini_ml_lib.clustering.KMeans": {"tf": 1}}, "df": 1}}}}}}, "n": {"docs": {}, "df": 0, "g": {"docs": {"ifri_mini_ml_lib.association_rules.DataAdapter": {"tf": 1}, "ifri_mini_ml_lib.association_rules.DataAdapter.convert_to_transactions": {"tf": 1}}, "df": 2}}}, "/": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "x": {"docs": {"ifri_mini_ml_lib.metrics.bias_evaluation.equalized_odds_ratio": {"tf": 1}, "ifri_mini_ml_lib.preprocessing.preparation.MinMaxScaler": {"tf": 1}, "ifri_mini_ml_lib.preprocessing.preparation.MinMaxScaler.fit": {"tf": 1}, "ifri_mini_ml_lib.preprocessing.preparation.MinMaxScaler.transform": {"tf": 1}}, "df": 4}}}}, "m": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "x": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"ifri_mini_ml_lib.preprocessing.preparation.MinMaxScaler.__init__": {"tf": 2}}, "df": 1}}}}}}}}}}, "l": {"docs": {}, "df": 0, "k": {"docs": {"ifri_mini_ml_lib.association_rules.Apriori": {"tf": 2.6457513110645907}, "ifri_mini_ml_lib.association_rules.Eclat": {"tf": 2.6457513110645907}, "ifri_mini_ml_lib.association_rules.FPGrowth": {"tf": 2.6457513110645907}, "ifri_mini_ml_lib.association_rules.DataAdapter": {"tf": 2}}, "df": 4}}, "s": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"ifri_mini_ml_lib.preprocessing.preparation.MissingValueHandler": {"tf": 1}, "ifri_mini_ml_lib.preprocessing.preparation.MissingValueHandler.remove_missing": {"tf": 1.4142135623730951}, "ifri_mini_ml_lib.preprocessing.preparation.MissingValueHandler.impute_statistical": {"tf": 1}, "ifri_mini_ml_lib.preprocessing.preparation.MissingValueHandler.impute_default": {"tf": 1}, "ifri_mini_ml_lib.preprocessing.preparation.MissingValueHandler.impute_knn": {"tf": 1}}, "df": 5}}}}}}, "l": {"docs": {"ifri_mini_ml_lib": {"tf": 1}, "ifri_mini_ml_lib.association_rules.Apriori": {"tf": 1.4142135623730951}, "ifri_mini_ml_lib.association_rules.Eclat": {"tf": 1.4142135623730951}, "ifri_mini_ml_lib.association_rules.FPGrowth": {"tf": 1.4142135623730951}, "ifri_mini_ml_lib.association_rules.DataAdapter": {"tf": 1}, "ifri_mini_ml_lib.clustering.KMeans": {"tf": 1}, "ifri_mini_ml_lib.clustering.DBSCAN": {"tf": 1}, "ifri_mini_ml_lib.clustering.HierarchicalClustering": {"tf": 1}, "ifri_mini_ml_lib.model_selection.BayesianSearchCV.__init__": {"tf": 1}, "ifri_mini_ml_lib.model_selection.GridSearchCV": {"tf": 1}}, "df": 10, "p": {"docs": {"ifri_mini_ml_lib": {"tf": 1}, "ifri_mini_ml_lib.neural_networks.MLPClassifier.__init__": {"tf": 1}, "ifri_mini_ml_lib.neural_networks.MLPClassifier.fit": {"tf": 1.4142135623730951}, "ifri_mini_ml_lib.neural_networks.MLPRegressor.__init__": {"tf": 1}, "ifri_mini_ml_lib.neural_networks.MLPRegressor.fit": {"tf": 1.4142135623730951}}, "df": 5}}, "a": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "h": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "e": {"docs": {"ifri_mini_ml_lib": {"tf": 1}, "ifri_mini_ml_lib.model_selection.GridSearchCV": {"tf": 1}, "ifri_mini_ml_lib.model_selection.RandomSearchCV": {"tf": 1}}, "df": 3}}}}}, "i": {"docs": {}, "df": 0, "n": {"docs": {"ifri_mini_ml_lib.association_rules.Apriori.fit": {"tf": 1}, "ifri_mini_ml_lib.association_rules.Eclat.fit": {"tf": 1}, "ifri_mini_ml_lib.clustering.HierarchicalClustering.plot_dendrogram": {"tf": 1}}, "df": 3}}, "l": {"docs": {}, "df": 0, "f": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "d": {"docs": {"ifri_mini_ml_lib.association_rules.DataAdapter.convert_to_transactions": {"tf": 1}, "ifri_mini_ml_lib.association_rules.DataAdapter.load_csv_to_transactions": {"tf": 1}}, "df": 2}}}}}}}, "x": {"docs": {"ifri_mini_ml_lib.classification.DecisionTree": {"tf": 1.4142135623730951}, "ifri_mini_ml_lib.classification.LogisticRegression": {"tf": 1.4142135623730951}, "ifri_mini_ml_lib.classification.LogisticRegression.__init__": {"tf": 1}, "ifri_mini_ml_lib.clustering.KMeans": {"tf": 1.4142135623730951}, "ifri_mini_ml_lib.clustering.KMeans.__init__": {"tf": 1}, "ifri_mini_ml_lib.clustering.KMeans.fit": {"tf": 1.4142135623730951}, "ifri_mini_ml_lib.metrics.bias_evaluation.demographic_parity_ratio": {"tf": 1}, "ifri_mini_ml_lib.metrics.bias_evaluation.demographic_parity_difference": {"tf": 1}, "ifri_mini_ml_lib.model_selection.BayesianSearchCV.__init__": {"tf": 1}, "ifri_mini_ml_lib.model_selection.RandomSearchCV": {"tf": 1}, "ifri_mini_ml_lib.neural_networks.MLPClassifier.__init__": {"tf": 1}, "ifri_mini_ml_lib.neural_networks.MLPRegressor.__init__": {"tf": 1}, "ifri_mini_ml_lib.preprocessing.preparation.MinMaxScaler": {"tf": 1}, "ifri_mini_ml_lib.preprocessing.preparation.MinMaxScaler.__init__": {"tf": 1}, "ifri_mini_ml_lib.preprocessing.preparation.MinMaxScaler.transform": {"tf": 1}}, "df": 15, "i": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "m": {"docs": {"ifri_mini_ml_lib.classification.DecisionTree": {"tf": 1}, "ifri_mini_ml_lib.classification.LogisticRegression": {"tf": 1}, "ifri_mini_ml_lib.classification.LogisticRegression.__init__": {"tf": 1}, "ifri_mini_ml_lib.clustering.KMeans": {"tf": 1}, "ifri_mini_ml_lib.clustering.KMeans.__init__": {"tf": 1}, "ifri_mini_ml_lib.clustering.DBSCAN": {"tf": 1}, "ifri_mini_ml_lib.clustering.DBSCAN.__init__": {"tf": 1}, "ifri_mini_ml_lib.metrics.bias_evaluation.equalized_odds_difference": {"tf": 1}, "ifri_mini_ml_lib.neural_networks.MLPClassifier.__init__": {"tf": 1}, "ifri_mini_ml_lib.neural_networks.MLPRegressor.__init__": {"tf": 1}, "ifri_mini_ml_lib.preprocessing.dimensionality_reduction.TSNE": {"tf": 1}, "ifri_mini_ml_lib.preprocessing.dimensionality_reduction.TSNE.__init__": {"tf": 1}, "ifri_mini_ml_lib.preprocessing.preparation.MinMaxScaler": {"tf": 1}, "ifri_mini_ml_lib.preprocessing.preparation.MinMaxScaler.fit": {"tf": 1}}, "df": 14}}}}}, "k": {"docs": {}, "df": 0, "e": {"docs": {"ifri_mini_ml_lib.classification.KNN": {"tf": 1}, "ifri_mini_ml_lib.neural_networks.MLPClassifier.predict": {"tf": 1}, "ifri_mini_ml_lib.neural_networks.MLPClassifier.predict_proba": {"tf": 1}}, "df": 3}}, "r": {"docs": {}, "df": 0, "k": {"docs": {}, "df": 0, "s": {"docs": {"ifri_mini_ml_lib.clustering.KMeans.plot_clusters": {"tf": 1}}, "df": 1}}}, "t": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "x": {"docs": {"ifri_mini_ml_lib.clustering.HierarchicalClustering.plot_dendrogram": {"tf": 1}, "ifri_mini_ml_lib.metrics.evaluation_metrics.confusion_matrix": {"tf": 1.4142135623730951}, "ifri_mini_ml_lib.model_selection.BaggingClassifier.fit": {"tf": 1}, "ifri_mini_ml_lib.model_selection.BaggingClassifier.predict": {"tf": 1}, "ifri_mini_ml_lib.model_selection.BaggingRegressor.fit": {"tf": 1}, "ifri_mini_ml_lib.model_selection.BaggingRegressor.predict": {"tf": 1}, "ifri_mini_ml_lib.model_selection.RandomSearchCV.fit": {"tf": 1}, "ifri_mini_ml_lib.preprocessing.dimensionality_reduction.PCA": {"tf": 1}, "ifri_mini_ml_lib.preprocessing.dimensionality_reduction.PCA.fit": {"tf": 1}, "ifri_mini_ml_lib.preprocessing.dimensionality_reduction.PCA.plot_cov_matrix": {"tf": 1.4142135623730951}, "ifri_mini_ml_lib.regression.SVR.linear_kernel": {"tf": 1.7320508075688772}, "ifri_mini_ml_lib.regression.SVR.polynomial_kernel": {"tf": 1.7320508075688772}, "ifri_mini_ml_lib.regression.SVR.rbf_kernel": {"tf": 1.7320508075688772}, "ifri_mini_ml_lib.regression.SVR.sigmoid_kernel": {"tf": 1.7320508075688772}}, "df": 14}}}, "p": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "b": {"docs": {"ifri_mini_ml_lib.preprocessing.dimensionality_reduction.TSNE.plot_results": {"tf": 1}}, "df": 1}}}}}}}}, "e": {"docs": {"ifri_mini_ml_lib.metrics.evaluation_metrics.evaluate_model": {"tf": 1}}, "df": 1}, "p": {"docs": {}, "df": 0, "e": {"docs": {"ifri_mini_ml_lib.metrics.evaluation_metrics.evaluate_model": {"tf": 1}}, "df": 1}, "p": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "s": {"docs": {"ifri_mini_ml_lib.preprocessing.preparation.CategoricalEncoder.fit": {"tf": 1}, "ifri_mini_ml_lib.preprocessing.preparation.CategoricalEncoder.transform": {"tf": 1}}, "df": 2}}}}}}, "j": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "y": {"docs": {"ifri_mini_ml_lib.model_selection.BaggingClassifier": {"tf": 1}, "ifri_mini_ml_lib.model_selection.BaggingClassifier.predict": {"tf": 1}}, "df": 2}}}}}}, "n": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "l": {"docs": {"ifri_mini_ml_lib.model_selection.RandomSearchCV": {"tf": 1}}, "df": 1}}}, "y": {"docs": {"ifri_mini_ml_lib.preprocessing.preparation.MissingValueHandler.remove_missing": {"tf": 1}}, "df": 1}}}, "e": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "n": {"docs": {"ifri_mini_ml_lib.clustering.KMeans.fit": {"tf": 1}, "ifri_mini_ml_lib.model_selection.GridSearchCV": {"tf": 1}, "ifri_mini_ml_lib.preprocessing.dimensionality_reduction.PCA": {"tf": 1.4142135623730951}, "ifri_mini_ml_lib.preprocessing.preparation.MissingValueHandler.impute_statistical": {"tf": 1}, "ifri_mini_ml_lib.preprocessing.preparation.StandardScaler": {"tf": 1.7320508075688772}, "ifri_mini_ml_lib.preprocessing.preparation.StandardScaler.fit": {"tf": 1}, "ifri_mini_ml_lib.preprocessing.preparation.StandardScaler.transform": {"tf": 1}, "ifri_mini_ml_lib.preprocessing.preparation.CategoricalEncoder": {"tf": 1}}, "df": 8, "s": {"docs": {"ifri_mini_ml_lib": {"tf": 1}, "ifri_mini_ml_lib.clustering.KMeans": {"tf": 2}, "ifri_mini_ml_lib.clustering.KMeans.__init__": {"tf": 1.4142135623730951}}, "df": 3}}, "s": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {"ifri_mini_ml_lib.metrics.evaluation_metrics.calculate_inertia": {"tf": 1}, "ifri_mini_ml_lib.metrics.evaluation_metrics.calculate_silhouette": {"tf": 1}}, "df": 2}}}}}}, "t": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "c": {"docs": {"ifri_mini_ml_lib.model_selection.BayesianSearchCV.__init__": {"tf": 1}}, "df": 1, "s": {"docs": {"ifri_mini_ml_lib": {"tf": 1}, "ifri_mini_ml_lib.model_selection.BayesianSearchCV.__init__": {"tf": 1}, "ifri_mini_ml_lib.model_selection.GridSearchCV": {"tf": 1}, "ifri_mini_ml_lib.model_selection.RandomSearchCV": {"tf": 1.4142135623730951}}, "df": 4}}}}, "h": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "d": {"docs": {"ifri_mini_ml_lib.association_rules.Apriori.fit": {"tf": 1.4142135623730951}, "ifri_mini_ml_lib.association_rules.Eclat.fit": {"tf": 1.4142135623730951}, "ifri_mini_ml_lib.association_rules.FPGrowth.fit": {"tf": 1}, "ifri_mini_ml_lib.classification.KNN.fit": {"tf": 1}, "ifri_mini_ml_lib.clustering.KMeans": {"tf": 1}, "ifri_mini_ml_lib.clustering.KMeans.__init__": {"tf": 1}, "ifri_mini_ml_lib.clustering.KMeans.fit_predict": {"tf": 1}, "ifri_mini_ml_lib.clustering.HierarchicalClustering": {"tf": 1.7320508075688772}, "ifri_mini_ml_lib.clustering.HierarchicalClustering.__init__": {"tf": 1.7320508075688772}, "ifri_mini_ml_lib.clustering.HierarchicalClustering.fit_predict": {"tf": 1}, "ifri_mini_ml_lib.clustering.HierarchicalClustering.plot_dendrogram": {"tf": 1}, "ifri_mini_ml_lib.model_selection.GridSearchCV.fit": {"tf": 1}, "ifri_mini_ml_lib.preprocessing.dimensionality_reduction.TSNE.__init__": {"tf": 1}, "ifri_mini_ml_lib.preprocessing.preparation.MissingValueHandler.impute_statistical": {"tf": 1}, "ifri_mini_ml_lib.preprocessing.preparation.CategoricalEncoder.transform": {"tf": 1}, "ifri_mini_ml_lib.preprocessing.preparation.CategoricalEncoder.fit_transform": {"tf": 1}, "ifri_mini_ml_lib.regression.LinearRegression": {"tf": 1.4142135623730951}, "ifri_mini_ml_lib.regression.LinearRegression.fit": {"tf": 1}, "ifri_mini_ml_lib.regression.PolynomialRegression": {"tf": 1.4142135623730951}}, "df": 19, "s": {"docs": {"ifri_mini_ml_lib.model_selection.BaggingClassifier": {"tf": 1}, "ifri_mini_ml_lib.model_selection.BaggingRegressor": {"tf": 1}, "ifri_mini_ml_lib.model_selection.BayesianSearchCV.__init__": {"tf": 1}, "ifri_mini_ml_lib.model_selection.GridSearchCV": {"tf": 1}}, "df": 4}}}}}, "d": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "m": {"docs": {"ifri_mini_ml_lib.association_rules.DataAdapter": {"tf": 1.7320508075688772}}, "df": 1}}, "a": {"docs": {}, "df": 0, "n": {"docs": {"ifri_mini_ml_lib.preprocessing.preparation.MissingValueHandler.impute_statistical": {"tf": 1.4142135623730951}}, "df": 1}}}}, "r": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"ifri_mini_ml_lib.clustering.HierarchicalClustering": {"tf": 1}}, "df": 1}}}, "e": {"docs": {}, "df": 0, "d": {"docs": {"ifri_mini_ml_lib.clustering.HierarchicalClustering.__init__": {"tf": 1}}, "df": 1}}}}}, "o": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "e": {"docs": {"ifri_mini_ml_lib.association_rules.DataAdapter": {"tf": 1.7320508075688772}, "ifri_mini_ml_lib.association_rules.DataAdapter.convert_to_transactions": {"tf": 1}, "ifri_mini_ml_lib.preprocessing.preparation.MissingValueHandler.impute_statistical": {"tf": 1}}, "df": 3, "l": {"1": {"docs": {"ifri_mini_ml_lib.model_selection.BaggingClassifier": {"tf": 1}, "ifri_mini_ml_lib.model_selection.BaggingRegressor": {"tf": 1}}, "df": 2}, "2": {"docs": {"ifri_mini_ml_lib.model_selection.BaggingClassifier": {"tf": 1}, "ifri_mini_ml_lib.model_selection.BaggingRegressor": {"tf": 1}}, "df": 2}, "3": {"docs": {"ifri_mini_ml_lib.model_selection.BaggingClassifier": {"tf": 1}, "ifri_mini_ml_lib.model_selection.BaggingRegressor": {"tf": 1}}, "df": 2}, "docs": {"ifri_mini_ml_lib": {"tf": 1}, "ifri_mini_ml_lib.classification.DecisionTree.predict": {"tf": 1}, "ifri_mini_ml_lib.classification.KNN.fit": {"tf": 1}, "ifri_mini_ml_lib.classification.LogisticRegression": {"tf": 2.23606797749979}, "ifri_mini_ml_lib.classification.LogisticRegression.__init__": {"tf": 1}, "ifri_mini_ml_lib.classification.LogisticRegression.fit": {"tf": 1.4142135623730951}, "ifri_mini_ml_lib.clustering.KMeans.__init__": {"tf": 1}, "ifri_mini_ml_lib.clustering.KMeans.fit": {"tf": 1}, "ifri_mini_ml_lib.clustering.KMeans.fit_predict": {"tf": 1}, "ifri_mini_ml_lib.metrics.evaluation_metrics.calculate_inertia": {"tf": 1}, "ifri_mini_ml_lib.metrics.evaluation_metrics.calculate_silhouette": {"tf": 1}, "ifri_mini_ml_lib.model_selection.BaggingClassifier": {"tf": 3}, "ifri_mini_ml_lib.model_selection.BaggingClassifier.fit": {"tf": 1.4142135623730951}, "ifri_mini_ml_lib.model_selection.BaggingClassifier.predict": {"tf": 1}, "ifri_mini_ml_lib.model_selection.BaggingRegressor": {"tf": 3.1622776601683795}, "ifri_mini_ml_lib.model_selection.BaggingRegressor.fit": {"tf": 1.4142135623730951}, "ifri_mini_ml_lib.model_selection.BaggingRegressor.predict": {"tf": 1}, "ifri_mini_ml_lib.model_selection.BayesianSearchCV": {"tf": 1}, "ifri_mini_ml_lib.model_selection.BayesianSearchCV.__init__": {"tf": 1.7320508075688772}, "ifri_mini_ml_lib.model_selection.GridSearchCV": {"tf": 2.23606797749979}, "ifri_mini_ml_lib.model_selection.GridSearchCV.fit": {"tf": 1}, "ifri_mini_ml_lib.model_selection.RandomSearchCV": {"tf": 2.8284271247461903}, "ifri_mini_ml_lib.neural_networks.MLPClassifier.score": {"tf": 1.4142135623730951}, "ifri_mini_ml_lib.preprocessing.dimensionality_reduction.PCA.__init__": {"tf": 1.4142135623730951}, "ifri_mini_ml_lib.preprocessing.dimensionality_reduction.PCA.fit": {"tf": 1.4142135623730951}, "ifri_mini_ml_lib.preprocessing.dimensionality_reduction.PCA.transform": {"tf": 1}, "ifri_mini_ml_lib.preprocessing.dimensionality_reduction.PCA.fit_transform": {"tf": 1}, "ifri_mini_ml_lib.preprocessing.dimensionality_reduction.PCA.plot_cov_matrix": {"tf": 1}, "ifri_mini_ml_lib.preprocessing.dimensionality_reduction.PCA.explained_variances": {"tf": 1}, "ifri_mini_ml_lib.preprocessing.dimensionality_reduction.PCA.explained_variances_ratio": {"tf": 1}, "ifri_mini_ml_lib.preprocessing.dimensionality_reduction.PCA.plot_cumulative_explained_variance_ratio": {"tf": 1}, "ifri_mini_ml_lib.preprocessing.dimensionality_reduction.TSNE.fit": {"tf": 1}, "ifri_mini_ml_lib.preprocessing.preparation.MissingValueHandler.impute_regression": {"tf": 1}, "ifri_mini_ml_lib.preprocessing.preparation.DataSplitter.k_fold_split": {"tf": 1}, "ifri_mini_ml_lib.regression.LinearRegression.fit": {"tf": 1.7320508075688772}, "ifri_mini_ml_lib.regression.LinearRegression.predict": {"tf": 1}, "ifri_mini_ml_lib.regression.PolynomialRegression.fit": {"tf": 1.7320508075688772}, "ifri_mini_ml_lib.regression.PolynomialRegression.predict": {"tf": 1}, "ifri_mini_ml_lib.regression.SVR": {"tf": 1}, "ifri_mini_ml_lib.regression.SVR.fit": {"tf": 1.4142135623730951}, "ifri_mini_ml_lib.regression.SVR.predict": {"tf": 1}, "ifri_mini_ml_lib.regression.SVR.set_params": {"tf": 1}}, "df": 42, "s": {"docs": {"ifri_mini_ml_lib.model_selection.BaggingClassifier": {"tf": 2.6457513110645907}, "ifri_mini_ml_lib.model_selection.BaggingClassifier.predict": {"tf": 1}, "ifri_mini_ml_lib.model_selection.BaggingRegressor": {"tf": 2.6457513110645907}, "ifri_mini_ml_lib.model_selection.BaggingRegressor.predict": {"tf": 1}}, "df": 4}}}}, "r": {"docs": {}, "df": 0, "e": {"docs": {"ifri_mini_ml_lib.association_rules.Apriori": {"tf": 1}, "ifri_mini_ml_lib.association_rules.FPGrowth": {"tf": 1}, "ifri_mini_ml_lib.clustering.DBSCAN.plot_clusters": {"tf": 1}}, "df": 3}}, "s": {"docs": {}, "df": 0, "t": {"docs": {"ifri_mini_ml_lib.classification.KNN.predict": {"tf": 1}}, "df": 1}}, "m": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "t": {"docs": {"ifri_mini_ml_lib.neural_networks.MLPClassifier.__init__": {"tf": 1.4142135623730951}, "ifri_mini_ml_lib.neural_networks.MLPRegressor.__init__": {"tf": 1.4142135623730951}}, "df": 2, "u": {"docs": {}, "df": 0, "m": {"docs": {"ifri_mini_ml_lib.classification.LogisticRegression": {"tf": 1}, "ifri_mini_ml_lib.classification.LogisticRegression.fit": {"tf": 1.4142135623730951}, "ifri_mini_ml_lib.neural_networks.MLPClassifier.__init__": {"tf": 1.7320508075688772}, "ifri_mini_ml_lib.neural_networks.MLPRegressor.__init__": {"tf": 1.7320508075688772}}, "df": 4}}}}}}, "v": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "t": {"docs": {"ifri_mini_ml_lib.clustering.KMeans": {"tf": 1}, "ifri_mini_ml_lib.clustering.KMeans.__init__": {"tf": 1}}, "df": 2}}}}}}}, "s": {"docs": {}, "df": 0, "e": {"docs": {"ifri_mini_ml_lib.metrics.evaluation_metrics.evaluate_model": {"tf": 1}}, "df": 1}}, "u": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {"ifri_mini_ml_lib.neural_networks.MLPClassifier": {"tf": 1}, "ifri_mini_ml_lib.neural_networks.MLPRegressor": {"tf": 1}}, "df": 2, "p": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "e": {"docs": {"ifri_mini_ml_lib.model_selection.BaggingClassifier": {"tf": 1}, "ifri_mini_ml_lib.model_selection.BaggingClassifier.fit": {"tf": 1}, "ifri_mini_ml_lib.model_selection.BaggingRegressor": {"tf": 1}, "ifri_mini_ml_lib.model_selection.BaggingRegressor.fit": {"tf": 1}, "ifri_mini_ml_lib.preprocessing.preparation.CategoricalEncoder": {"tf": 1}, "ifri_mini_ml_lib.regression.SVR.set_params": {"tf": 1}}, "df": 6}}}}}}, "s": {"docs": {}, "df": 0, "t": {"docs": {"ifri_mini_ml_lib.model_selection.BayesianSearchCV.__init__": {"tf": 1}, "ifri_mini_ml_lib.model_selection.GridSearchCV": {"tf": 1}, "ifri_mini_ml_lib.model_selection.RandomSearchCV": {"tf": 1}}, "df": 3}}}}, "l": {"2": {"docs": {"ifri_mini_ml_lib.neural_networks.MLPClassifier.__init__": {"tf": 1}, "ifri_mini_ml_lib.neural_networks.MLPRegressor.__init__": {"tf": 1}}, "df": 2}, "docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "b": {"docs": {"ifri_mini_ml_lib.association_rules.Apriori": {"tf": 1.4142135623730951}, "ifri_mini_ml_lib.association_rules.Eclat": {"tf": 1.4142135623730951}, "ifri_mini_ml_lib.association_rules.FPGrowth": {"tf": 1.4142135623730951}, "ifri_mini_ml_lib.association_rules.DataAdapter": {"tf": 1}, "ifri_mini_ml_lib.clustering.KMeans": {"tf": 1}, "ifri_mini_ml_lib.clustering.DBSCAN": {"tf": 1}, "ifri_mini_ml_lib.clustering.HierarchicalClustering": {"tf": 1}, "ifri_mini_ml_lib.model_selection.BayesianSearchCV.__init__": {"tf": 1.4142135623730951}, "ifri_mini_ml_lib.model_selection.GridSearchCV": {"tf": 1.4142135623730951}, "ifri_mini_ml_lib.model_selection.RandomSearchCV": {"tf": 1.7320508075688772}}, "df": 10, "r": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "y": {"docs": {"ifri_mini_ml_lib": {"tf": 1}}, "df": 1}}}}}, "n": {"docs": {"ifri_mini_ml_lib.regression.SVR": {"tf": 1}}, "df": 1, "e": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "r": {"docs": {"ifri_mini_ml_lib": {"tf": 1}, "ifri_mini_ml_lib.classification.LogisticRegression.fit": {"tf": 1}, "ifri_mini_ml_lib.model_selection.GridSearchCV": {"tf": 1}, "ifri_mini_ml_lib.regression.LinearRegression": {"tf": 1}, "ifri_mini_ml_lib.regression.LinearRegression.fit": {"tf": 1}, "ifri_mini_ml_lib.regression.SVR.linear_kernel": {"tf": 1}}, "df": 6, "r": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"ifri_mini_ml_lib.regression.LinearRegression.fit": {"tf": 1}}, "df": 1}}}}}}}}}}}}}, "k": {"docs": {"ifri_mini_ml_lib.association_rules.FPGrowth": {"tf": 1}}, "df": 1, "a": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "e": {"docs": {"ifri_mini_ml_lib.clustering.HierarchicalClustering": {"tf": 1.7320508075688772}, "ifri_mini_ml_lib.clustering.HierarchicalClustering.__init__": {"tf": 1.4142135623730951}, "ifri_mini_ml_lib.clustering.HierarchicalClustering.plot_dendrogram": {"tf": 1.4142135623730951}}, "df": 3}}}}}, "s": {"docs": {}, "df": 0, "t": {"docs": {"ifri_mini_ml_lib.association_rules.Apriori": {"tf": 1}, "ifri_mini_ml_lib.association_rules.Apriori.get_rules": {"tf": 1}, "ifri_mini_ml_lib.association_rules.Eclat": {"tf": 1.4142135623730951}, "ifri_mini_ml_lib.association_rules.Eclat.fit": {"tf": 1}, "ifri_mini_ml_lib.association_rules.Eclat.get_rules": {"tf": 1}, "ifri_mini_ml_lib.association_rules.FPGrowth.fit": {"tf": 1}, "ifri_mini_ml_lib.association_rules.FPGrowth.get_frequent_itemsets": {"tf": 1.4142135623730951}, "ifri_mini_ml_lib.association_rules.FPGrowth.get_rules": {"tf": 1}, "ifri_mini_ml_lib.association_rules.DataAdapter": {"tf": 2}, "ifri_mini_ml_lib.association_rules.DataAdapter.convert_to_transactions": {"tf": 1.7320508075688772}, "ifri_mini_ml_lib.association_rules.DataAdapter.load_csv_to_transactions": {"tf": 1}, "ifri_mini_ml_lib.classification.KNN.predict": {"tf": 1}, "ifri_mini_ml_lib.classification.LogisticRegression": {"tf": 1}, "ifri_mini_ml_lib.metrics.evaluation_metrics.confusion_matrix": {"tf": 1.7320508075688772}, "ifri_mini_ml_lib.metrics.evaluation_metrics.accuracy": {"tf": 1.4142135623730951}, "ifri_mini_ml_lib.metrics.evaluation_metrics.precision": {"tf": 1.4142135623730951}, "ifri_mini_ml_lib.metrics.evaluation_metrics.recall": {"tf": 1.4142135623730951}, "ifri_mini_ml_lib.metrics.evaluation_metrics.f1_score": {"tf": 1.4142135623730951}, "ifri_mini_ml_lib.model_selection.BaggingClassifier": {"tf": 1.4142135623730951}, "ifri_mini_ml_lib.model_selection.BaggingRegressor": {"tf": 1.4142135623730951}, "ifri_mini_ml_lib.preprocessing.preparation.MinMaxScaler.fit": {"tf": 1.4142135623730951}, "ifri_mini_ml_lib.preprocessing.preparation.MinMaxScaler.transform": {"tf": 1}, "ifri_mini_ml_lib.preprocessing.preparation.DataSplitter.k_fold_split": {"tf": 1.4142135623730951}, "ifri_mini_ml_lib.regression.LinearRegression.predict": {"tf": 1}, "ifri_mini_ml_lib.regression.PolynomialRegression.predict": {"tf": 1}}, "df": 25, "[": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "t": {"docs": {"ifri_mini_ml_lib.association_rules.Apriori.fit": {"tf": 1}}, "df": 1}}}, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "t": {"docs": {"ifri_mini_ml_lib.metrics.evaluation_metrics.confusion_matrix": {"tf": 1.7320508075688772}, "ifri_mini_ml_lib.metrics.evaluation_metrics.accuracy": {"tf": 1.4142135623730951}, "ifri_mini_ml_lib.metrics.evaluation_metrics.precision": {"tf": 1.4142135623730951}, "ifri_mini_ml_lib.metrics.evaluation_metrics.recall": {"tf": 1.4142135623730951}, "ifri_mini_ml_lib.metrics.evaluation_metrics.f1_score": {"tf": 1.4142135623730951}}, "df": 5}}}}, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"ifri_mini_ml_lib.association_rules.Eclat": {"tf": 1}}, "df": 1}}}, "s": {"docs": {"ifri_mini_ml_lib.model_selection.GridSearchCV": {"tf": 1}}, "df": 1}}}, "f": {"docs": {}, "df": 0, "t": {"docs": {"ifri_mini_ml_lib.association_rules.Eclat": {"tf": 2}, "ifri_mini_ml_lib.association_rules.FPGrowth": {"tf": 2}}, "df": 2}}, "k": {"docs": {}, "df": 0, "e": {"docs": {"ifri_mini_ml_lib.classification.DecisionTree": {"tf": 1}, "ifri_mini_ml_lib.classification.KNN.fit": {"tf": 1.4142135623730951}, "ifri_mini_ml_lib.classification.KNN.predict": {"tf": 1}, "ifri_mini_ml_lib.model_selection.BaggingClassifier.fit": {"tf": 1.4142135623730951}, "ifri_mini_ml_lib.model_selection.BaggingClassifier.predict": {"tf": 1}, "ifri_mini_ml_lib.model_selection.BaggingRegressor.fit": {"tf": 1.4142135623730951}, "ifri_mini_ml_lib.model_selection.BaggingRegressor.predict": {"tf": 1}, "ifri_mini_ml_lib.model_selection.RandomSearchCV.fit": {"tf": 1.4142135623730951}, "ifri_mini_ml_lib.preprocessing.preparation.MinMaxScaler.fit": {"tf": 1}, "ifri_mini_ml_lib.preprocessing.preparation.MinMaxScaler.transform": {"tf": 1.4142135623730951}, "ifri_mini_ml_lib.preprocessing.preparation.MinMaxScaler.fit_transform": {"tf": 1.4142135623730951}, "ifri_mini_ml_lib.preprocessing.preparation.MinMaxScaler.inverse_transform": {"tf": 1.4142135623730951}}, "df": 12}}, "m": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "t": {"docs": {"ifri_mini_ml_lib.classification.DecisionTree": {"tf": 1}}, "df": 1}}}}, "e": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "n": {"docs": {"ifri_mini_ml_lib.classification.LogisticRegression.fit": {"tf": 1}, "ifri_mini_ml_lib.preprocessing.preparation.StandardScaler": {"tf": 1}, "ifri_mini_ml_lib.preprocessing.preparation.CategoricalEncoder.fit": {"tf": 1}, "ifri_mini_ml_lib.preprocessing.preparation.CategoricalEncoder.fit_transform": {"tf": 1}}, "df": 4, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"ifri_mini_ml_lib": {"tf": 1}, "ifri_mini_ml_lib.association_rules.Apriori.fit": {"tf": 1}, "ifri_mini_ml_lib.association_rules.Eclat.fit": {"tf": 1}, "ifri_mini_ml_lib.classification.LogisticRegression": {"tf": 1.4142135623730951}, "ifri_mini_ml_lib.classification.LogisticRegression.__init__": {"tf": 1.4142135623730951}, "ifri_mini_ml_lib.model_selection.GridSearchCV": {"tf": 1}, "ifri_mini_ml_lib.model_selection.RandomSearchCV": {"tf": 1}, "ifri_mini_ml_lib.neural_networks.MLPClassifier.__init__": {"tf": 1.4142135623730951}, "ifri_mini_ml_lib.neural_networks.MLPRegressor.__init__": {"tf": 1.4142135623730951}, "ifri_mini_ml_lib.preprocessing.dimensionality_reduction.PCA.fit_transform": {"tf": 1}, "ifri_mini_ml_lib.preprocessing.dimensionality_reduction.TSNE": {"tf": 1.4142135623730951}, "ifri_mini_ml_lib.preprocessing.dimensionality_reduction.TSNE.__init__": {"tf": 1.4142135623730951}, "ifri_mini_ml_lib.regression.LinearRegression": {"tf": 1.4142135623730951}, "ifri_mini_ml_lib.regression.PolynomialRegression": {"tf": 1.4142135623730951}}, "df": 14}}}, "e": {"docs": {}, "df": 0, "r": {"docs": {"ifri_mini_ml_lib.classification.KNN.fit": {"tf": 1}}, "df": 1}, "d": {"docs": {"ifri_mini_ml_lib.classification.LogisticRegression": {"tf": 1.4142135623730951}, "ifri_mini_ml_lib.preprocessing.preparation.MinMaxScaler": {"tf": 1}, "ifri_mini_ml_lib.preprocessing.preparation.CategoricalEncoder.transform": {"tf": 1.4142135623730951}}, "df": 3}}}}, "f": {"docs": {"ifri_mini_ml_lib.classification.DecisionTree": {"tf": 1.7320508075688772}, "ifri_mini_ml_lib.classification.DecisionTree.fit": {"tf": 1}}, "df": 2}, "k": {"docs": {}, "df": 0, "y": {"docs": {"ifri_mini_ml_lib.neural_networks.MLPClassifier.__init__": {"tf": 1}, "ifri_mini_ml_lib.neural_networks.MLPRegressor.__init__": {"tf": 1}}, "df": 2}}, "s": {"docs": {}, "df": 0, "t": {"docs": {"ifri_mini_ml_lib.regression.LinearRegression": {"tf": 1}, "ifri_mini_ml_lib.regression.LinearRegression.fit": {"tf": 1}, "ifri_mini_ml_lib.regression.PolynomialRegression": {"tf": 1}}, "df": 3}}}, "s": {"docs": {}, "df": 0, "s": {"docs": {"ifri_mini_ml_lib.association_rules.Eclat": {"tf": 1}}, "df": 1}}, "n": {"docs": {"ifri_mini_ml_lib.association_rules.Eclat": {"tf": 1.4142135623730951}, "ifri_mini_ml_lib.association_rules.DataAdapter": {"tf": 1}}, "df": 2}, "v": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "l": {"docs": {"ifri_mini_ml_lib.preprocessing.dimensionality_reduction.TSNE.__init__": {"tf": 1}}, "df": 1}}}}, "o": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "c": {"docs": {"ifri_mini_ml_lib": {"tf": 1}, "ifri_mini_ml_lib.classification.LogisticRegression": {"tf": 1.4142135623730951}, "ifri_mini_ml_lib.classification.LogisticRegression.__init__": {"tf": 1}, "ifri_mini_ml_lib.classification.LogisticRegression.fit": {"tf": 1}}, "df": 4, "r": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"ifri_mini_ml_lib.classification.LogisticRegression": {"tf": 1}}, "df": 1}}}}}}}}}}}}}}}}, "a": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "d": {"docs": {"ifri_mini_ml_lib.association_rules.DataAdapter": {"tf": 1.4142135623730951}}, "df": 1}}, "s": {"docs": {"ifri_mini_ml_lib.association_rules.DataAdapter.load_csv_to_transactions": {"tf": 1}}, "df": 1}}}, "s": {"docs": {}, "df": 0, "s": {"docs": {"ifri_mini_ml_lib.classification.LogisticRegression": {"tf": 1.7320508075688772}, "ifri_mini_ml_lib.classification.LogisticRegression.__init__": {"tf": 1}, "ifri_mini_ml_lib.classification.LogisticRegression.fit": {"tf": 1}, "ifri_mini_ml_lib.regression.SVR": {"tf": 1}}, "df": 4}}, "w": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"ifri_mini_ml_lib.metrics.evaluation_metrics.calculate_inertia": {"tf": 1}}, "df": 1}}}, "c": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "l": {"docs": {"ifri_mini_ml_lib.preprocessing.dimensionality_reduction.TSNE": {"tf": 1}}, "df": 1}}}}, "a": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "e": {"docs": {"ifri_mini_ml_lib.association_rules.Apriori": {"tf": 1}, "ifri_mini_ml_lib.association_rules.DataAdapter": {"tf": 1.7320508075688772}}, "df": 2}}}, "t": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "e": {"docs": {"ifri_mini_ml_lib.association_rules.Eclat": {"tf": 1}}, "df": 1}}}}, "e": {"docs": {}, "df": 0, "r": {"docs": {"ifri_mini_ml_lib.classification.KNN.fit": {"tf": 1}, "ifri_mini_ml_lib.preprocessing.preparation.MinMaxScaler.fit": {"tf": 1}}, "df": 2}}}, "b": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "l": {"docs": {"ifri_mini_ml_lib.metrics.bias_evaluation.selection_rate": {"tf": 2}, "ifri_mini_ml_lib.metrics.bias_evaluation.selection_rate_per_group": {"tf": 1.4142135623730951}, "ifri_mini_ml_lib.metrics.bias_evaluation.demographic_parity_ratio": {"tf": 1.4142135623730951}, "ifri_mini_ml_lib.metrics.bias_evaluation.demographic_parity_difference": {"tf": 1.4142135623730951}, "ifri_mini_ml_lib.metrics.bias_evaluation.tpr_fpr_by_group": {"tf": 1.4142135623730951}, "ifri_mini_ml_lib.metrics.bias_evaluation.equalized_odds_ratio": {"tf": 1}, "ifri_mini_ml_lib.metrics.bias_evaluation.equalized_odds_difference": {"tf": 1.4142135623730951}, "ifri_mini_ml_lib.preprocessing.preparation.CategoricalEncoder": {"tf": 1.7320508075688772}}, "df": 8, "s": {"docs": {"ifri_mini_ml_lib.classification.DecisionTree.predict": {"tf": 1.4142135623730951}, "ifri_mini_ml_lib.classification.LogisticRegression.fit": {"tf": 1}, "ifri_mini_ml_lib.classification.LogisticRegression.predict": {"tf": 1.4142135623730951}, "ifri_mini_ml_lib.clustering.KMeans": {"tf": 1}, "ifri_mini_ml_lib.clustering.KMeans.__init__": {"tf": 1}, "ifri_mini_ml_lib.clustering.KMeans.predict": {"tf": 1}, "ifri_mini_ml_lib.clustering.KMeans.fit_predict": {"tf": 1.4142135623730951}, "ifri_mini_ml_lib.clustering.DBSCAN": {"tf": 1.4142135623730951}, "ifri_mini_ml_lib.clustering.DBSCAN.fit_predict": {"tf": 1}, "ifri_mini_ml_lib.clustering.HierarchicalClustering": {"tf": 1.4142135623730951}, "ifri_mini_ml_lib.clustering.HierarchicalClustering.plot_dendrogram": {"tf": 1}, "ifri_mini_ml_lib.clustering.HierarchicalClustering.plot_clusters": {"tf": 1}, "ifri_mini_ml_lib.metrics.bias_evaluation.selection_rate": {"tf": 1.4142135623730951}, "ifri_mini_ml_lib.metrics.bias_evaluation.selection_rate_per_group": {"tf": 1}, "ifri_mini_ml_lib.metrics.bias_evaluation.demographic_parity_ratio": {"tf": 1}, "ifri_mini_ml_lib.metrics.bias_evaluation.demographic_parity_difference": {"tf": 1}, "ifri_mini_ml_lib.metrics.bias_evaluation.tpr_fpr_by_group": {"tf": 1.4142135623730951}, "ifri_mini_ml_lib.metrics.bias_evaluation.equalized_odds_ratio": {"tf": 1.4142135623730951}, "ifri_mini_ml_lib.metrics.bias_evaluation.equalized_odds_difference": {"tf": 1}, "ifri_mini_ml_lib.metrics.evaluation_metrics.confusion_matrix": {"tf": 1.4142135623730951}, "ifri_mini_ml_lib.metrics.evaluation_metrics.accuracy": {"tf": 1.4142135623730951}, "ifri_mini_ml_lib.metrics.evaluation_metrics.precision": {"tf": 1.4142135623730951}, "ifri_mini_ml_lib.metrics.evaluation_metrics.recall": {"tf": 1.4142135623730951}, "ifri_mini_ml_lib.metrics.evaluation_metrics.f1_score": {"tf": 1.4142135623730951}, "ifri_mini_ml_lib.metrics.evaluation_metrics.calculate_inertia": {"tf": 1.7320508075688772}, "ifri_mini_ml_lib.metrics.evaluation_metrics.calculate_silhouette": {"tf": 1.7320508075688772}, "ifri_mini_ml_lib.model_selection.BaggingClassifier.predict": {"tf": 1}, "ifri_mini_ml_lib.neural_networks.MLPClassifier.fit": {"tf": 1}, "ifri_mini_ml_lib.neural_networks.MLPClassifier.score": {"tf": 1}, "ifri_mini_ml_lib.preprocessing.dimensionality_reduction.TSNE.generate_test_data": {"tf": 1}, "ifri_mini_ml_lib.preprocessing.dimensionality_reduction.TSNE.plot_results": {"tf": 1}}, "df": 31}}}}, "z": {"docs": {}, "df": 0, "y": {"docs": {"ifri_mini_ml_lib.classification.KNN.fit": {"tf": 1}}, "df": 1}}, "y": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"ifri_mini_ml_lib.neural_networks.MLPClassifier": {"tf": 1}, "ifri_mini_ml_lib.neural_networks.MLPClassifier.__init__": {"tf": 1}, "ifri_mini_ml_lib.neural_networks.MLPRegressor": {"tf": 1}, "ifri_mini_ml_lib.neural_networks.MLPRegressor.__init__": {"tf": 1}}, "df": 4, "s": {"docs": {"ifri_mini_ml_lib.neural_networks.MLPClassifier.__init__": {"tf": 1}, "ifri_mini_ml_lib.neural_networks.MLPRegressor.__init__": {"tf": 1}}, "df": 2}}}}, "s": {"docs": {}, "df": 0, "t": {"docs": {"ifri_mini_ml_lib.preprocessing.dimensionality_reduction.TSNE": {"tf": 1}}, "df": 1}}}, "t": {"docs": {"ifri_mini_ml_lib.association_rules.Apriori": {"tf": 1}, "ifri_mini_ml_lib.association_rules.Eclat": {"tf": 1}, "ifri_mini_ml_lib.association_rules.FPGrowth": {"tf": 1}, "ifri_mini_ml_lib.preprocessing.dimensionality_reduction.TSNE.fit": {"tf": 1}}, "df": 4}}, "a": {"docs": {"ifri_mini_ml_lib": {"tf": 1}, "ifri_mini_ml_lib.association_rules.Apriori": {"tf": 1}, "ifri_mini_ml_lib.association_rules.Eclat": {"tf": 1.4142135623730951}, "ifri_mini_ml_lib.association_rules.Eclat.fit": {"tf": 1}, "ifri_mini_ml_lib.association_rules.FPGrowth": {"tf": 1}, "ifri_mini_ml_lib.association_rules.FPGrowth.fit": {"tf": 1}, "ifri_mini_ml_lib.association_rules.DataAdapter": {"tf": 1.7320508075688772}, "ifri_mini_ml_lib.association_rules.DataAdapter.convert_to_transactions": {"tf": 1}, "ifri_mini_ml_lib.association_rules.DataAdapter.load_csv_to_transactions": {"tf": 1}, "ifri_mini_ml_lib.classification.DecisionTree": {"tf": 1.7320508075688772}, "ifri_mini_ml_lib.classification.DecisionTree.fit": {"tf": 1.4142135623730951}, "ifri_mini_ml_lib.classification.KNN.fit": {"tf": 1}, "ifri_mini_ml_lib.clustering.KMeans.plot_clusters": {"tf": 1}, "ifri_mini_ml_lib.clustering.DBSCAN": {"tf": 1.4142135623730951}, "ifri_mini_ml_lib.clustering.DBSCAN.__init__": {"tf": 1}, "ifri_mini_ml_lib.clustering.HierarchicalClustering.plot_dendrogram": {"tf": 1}, "ifri_mini_ml_lib.clustering.HierarchicalClustering.plot_clusters": {"tf": 1}, "ifri_mini_ml_lib.metrics.bias_evaluation.selection_rate_per_group": {"tf": 1}, "ifri_mini_ml_lib.metrics.bias_evaluation.demographic_parity_ratio": {"tf": 1.4142135623730951}, "ifri_mini_ml_lib.metrics.evaluation_metrics.confusion_matrix": {"tf": 1}, "ifri_mini_ml_lib.metrics.evaluation_metrics.precision": {"tf": 1}, "ifri_mini_ml_lib.metrics.evaluation_metrics.recall": {"tf": 1}, "ifri_mini_ml_lib.metrics.evaluation_metrics.f1_score": {"tf": 1}, "ifri_mini_ml_lib.metrics.evaluation_metrics.calculate_inertia": {"tf": 1}, "ifri_mini_ml_lib.metrics.evaluation_metrics.calculate_silhouette": {"tf": 1}, "ifri_mini_ml_lib.model_selection.BaggingClassifier": {"tf": 1.7320508075688772}, "ifri_mini_ml_lib.model_selection.BaggingRegressor": {"tf": 1.7320508075688772}, "ifri_mini_ml_lib.model_selection.BayesianSearchCV": {"tf": 1}, "ifri_mini_ml_lib.model_selection.GridSearchCV": {"tf": 1}, "ifri_mini_ml_lib.model_selection.RandomSearchCV": {"tf": 1.7320508075688772}, "ifri_mini_ml_lib.preprocessing.preparation.MinMaxScaler": {"tf": 1}, "ifri_mini_ml_lib.preprocessing.preparation.MissingValueHandler.impute_statistical": {"tf": 1}, "ifri_mini_ml_lib.preprocessing.preparation.MissingValueHandler.impute_default": {"tf": 1}, "ifri_mini_ml_lib.preprocessing.preparation.MissingValueHandler.impute_regression": {"tf": 1.4142135623730951}, "ifri_mini_ml_lib.preprocessing.preparation.StandardScaler": {"tf": 2.23606797749979}, "ifri_mini_ml_lib.preprocessing.preparation.StandardScaler.fit": {"tf": 1}, "ifri_mini_ml_lib.preprocessing.preparation.CategoricalEncoder": {"tf": 1}}, "df": 37, "n": {"docs": {"ifri_mini_ml_lib.association_rules.Apriori": {"tf": 1}, "ifri_mini_ml_lib.association_rules.FPGrowth": {"tf": 1}, "ifri_mini_ml_lib.metrics.evaluation_metrics.calculate_inertia": {"tf": 1}, "ifri_mini_ml_lib.model_selection.BaggingClassifier": {"tf": 1}, "ifri_mini_ml_lib.model_selection.BaggingRegressor": {"tf": 1}, "ifri_mini_ml_lib.neural_networks.MLPClassifier.__init__": {"tf": 1}, "ifri_mini_ml_lib.neural_networks.MLPRegressor.__init__": {"tf": 1}, "ifri_mini_ml_lib.preprocessing.preparation.CategoricalEncoder": {"tf": 1}, "ifri_mini_ml_lib.preprocessing.preparation.DataSplitter.__init__": {"tf": 1}}, "df": 9, "d": {"docs": {"ifri_mini_ml_lib": {"tf": 1.4142135623730951}, "ifri_mini_ml_lib.association_rules.Apriori.fit": {"tf": 1}, "ifri_mini_ml_lib.association_rules.Apriori.get_frequent_itemsets": {"tf": 1}, "ifri_mini_ml_lib.association_rules.Eclat": {"tf": 2.23606797749979}, "ifri_mini_ml_lib.association_rules.Eclat.get_frequent_itemsets": {"tf": 1}, "ifri_mini_ml_lib.association_rules.FPGrowth": {"tf": 1.7320508075688772}, "ifri_mini_ml_lib.association_rules.FPGrowth.fit": {"tf": 1}, "ifri_mini_ml_lib.association_rules.DataAdapter.convert_to_transactions": {"tf": 1}, "ifri_mini_ml_lib.association_rules.DataAdapter.load_csv_to_transactions": {"tf": 1}, "ifri_mini_ml_lib.classification.DecisionTree": {"tf": 1}, "ifri_mini_ml_lib.classification.KNN": {"tf": 1.4142135623730951}, "ifri_mini_ml_lib.classification.KNN.predict": {"tf": 1}, "ifri_mini_ml_lib.classification.LogisticRegression": {"tf": 1.4142135623730951}, "ifri_mini_ml_lib.classification.LogisticRegression.fit": {"tf": 1}, "ifri_mini_ml_lib.clustering.KMeans": {"tf": 1}, "ifri_mini_ml_lib.clustering.KMeans.__init__": {"tf": 1.4142135623730951}, "ifri_mini_ml_lib.clustering.KMeans.fit": {"tf": 1}, "ifri_mini_ml_lib.clustering.KMeans.fit_predict": {"tf": 1}, "ifri_mini_ml_lib.clustering.KMeans.plot_clusters": {"tf": 1}, "ifri_mini_ml_lib.clustering.DBSCAN": {"tf": 1.4142135623730951}, "ifri_mini_ml_lib.clustering.DBSCAN.plot_clusters": {"tf": 1}, "ifri_mini_ml_lib.clustering.HierarchicalClustering.plot_clusters": {"tf": 1}, "ifri_mini_ml_lib.metrics.bias_evaluation.selection_rate_per_group": {"tf": 1}, "ifri_mini_ml_lib.metrics.bias_evaluation.demographic_parity_ratio": {"tf": 1}, "ifri_mini_ml_lib.metrics.bias_evaluation.demographic_parity_difference": {"tf": 1}, "ifri_mini_ml_lib.metrics.bias_evaluation.tpr_fpr_by_group": {"tf": 1.4142135623730951}, "ifri_mini_ml_lib.metrics.bias_evaluation.equalized_odds_ratio": {"tf": 1}, "ifri_mini_ml_lib.metrics.bias_evaluation.equalized_odds_difference": {"tf": 1}, "ifri_mini_ml_lib.metrics.evaluation_metrics.f1_score": {"tf": 1}, "ifri_mini_ml_lib.metrics.evaluation_metrics.calculate_inertia": {"tf": 1}, "ifri_mini_ml_lib.model_selection.BaggingClassifier": {"tf": 1.4142135623730951}, "ifri_mini_ml_lib.model_selection.BaggingRegressor": {"tf": 1.4142135623730951}, "ifri_mini_ml_lib.model_selection.BayesianSearchCV": {"tf": 1}, "ifri_mini_ml_lib.model_selection.BayesianSearchCV.__init__": {"tf": 1.4142135623730951}, "ifri_mini_ml_lib.model_selection.GridSearchCV": {"tf": 1.7320508075688772}, "ifri_mini_ml_lib.model_selection.GridSearchCV.fit": {"tf": 1}, "ifri_mini_ml_lib.model_selection.RandomSearchCV": {"tf": 1}, "ifri_mini_ml_lib.model_selection.RandomSearchCV.fit": {"tf": 1}, "ifri_mini_ml_lib.neural_networks.MLPClassifier": {"tf": 1}, "ifri_mini_ml_lib.neural_networks.MLPRegressor": {"tf": 1}, "ifri_mini_ml_lib.preprocessing.dimensionality_reduction.PCA.fit": {"tf": 1}, "ifri_mini_ml_lib.preprocessing.dimensionality_reduction.TSNE": {"tf": 1.4142135623730951}, "ifri_mini_ml_lib.preprocessing.dimensionality_reduction.TSNE.fit_transform": {"tf": 1}, "ifri_mini_ml_lib.preprocessing.dimensionality_reduction.TSNE.generate_test_data": {"tf": 1}, "ifri_mini_ml_lib.preprocessing.preparation.MinMaxScaler": {"tf": 1}, "ifri_mini_ml_lib.preprocessing.preparation.MinMaxScaler.fit": {"tf": 1}, "ifri_mini_ml_lib.preprocessing.preparation.MinMaxScaler.fit_transform": {"tf": 1}, "ifri_mini_ml_lib.preprocessing.preparation.MissingValueHandler": {"tf": 1}, "ifri_mini_ml_lib.preprocessing.preparation.MissingValueHandler.remove_missing": {"tf": 1}, "ifri_mini_ml_lib.preprocessing.preparation.StandardScaler": {"tf": 1.7320508075688772}, "ifri_mini_ml_lib.preprocessing.preparation.StandardScaler.fit": {"tf": 1}, "ifri_mini_ml_lib.preprocessing.preparation.StandardScaler.transform": {"tf": 1}, "ifri_mini_ml_lib.preprocessing.preparation.StandardScaler.fit_transform": {"tf": 1.4142135623730951}, "ifri_mini_ml_lib.preprocessing.preparation.StandardScaler.inverse_transform": {"tf": 1}, "ifri_mini_ml_lib.preprocessing.preparation.CategoricalEncoder.fit": {"tf": 1}, "ifri_mini_ml_lib.preprocessing.preparation.CategoricalEncoder.fit_transform": {"tf": 1.7320508075688772}, "ifri_mini_ml_lib.preprocessing.preparation.DataSplitter.train_test_split": {"tf": 1}, "ifri_mini_ml_lib.preprocessing.preparation.DataSplitter.stratified_train_test_split": {"tf": 1}, "ifri_mini_ml_lib.preprocessing.preparation.DataSplitter.temporal_train_test_split": {"tf": 1.4142135623730951}, "ifri_mini_ml_lib.preprocessing.preparation.DataSplitter.k_fold_split": {"tf": 1}, "ifri_mini_ml_lib.regression.SVR": {"tf": 1.7320508075688772}}, "df": 61}, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "t": {"docs": {"ifri_mini_ml_lib.association_rules.Apriori": {"tf": 1}, "ifri_mini_ml_lib.association_rules.Eclat": {"tf": 1}, "ifri_mini_ml_lib.association_rules.FPGrowth": {"tf": 1}}, "df": 3}}}}}}}}, "y": {"docs": {"ifri_mini_ml_lib.metrics.bias_evaluation.selection_rate": {"tf": 1}, "ifri_mini_ml_lib.metrics.bias_evaluation.selection_rate_per_group": {"tf": 1}, "ifri_mini_ml_lib.metrics.bias_evaluation.demographic_parity_ratio": {"tf": 1}, "ifri_mini_ml_lib.metrics.bias_evaluation.demographic_parity_difference": {"tf": 1}, "ifri_mini_ml_lib.metrics.bias_evaluation.tpr_fpr_by_group": {"tf": 1}, "ifri_mini_ml_lib.metrics.bias_evaluation.equalized_odds_ratio": {"tf": 1}, "ifri_mini_ml_lib.metrics.bias_evaluation.equalized_odds_difference": {"tf": 1}}, "df": 7}, "a": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "y": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "s": {"docs": {"ifri_mini_ml_lib.preprocessing.dimensionality_reduction.PCA": {"tf": 1}}, "df": 1}}}}}}, "n": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "s": {"docs": {"ifri_mini_ml_lib.preprocessing.dimensionality_reduction.PCA.plot_cov_matrix": {"tf": 1}}, "df": 1}}}}}}}}}}, "l": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "h": {"docs": {}, "df": 0, "m": {"docs": {"ifri_mini_ml_lib.association_rules.Apriori": {"tf": 1}, "ifri_mini_ml_lib.association_rules.Eclat": {"tf": 2.23606797749979}, "ifri_mini_ml_lib.association_rules.FPGrowth": {"tf": 1}, "ifri_mini_ml_lib.classification.KNN": {"tf": 1.7320508075688772}, "ifri_mini_ml_lib.clustering.KMeans": {"tf": 1.4142135623730951}, "ifri_mini_ml_lib.clustering.DBSCAN": {"tf": 1}, "ifri_mini_ml_lib.neural_networks.MLPClassifier.__init__": {"tf": 1}, "ifri_mini_ml_lib.neural_networks.MLPRegressor.__init__": {"tf": 1}, "ifri_mini_ml_lib.preprocessing.dimensionality_reduction.TSNE": {"tf": 1}}, "df": 9, "s": {"docs": {"ifri_mini_ml_lib": {"tf": 1}, "ifri_mini_ml_lib.association_rules.DataAdapter": {"tf": 1}}, "df": 2}}}}}}}}, "l": {"docs": {"ifri_mini_ml_lib.association_rules.Eclat": {"tf": 1}, "ifri_mini_ml_lib.clustering.HierarchicalClustering.__init__": {"tf": 1}, "ifri_mini_ml_lib.model_selection.BaggingClassifier.predict": {"tf": 1.4142135623730951}, "ifri_mini_ml_lib.model_selection.BaggingRegressor.predict": {"tf": 1.4142135623730951}, "ifri_mini_ml_lib.model_selection.GridSearchCV.fit": {"tf": 1}, "ifri_mini_ml_lib.model_selection.RandomSearchCV": {"tf": 1}, "ifri_mini_ml_lib.preprocessing.preparation.MissingValueHandler.impute_default": {"tf": 1}}, "df": 7, "o": {"docs": {}, "df": 0, "w": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "d": {"docs": {"ifri_mini_ml_lib.clustering.KMeans.__init__": {"tf": 1}, "ifri_mini_ml_lib.preprocessing.preparation.MissingValueHandler.remove_missing": {"tf": 1}}, "df": 2}}, "s": {"docs": {"ifri_mini_ml_lib.model_selection.GridSearchCV": {"tf": 1}}, "df": 1}, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"ifri_mini_ml_lib.model_selection.GridSearchCV.fit": {"tf": 1}}, "df": 1}}}}}}, "r": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "y": {"docs": {"ifri_mini_ml_lib.model_selection.BaggingClassifier": {"tf": 1.4142135623730951}, "ifri_mini_ml_lib.model_selection.BaggingRegressor": {"tf": 1.4142135623730951}}, "df": 2}}}}}, "p": {"docs": {}, "df": 0, "h": {"docs": {}, "df": 0, "a": {"docs": {"ifri_mini_ml_lib.neural_networks.MLPClassifier.__init__": {"tf": 1}, "ifri_mini_ml_lib.neural_networks.MLPRegressor.__init__": {"tf": 1}, "ifri_mini_ml_lib.regression.SVR": {"tf": 1}}, "df": 3}}}}, "s": {"docs": {"ifri_mini_ml_lib.association_rules.DataAdapter": {"tf": 1}, "ifri_mini_ml_lib.association_rules.DataAdapter.convert_to_transactions": {"tf": 1}, "ifri_mini_ml_lib.classification.DecisionTree": {"tf": 1}, "ifri_mini_ml_lib.clustering.KMeans.fit": {"tf": 1}, "ifri_mini_ml_lib.clustering.DBSCAN": {"tf": 1.4142135623730951}, "ifri_mini_ml_lib.clustering.DBSCAN.__init__": {"tf": 1}, "ifri_mini_ml_lib.metrics.bias_evaluation.selection_rate": {"tf": 1}, "ifri_mini_ml_lib.metrics.bias_evaluation.selection_rate_per_group": {"tf": 1.7320508075688772}, "ifri_mini_ml_lib.metrics.bias_evaluation.tpr_fpr_by_group": {"tf": 1}, "ifri_mini_ml_lib.metrics.evaluation_metrics.confusion_matrix": {"tf": 1}, "ifri_mini_ml_lib.metrics.evaluation_metrics.precision": {"tf": 1}, "ifri_mini_ml_lib.metrics.evaluation_metrics.recall": {"tf": 1}, "ifri_mini_ml_lib.metrics.evaluation_metrics.f1_score": {"tf": 1}, "ifri_mini_ml_lib.neural_networks.MLPClassifier.__init__": {"tf": 1}, "ifri_mini_ml_lib.neural_networks.MLPRegressor.__init__": {"tf": 1}, "ifri_mini_ml_lib.preprocessing.preparation.MinMaxScaler.transform": {"tf": 1.4142135623730951}, "ifri_mini_ml_lib.preprocessing.preparation.MinMaxScaler.inverse_transform": {"tf": 1}}, "df": 17, "s": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"ifri_mini_ml_lib": {"tf": 1}, "ifri_mini_ml_lib.association_rules.Apriori": {"tf": 2}, "ifri_mini_ml_lib.association_rules.Apriori.get_rules": {"tf": 1.4142135623730951}, "ifri_mini_ml_lib.association_rules.Eclat": {"tf": 2}, "ifri_mini_ml_lib.association_rules.Eclat.get_rules": {"tf": 1.4142135623730951}, "ifri_mini_ml_lib.association_rules.FPGrowth": {"tf": 2}, "ifri_mini_ml_lib.association_rules.FPGrowth.get_rules": {"tf": 1.4142135623730951}, "ifri_mini_ml_lib.association_rules.DataAdapter": {"tf": 1.4142135623730951}, "ifri_mini_ml_lib.association_rules.DataAdapter.convert_to_transactions": {"tf": 1}}, "df": 9}}}, "e": {"docs": {}, "df": 0, "d": {"docs": {"ifri_mini_ml_lib.association_rules.Eclat": {"tf": 1}, "ifri_mini_ml_lib.regression.SVR": {"tf": 1}}, "df": 2}}}}}}}, "i": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"ifri_mini_ml_lib.clustering.KMeans": {"tf": 1}, "ifri_mini_ml_lib.clustering.KMeans.fit": {"tf": 1}}, "df": 2}}}, "s": {"docs": {"ifri_mini_ml_lib.clustering.KMeans.fit": {"tf": 1}, "ifri_mini_ml_lib.preprocessing.preparation.CategoricalEncoder": {"tf": 1}}, "df": 2}, "e": {"docs": {}, "df": 0, "d": {"docs": {"ifri_mini_ml_lib.clustering.KMeans.fit": {"tf": 1}, "ifri_mini_ml_lib.metrics.evaluation_metrics.calculate_silhouette": {"tf": 1}}, "df": 2}}, "m": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "t": {"docs": {"ifri_mini_ml_lib.clustering.KMeans.plot_clusters": {"tf": 1}}, "df": 1}}}}}}}}}, "p": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "i": {"docs": {"ifri_mini_ml_lib": {"tf": 1}, "ifri_mini_ml_lib.association_rules.Apriori": {"tf": 3}, "ifri_mini_ml_lib.association_rules.Eclat": {"tf": 1}, "ifri_mini_ml_lib.association_rules.FPGrowth": {"tf": 1}}, "df": 4}}}}}, "p": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "h": {"docs": {"ifri_mini_ml_lib.association_rules.Eclat": {"tf": 1}, "ifri_mini_ml_lib.clustering.HierarchicalClustering": {"tf": 1}}, "df": 2}}}}}, "l": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "d": {"docs": {"ifri_mini_ml_lib.clustering.KMeans.plot_clusters": {"tf": 1}, "ifri_mini_ml_lib.clustering.HierarchicalClustering.plot_clusters": {"tf": 1}}, "df": 2}, "s": {"docs": {"ifri_mini_ml_lib.clustering.DBSCAN.plot_clusters": {"tf": 1}, "ifri_mini_ml_lib.preprocessing.preparation.StandardScaler.transform": {"tf": 1}}, "df": 2}}, "c": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "s": {"docs": {"ifri_mini_ml_lib.clustering.DBSCAN": {"tf": 1}}, "df": 1}}}}}, "b": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "e": {"docs": {"ifri_mini_ml_lib.preprocessing.preparation.StandardScaler": {"tf": 1}}, "df": 1}}}}}}, "y": {"docs": {"ifri_mini_ml_lib.clustering.HierarchicalClustering.__init__": {"tf": 1}, "ifri_mini_ml_lib.preprocessing.preparation.CategoricalEncoder": {"tf": 1}, "ifri_mini_ml_lib.preprocessing.preparation.CategoricalEncoder.transform": {"tf": 1}, "ifri_mini_ml_lib.preprocessing.preparation.CategoricalEncoder.fit_transform": {"tf": 1}}, "df": 4, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"ifri_mini_ml_lib.preprocessing.preparation.CategoricalEncoder.transform": {"tf": 1}}, "df": 1}}}}}}, "i": {"docs": {"ifri_mini_ml_lib.metrics.bias_evaluation.selection_rate": {"tf": 1}}, "df": 1}}, "c": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "y": {"docs": {"ifri_mini_ml_lib": {"tf": 1}, "ifri_mini_ml_lib.metrics.evaluation_metrics.accuracy": {"tf": 1.4142135623730951}, "ifri_mini_ml_lib.model_selection.BayesianSearchCV.__init__": {"tf": 1.4142135623730951}, "ifri_mini_ml_lib.model_selection.GridSearchCV": {"tf": 1.7320508075688772}, "ifri_mini_ml_lib.model_selection.RandomSearchCV": {"tf": 1.7320508075688772}, "ifri_mini_ml_lib.neural_networks.MLPClassifier.score": {"tf": 1.7320508075688772}}, "df": 6}}}}}, "e": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {"ifri_mini_ml_lib.association_rules.Eclat.get_rules": {"tf": 1}}, "df": 1}}}}}, "o": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"ifri_mini_ml_lib.classification.DecisionTree.fit": {"tf": 1}, "ifri_mini_ml_lib.preprocessing.preparation.CategoricalEncoder.transform": {"tf": 1}}, "df": 2, "l": {"docs": {}, "df": 0, "y": {"docs": {"ifri_mini_ml_lib.clustering.KMeans": {"tf": 1}}, "df": 1}}}}}}}}}, "t": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "l": {"docs": {"ifri_mini_ml_lib.metrics.evaluation_metrics.confusion_matrix": {"tf": 1}, "ifri_mini_ml_lib.metrics.evaluation_metrics.recall": {"tf": 1}, "ifri_mini_ml_lib.preprocessing.dimensionality_reduction.TSNE": {"tf": 1}}, "df": 3, "l": {"docs": {}, "df": 0, "y": {"docs": {"ifri_mini_ml_lib.classification.KNN.fit": {"tf": 1}}, "df": 1}}}}}, "i": {"docs": {}, "df": 0, "v": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"ifri_mini_ml_lib.neural_networks.MLPClassifier": {"tf": 1}, "ifri_mini_ml_lib.neural_networks.MLPClassifier.__init__": {"tf": 1.4142135623730951}, "ifri_mini_ml_lib.neural_networks.MLPRegressor": {"tf": 1}, "ifri_mini_ml_lib.neural_networks.MLPRegressor.__init__": {"tf": 1.4142135623730951}}, "df": 4}}}}}}}}, "r": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "s": {"docs": {"ifri_mini_ml_lib.model_selection.BaggingClassifier.predict": {"tf": 1}}, "df": 1}}}}, "q": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"ifri_mini_ml_lib.model_selection.BayesianSearchCV": {"tf": 1}}, "df": 1}}}}}}}}}}, "g": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "w": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "l": {"docs": {"ifri_mini_ml_lib.association_rules.Apriori": {"tf": 1}}, "df": 1}}}}}, "g": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "v": {"docs": {}, "df": 0, "e": {"docs": {"ifri_mini_ml_lib.clustering.HierarchicalClustering": {"tf": 1.7320508075688772}, "ifri_mini_ml_lib.clustering.HierarchicalClustering.__init__": {"tf": 1.4142135623730951}, "ifri_mini_ml_lib.clustering.HierarchicalClustering.plot_dendrogram": {"tf": 1}}, "df": 3}}}}}}}}}}, "r": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"ifri_mini_ml_lib.model_selection.BaggingClassifier": {"tf": 1}, "ifri_mini_ml_lib.model_selection.BaggingRegressor": {"tf": 1}}, "df": 2}}}, "e": {"docs": {}, "df": 0, "s": {"docs": {"ifri_mini_ml_lib.model_selection.BaggingClassifier": {"tf": 1}, "ifri_mini_ml_lib.model_selection.BaggingRegressor": {"tf": 1}}, "df": 2}}}}}}}}, "e": {"docs": {"ifri_mini_ml_lib.preprocessing.preparation.MissingValueHandler.impute_regression": {"tf": 1}}, "df": 1}}, "m": {"docs": {}, "df": 0, "p": {"docs": {"ifri_mini_ml_lib.association_rules.Apriori": {"tf": 1}}, "df": 1}}, "r": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "s": {"docs": {"ifri_mini_ml_lib.association_rules.Apriori": {"tf": 1}, "ifri_mini_ml_lib.association_rules.Apriori.fit": {"tf": 1}, "ifri_mini_ml_lib.association_rules.Eclat": {"tf": 1}, "ifri_mini_ml_lib.association_rules.Eclat.fit": {"tf": 1}, "ifri_mini_ml_lib.association_rules.FPGrowth": {"tf": 1}, "ifri_mini_ml_lib.association_rules.FPGrowth.fit": {"tf": 1}, "ifri_mini_ml_lib.association_rules.DataAdapter.convert_to_transactions": {"tf": 1}, "ifri_mini_ml_lib.association_rules.DataAdapter.load_csv_to_transactions": {"tf": 1}, "ifri_mini_ml_lib.classification.DecisionTree": {"tf": 1}, "ifri_mini_ml_lib.classification.DecisionTree.fit": {"tf": 1}, "ifri_mini_ml_lib.classification.DecisionTree.predict": {"tf": 1}, "ifri_mini_ml_lib.classification.KNN": {"tf": 1}, "ifri_mini_ml_lib.classification.KNN.__init__": {"tf": 1}, "ifri_mini_ml_lib.classification.KNN.fit": {"tf": 1}, "ifri_mini_ml_lib.classification.KNN.predict": {"tf": 1}, "ifri_mini_ml_lib.classification.LogisticRegression.__init__": {"tf": 1}, "ifri_mini_ml_lib.classification.LogisticRegression.fit": {"tf": 1}, "ifri_mini_ml_lib.classification.LogisticRegression.predict_proba": {"tf": 1}, "ifri_mini_ml_lib.classification.LogisticRegression.predict": {"tf": 1}, "ifri_mini_ml_lib.metrics.bias_evaluation.selection_rate": {"tf": 1}, "ifri_mini_ml_lib.metrics.bias_evaluation.selection_rate_per_group": {"tf": 1}, "ifri_mini_ml_lib.metrics.bias_evaluation.demographic_parity_ratio": {"tf": 1}, "ifri_mini_ml_lib.metrics.bias_evaluation.demographic_parity_difference": {"tf": 1}, "ifri_mini_ml_lib.metrics.bias_evaluation.tpr_fpr_by_group": {"tf": 1}, "ifri_mini_ml_lib.metrics.bias_evaluation.equalized_odds_ratio": {"tf": 1}, "ifri_mini_ml_lib.metrics.bias_evaluation.equalized_odds_difference": {"tf": 1}, "ifri_mini_ml_lib.metrics.evaluation_metrics.confusion_matrix": {"tf": 1}, "ifri_mini_ml_lib.metrics.evaluation_metrics.accuracy": {"tf": 1}, "ifri_mini_ml_lib.metrics.evaluation_metrics.precision": {"tf": 1}, "ifri_mini_ml_lib.metrics.evaluation_metrics.recall": {"tf": 1}, "ifri_mini_ml_lib.metrics.evaluation_metrics.f1_score": {"tf": 1}, "ifri_mini_ml_lib.model_selection.BaggingClassifier": {"tf": 1}, "ifri_mini_ml_lib.model_selection.BaggingClassifier.fit": {"tf": 1}, "ifri_mini_ml_lib.model_selection.BaggingClassifier.predict": {"tf": 1}, "ifri_mini_ml_lib.model_selection.BaggingRegressor": {"tf": 1}, "ifri_mini_ml_lib.model_selection.BaggingRegressor.fit": {"tf": 1}, "ifri_mini_ml_lib.model_selection.BaggingRegressor.predict": {"tf": 1}, "ifri_mini_ml_lib.model_selection.BayesianSearchCV.__init__": {"tf": 1}, "ifri_mini_ml_lib.model_selection.BayesianSearchCV.fit": {"tf": 1}, "ifri_mini_ml_lib.model_selection.BayesianSearchCV.get_best_params": {"tf": 1}, "ifri_mini_ml_lib.model_selection.GridSearchCV": {"tf": 1}, "ifri_mini_ml_lib.model_selection.GridSearchCV.fit": {"tf": 1}, "ifri_mini_ml_lib.model_selection.RandomSearchCV": {"tf": 1}, "ifri_mini_ml_lib.model_selection.RandomSearchCV.fit": {"tf": 1}, "ifri_mini_ml_lib.preprocessing.dimensionality_reduction.PCA.__init__": {"tf": 1}, "ifri_mini_ml_lib.preprocessing.dimensionality_reduction.PCA.fit": {"tf": 1}, "ifri_mini_ml_lib.preprocessing.dimensionality_reduction.PCA.transform": {"tf": 1}, "ifri_mini_ml_lib.preprocessing.dimensionality_reduction.PCA.fit_transform": {"tf": 1}, "ifri_mini_ml_lib.preprocessing.dimensionality_reduction.TSNE.__init__": {"tf": 1}, "ifri_mini_ml_lib.preprocessing.dimensionality_reduction.TSNE.fit": {"tf": 1}, "ifri_mini_ml_lib.preprocessing.dimensionality_reduction.TSNE.fit_transform": {"tf": 1}, "ifri_mini_ml_lib.preprocessing.dimensionality_reduction.TSNE.generate_test_data": {"tf": 1}, "ifri_mini_ml_lib.preprocessing.dimensionality_reduction.TSNE.plot_results": {"tf": 1}, "ifri_mini_ml_lib.preprocessing.preparation.MinMaxScaler.__init__": {"tf": 1}, "ifri_mini_ml_lib.preprocessing.preparation.MinMaxScaler.fit": {"tf": 1}, "ifri_mini_ml_lib.preprocessing.preparation.MinMaxScaler.transform": {"tf": 1}, "ifri_mini_ml_lib.preprocessing.preparation.MinMaxScaler.fit_transform": {"tf": 1}, "ifri_mini_ml_lib.preprocessing.preparation.MinMaxScaler.inverse_transform": {"tf": 1}, "ifri_mini_ml_lib.preprocessing.preparation.MissingValueHandler.remove_missing": {"tf": 1}, "ifri_mini_ml_lib.preprocessing.preparation.MissingValueHandler.impute_statistical": {"tf": 1}, "ifri_mini_ml_lib.preprocessing.preparation.MissingValueHandler.impute_default": {"tf": 1}, "ifri_mini_ml_lib.preprocessing.preparation.MissingValueHandler.impute_knn": {"tf": 1}, "ifri_mini_ml_lib.preprocessing.preparation.MissingValueHandler.impute_regression": {"tf": 1}, "ifri_mini_ml_lib.preprocessing.preparation.StandardScaler.fit": {"tf": 1}, "ifri_mini_ml_lib.preprocessing.preparation.StandardScaler.transform": {"tf": 1}, "ifri_mini_ml_lib.preprocessing.preparation.StandardScaler.fit_transform": {"tf": 1}, "ifri_mini_ml_lib.preprocessing.preparation.StandardScaler.inverse_transform": {"tf": 1}, "ifri_mini_ml_lib.preprocessing.preparation.CategoricalEncoder": {"tf": 1}, "ifri_mini_ml_lib.preprocessing.preparation.CategoricalEncoder.fit": {"tf": 1}, "ifri_mini_ml_lib.preprocessing.preparation.CategoricalEncoder.transform": {"tf": 1}, "ifri_mini_ml_lib.preprocessing.preparation.CategoricalEncoder.fit_transform": {"tf": 1}, "ifri_mini_ml_lib.preprocessing.preparation.DataSplitter.__init__": {"tf": 1}, "ifri_mini_ml_lib.preprocessing.preparation.DataSplitter.train_test_split": {"tf": 1}, "ifri_mini_ml_lib.preprocessing.preparation.DataSplitter.stratified_train_test_split": {"tf": 1}, "ifri_mini_ml_lib.preprocessing.preparation.DataSplitter.temporal_train_test_split": {"tf": 1}, "ifri_mini_ml_lib.preprocessing.preparation.DataSplitter.k_fold_split": {"tf": 1}, "ifri_mini_ml_lib.regression.LinearRegression": {"tf": 1}, "ifri_mini_ml_lib.regression.LinearRegression.fit": {"tf": 1}, "ifri_mini_ml_lib.regression.LinearRegression.predict": {"tf": 1}, "ifri_mini_ml_lib.regression.PolynomialRegression": {"tf": 1}, "ifri_mini_ml_lib.regression.PolynomialRegression.fit": {"tf": 1}, "ifri_mini_ml_lib.regression.PolynomialRegression.predict": {"tf": 1}, "ifri_mini_ml_lib.regression.SVR": {"tf": 1}, "ifri_mini_ml_lib.regression.SVR.linear_kernel": {"tf": 1}, "ifri_mini_ml_lib.regression.SVR.polynomial_kernel": {"tf": 1}, "ifri_mini_ml_lib.regression.SVR.rbf_kernel": {"tf": 1}, "ifri_mini_ml_lib.regression.SVR.sigmoid_kernel": {"tf": 1}, "ifri_mini_ml_lib.regression.SVR.fit": {"tf": 1}, "ifri_mini_ml_lib.regression.SVR.predict": {"tf": 1}, "ifri_mini_ml_lib.regression.SVR.set_params": {"tf": 1}}, "df": 90}, "u": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "s": {"docs": {"ifri_mini_ml_lib.clustering.KMeans": {"tf": 1}, "ifri_mini_ml_lib.clustering.KMeans.__init__": {"tf": 1}, "ifri_mini_ml_lib.clustering.KMeans.fit": {"tf": 1}, "ifri_mini_ml_lib.clustering.KMeans.predict": {"tf": 1}, "ifri_mini_ml_lib.clustering.KMeans.fit_predict": {"tf": 1}, "ifri_mini_ml_lib.clustering.KMeans.plot_clusters": {"tf": 1}, "ifri_mini_ml_lib.clustering.DBSCAN": {"tf": 1}, "ifri_mini_ml_lib.clustering.DBSCAN.__init__": {"tf": 1}, "ifri_mini_ml_lib.clustering.DBSCAN.fit_predict": {"tf": 1}, "ifri_mini_ml_lib.clustering.DBSCAN.plot_clusters": {"tf": 1}, "ifri_mini_ml_lib.clustering.HierarchicalClustering": {"tf": 1}, "ifri_mini_ml_lib.clustering.HierarchicalClustering.__init__": {"tf": 1}, "ifri_mini_ml_lib.clustering.HierarchicalClustering.fit_predict": {"tf": 1}, "ifri_mini_ml_lib.clustering.HierarchicalClustering.plot_dendrogram": {"tf": 1}, "ifri_mini_ml_lib.clustering.HierarchicalClustering.plot_clusters": {"tf": 1}, "ifri_mini_ml_lib.metrics.evaluation_metrics.calculate_inertia": {"tf": 1}, "ifri_mini_ml_lib.metrics.evaluation_metrics.calculate_silhouette": {"tf": 1}}, "df": 17}}}}}}}, "e": {"docs": {"ifri_mini_ml_lib.association_rules.Apriori.get_frequent_itemsets": {"tf": 1.4142135623730951}, "ifri_mini_ml_lib.association_rules.Eclat.get_frequent_itemsets": {"tf": 1.4142135623730951}, "ifri_mini_ml_lib.clustering.KMeans.fit": {"tf": 1}, "ifri_mini_ml_lib.clustering.HierarchicalClustering.__init__": {"tf": 1}, "ifri_mini_ml_lib.clustering.HierarchicalClustering.plot_dendrogram": {"tf": 1}, "ifri_mini_ml_lib.metrics.evaluation_metrics.confusion_matrix": {"tf": 1}, "ifri_mini_ml_lib.metrics.evaluation_metrics.precision": {"tf": 1}, "ifri_mini_ml_lib.metrics.evaluation_metrics.recall": {"tf": 1}, "ifri_mini_ml_lib.metrics.evaluation_metrics.f1_score": {"tf": 1}, "ifri_mini_ml_lib.model_selection.BayesianSearchCV.__init__": {"tf": 1.4142135623730951}, "ifri_mini_ml_lib.model_selection.GridSearchCV": {"tf": 1.4142135623730951}, "ifri_mini_ml_lib.preprocessing.preparation.CategoricalEncoder": {"tf": 1}}, "df": 12}, "r": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "y": {"docs": {"ifri_mini_ml_lib.association_rules.DataAdapter.convert_to_transactions": {"tf": 1}, "ifri_mini_ml_lib.classification.KNN.fit": {"tf": 1.4142135623730951}, "ifri_mini_ml_lib.classification.KNN.predict": {"tf": 1}, "ifri_mini_ml_lib.clustering.KMeans.fit": {"tf": 1}, "ifri_mini_ml_lib.clustering.KMeans.fit_predict": {"tf": 1}, "ifri_mini_ml_lib.clustering.KMeans.plot_clusters": {"tf": 1}, "ifri_mini_ml_lib.clustering.HierarchicalClustering.plot_clusters": {"tf": 1}, "ifri_mini_ml_lib.metrics.bias_evaluation.selection_rate": {"tf": 1}, "ifri_mini_ml_lib.metrics.bias_evaluation.demographic_parity_ratio": {"tf": 1.4142135623730951}, "ifri_mini_ml_lib.metrics.evaluation_metrics.calculate_inertia": {"tf": 1}, "ifri_mini_ml_lib.metrics.evaluation_metrics.calculate_silhouette": {"tf": 1}, "ifri_mini_ml_lib.model_selection.BaggingClassifier.fit": {"tf": 1.4142135623730951}, "ifri_mini_ml_lib.model_selection.BaggingClassifier.predict": {"tf": 1}, "ifri_mini_ml_lib.model_selection.BaggingRegressor.fit": {"tf": 1.4142135623730951}, "ifri_mini_ml_lib.model_selection.BaggingRegressor.predict": {"tf": 1}, "ifri_mini_ml_lib.model_selection.BayesianSearchCV.fit": {"tf": 1.4142135623730951}, "ifri_mini_ml_lib.model_selection.GridSearchCV.fit": {"tf": 1.4142135623730951}, "ifri_mini_ml_lib.model_selection.RandomSearchCV.fit": {"tf": 1.4142135623730951}, "ifri_mini_ml_lib.preprocessing.dimensionality_reduction.PCA.fit": {"tf": 1}, "ifri_mini_ml_lib.preprocessing.preparation.MinMaxScaler.fit": {"tf": 1}, "ifri_mini_ml_lib.preprocessing.preparation.MinMaxScaler.transform": {"tf": 1.7320508075688772}, "ifri_mini_ml_lib.preprocessing.preparation.MinMaxScaler.fit_transform": {"tf": 1.4142135623730951}, "ifri_mini_ml_lib.preprocessing.preparation.MinMaxScaler.inverse_transform": {"tf": 1.4142135623730951}}, "df": 23, "s": {"docs": {"ifri_mini_ml_lib.preprocessing.preparation.StandardScaler": {"tf": 1}}, "df": 1}}}}}, "t": {"docs": {"ifri_mini_ml_lib.classification.DecisionTree": {"tf": 1}, "ifri_mini_ml_lib.neural_networks.MLPClassifier.__init__": {"tf": 1}, "ifri_mini_ml_lib.neural_networks.MLPRegressor.__init__": {"tf": 1}}, "df": 3, "t": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "b": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {"ifri_mini_ml_lib.association_rules.DataAdapter.convert_to_transactions": {"tf": 1}}, "df": 1, "s": {"docs": {"ifri_mini_ml_lib.classification.LogisticRegression": {"tf": 1}, "ifri_mini_ml_lib.clustering.KMeans.__init__": {"tf": 1}, "ifri_mini_ml_lib.model_selection.RandomSearchCV": {"tf": 1}, "ifri_mini_ml_lib.preprocessing.dimensionality_reduction.PCA": {"tf": 1}, "ifri_mini_ml_lib.preprocessing.dimensionality_reduction.TSNE": {"tf": 1}, "ifri_mini_ml_lib.preprocessing.preparation.StandardScaler": {"tf": 1}, "ifri_mini_ml_lib.preprocessing.preparation.StandardScaler.__init__": {"tf": 1}}, "df": 7}}}}}}}}}, "v": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "e": {"docs": {"ifri_mini_ml_lib.classification.KNN.predict": {"tf": 1}, "ifri_mini_ml_lib.clustering.HierarchicalClustering": {"tf": 1}, "ifri_mini_ml_lib.clustering.HierarchicalClustering.__init__": {"tf": 1}, "ifri_mini_ml_lib.metrics.evaluation_metrics.calculate_silhouette": {"tf": 1.4142135623730951}, "ifri_mini_ml_lib.model_selection.RandomSearchCV": {"tf": 1}}, "df": 5, "d": {"docs": {"ifri_mini_ml_lib.model_selection.BaggingRegressor.predict": {"tf": 1}}, "df": 1}}, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"ifri_mini_ml_lib.model_selection.BaggingRegressor": {"tf": 1}, "ifri_mini_ml_lib.model_selection.BaggingRegressor.predict": {"tf": 1}}, "df": 2}}}}}}}, "g": {"docs": {"ifri_mini_ml_lib.metrics.evaluation_metrics.calculate_silhouette": {"tf": 1.4142135623730951}}, "df": 1}, "o": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "d": {"docs": {"ifri_mini_ml_lib.model_selection.GridSearchCV": {"tf": 1}, "ifri_mini_ml_lib.neural_networks.MLPClassifier.__init__": {"tf": 1}, "ifri_mini_ml_lib.neural_networks.MLPRegressor.__init__": {"tf": 1}}, "df": 3}}}}, "u": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "y": {"docs": {"ifri_mini_ml_lib.classification.LogisticRegression.fit": {"tf": 1}}, "df": 1}}}}}}}}}}}}, "d": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "s": {"docs": {"ifri_mini_ml_lib.classification.LogisticRegression.fit": {"tf": 1}}, "df": 1}}, "a": {"docs": {}, "df": 0, "m": {"docs": {"ifri_mini_ml_lib.neural_networks.MLPClassifier.__init__": {"tf": 1.7320508075688772}, "ifri_mini_ml_lib.neural_networks.MLPRegressor.__init__": {"tf": 1.7320508075688772}}, "df": 2}}}, "f": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"ifri_mini_ml_lib.clustering.DBSCAN.plot_clusters": {"tf": 1}, "ifri_mini_ml_lib.model_selection.BayesianSearchCV.__init__": {"tf": 1}, "ifri_mini_ml_lib.preprocessing.preparation.MissingValueHandler.remove_missing": {"tf": 1}}, "df": 3}}}, "f": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "t": {"docs": {"ifri_mini_ml_lib.preprocessing.preparation.MinMaxScaler": {"tf": 1}}, "df": 1}}}}}, "x": {"docs": {"ifri_mini_ml_lib.preprocessing.dimensionality_reduction.TSNE.plot_results": {"tf": 1}}, "df": 1, "e": {"docs": {}, "df": 0, "s": {"docs": {"ifri_mini_ml_lib.preprocessing.dimensionality_reduction.TSNE.plot_results": {"tf": 1.4142135623730951}}, "df": 1}}, "i": {"docs": {}, "df": 0, "s": {"docs": {"ifri_mini_ml_lib.preprocessing.dimensionality_reduction.TSNE.plot_results": {"tf": 1}, "ifri_mini_ml_lib.preprocessing.preparation.MissingValueHandler.remove_missing": {"tf": 1.7320508075688772}}, "df": 2}}}}, "c": {"docs": {"ifri_mini_ml_lib.model_selection.BayesianSearchCV.__init__": {"tf": 1}, "ifri_mini_ml_lib.model_selection.BayesianSearchCV.get_best_params": {"tf": 1}, "ifri_mini_ml_lib.model_selection.GridSearchCV": {"tf": 1}, "ifri_mini_ml_lib.regression.SVR": {"tf": 1.7320508075688772}, "ifri_mini_ml_lib.regression.SVR.set_params": {"tf": 1}}, "df": 5, "o": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "e": {"docs": {"ifri_mini_ml_lib": {"tf": 1}}, "df": 1}}}}, "s": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"ifri_mini_ml_lib.association_rules.DataAdapter.convert_to_transactions": {"tf": 1}, "ifri_mini_ml_lib.classification.KNN": {"tf": 1}, "ifri_mini_ml_lib.clustering.DBSCAN": {"tf": 1}, "ifri_mini_ml_lib.clustering.DBSCAN.__init__": {"tf": 1}, "ifri_mini_ml_lib.preprocessing.preparation.MinMaxScaler": {"tf": 1}, "ifri_mini_ml_lib.preprocessing.preparation.MissingValueHandler.impute_knn": {"tf": 1}}, "df": 6, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"ifri_mini_ml_lib.association_rules.Apriori": {"tf": 1}}, "df": 1}}}, "s": {"docs": {"ifri_mini_ml_lib.association_rules.DataAdapter.convert_to_transactions": {"tf": 1}}, "df": 1}, "e": {"docs": {}, "df": 0, "d": {"docs": {"ifri_mini_ml_lib.metrics.bias_evaluation.selection_rate": {"tf": 1}, "ifri_mini_ml_lib.metrics.bias_evaluation.tpr_fpr_by_group": {"tf": 1}, "ifri_mini_ml_lib.metrics.evaluation_metrics.precision": {"tf": 1}, "ifri_mini_ml_lib.metrics.evaluation_metrics.recall": {"tf": 1}, "ifri_mini_ml_lib.metrics.evaluation_metrics.f1_score": {"tf": 1}}, "df": 5}}}}}, "s": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "y": {"docs": {"ifri_mini_ml_lib.metrics.bias_evaluation.selection_rate": {"tf": 1}}, "df": 1}}}}}}}, "e": {"docs": {}, "df": 0, "q": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "t": {"docs": {"ifri_mini_ml_lib.association_rules.Apriori": {"tf": 1}, "ifri_mini_ml_lib.association_rules.Eclat": {"tf": 1}, "ifri_mini_ml_lib.association_rules.FPGrowth": {"tf": 1}}, "df": 3}}}}}}, "u": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "t": {"docs": {"ifri_mini_ml_lib.association_rules.Eclat": {"tf": 1}, "ifri_mini_ml_lib.association_rules.FPGrowth": {"tf": 1}}, "df": 2}}}, "t": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "s": {"docs": {"ifri_mini_ml_lib.association_rules.FPGrowth": {"tf": 1}}, "df": 1}, "e": {"docs": {}, "df": 0, "d": {"docs": {"ifri_mini_ml_lib.classification.DecisionTree.fit": {"tf": 1}, "ifri_mini_ml_lib.clustering.HierarchicalClustering.plot_dendrogram": {"tf": 1}}, "df": 2}}}}}, "a": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "s": {"docs": {"ifri_mini_ml_lib.classification.DecisionTree.fit": {"tf": 1}}, "df": 1}}}}}}, "a": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "t": {"docs": {"ifri_mini_ml_lib.preprocessing.preparation.MissingValueHandler.impute_default": {"tf": 1}, "ifri_mini_ml_lib.regression.SVR": {"tf": 1}}, "df": 2}}}}}, "f": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "e": {"docs": {"ifri_mini_ml_lib.association_rules.Apriori": {"tf": 2.6457513110645907}, "ifri_mini_ml_lib.association_rules.Eclat": {"tf": 2.6457513110645907}, "ifri_mini_ml_lib.association_rules.FPGrowth": {"tf": 2.6457513110645907}}, "df": 3}}}}}}, "u": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"ifri_mini_ml_lib.metrics.evaluation_metrics.confusion_matrix": {"tf": 1.4142135623730951}}, "df": 1}}}}}}, "t": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"ifri_mini_ml_lib.association_rules.Eclat": {"tf": 1}, "ifri_mini_ml_lib.preprocessing.preparation.MissingValueHandler.remove_missing": {"tf": 1}, "ifri_mini_ml_lib.preprocessing.preparation.CategoricalEncoder.fit": {"tf": 1}, "ifri_mini_ml_lib.preprocessing.preparation.DataSplitter.k_fold_split": {"tf": 1}}, "df": 4}}}, "s": {"docs": {"ifri_mini_ml_lib.preprocessing.preparation.DataSplitter.k_fold_split": {"tf": 1}}, "df": 1}}}}, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "e": {"docs": {"ifri_mini_ml_lib.classification.LogisticRegression.__init__": {"tf": 1}}, "df": 1}}}}}, "v": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "t": {"docs": {"ifri_mini_ml_lib.association_rules.DataAdapter": {"tf": 2.23606797749979}}, "df": 1, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"ifri_mini_ml_lib.association_rules.DataAdapter": {"tf": 2}}, "df": 1}}}, "s": {"docs": {"ifri_mini_ml_lib.association_rules.DataAdapter.convert_to_transactions": {"tf": 1}, "ifri_mini_ml_lib.association_rules.DataAdapter.load_csv_to_transactions": {"tf": 1}, "ifri_mini_ml_lib.classification.LogisticRegression.predict": {"tf": 1}}, "df": 3}}, "g": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "e": {"docs": {"ifri_mini_ml_lib.classification.LogisticRegression.fit": {"tf": 1}, "ifri_mini_ml_lib.clustering.KMeans": {"tf": 1.4142135623730951}, "ifri_mini_ml_lib.clustering.KMeans.__init__": {"tf": 1}, "ifri_mini_ml_lib.clustering.KMeans.fit": {"tf": 1}}, "df": 4}}}}}}, "n": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "e": {"docs": {"ifri_mini_ml_lib.clustering.KMeans.fit_predict": {"tf": 1}, "ifri_mini_ml_lib.preprocessing.preparation.CategoricalEncoder.fit_transform": {"tf": 1}}, "df": 2}}}}}}, "x": {"docs": {"ifri_mini_ml_lib.regression.SVR": {"tf": 1}, "ifri_mini_ml_lib.regression.SVR.fit": {"tf": 1}}, "df": 2}}}}, "v": {"docs": {"ifri_mini_ml_lib.preprocessing.dimensionality_reduction.PCA": {"tf": 1}, "ifri_mini_ml_lib.preprocessing.dimensionality_reduction.PCA.plot_cov_matrix": {"tf": 1}}, "df": 2, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "e": {"docs": {"ifri_mini_ml_lib.association_rules.Eclat": {"tf": 1}}, "df": 1}}}}}, "a": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "e": {"docs": {"ifri_mini_ml_lib.preprocessing.dimensionality_reduction.PCA": {"tf": 1}, "ifri_mini_ml_lib.preprocessing.dimensionality_reduction.PCA.plot_cov_matrix": {"tf": 1}}, "df": 2}}}}}}}}, "m": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "t": {"docs": {"ifri_mini_ml_lib.association_rules.FPGrowth": {"tf": 1}}, "df": 1}}, "r": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "d": {"docs": {"ifri_mini_ml_lib.metrics.evaluation_metrics.calculate_silhouette": {"tf": 1}}, "df": 1}}}}, "u": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {"ifri_mini_ml_lib.metrics.evaluation_metrics.evaluate_model": {"tf": 1}, "ifri_mini_ml_lib.preprocessing.preparation.MinMaxScaler.fit": {"tf": 1.4142135623730951}}, "df": 2, "s": {"docs": {"ifri_mini_ml_lib.clustering.KMeans.predict": {"tf": 1}, "ifri_mini_ml_lib.metrics.bias_evaluation.selection_rate": {"tf": 1}, "ifri_mini_ml_lib.metrics.bias_evaluation.selection_rate_per_group": {"tf": 1}, "ifri_mini_ml_lib.metrics.bias_evaluation.demographic_parity_ratio": {"tf": 1}, "ifri_mini_ml_lib.metrics.bias_evaluation.demographic_parity_difference": {"tf": 1}, "ifri_mini_ml_lib.metrics.bias_evaluation.tpr_fpr_by_group": {"tf": 1}, "ifri_mini_ml_lib.metrics.bias_evaluation.equalized_odds_ratio": {"tf": 1}, "ifri_mini_ml_lib.metrics.bias_evaluation.equalized_odds_difference": {"tf": 1}, "ifri_mini_ml_lib.metrics.evaluation_metrics.confusion_matrix": {"tf": 1}, "ifri_mini_ml_lib.metrics.evaluation_metrics.calculate_inertia": {"tf": 1}, "ifri_mini_ml_lib.metrics.evaluation_metrics.calculate_silhouette": {"tf": 1}, "ifri_mini_ml_lib.preprocessing.preparation.StandardScaler.fit": {"tf": 1}, "ifri_mini_ml_lib.preprocessing.preparation.CategoricalEncoder.fit": {"tf": 1}, "ifri_mini_ml_lib.regression.SVR.linear_kernel": {"tf": 1}, "ifri_mini_ml_lib.regression.SVR.polynomial_kernel": {"tf": 1}, "ifri_mini_ml_lib.regression.SVR.rbf_kernel": {"tf": 1}, "ifri_mini_ml_lib.regression.SVR.sigmoid_kernel": {"tf": 1}}, "df": 17}, "d": {"docs": {"ifri_mini_ml_lib.preprocessing.dimensionality_reduction.PCA": {"tf": 1.7320508075688772}, "ifri_mini_ml_lib.preprocessing.preparation.MinMaxScaler.transform": {"tf": 1}, "ifri_mini_ml_lib.preprocessing.preparation.StandardScaler.transform": {"tf": 1}}, "df": 3}}, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"ifri_mini_ml_lib.regression.SVR.get_kernel": {"tf": 1}}, "df": 1}}}}}}}, "l": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {"ifri_mini_ml_lib.clustering.HierarchicalClustering": {"tf": 1.4142135623730951}, "ifri_mini_ml_lib.clustering.HierarchicalClustering.__init__": {"tf": 1}, "ifri_mini_ml_lib.clustering.HierarchicalClustering.plot_dendrogram": {"tf": 1}}, "df": 3}}}}, "o": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "t": {"docs": {"ifri_mini_ml_lib.preprocessing.dimensionality_reduction.PCA": {"tf": 1.4142135623730951}, "ifri_mini_ml_lib.preprocessing.dimensionality_reduction.PCA.__init__": {"tf": 1.4142135623730951}, "ifri_mini_ml_lib.preprocessing.dimensionality_reduction.PCA.transform": {"tf": 1}, "ifri_mini_ml_lib.preprocessing.dimensionality_reduction.PCA.explained_variances_ratio": {"tf": 1}}, "df": 4, "s": {"docs": {"ifri_mini_ml_lib.preprocessing.dimensionality_reduction.PCA": {"tf": 1.7320508075688772}, "ifri_mini_ml_lib.preprocessing.dimensionality_reduction.PCA.__init__": {"tf": 1}, "ifri_mini_ml_lib.preprocessing.dimensionality_reduction.PCA.fit": {"tf": 1}, "ifri_mini_ml_lib.preprocessing.dimensionality_reduction.TSNE": {"tf": 1.4142135623730951}, "ifri_mini_ml_lib.preprocessing.dimensionality_reduction.TSNE.__init__": {"tf": 1.4142135623730951}, "ifri_mini_ml_lib.preprocessing.dimensionality_reduction.TSNE.fit_transform": {"tf": 1}}, "df": 6}}}}}}}, "m": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"ifri_mini_ml_lib.classification.KNN.predict": {"tf": 1}}, "df": 1}}}, "b": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"ifri_mini_ml_lib.model_selection.GridSearchCV": {"tf": 1}}, "df": 1, "s": {"docs": {"ifri_mini_ml_lib.model_selection.GridSearchCV": {"tf": 1}, "ifri_mini_ml_lib.model_selection.GridSearchCV.fit": {"tf": 1}, "ifri_mini_ml_lib.model_selection.RandomSearchCV": {"tf": 1.4142135623730951}, "ifri_mini_ml_lib.model_selection.RandomSearchCV.fit": {"tf": 1}}, "df": 4}}}}}}, "e": {"docs": {}, "df": 0, "d": {"docs": {"ifri_mini_ml_lib.model_selection.RandomSearchCV": {"tf": 1}}, "df": 1}, "s": {"docs": {"ifri_mini_ml_lib.preprocessing.preparation.CategoricalEncoder.fit_transform": {"tf": 1}}, "df": 1}}}}}}, "l": {"docs": {"ifri_mini_ml_lib.preprocessing.preparation.MissingValueHandler.impute_regression": {"tf": 1.4142135623730951}}, "df": 1, "o": {"docs": {}, "df": 0, "r": {"docs": {"ifri_mini_ml_lib.association_rules.DataAdapter": {"tf": 1.7320508075688772}}, "df": 1, "e": {"docs": {}, "df": 0, "d": {"docs": {"ifri_mini_ml_lib.clustering.KMeans.plot_clusters": {"tf": 1}, "ifri_mini_ml_lib.clustering.HierarchicalClustering.plot_dendrogram": {"tf": 1}, "ifri_mini_ml_lib.clustering.HierarchicalClustering.plot_clusters": {"tf": 1}}, "df": 3}}, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"ifri_mini_ml_lib.preprocessing.dimensionality_reduction.TSNE.plot_results": {"tf": 1}}, "df": 1}}}}}, "u": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "n": {"docs": {"ifri_mini_ml_lib.association_rules.DataAdapter.load_csv_to_transactions": {"tf": 1}, "ifri_mini_ml_lib.preprocessing.preparation.MissingValueHandler.impute_regression": {"tf": 1.7320508075688772}, "ifri_mini_ml_lib.preprocessing.preparation.StandardScaler": {"tf": 1}, "ifri_mini_ml_lib.preprocessing.preparation.CategoricalEncoder": {"tf": 1.4142135623730951}}, "df": 4, "s": {"docs": {"ifri_mini_ml_lib.association_rules.DataAdapter.convert_to_transactions": {"tf": 1.4142135623730951}, "ifri_mini_ml_lib.preprocessing.preparation.MissingValueHandler.remove_missing": {"tf": 1.4142135623730951}, "ifri_mini_ml_lib.preprocessing.preparation.MissingValueHandler.impute_regression": {"tf": 1}, "ifri_mini_ml_lib.preprocessing.preparation.StandardScaler": {"tf": 1}, "ifri_mini_ml_lib.preprocessing.preparation.CategoricalEncoder": {"tf": 1}}, "df": 5}}}}}, "e": {"docs": {}, "df": 0, "f": {"docs": {}, "df": 0, "f": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "t": {"docs": {"ifri_mini_ml_lib.neural_networks.MLPRegressor.score": {"tf": 1}}, "df": 1, "s": {"docs": {"ifri_mini_ml_lib.classification.LogisticRegression": {"tf": 1}}, "df": 1}}}}}}}}}}, "r": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"ifri_mini_ml_lib.clustering.HierarchicalClustering.plot_dendrogram": {"tf": 1}}, "df": 1}}}}}}}}, "c": {"docs": {}, "df": 0, "t": {"docs": {"ifri_mini_ml_lib.metrics.evaluation_metrics.accuracy": {"tf": 1}}, "df": 1}}}}}, "u": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "t": {"docs": {"ifri_mini_ml_lib.metrics.bias_evaluation.selection_rate_per_group": {"tf": 1}, "ifri_mini_ml_lib.metrics.evaluation_metrics.confusion_matrix": {"tf": 1}}, "df": 2}}}, "p": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {"ifri_mini_ml_lib.model_selection.BaggingClassifier": {"tf": 1}, "ifri_mini_ml_lib.model_selection.BaggingRegressor": {"tf": 1}}, "df": 2}}}}}, "l": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "s": {"docs": {"ifri_mini_ml_lib.association_rules.Eclat": {"tf": 1}, "ifri_mini_ml_lib.association_rules.DataAdapter": {"tf": 1}, "ifri_mini_ml_lib.classification.DecisionTree.predict": {"tf": 1.4142135623730951}, "ifri_mini_ml_lib.classification.KNN.predict": {"tf": 1}, "ifri_mini_ml_lib.classification.LogisticRegression.predict_proba": {"tf": 1.4142135623730951}, "ifri_mini_ml_lib.classification.LogisticRegression.predict": {"tf": 1.4142135623730951}, "ifri_mini_ml_lib.clustering.KMeans": {"tf": 1}, "ifri_mini_ml_lib.metrics.bias_evaluation.selection_rate": {"tf": 1}, "ifri_mini_ml_lib.metrics.bias_evaluation.demographic_parity_difference": {"tf": 1}, "ifri_mini_ml_lib.metrics.bias_evaluation.tpr_fpr_by_group": {"tf": 1}, "ifri_mini_ml_lib.metrics.bias_evaluation.equalized_odds_ratio": {"tf": 1}, "ifri_mini_ml_lib.metrics.evaluation_metrics.confusion_matrix": {"tf": 1.4142135623730951}, "ifri_mini_ml_lib.metrics.evaluation_metrics.precision": {"tf": 1.7320508075688772}, "ifri_mini_ml_lib.metrics.evaluation_metrics.recall": {"tf": 1.7320508075688772}, "ifri_mini_ml_lib.metrics.evaluation_metrics.f1_score": {"tf": 1.7320508075688772}, "ifri_mini_ml_lib.model_selection.BaggingClassifier.predict": {"tf": 1}, "ifri_mini_ml_lib.model_selection.GridSearchCV": {"tf": 1}, "ifri_mini_ml_lib.model_selection.RandomSearchCV": {"tf": 1}, "ifri_mini_ml_lib.neural_networks.MLPClassifier.predict_proba": {"tf": 1.4142135623730951}, "ifri_mini_ml_lib.preprocessing.preparation.MissingValueHandler": {"tf": 1}, "ifri_mini_ml_lib.preprocessing.preparation.StandardScaler": {"tf": 1}, "ifri_mini_ml_lib.preprocessing.preparation.CategoricalEncoder": {"tf": 1}, "ifri_mini_ml_lib.preprocessing.preparation.DataSplitter.stratified_train_test_split": {"tf": 1}}, "df": 23, "i": {"docs": {}, "df": 0, "f": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"ifri_mini_ml_lib": {"tf": 1}, "ifri_mini_ml_lib.classification.DecisionTree": {"tf": 1}, "ifri_mini_ml_lib.classification.KNN": {"tf": 2.449489742783178}, "ifri_mini_ml_lib.classification.KNN.__init__": {"tf": 1}, "ifri_mini_ml_lib.classification.KNN.predict": {"tf": 1}, "ifri_mini_ml_lib.model_selection.BaggingClassifier": {"tf": 1.4142135623730951}, "ifri_mini_ml_lib.model_selection.BayesianSearchCV.__init__": {"tf": 1}, "ifri_mini_ml_lib.model_selection.GridSearchCV": {"tf": 1}, "ifri_mini_ml_lib.model_selection.RandomSearchCV": {"tf": 1.4142135623730951}}, "df": 9}}}}}}, "e": {"docs": {}, "df": 0, "r": {"docs": {"ifri_mini_ml_lib": {"tf": 1}, "ifri_mini_ml_lib.classification.DecisionTree": {"tf": 1}, "ifri_mini_ml_lib.classification.LogisticRegression": {"tf": 1}, "ifri_mini_ml_lib.model_selection.BaggingClassifier": {"tf": 1}}, "df": 4, "/": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {"ifri_mini_ml_lib.classification.KNN.__init__": {"tf": 1}}, "df": 1}}}}}}}}}}}}}}}, "e": {"docs": {}, "df": 0, "s": {"docs": {"ifri_mini_ml_lib.metrics.evaluation_metrics.confusion_matrix": {"tf": 1.7320508075688772}, "ifri_mini_ml_lib.model_selection.BaggingClassifier.predict": {"tf": 1}, "ifri_mini_ml_lib.neural_networks.MLPClassifier.predict": {"tf": 1.4142135623730951}, "ifri_mini_ml_lib.neural_networks.MLPClassifier.predict_proba": {"tf": 1}}, "df": 4}}}}}, "u": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"ifri_mini_ml_lib.clustering.KMeans": {"tf": 1}, "ifri_mini_ml_lib.clustering.KMeans.predict": {"tf": 1}, "ifri_mini_ml_lib.clustering.KMeans.fit_predict": {"tf": 1}, "ifri_mini_ml_lib.clustering.KMeans.plot_clusters": {"tf": 1}, "ifri_mini_ml_lib.clustering.DBSCAN": {"tf": 1}, "ifri_mini_ml_lib.clustering.DBSCAN.__init__": {"tf": 1}, "ifri_mini_ml_lib.clustering.DBSCAN.fit_predict": {"tf": 1}, "ifri_mini_ml_lib.clustering.HierarchicalClustering.plot_clusters": {"tf": 1}, "ifri_mini_ml_lib.metrics.evaluation_metrics.calculate_inertia": {"tf": 2}, "ifri_mini_ml_lib.metrics.evaluation_metrics.calculate_silhouette": {"tf": 1.4142135623730951}}, "df": 10, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"ifri_mini_ml_lib": {"tf": 1}, "ifri_mini_ml_lib.association_rules.Eclat": {"tf": 1}, "ifri_mini_ml_lib.clustering.KMeans": {"tf": 1.7320508075688772}, "ifri_mini_ml_lib.clustering.KMeans.__init__": {"tf": 1}, "ifri_mini_ml_lib.clustering.DBSCAN": {"tf": 1.7320508075688772}, "ifri_mini_ml_lib.clustering.DBSCAN.fit_predict": {"tf": 1}, "ifri_mini_ml_lib.clustering.HierarchicalClustering": {"tf": 1.7320508075688772}, "ifri_mini_ml_lib.clustering.HierarchicalClustering.__init__": {"tf": 1.7320508075688772}, "ifri_mini_ml_lib.clustering.HierarchicalClustering.fit_predict": {"tf": 1}, "ifri_mini_ml_lib.clustering.HierarchicalClustering.plot_dendrogram": {"tf": 1.4142135623730951}, "ifri_mini_ml_lib.metrics.evaluation_metrics.calculate_inertia": {"tf": 1.7320508075688772}, "ifri_mini_ml_lib.metrics.evaluation_metrics.calculate_silhouette": {"tf": 1.4142135623730951}}, "df": 12}}}, "s": {"docs": {"ifri_mini_ml_lib.clustering.KMeans": {"tf": 2.23606797749979}, "ifri_mini_ml_lib.clustering.KMeans.__init__": {"tf": 1.7320508075688772}, "ifri_mini_ml_lib.clustering.KMeans.fit": {"tf": 1}, "ifri_mini_ml_lib.clustering.KMeans.plot_clusters": {"tf": 1.4142135623730951}, "ifri_mini_ml_lib.clustering.DBSCAN": {"tf": 1.4142135623730951}, "ifri_mini_ml_lib.clustering.DBSCAN.plot_clusters": {"tf": 1.4142135623730951}, "ifri_mini_ml_lib.clustering.HierarchicalClustering": {"tf": 2.23606797749979}, "ifri_mini_ml_lib.clustering.HierarchicalClustering.__init__": {"tf": 1.4142135623730951}, "ifri_mini_ml_lib.clustering.HierarchicalClustering.plot_dendrogram": {"tf": 1.4142135623730951}, "ifri_mini_ml_lib.clustering.HierarchicalClustering.plot_clusters": {"tf": 1}, "ifri_mini_ml_lib.metrics.evaluation_metrics.calculate_inertia": {"tf": 1}, "ifri_mini_ml_lib.metrics.evaluation_metrics.calculate_silhouette": {"tf": 1}}, "df": 12}, "e": {"docs": {}, "df": 0, "d": {"docs": {"ifri_mini_ml_lib.clustering.HierarchicalClustering.fit_predict": {"tf": 1}}, "df": 1}}}}}}}, "o": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "t": {"docs": {"ifri_mini_ml_lib.classification.KNN": {"tf": 1}, "ifri_mini_ml_lib.clustering.KMeans.predict": {"tf": 1}}, "df": 2}}}}, "n": {"docs": {}, "df": 0, "e": {"docs": {"ifri_mini_ml_lib.model_selection.RandomSearchCV": {"tf": 1}}, "df": 1}}}}, "r": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "s": {"docs": {"ifri_mini_ml_lib": {"tf": 1}, "ifri_mini_ml_lib.model_selection.BayesianSearchCV": {"tf": 1}, "ifri_mini_ml_lib.model_selection.BayesianSearchCV.__init__": {"tf": 1}, "ifri_mini_ml_lib.model_selection.GridSearchCV": {"tf": 1.7320508075688772}, "ifri_mini_ml_lib.model_selection.GridSearchCV.fit": {"tf": 1}, "ifri_mini_ml_lib.model_selection.RandomSearchCV": {"tf": 2}, "ifri_mini_ml_lib.model_selection.RandomSearchCV.fit": {"tf": 1}, "ifri_mini_ml_lib.preprocessing.preparation.DataSplitter.k_fold_split": {"tf": 1}}, "df": 8}}}, "e": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {"ifri_mini_ml_lib.association_rules.DataAdapter": {"tf": 1}, "ifri_mini_ml_lib.preprocessing.preparation.DataSplitter.train_test_split": {"tf": 1}, "ifri_mini_ml_lib.preprocessing.preparation.DataSplitter.stratified_train_test_split": {"tf": 1}, "ifri_mini_ml_lib.preprocessing.preparation.DataSplitter.temporal_train_test_split": {"tf": 1}}, "df": 4, "s": {"docs": {"ifri_mini_ml_lib.preprocessing.preparation.CategoricalEncoder": {"tf": 1}}, "df": 1}}}}}, "i": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"ifri_mini_ml_lib.classification.DecisionTree": {"tf": 1}, "ifri_mini_ml_lib.clustering.HierarchicalClustering": {"tf": 1}, "ifri_mini_ml_lib.clustering.HierarchicalClustering.__init__": {"tf": 1}}, "df": 3}}}}}}}}, "h": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "e": {"docs": {"ifri_mini_ml_lib.association_rules.Apriori": {"tf": 1.4142135623730951}, "ifri_mini_ml_lib.association_rules.Eclat": {"tf": 1.4142135623730951}, "ifri_mini_ml_lib.association_rules.FPGrowth": {"tf": 1.4142135623730951}}, "df": 3}}}}, "a": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"ifri_mini_ml_lib.association_rules.Apriori.fit": {"tf": 1}, "ifri_mini_ml_lib.association_rules.Eclat.fit": {"tf": 1}, "ifri_mini_ml_lib.association_rules.FPGrowth.fit": {"tf": 1}, "ifri_mini_ml_lib.model_selection.GridSearchCV.fit": {"tf": 1}}, "df": 4}}}}}, "n": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "e": {"docs": {"ifri_mini_ml_lib.classification.LogisticRegression": {"tf": 1}, "ifri_mini_ml_lib.classification.LogisticRegression.__init__": {"tf": 1}, "ifri_mini_ml_lib.classification.LogisticRegression.fit": {"tf": 1}, "ifri_mini_ml_lib.neural_networks.MLPClassifier.__init__": {"tf": 1}, "ifri_mini_ml_lib.neural_networks.MLPRegressor.__init__": {"tf": 1}}, "df": 5}}}}}, "u": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "t": {"docs": {"ifri_mini_ml_lib.association_rules.Apriori.fit": {"tf": 1}, "ifri_mini_ml_lib.association_rules.Eclat.fit": {"tf": 1}, "ifri_mini_ml_lib.association_rules.FPGrowth.fit": {"tf": 1}, "ifri_mini_ml_lib.classification.DecisionTree.fit": {"tf": 1}, "ifri_mini_ml_lib.regression.SVR.ker": {"tf": 1}, "ifri_mini_ml_lib.regression.SVR.get_kernel": {"tf": 1}}, "df": 6}}}}}, "s": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "m": {"docs": {"ifri_mini_ml_lib.clustering.KMeans": {"tf": 1.4142135623730951}, "ifri_mini_ml_lib.model_selection.RandomSearchCV": {"tf": 1}, "ifri_mini_ml_lib.preprocessing.preparation.MinMaxScaler.__init__": {"tf": 1}, "ifri_mini_ml_lib.preprocessing.preparation.StandardScaler": {"tf": 1}}, "df": 4, "i": {"docs": {}, "df": 0, "z": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "d": {"docs": {"ifri_mini_ml_lib.preprocessing.preparation.MinMaxScaler": {"tf": 1}}, "df": 1}}}}}}}}, "m": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "v": {"docs": {}, "df": 0, "e": {"docs": {"ifri_mini_ml_lib.preprocessing.dimensionality_reduction.PCA.plot_cumulative_explained_variance_ratio": {"tf": 1.4142135623730951}}, "df": 1}}}}}}}}}, "a": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {"ifri_mini_ml_lib.association_rules.Eclat": {"tf": 1}, "ifri_mini_ml_lib.metrics.evaluation_metrics.calculate_inertia": {"tf": 1}, "ifri_mini_ml_lib.metrics.evaluation_metrics.calculate_silhouette": {"tf": 1}}, "df": 3, "s": {"docs": {"ifri_mini_ml_lib.metrics.evaluation_metrics.accuracy": {"tf": 1}, "ifri_mini_ml_lib.metrics.evaluation_metrics.precision": {"tf": 1}, "ifri_mini_ml_lib.metrics.evaluation_metrics.recall": {"tf": 1}, "ifri_mini_ml_lib.metrics.evaluation_metrics.f1_score": {"tf": 1}, "ifri_mini_ml_lib.preprocessing.dimensionality_reduction.PCA.explained_variances_ratio": {"tf": 1}}, "df": 5}}, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"ifri_mini_ml_lib.preprocessing.dimensionality_reduction.PCA.fit": {"tf": 1}}, "df": 1, "s": {"docs": {"ifri_mini_ml_lib.preprocessing.preparation.MinMaxScaler": {"tf": 1}}, "df": 1}}}}}}}}}, "l": {"docs": {}, "df": 0, "s": {"docs": {"ifri_mini_ml_lib.clustering.KMeans.fit_predict": {"tf": 1}}, "df": 1}, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"ifri_mini_ml_lib.clustering.DBSCAN.plot_clusters": {"tf": 1}}, "df": 1}}}, "a": {"docs": {}, "df": 0, "b": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "e": {"docs": {"ifri_mini_ml_lib.model_selection.RandomSearchCV": {"tf": 1}}, "df": 1}}}}, "e": {"docs": {}, "df": 0, "d": {"docs": {"ifri_mini_ml_lib.preprocessing.preparation.MinMaxScaler.transform": {"tf": 1}, "ifri_mini_ml_lib.preprocessing.preparation.MinMaxScaler.inverse_transform": {"tf": 1}, "ifri_mini_ml_lib.preprocessing.preparation.StandardScaler.transform": {"tf": 1}, "ifri_mini_ml_lib.preprocessing.preparation.StandardScaler.inverse_transform": {"tf": 1}}, "df": 4}}}}, "n": {"docs": {"ifri_mini_ml_lib.classification.KNN": {"tf": 1}, "ifri_mini_ml_lib.preprocessing.preparation.MinMaxScaler": {"tf": 1}, "ifri_mini_ml_lib.preprocessing.preparation.MinMaxScaler.fit": {"tf": 1}}, "df": 3, "d": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {"ifri_mini_ml_lib.association_rules.FPGrowth": {"tf": 1}}, "df": 1}}}}}}}}, "t": {"docs": {"ifri_mini_ml_lib.association_rules.DataAdapter": {"tf": 1.4142135623730951}}, "df": 1, "e": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "l": {"docs": {"ifri_mini_ml_lib.association_rules.DataAdapter": {"tf": 1}, "ifri_mini_ml_lib.preprocessing.preparation.CategoricalEncoder": {"tf": 1.7320508075688772}, "ifri_mini_ml_lib.preprocessing.preparation.CategoricalEncoder.fit": {"tf": 1}, "ifri_mini_ml_lib.preprocessing.preparation.CategoricalEncoder.transform": {"tf": 1}, "ifri_mini_ml_lib.preprocessing.preparation.CategoricalEncoder.fit_transform": {"tf": 1}}, "df": 5}}}, "e": {"docs": {}, "df": 0, "s": {"docs": {"ifri_mini_ml_lib.preprocessing.preparation.CategoricalEncoder": {"tf": 1.7320508075688772}}, "df": 1}}}, "y": {"docs": {"ifri_mini_ml_lib.preprocessing.preparation.CategoricalEncoder": {"tf": 1.7320508075688772}}, "df": 1}}}}}}, "s": {"docs": {}, "df": 0, "e": {"docs": {"ifri_mini_ml_lib.model_selection.BaggingClassifier": {"tf": 1.4142135623730951}, "ifri_mini_ml_lib.model_selection.BaggingRegressor": {"tf": 1.4142135623730951}, "ifri_mini_ml_lib.preprocessing.dimensionality_reduction.TSNE.generate_test_data": {"tf": 1.4142135623730951}}, "df": 3, "s": {"docs": {"ifri_mini_ml_lib.classification.LogisticRegression": {"tf": 1}, "ifri_mini_ml_lib.classification.LogisticRegression.fit": {"tf": 1.4142135623730951}, "ifri_mini_ml_lib.classification.LogisticRegression.predict": {"tf": 1}}, "df": 3}}, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"ifri_mini_ml_lib.model_selection.BayesianSearchCV.__init__": {"tf": 1}}, "df": 1}}}}}}, "s": {"docs": {}, "df": 0, "v": {"docs": {"ifri_mini_ml_lib.association_rules.DataAdapter.load_csv_to_transactions": {"tf": 1.7320508075688772}}, "df": 1}}, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "d": {"docs": {"ifri_mini_ml_lib.clustering.KMeans": {"tf": 1.7320508075688772}, "ifri_mini_ml_lib.clustering.KMeans.__init__": {"tf": 1}, "ifri_mini_ml_lib.clustering.KMeans.fit": {"tf": 1.4142135623730951}, "ifri_mini_ml_lib.clustering.KMeans.predict": {"tf": 1}, "ifri_mini_ml_lib.metrics.evaluation_metrics.calculate_inertia": {"tf": 1}}, "df": 5, "s": {"docs": {"ifri_mini_ml_lib.clustering.KMeans": {"tf": 1}, "ifri_mini_ml_lib.clustering.KMeans.__init__": {"tf": 1.4142135623730951}, "ifri_mini_ml_lib.clustering.KMeans.fit": {"tf": 1.7320508075688772}, "ifri_mini_ml_lib.clustering.KMeans.predict": {"tf": 1.4142135623730951}, "ifri_mini_ml_lib.clustering.KMeans.plot_clusters": {"tf": 1}, "ifri_mini_ml_lib.metrics.evaluation_metrics.calculate_inertia": {"tf": 1.4142135623730951}}, "df": 6}}}}}, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "s": {"docs": {"ifri_mini_ml_lib.metrics.evaluation_metrics.calculate_inertia": {"tf": 1}, "ifri_mini_ml_lib.preprocessing.preparation.StandardScaler": {"tf": 1}}, "df": 2}}}}}}, "v": {"docs": {"ifri_mini_ml_lib.model_selection.BayesianSearchCV.__init__": {"tf": 1.4142135623730951}}, "df": 1}}, "e": {"docs": {"ifri_mini_ml_lib.metrics.bias_evaluation.selection_rate": {"tf": 1}, "ifri_mini_ml_lib.model_selection.GridSearchCV": {"tf": 1}}, "df": 2, "d": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "l": {"docs": {"ifri_mini_ml_lib": {"tf": 1}}, "df": 1}}}}}}}}}, "g": {"docs": {}, "df": 0, "e": {"docs": {"ifri_mini_ml_lib.classification.LogisticRegression": {"tf": 1}, "ifri_mini_ml_lib.classification.LogisticRegression.fit": {"tf": 1}, "ifri_mini_ml_lib.classification.LogisticRegression.predict": {"tf": 1}}, "df": 3}}}, "n": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "e": {"docs": {"ifri_mini_ml_lib.preprocessing.preparation.CategoricalEncoder": {"tf": 1}, "ifri_mini_ml_lib.preprocessing.preparation.CategoricalEncoder.fit": {"tf": 1}}, "df": 2, "r": {"docs": {"ifri_mini_ml_lib.preprocessing.preparation.CategoricalEncoder": {"tf": 1}}, "df": 1, "s": {"docs": {"ifri_mini_ml_lib": {"tf": 1}}, "df": 1}}, "d": {"docs": {"ifri_mini_ml_lib.preprocessing.preparation.CategoricalEncoder.transform": {"tf": 1.4142135623730951}, "ifri_mini_ml_lib.preprocessing.preparation.CategoricalEncoder.fit_transform": {"tf": 1}}, "df": 2}}, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"ifri_mini_ml_lib.preprocessing.preparation.CategoricalEncoder": {"tf": 3.1622776601683795}, "ifri_mini_ml_lib.preprocessing.preparation.CategoricalEncoder.fit": {"tf": 2}, "ifri_mini_ml_lib.preprocessing.preparation.CategoricalEncoder.transform": {"tf": 1.4142135623730951}, "ifri_mini_ml_lib.preprocessing.preparation.CategoricalEncoder.fit_transform": {"tf": 1.4142135623730951}}, "df": 4}}}}}}, "t": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "y": {"docs": {"ifri_mini_ml_lib.classification.DecisionTree": {"tf": 1}}, "df": 1}}}}}}, "c": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {"ifri_mini_ml_lib": {"tf": 1}, "ifri_mini_ml_lib.association_rules.Eclat": {"tf": 3}, "ifri_mini_ml_lib.association_rules.FPGrowth": {"tf": 1}}, "df": 3}}}}, "x": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "e": {"docs": {"ifri_mini_ml_lib.clustering.KMeans": {"tf": 1}, "ifri_mini_ml_lib.clustering.KMeans.__init__": {"tf": 1}, "ifri_mini_ml_lib.clustering.KMeans.fit": {"tf": 1}, "ifri_mini_ml_lib.clustering.KMeans.predict": {"tf": 1}, "ifri_mini_ml_lib.clustering.KMeans.fit_predict": {"tf": 1}, "ifri_mini_ml_lib.clustering.DBSCAN": {"tf": 1}, "ifri_mini_ml_lib.clustering.DBSCAN.__init__": {"tf": 1}, "ifri_mini_ml_lib.clustering.DBSCAN.fit_predict": {"tf": 1}, "ifri_mini_ml_lib.clustering.DBSCAN.plot_clusters": {"tf": 1}, "ifri_mini_ml_lib.clustering.HierarchicalClustering": {"tf": 1}, "ifri_mini_ml_lib.clustering.HierarchicalClustering.plot_dendrogram": {"tf": 1}, "ifri_mini_ml_lib.clustering.HierarchicalClustering.plot_clusters": {"tf": 1}, "ifri_mini_ml_lib.metrics.bias_evaluation.selection_rate": {"tf": 1}, "ifri_mini_ml_lib.metrics.bias_evaluation.demographic_parity_ratio": {"tf": 1}, "ifri_mini_ml_lib.metrics.evaluation_metrics.confusion_matrix": {"tf": 1}, "ifri_mini_ml_lib.metrics.evaluation_metrics.calculate_inertia": {"tf": 1}, "ifri_mini_ml_lib.metrics.evaluation_metrics.calculate_silhouette": {"tf": 1}, "ifri_mini_ml_lib.model_selection.BaggingClassifier": {"tf": 1}, "ifri_mini_ml_lib.model_selection.BaggingClassifier.fit": {"tf": 1}, "ifri_mini_ml_lib.model_selection.BaggingClassifier.predict": {"tf": 1}, "ifri_mini_ml_lib.model_selection.BaggingRegressor": {"tf": 1}, "ifri_mini_ml_lib.model_selection.BaggingRegressor.fit": {"tf": 1}, "ifri_mini_ml_lib.model_selection.BaggingRegressor.predict": {"tf": 1}, "ifri_mini_ml_lib.model_selection.BayesianSearchCV.__init__": {"tf": 1}, "ifri_mini_ml_lib.model_selection.BayesianSearchCV.fit": {"tf": 1}, "ifri_mini_ml_lib.model_selection.BayesianSearchCV.get_best_params": {"tf": 1}, "ifri_mini_ml_lib.model_selection.GridSearchCV": {"tf": 1}, "ifri_mini_ml_lib.model_selection.GridSearchCV.fit": {"tf": 1}, "ifri_mini_ml_lib.model_selection.RandomSearchCV": {"tf": 1.4142135623730951}, "ifri_mini_ml_lib.model_selection.RandomSearchCV.fit": {"tf": 1}, "ifri_mini_ml_lib.preprocessing.dimensionality_reduction.PCA.__init__": {"tf": 1}, "ifri_mini_ml_lib.preprocessing.dimensionality_reduction.PCA.fit": {"tf": 1}, "ifri_mini_ml_lib.preprocessing.dimensionality_reduction.PCA.transform": {"tf": 1}, "ifri_mini_ml_lib.preprocessing.dimensionality_reduction.PCA.fit_transform": {"tf": 1}, "ifri_mini_ml_lib.preprocessing.dimensionality_reduction.PCA.plot_cov_matrix": {"tf": 1}, "ifri_mini_ml_lib.preprocessing.dimensionality_reduction.PCA.explained_variances": {"tf": 1}, "ifri_mini_ml_lib.preprocessing.dimensionality_reduction.PCA.explained_variances_ratio": {"tf": 1}, "ifri_mini_ml_lib.preprocessing.dimensionality_reduction.PCA.plot_cumulative_explained_variance_ratio": {"tf": 1}, "ifri_mini_ml_lib.preprocessing.dimensionality_reduction.TSNE.__init__": {"tf": 1}, "ifri_mini_ml_lib.preprocessing.dimensionality_reduction.TSNE.fit": {"tf": 1}, "ifri_mini_ml_lib.preprocessing.dimensionality_reduction.TSNE.fit_transform": {"tf": 1}, "ifri_mini_ml_lib.preprocessing.dimensionality_reduction.TSNE.generate_test_data": {"tf": 1}, "ifri_mini_ml_lib.preprocessing.dimensionality_reduction.TSNE.plot_results": {"tf": 1}, "ifri_mini_ml_lib.preprocessing.preparation.MinMaxScaler.__init__": {"tf": 1}, "ifri_mini_ml_lib.preprocessing.preparation.MinMaxScaler.fit": {"tf": 1}, "ifri_mini_ml_lib.preprocessing.preparation.MinMaxScaler.transform": {"tf": 1}, "ifri_mini_ml_lib.preprocessing.preparation.MinMaxScaler.fit_transform": {"tf": 1}, "ifri_mini_ml_lib.preprocessing.preparation.MinMaxScaler.inverse_transform": {"tf": 1}, "ifri_mini_ml_lib.preprocessing.preparation.MissingValueHandler.remove_missing": {"tf": 1}, "ifri_mini_ml_lib.preprocessing.preparation.MissingValueHandler.impute_statistical": {"tf": 1}, "ifri_mini_ml_lib.preprocessing.preparation.MissingValueHandler.impute_default": {"tf": 1}, "ifri_mini_ml_lib.preprocessing.preparation.MissingValueHandler.impute_knn": {"tf": 1}, "ifri_mini_ml_lib.preprocessing.preparation.MissingValueHandler.impute_regression": {"tf": 1}, "ifri_mini_ml_lib.preprocessing.preparation.StandardScaler.fit": {"tf": 1}, "ifri_mini_ml_lib.preprocessing.preparation.StandardScaler.transform": {"tf": 1}, "ifri_mini_ml_lib.preprocessing.preparation.StandardScaler.fit_transform": {"tf": 1}, "ifri_mini_ml_lib.preprocessing.preparation.StandardScaler.inverse_transform": {"tf": 1}, "ifri_mini_ml_lib.preprocessing.preparation.DataSplitter.train_test_split": {"tf": 1}, "ifri_mini_ml_lib.preprocessing.preparation.DataSplitter.stratified_train_test_split": {"tf": 1}, "ifri_mini_ml_lib.preprocessing.preparation.DataSplitter.temporal_train_test_split": {"tf": 1}, "ifri_mini_ml_lib.preprocessing.preparation.DataSplitter.k_fold_split": {"tf": 1}, "ifri_mini_ml_lib.regression.LinearRegression.fit": {"tf": 1}, "ifri_mini_ml_lib.regression.LinearRegression.predict": {"tf": 1}, "ifri_mini_ml_lib.regression.PolynomialRegression.fit": {"tf": 1}, "ifri_mini_ml_lib.regression.PolynomialRegression.predict": {"tf": 1}, "ifri_mini_ml_lib.regression.SVR": {"tf": 1}, "ifri_mini_ml_lib.regression.SVR.fit": {"tf": 1}, "ifri_mini_ml_lib.regression.SVR.predict": {"tf": 1}, "ifri_mini_ml_lib.regression.SVR.set_params": {"tf": 1}}, "df": 69, "s": {"docs": {"ifri_mini_ml_lib.association_rules.Apriori": {"tf": 1}, "ifri_mini_ml_lib.association_rules.Eclat": {"tf": 1}, "ifri_mini_ml_lib.association_rules.FPGrowth": {"tf": 1}, "ifri_mini_ml_lib.association_rules.DataAdapter": {"tf": 1}, "ifri_mini_ml_lib.classification.KNN": {"tf": 1.4142135623730951}, "ifri_mini_ml_lib.classification.LogisticRegression": {"tf": 1}}, "df": 6}}}}}, "g": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"ifri_mini_ml_lib.preprocessing.dimensionality_reduction.TSNE": {"tf": 1.4142135623730951}, "ifri_mini_ml_lib.preprocessing.dimensionality_reduction.TSNE.__init__": {"tf": 1.4142135623730951}}, "df": 2}}}}}}}}}}, "p": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "y": {"docs": {"ifri_mini_ml_lib.association_rules.Eclat": {"tf": 1}}, "df": 1}}}}}}, "o": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "e": {"docs": {"ifri_mini_ml_lib.model_selection.RandomSearchCV": {"tf": 1}}, "df": 1}}}, "a": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "d": {"docs": {"ifri_mini_ml_lib.preprocessing.dimensionality_reduction.PCA.explained_variances": {"tf": 1}, "ifri_mini_ml_lib.preprocessing.dimensionality_reduction.PCA.explained_variances_ratio": {"tf": 1.4142135623730951}, "ifri_mini_ml_lib.preprocessing.dimensionality_reduction.PCA.plot_cumulative_explained_variance_ratio": {"tf": 1.4142135623730951}}, "df": 3}}}}}}, "a": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"ifri_mini_ml_lib.classification.LogisticRegression": {"tf": 1}, "ifri_mini_ml_lib.classification.LogisticRegression.fit": {"tf": 1}}, "df": 2}}}}}}, "e": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "d": {"docs": {"ifri_mini_ml_lib.model_selection.BayesianSearchCV": {"tf": 1}}, "df": 1}}}}}, "o": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "l": {"docs": {"ifri_mini_ml_lib.neural_networks.MLPClassifier.__init__": {"tf": 1.4142135623730951}, "ifri_mini_ml_lib.neural_networks.MLPRegressor.__init__": {"tf": 1.4142135623730951}}, "df": 2}}}}}}}}}, "t": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"ifri_mini_ml_lib.association_rules.FPGrowth": {"tf": 1}}, "df": 1}}}, "s": {"docs": {"ifri_mini_ml_lib.association_rules.FPGrowth": {"tf": 1}, "ifri_mini_ml_lib.association_rules.FPGrowth.fit": {"tf": 1}}, "df": 2}}}}, "e": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "e": {"docs": {"ifri_mini_ml_lib.preprocessing.preparation.MinMaxScaler": {"tf": 1}}, "df": 1}}}}}, "i": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "t": {"docs": {"ifri_mini_ml_lib.association_rules.DataAdapter.load_csv_to_transactions": {"tf": 1}, "ifri_mini_ml_lib.preprocessing.preparation.MissingValueHandler.impute_regression": {"tf": 1}}, "df": 2}}}, "e": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "e": {"docs": {"ifri_mini_ml_lib.clustering.KMeans.plot_clusters": {"tf": 1}}, "df": 1}}}}}}, "g": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "s": {"docs": {"ifri_mini_ml_lib.association_rules.Apriori": {"tf": 1}, "ifri_mini_ml_lib.association_rules.Eclat": {"tf": 1}, "ifri_mini_ml_lib.association_rules.FPGrowth": {"tf": 1}}, "df": 3}}}, "q": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "v": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "e": {"docs": {"ifri_mini_ml_lib.association_rules.Eclat": {"tf": 1}}, "df": 1}}}}}}}}, "a": {"docs": {}, "df": 0, "l": {"docs": {"ifri_mini_ml_lib.metrics.bias_evaluation.selection_rate": {"tf": 1}}, "df": 1, "i": {"docs": {}, "df": 0, "z": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "d": {"docs": {"ifri_mini_ml_lib.metrics.bias_evaluation.equalized_odds_ratio": {"tf": 1}}, "df": 1}}}}}}}}, "a": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "h": {"docs": {"ifri_mini_ml_lib.association_rules.Eclat": {"tf": 1}, "ifri_mini_ml_lib.association_rules.Eclat.fit": {"tf": 1}, "ifri_mini_ml_lib.association_rules.FPGrowth.fit": {"tf": 1}, "ifri_mini_ml_lib.association_rules.DataAdapter.convert_to_transactions": {"tf": 1}, "ifri_mini_ml_lib.classification.DecisionTree": {"tf": 1}, "ifri_mini_ml_lib.classification.KNN.predict": {"tf": 1.4142135623730951}, "ifri_mini_ml_lib.clustering.KMeans.fit": {"tf": 1}, "ifri_mini_ml_lib.clustering.KMeans.predict": {"tf": 1.4142135623730951}, "ifri_mini_ml_lib.metrics.bias_evaluation.selection_rate_per_group": {"tf": 1.4142135623730951}, "ifri_mini_ml_lib.metrics.bias_evaluation.tpr_fpr_by_group": {"tf": 1}, "ifri_mini_ml_lib.metrics.evaluation_metrics.calculate_inertia": {"tf": 1.4142135623730951}, "ifri_mini_ml_lib.metrics.evaluation_metrics.calculate_silhouette": {"tf": 1.4142135623730951}, "ifri_mini_ml_lib.model_selection.RandomSearchCV": {"tf": 1}, "ifri_mini_ml_lib.neural_networks.MLPClassifier.__init__": {"tf": 1}, "ifri_mini_ml_lib.neural_networks.MLPClassifier.predict_proba": {"tf": 1.4142135623730951}, "ifri_mini_ml_lib.neural_networks.MLPRegressor.__init__": {"tf": 1}, "ifri_mini_ml_lib.preprocessing.preparation.MinMaxScaler": {"tf": 1}, "ifri_mini_ml_lib.preprocessing.preparation.StandardScaler": {"tf": 1.7320508075688772}, "ifri_mini_ml_lib.preprocessing.preparation.StandardScaler.fit": {"tf": 1.4142135623730951}, "ifri_mini_ml_lib.preprocessing.preparation.CategoricalEncoder": {"tf": 1.4142135623730951}, "ifri_mini_ml_lib.preprocessing.preparation.DataSplitter.k_fold_split": {"tf": 1}}, "df": 21}}, "r": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "y": {"docs": {"ifri_mini_ml_lib.classification.LogisticRegression": {"tf": 1.4142135623730951}, "ifri_mini_ml_lib.classification.LogisticRegression.fit": {"tf": 1.4142135623730951}, "ifri_mini_ml_lib.neural_networks.MLPClassifier.__init__": {"tf": 2}, "ifri_mini_ml_lib.neural_networks.MLPRegressor.__init__": {"tf": 2}, "ifri_mini_ml_lib.preprocessing.dimensionality_reduction.TSNE": {"tf": 1}, "ifri_mini_ml_lib.preprocessing.dimensionality_reduction.TSNE.__init__": {"tf": 1}}, "df": 6}}}}, "f": {"docs": {}, "df": 0, "f": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "t": {"docs": {"ifri_mini_ml_lib.association_rules.Eclat": {"tf": 1}, "ifri_mini_ml_lib.association_rules.FPGrowth": {"tf": 1}}, "df": 2}}}}}}, "e": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "v": {"docs": {}, "df": 0, "e": {"docs": {"ifri_mini_ml_lib.preprocessing.dimensionality_reduction.TSNE": {"tf": 1}}, "df": 1}}}}}}}}, "m": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "y": {"docs": {"ifri_mini_ml_lib.association_rules.DataAdapter.convert_to_transactions": {"tf": 1}, "ifri_mini_ml_lib.association_rules.DataAdapter.load_csv_to_transactions": {"tf": 1}}, "df": 2}}}, "b": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"ifri_mini_ml_lib.preprocessing.dimensionality_reduction.TSNE": {"tf": 1.4142135623730951}, "ifri_mini_ml_lib.preprocessing.dimensionality_reduction.TSNE.fit_transform": {"tf": 1}, "ifri_mini_ml_lib.preprocessing.dimensionality_reduction.TSNE.plot_results": {"tf": 1}}, "df": 3}}}}}}}}, "i": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "h": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"ifri_mini_ml_lib.classification.DecisionTree.fit": {"tf": 1}, "ifri_mini_ml_lib.classification.KNN": {"tf": 1}, "ifri_mini_ml_lib.classification.KNN.predict": {"tf": 1}, "ifri_mini_ml_lib.clustering.HierarchicalClustering": {"tf": 1}}, "df": 4}}}}, "g": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {"ifri_mini_ml_lib.preprocessing.dimensionality_reduction.PCA": {"tf": 1.4142135623730951}}, "df": 1, "v": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {"ifri_mini_ml_lib.preprocessing.dimensionality_reduction.PCA": {"tf": 1}, "ifri_mini_ml_lib.preprocessing.dimensionality_reduction.PCA.explained_variances": {"tf": 1.4142135623730951}}, "df": 2}}}}}, "e": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "s": {"docs": {"ifri_mini_ml_lib.preprocessing.dimensionality_reduction.PCA": {"tf": 1}}, "df": 1}}}}}}}}}}}, "s": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {"ifri_mini_ml_lib.classification.LogisticRegression.predict_proba": {"tf": 1}, "ifri_mini_ml_lib.classification.LogisticRegression.predict": {"tf": 1}}, "df": 2}}, "o": {"docs": {}, "df": 0, "r": {"docs": {"ifri_mini_ml_lib.model_selection.BayesianSearchCV.__init__": {"tf": 1}, "ifri_mini_ml_lib.model_selection.GridSearchCV.fit": {"tf": 1}, "ifri_mini_ml_lib.model_selection.RandomSearchCV": {"tf": 1.4142135623730951}}, "df": 3, "s": {"docs": {"ifri_mini_ml_lib.model_selection.BaggingClassifier": {"tf": 1.4142135623730951}, "ifri_mini_ml_lib.model_selection.BaggingRegressor": {"tf": 1.4142135623730951}}, "df": 2}}}}}}}}}, "p": {"docs": {}, "df": 0, "s": {"docs": {"ifri_mini_ml_lib.clustering.DBSCAN": {"tf": 1.4142135623730951}, "ifri_mini_ml_lib.clustering.DBSCAN.__init__": {"tf": 1.4142135623730951}}, "df": 2, "i": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"ifri_mini_ml_lib.clustering.DBSCAN": {"tf": 1}, "ifri_mini_ml_lib.neural_networks.MLPClassifier.__init__": {"tf": 1}, "ifri_mini_ml_lib.neural_networks.MLPRegressor.__init__": {"tf": 1}, "ifri_mini_ml_lib.regression.SVR": {"tf": 1.7320508075688772}}, "df": 4}}}}}, "o": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "h": {"docs": {"ifri_mini_ml_lib.neural_networks.MLPClassifier.__init__": {"tf": 1}, "ifri_mini_ml_lib.neural_networks.MLPRegressor.__init__": {"tf": 1}}, "df": 2, "s": {"docs": {"ifri_mini_ml_lib.regression.LinearRegression": {"tf": 1}, "ifri_mini_ml_lib.regression.PolynomialRegression": {"tf": 1}}, "df": 2}}}}}, "o": {"docs": {}, "df": 0, "r": {"docs": {"ifri_mini_ml_lib.metrics.bias_evaluation.equalized_odds_ratio": {"tf": 1}}, "df": 1}}, "v": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"ifri_mini_ml_lib.model_selection.BayesianSearchCV.__init__": {"tf": 1}, "ifri_mini_ml_lib.model_selection.GridSearchCV": {"tf": 1}}, "df": 2}}}, "e": {"docs": {"ifri_mini_ml_lib.model_selection.RandomSearchCV": {"tf": 1}, "ifri_mini_ml_lib.preprocessing.preparation.DataSplitter.k_fold_split": {"tf": 1}}, "df": 2, "s": {"docs": {"ifri_mini_ml_lib.model_selection.RandomSearchCV": {"tf": 1}, "ifri_mini_ml_lib.model_selection.RandomSearchCV.fit": {"tf": 1}}, "df": 2}}}}}}}}, "r": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {"ifri_mini_ml_lib.model_selection.GridSearchCV": {"tf": 1}}, "df": 1}}}}}, "o": {"docs": {}, "df": 0, "f": {"docs": {"ifri_mini_ml_lib": {"tf": 1}, "ifri_mini_ml_lib.association_rules.Apriori": {"tf": 1}, "ifri_mini_ml_lib.association_rules.Apriori.get_frequent_itemsets": {"tf": 1.4142135623730951}, "ifri_mini_ml_lib.association_rules.Apriori.get_rules": {"tf": 1}, "ifri_mini_ml_lib.association_rules.Eclat": {"tf": 1.7320508075688772}, "ifri_mini_ml_lib.association_rules.Eclat.fit": {"tf": 1.4142135623730951}, "ifri_mini_ml_lib.association_rules.Eclat.get_frequent_itemsets": {"tf": 1.4142135623730951}, "ifri_mini_ml_lib.association_rules.Eclat.get_rules": {"tf": 1}, "ifri_mini_ml_lib.association_rules.FPGrowth.fit": {"tf": 1.4142135623730951}, "ifri_mini_ml_lib.association_rules.FPGrowth.get_frequent_itemsets": {"tf": 1}, "ifri_mini_ml_lib.association_rules.FPGrowth.get_rules": {"tf": 1}, "ifri_mini_ml_lib.association_rules.DataAdapter": {"tf": 1}, "ifri_mini_ml_lib.association_rules.DataAdapter.convert_to_transactions": {"tf": 1.7320508075688772}, "ifri_mini_ml_lib.association_rules.DataAdapter.load_csv_to_transactions": {"tf": 1}, "ifri_mini_ml_lib.classification.DecisionTree": {"tf": 1.7320508075688772}, "ifri_mini_ml_lib.classification.DecisionTree.fit": {"tf": 1.7320508075688772}, "ifri_mini_ml_lib.classification.DecisionTree.predict": {"tf": 1}, "ifri_mini_ml_lib.classification.KNN": {"tf": 1.4142135623730951}, "ifri_mini_ml_lib.classification.KNN.__init__": {"tf": 1.4142135623730951}, "ifri_mini_ml_lib.classification.KNN.fit": {"tf": 1.4142135623730951}, "ifri_mini_ml_lib.classification.KNN.predict": {"tf": 1}, "ifri_mini_ml_lib.classification.LogisticRegression": {"tf": 1}, "ifri_mini_ml_lib.classification.LogisticRegression.fit": {"tf": 1.4142135623730951}, "ifri_mini_ml_lib.classification.LogisticRegression.predict_proba": {"tf": 1}, "ifri_mini_ml_lib.classification.LogisticRegression.predict": {"tf": 1}, "ifri_mini_ml_lib.clustering.KMeans": {"tf": 1.7320508075688772}, "ifri_mini_ml_lib.clustering.KMeans.__init__": {"tf": 1.4142135623730951}, "ifri_mini_ml_lib.clustering.KMeans.fit": {"tf": 1.4142135623730951}, "ifri_mini_ml_lib.clustering.KMeans.predict": {"tf": 1}, "ifri_mini_ml_lib.clustering.DBSCAN": {"tf": 1.7320508075688772}, "ifri_mini_ml_lib.clustering.DBSCAN.__init__": {"tf": 1}, "ifri_mini_ml_lib.clustering.HierarchicalClustering": {"tf": 1}, "ifri_mini_ml_lib.clustering.HierarchicalClustering.__init__": {"tf": 1}, "ifri_mini_ml_lib.clustering.HierarchicalClustering.plot_clusters": {"tf": 1}, "ifri_mini_ml_lib.metrics.bias_evaluation.selection_rate": {"tf": 1.4142135623730951}, "ifri_mini_ml_lib.metrics.bias_evaluation.equalized_odds_ratio": {"tf": 1}, "ifri_mini_ml_lib.metrics.bias_evaluation.equalized_odds_difference": {"tf": 1}, "ifri_mini_ml_lib.metrics.evaluation_metrics.confusion_matrix": {"tf": 1.7320508075688772}, "ifri_mini_ml_lib.metrics.evaluation_metrics.accuracy": {"tf": 1.7320508075688772}, "ifri_mini_ml_lib.metrics.evaluation_metrics.precision": {"tf": 1.4142135623730951}, "ifri_mini_ml_lib.metrics.evaluation_metrics.recall": {"tf": 1.4142135623730951}, "ifri_mini_ml_lib.metrics.evaluation_metrics.f1_score": {"tf": 1.4142135623730951}, "ifri_mini_ml_lib.metrics.evaluation_metrics.calculate_inertia": {"tf": 2}, "ifri_mini_ml_lib.model_selection.BaggingClassifier": {"tf": 2.449489742783178}, "ifri_mini_ml_lib.model_selection.BaggingClassifier.fit": {"tf": 2}, "ifri_mini_ml_lib.model_selection.BaggingClassifier.predict": {"tf": 1}, "ifri_mini_ml_lib.model_selection.BaggingRegressor": {"tf": 2.449489742783178}, "ifri_mini_ml_lib.model_selection.BaggingRegressor.fit": {"tf": 2}, "ifri_mini_ml_lib.model_selection.BaggingRegressor.predict": {"tf": 1.4142135623730951}, "ifri_mini_ml_lib.model_selection.BayesianSearchCV.__init__": {"tf": 2.23606797749979}, "ifri_mini_ml_lib.model_selection.BayesianSearchCV.fit": {"tf": 1.4142135623730951}, "ifri_mini_ml_lib.model_selection.GridSearchCV": {"tf": 2}, "ifri_mini_ml_lib.model_selection.GridSearchCV.fit": {"tf": 1.7320508075688772}, "ifri_mini_ml_lib.model_selection.RandomSearchCV": {"tf": 2.6457513110645907}, "ifri_mini_ml_lib.neural_networks.MLPClassifier.__init__": {"tf": 2.449489742783178}, "ifri_mini_ml_lib.neural_networks.MLPClassifier.fit": {"tf": 1.4142135623730951}, "ifri_mini_ml_lib.neural_networks.MLPClassifier.predict": {"tf": 1.4142135623730951}, "ifri_mini_ml_lib.neural_networks.MLPClassifier.predict_proba": {"tf": 1.4142135623730951}, "ifri_mini_ml_lib.neural_networks.MLPClassifier.score": {"tf": 1.7320508075688772}, "ifri_mini_ml_lib.neural_networks.MLPRegressor.__init__": {"tf": 2.23606797749979}, "ifri_mini_ml_lib.neural_networks.MLPRegressor.fit": {"tf": 1.4142135623730951}, "ifri_mini_ml_lib.neural_networks.MLPRegressor.predict": {"tf": 1.4142135623730951}, "ifri_mini_ml_lib.neural_networks.MLPRegressor.score": {"tf": 2}, "ifri_mini_ml_lib.preprocessing.dimensionality_reduction.PCA": {"tf": 2}, "ifri_mini_ml_lib.preprocessing.dimensionality_reduction.PCA.__init__": {"tf": 1}, "ifri_mini_ml_lib.preprocessing.dimensionality_reduction.PCA.fit": {"tf": 1}, "ifri_mini_ml_lib.preprocessing.dimensionality_reduction.PCA.transform": {"tf": 1}, "ifri_mini_ml_lib.preprocessing.dimensionality_reduction.PCA.explained_variances": {"tf": 1}, "ifri_mini_ml_lib.preprocessing.dimensionality_reduction.PCA.explained_variances_ratio": {"tf": 1.4142135623730951}, "ifri_mini_ml_lib.preprocessing.dimensionality_reduction.TSNE": {"tf": 2.23606797749979}, "ifri_mini_ml_lib.preprocessing.dimensionality_reduction.TSNE.__init__": {"tf": 1}, "ifri_mini_ml_lib.preprocessing.dimensionality_reduction.TSNE.generate_test_data": {"tf": 1}, "ifri_mini_ml_lib.preprocessing.preparation.MinMaxScaler": {"tf": 1}, "ifri_mini_ml_lib.preprocessing.preparation.MinMaxScaler.__init__": {"tf": 1}, "ifri_mini_ml_lib.preprocessing.preparation.MissingValueHandler.remove_missing": {"tf": 1}, "ifri_mini_ml_lib.preprocessing.preparation.MissingValueHandler.impute_knn": {"tf": 1}, "ifri_mini_ml_lib.preprocessing.preparation.MissingValueHandler.impute_regression": {"tf": 1}, "ifri_mini_ml_lib.preprocessing.preparation.StandardScaler": {"tf": 2.449489742783178}, "ifri_mini_ml_lib.preprocessing.preparation.StandardScaler.fit": {"tf": 1}, "ifri_mini_ml_lib.preprocessing.preparation.CategoricalEncoder": {"tf": 1.7320508075688772}, "ifri_mini_ml_lib.preprocessing.preparation.DataSplitter.train_test_split": {"tf": 1.4142135623730951}, "ifri_mini_ml_lib.preprocessing.preparation.DataSplitter.stratified_train_test_split": {"tf": 1.4142135623730951}, "ifri_mini_ml_lib.preprocessing.preparation.DataSplitter.temporal_train_test_split": {"tf": 1.4142135623730951}, "ifri_mini_ml_lib.preprocessing.preparation.DataSplitter.k_fold_split": {"tf": 1.4142135623730951}, "ifri_mini_ml_lib.regression.LinearRegression": {"tf": 1}, "ifri_mini_ml_lib.regression.PolynomialRegression": {"tf": 1}, "ifri_mini_ml_lib.regression.SVR": {"tf": 1.7320508075688772}, "ifri_mini_ml_lib.regression.SVR.set_params": {"tf": 1}}, "df": 88}, "b": {"docs": {}, "df": 0, "j": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "t": {"docs": {"ifri_mini_ml_lib.association_rules.Apriori": {"tf": 1}, "ifri_mini_ml_lib.association_rules.Eclat": {"tf": 1}, "ifri_mini_ml_lib.association_rules.FPGrowth": {"tf": 1}, "ifri_mini_ml_lib.model_selection.BaggingClassifier": {"tf": 1}, "ifri_mini_ml_lib.model_selection.BaggingRegressor": {"tf": 1}, "ifri_mini_ml_lib.model_selection.RandomSearchCV": {"tf": 1.4142135623730951}, "ifri_mini_ml_lib.neural_networks.MLPClassifier.fit": {"tf": 1}, "ifri_mini_ml_lib.neural_networks.MLPRegressor.fit": {"tf": 1}, "ifri_mini_ml_lib.preprocessing.preparation.MinMaxScaler.fit": {"tf": 1}}, "df": 9, "i": {"docs": {}, "df": 0, "v": {"docs": {}, "df": 0, "e": {"docs": {"ifri_mini_ml_lib.model_selection.BayesianSearchCV": {"tf": 1}}, "df": 1}}}}}}}, "t": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "d": {"docs": {"ifri_mini_ml_lib.model_selection.RandomSearchCV": {"tf": 1}}, "df": 1}}}}}}}, "r": {"docs": {"ifri_mini_ml_lib.association_rules.Eclat": {"tf": 1}, "ifri_mini_ml_lib.association_rules.FPGrowth": {"tf": 1}, "ifri_mini_ml_lib.association_rules.DataAdapter.convert_to_transactions": {"tf": 1.4142135623730951}, "ifri_mini_ml_lib.association_rules.DataAdapter.load_csv_to_transactions": {"tf": 1}, "ifri_mini_ml_lib.classification.DecisionTree.fit": {"tf": 1}, "ifri_mini_ml_lib.classification.KNN": {"tf": 1}, "ifri_mini_ml_lib.classification.KNN.__init__": {"tf": 1}, "ifri_mini_ml_lib.classification.KNN.predict": {"tf": 1}, "ifri_mini_ml_lib.classification.LogisticRegression.predict": {"tf": 1}, "ifri_mini_ml_lib.clustering.KMeans": {"tf": 1.4142135623730951}, "ifri_mini_ml_lib.clustering.KMeans.__init__": {"tf": 1.4142135623730951}, "ifri_mini_ml_lib.clustering.KMeans.fit": {"tf": 1.4142135623730951}, "ifri_mini_ml_lib.clustering.HierarchicalClustering": {"tf": 1.7320508075688772}, "ifri_mini_ml_lib.clustering.HierarchicalClustering.__init__": {"tf": 1}, "ifri_mini_ml_lib.metrics.bias_evaluation.selection_rate": {"tf": 1.4142135623730951}, "ifri_mini_ml_lib.metrics.bias_evaluation.selection_rate_per_group": {"tf": 1.4142135623730951}, "ifri_mini_ml_lib.metrics.bias_evaluation.demographic_parity_ratio": {"tf": 1}, "ifri_mini_ml_lib.metrics.bias_evaluation.demographic_parity_difference": {"tf": 1}, "ifri_mini_ml_lib.model_selection.RandomSearchCV": {"tf": 1.4142135623730951}, "ifri_mini_ml_lib.neural_networks.MLPClassifier.__init__": {"tf": 1}, "ifri_mini_ml_lib.neural_networks.MLPRegressor.__init__": {"tf": 1}, "ifri_mini_ml_lib.neural_networks.MLPRegressor.fit": {"tf": 1}, "ifri_mini_ml_lib.neural_networks.MLPRegressor.predict": {"tf": 1}, "ifri_mini_ml_lib.neural_networks.MLPRegressor.score": {"tf": 1}, "ifri_mini_ml_lib.preprocessing.dimensionality_reduction.TSNE": {"tf": 1}, "ifri_mini_ml_lib.preprocessing.dimensionality_reduction.TSNE.__init__": {"tf": 1.4142135623730951}, "ifri_mini_ml_lib.preprocessing.dimensionality_reduction.TSNE.generate_test_data": {"tf": 1}, "ifri_mini_ml_lib.preprocessing.dimensionality_reduction.TSNE.plot_results": {"tf": 1}, "ifri_mini_ml_lib.preprocessing.preparation.MinMaxScaler.fit": {"tf": 1}, "ifri_mini_ml_lib.preprocessing.preparation.MinMaxScaler.transform": {"tf": 1}, "ifri_mini_ml_lib.preprocessing.preparation.MissingValueHandler.remove_missing": {"tf": 1}, "ifri_mini_ml_lib.preprocessing.preparation.MissingValueHandler.impute_statistical": {"tf": 1}, "ifri_mini_ml_lib.preprocessing.preparation.StandardScaler": {"tf": 1}, "ifri_mini_ml_lib.preprocessing.preparation.StandardScaler.fit": {"tf": 1}, "ifri_mini_ml_lib.preprocessing.preparation.StandardScaler.transform": {"tf": 1.4142135623730951}, "ifri_mini_ml_lib.preprocessing.preparation.StandardScaler.fit_transform": {"tf": 1.4142135623730951}, "ifri_mini_ml_lib.preprocessing.preparation.StandardScaler.inverse_transform": {"tf": 1.4142135623730951}, "ifri_mini_ml_lib.preprocessing.preparation.DataSplitter.train_test_split": {"tf": 1.4142135623730951}, "ifri_mini_ml_lib.preprocessing.preparation.DataSplitter.temporal_train_test_split": {"tf": 1.4142135623730951}, "ifri_mini_ml_lib.regression.LinearRegression": {"tf": 1}, "ifri_mini_ml_lib.regression.PolynomialRegression": {"tf": 1}, "ifri_mini_ml_lib.regression.SVR.predict": {"tf": 1}}, "df": 42, "i": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "l": {"docs": {"ifri_mini_ml_lib.preprocessing.preparation.MinMaxScaler.inverse_transform": {"tf": 2}, "ifri_mini_ml_lib.preprocessing.preparation.StandardScaler.inverse_transform": {"tf": 1.7320508075688772}}, "df": 2}}}}}}, "d": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "l": {"docs": {"ifri_mini_ml_lib.preprocessing.preparation.CategoricalEncoder": {"tf": 1.4142135623730951}}, "df": 1}}}}, "e": {"docs": {}, "df": 0, "r": {"docs": {"ifri_mini_ml_lib.preprocessing.preparation.DataSplitter.temporal_train_test_split": {"tf": 1}}, "df": 1, "e": {"docs": {}, "df": 0, "d": {"docs": {"ifri_mini_ml_lib.preprocessing.preparation.DataSplitter.temporal_train_test_split": {"tf": 1.4142135623730951}}, "df": 1}}}}}}, "n": {"docs": {"ifri_mini_ml_lib.association_rules.Eclat": {"tf": 1}, "ifri_mini_ml_lib.classification.LogisticRegression": {"tf": 1}, "ifri_mini_ml_lib.classification.LogisticRegression.fit": {"tf": 1.4142135623730951}, "ifri_mini_ml_lib.clustering.KMeans": {"tf": 1}, "ifri_mini_ml_lib.clustering.KMeans.__init__": {"tf": 1}, "ifri_mini_ml_lib.clustering.KMeans.predict": {"tf": 1}, "ifri_mini_ml_lib.clustering.DBSCAN": {"tf": 1}, "ifri_mini_ml_lib.clustering.DBSCAN.fit_predict": {"tf": 1}, "ifri_mini_ml_lib.clustering.HierarchicalClustering.fit_predict": {"tf": 1}, "ifri_mini_ml_lib.clustering.HierarchicalClustering.plot_dendrogram": {"tf": 1}, "ifri_mini_ml_lib.model_selection.BaggingClassifier": {"tf": 1}, "ifri_mini_ml_lib.model_selection.BaggingClassifier.fit": {"tf": 1}, "ifri_mini_ml_lib.model_selection.BaggingRegressor": {"tf": 1}, "ifri_mini_ml_lib.model_selection.BaggingRegressor.fit": {"tf": 1}, "ifri_mini_ml_lib.model_selection.GridSearchCV": {"tf": 1}, "ifri_mini_ml_lib.model_selection.GridSearchCV.fit": {"tf": 1}, "ifri_mini_ml_lib.model_selection.RandomSearchCV": {"tf": 1}, "ifri_mini_ml_lib.neural_networks.MLPClassifier.__init__": {"tf": 1}, "ifri_mini_ml_lib.neural_networks.MLPClassifier.fit": {"tf": 1}, "ifri_mini_ml_lib.neural_networks.MLPClassifier.score": {"tf": 1}, "ifri_mini_ml_lib.neural_networks.MLPRegressor.__init__": {"tf": 1}, "ifri_mini_ml_lib.neural_networks.MLPRegressor.fit": {"tf": 1}, "ifri_mini_ml_lib.preprocessing.preparation.MinMaxScaler": {"tf": 1}, "ifri_mini_ml_lib.preprocessing.preparation.MissingValueHandler.impute_regression": {"tf": 1}, "ifri_mini_ml_lib.preprocessing.preparation.CategoricalEncoder.fit": {"tf": 1}, "ifri_mini_ml_lib.regression.SVR.get_kernel": {"tf": 1}}, "df": 26, "l": {"docs": {}, "df": 0, "y": {"docs": {"ifri_mini_ml_lib.association_rules.DataAdapter.convert_to_transactions": {"tf": 1}}, "df": 1}}, "e": {"docs": {"ifri_mini_ml_lib.preprocessing.dimensionality_reduction.PCA.fit_transform": {"tf": 1}, "ifri_mini_ml_lib.preprocessing.dimensionality_reduction.TSNE.fit_transform": {"tf": 1}, "ifri_mini_ml_lib.preprocessing.preparation.MinMaxScaler.fit_transform": {"tf": 1}, "ifri_mini_ml_lib.preprocessing.preparation.CategoricalEncoder": {"tf": 1}, "ifri_mini_ml_lib.preprocessing.preparation.CategoricalEncoder.fit_transform": {"tf": 1}, "ifri_mini_ml_lib.regression.SVR": {"tf": 1}}, "df": 6, "s": {"docs": {"ifri_mini_ml_lib.model_selection.BaggingClassifier": {"tf": 1}, "ifri_mini_ml_lib.model_selection.BaggingRegressor": {"tf": 1}}, "df": 2}, "h": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "t": {"docs": {"ifri_mini_ml_lib.preprocessing.preparation.CategoricalEncoder": {"tf": 1.4142135623730951}}, "df": 1}}}}}, "v": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"ifri_mini_ml_lib.model_selection.RandomSearchCV.fit": {"tf": 1}}, "df": 1, "f": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"ifri_mini_ml_lib.classification.DecisionTree": {"tf": 1}, "ifri_mini_ml_lib.model_selection.GridSearchCV": {"tf": 1}}, "df": 2}}}}}}}}}}, "p": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "l": {"docs": {"ifri_mini_ml_lib.classification.DecisionTree": {"tf": 1}, "ifri_mini_ml_lib.classification.KNN": {"tf": 1.4142135623730951}, "ifri_mini_ml_lib.classification.LogisticRegression": {"tf": 1}, "ifri_mini_ml_lib.classification.LogisticRegression.__init__": {"tf": 1.7320508075688772}, "ifri_mini_ml_lib.classification.LogisticRegression.predict": {"tf": 1}, "ifri_mini_ml_lib.clustering.HierarchicalClustering.__init__": {"tf": 1.7320508075688772}, "ifri_mini_ml_lib.clustering.HierarchicalClustering.fit_predict": {"tf": 1}, "ifri_mini_ml_lib.metrics.bias_evaluation.selection_rate": {"tf": 1}, "ifri_mini_ml_lib.metrics.bias_evaluation.selection_rate_per_group": {"tf": 1}, "ifri_mini_ml_lib.metrics.bias_evaluation.demographic_parity_ratio": {"tf": 1}, "ifri_mini_ml_lib.metrics.bias_evaluation.demographic_parity_difference": {"tf": 1}, "ifri_mini_ml_lib.metrics.evaluation_metrics.confusion_matrix": {"tf": 1}, "ifri_mini_ml_lib.metrics.evaluation_metrics.precision": {"tf": 1}, "ifri_mini_ml_lib.metrics.evaluation_metrics.recall": {"tf": 1}, "ifri_mini_ml_lib.metrics.evaluation_metrics.f1_score": {"tf": 1}, "ifri_mini_ml_lib.model_selection.BaggingClassifier": {"tf": 1.4142135623730951}, "ifri_mini_ml_lib.model_selection.BaggingRegressor": {"tf": 1.4142135623730951}, "ifri_mini_ml_lib.model_selection.RandomSearchCV": {"tf": 2}, "ifri_mini_ml_lib.preprocessing.dimensionality_reduction.TSNE.plot_results": {"tf": 1}, "ifri_mini_ml_lib.preprocessing.preparation.CategoricalEncoder.fit": {"tf": 1}, "ifri_mini_ml_lib.preprocessing.preparation.CategoricalEncoder.fit_transform": {"tf": 1}, "ifri_mini_ml_lib.preprocessing.preparation.DataSplitter.__init__": {"tf": 1.4142135623730951}, "ifri_mini_ml_lib.preprocessing.preparation.DataSplitter.train_test_split": {"tf": 2.23606797749979}, "ifri_mini_ml_lib.preprocessing.preparation.DataSplitter.stratified_train_test_split": {"tf": 2}, "ifri_mini_ml_lib.preprocessing.preparation.DataSplitter.temporal_train_test_split": {"tf": 2}, "ifri_mini_ml_lib.preprocessing.preparation.DataSplitter.k_fold_split": {"tf": 1.4142135623730951}, "ifri_mini_ml_lib.regression.SVR.linear_kernel": {"tf": 1}, "ifri_mini_ml_lib.regression.SVR.polynomial_kernel": {"tf": 1}, "ifri_mini_ml_lib.regression.SVR.rbf_kernel": {"tf": 1}, "ifri_mini_ml_lib.regression.SVR.sigmoid_kernel": {"tf": 1}}, "df": 30, "l": {"docs": {}, "df": 0, "y": {"docs": {"ifri_mini_ml_lib.preprocessing.preparation.DataSplitter.temporal_train_test_split": {"tf": 1}}, "df": 1}}}}, "s": {"docs": {"ifri_mini_ml_lib.preprocessing.preparation.CategoricalEncoder": {"tf": 1}}, "df": 1}}}, "m": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "z": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"ifri_mini_ml_lib.classification.LogisticRegression": {"tf": 1}, "ifri_mini_ml_lib.classification.LogisticRegression.fit": {"tf": 1}, "ifri_mini_ml_lib.model_selection.BayesianSearchCV": {"tf": 1}, "ifri_mini_ml_lib.model_selection.BayesianSearchCV.__init__": {"tf": 1.4142135623730951}, "ifri_mini_ml_lib.model_selection.BayesianSearchCV.fit": {"tf": 1}, "ifri_mini_ml_lib.model_selection.BayesianSearchCV.get_best_params": {"tf": 1}, "ifri_mini_ml_lib.model_selection.GridSearchCV": {"tf": 1}, "ifri_mini_ml_lib.neural_networks.MLPClassifier.__init__": {"tf": 1}, "ifri_mini_ml_lib.neural_networks.MLPRegressor.__init__": {"tf": 1}, "ifri_mini_ml_lib.preprocessing.dimensionality_reduction.TSNE": {"tf": 1}, "ifri_mini_ml_lib.regression.LinearRegression": {"tf": 1}, "ifri_mini_ml_lib.regression.PolynomialRegression": {"tf": 1}, "ifri_mini_ml_lib.regression.SVR": {"tf": 1}, "ifri_mini_ml_lib.regression.SVR.fit": {"tf": 1}}, "df": 14}}}}}, "e": {"docs": {"ifri_mini_ml_lib.model_selection.BayesianSearchCV.__init__": {"tf": 1}, "ifri_mini_ml_lib.model_selection.GridSearchCV": {"tf": 1}, "ifri_mini_ml_lib.model_selection.RandomSearchCV": {"tf": 1}}, "df": 3, "r": {"docs": {"ifri_mini_ml_lib.neural_networks.MLPClassifier.__init__": {"tf": 1}, "ifri_mini_ml_lib.neural_networks.MLPRegressor.__init__": {"tf": 1}}, "df": 2, "s": {"docs": {"ifri_mini_ml_lib.neural_networks.MLPClassifier": {"tf": 1}, "ifri_mini_ml_lib.neural_networks.MLPRegressor": {"tf": 1}}, "df": 2}}}}}, "a": {"docs": {}, "df": 0, "l": {"docs": {"ifri_mini_ml_lib.model_selection.BayesianSearchCV.fit": {"tf": 1}}, "df": 1}}}}}, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "s": {"docs": {"ifri_mini_ml_lib.preprocessing.preparation.CategoricalEncoder.fit_transform": {"tf": 1}}, "df": 1}}}}}}}}}, "u": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "t": {"docs": {"ifri_mini_ml_lib.preprocessing.dimensionality_reduction.TSNE.__init__": {"tf": 1}}, "df": 1, "s": {"docs": {"ifri_mini_ml_lib.classification.LogisticRegression": {"tf": 1}, "ifri_mini_ml_lib.neural_networks.MLPRegressor.fit": {"tf": 1}, "ifri_mini_ml_lib.neural_networks.MLPRegressor.predict": {"tf": 1}, "ifri_mini_ml_lib.neural_networks.MLPRegressor.score": {"tf": 1}}, "df": 4}}}}, "l": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "s": {"docs": {"ifri_mini_ml_lib.clustering.DBSCAN": {"tf": 1}, "ifri_mini_ml_lib.preprocessing.preparation.MinMaxScaler": {"tf": 1}}, "df": 2}}}}}, "c": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "e": {"docs": {"ifri_mini_ml_lib.metrics.bias_evaluation.selection_rate": {"tf": 1}}, "df": 1}}}}}}, "d": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "s": {"docs": {"ifri_mini_ml_lib.metrics.bias_evaluation.equalized_odds_ratio": {"tf": 1}}, "df": 1}}}, "t": {"docs": {}, "df": 0, "h": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"ifri_mini_ml_lib.metrics.evaluation_metrics.calculate_silhouette": {"tf": 1}, "ifri_mini_ml_lib.preprocessing.dimensionality_reduction.TSNE.generate_test_data": {"tf": 1}, "ifri_mini_ml_lib.preprocessing.preparation.MissingValueHandler.impute_regression": {"tf": 1}}, "df": 3}}}}}, "f": {"1": {"docs": {"ifri_mini_ml_lib": {"tf": 1}, "ifri_mini_ml_lib.metrics.evaluation_metrics.f1_score": {"tf": 1.4142135623730951}, "ifri_mini_ml_lib.model_selection.GridSearchCV": {"tf": 1}}, "df": 3}, "docs": {"ifri_mini_ml_lib.association_rules.Apriori": {"tf": 1.7320508075688772}, "ifri_mini_ml_lib.association_rules.Eclat": {"tf": 1.7320508075688772}, "ifri_mini_ml_lib.association_rules.FPGrowth": {"tf": 1.7320508075688772}, "ifri_mini_ml_lib.metrics.evaluation_metrics.calculate_inertia": {"tf": 1}, "ifri_mini_ml_lib.metrics.evaluation_metrics.calculate_silhouette": {"tf": 1}}, "df": 5, "e": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "e": {"docs": {"ifri_mini_ml_lib.classification.LogisticRegression": {"tf": 1}, "ifri_mini_ml_lib.classification.LogisticRegression.fit": {"tf": 1}, "ifri_mini_ml_lib.metrics.bias_evaluation.selection_rate_per_group": {"tf": 1}, "ifri_mini_ml_lib.model_selection.BaggingClassifier.fit": {"tf": 1}, "ifri_mini_ml_lib.model_selection.BaggingClassifier.predict": {"tf": 1}, "ifri_mini_ml_lib.model_selection.BaggingRegressor.fit": {"tf": 1}, "ifri_mini_ml_lib.model_selection.BaggingRegressor.predict": {"tf": 1}, "ifri_mini_ml_lib.model_selection.RandomSearchCV.fit": {"tf": 1}, "ifri_mini_ml_lib.preprocessing.preparation.MinMaxScaler": {"tf": 1}, "ifri_mini_ml_lib.preprocessing.preparation.MinMaxScaler.__init__": {"tf": 2}, "ifri_mini_ml_lib.preprocessing.preparation.StandardScaler": {"tf": 1.7320508075688772}, "ifri_mini_ml_lib.preprocessing.preparation.StandardScaler.fit": {"tf": 1}, "ifri_mini_ml_lib.preprocessing.preparation.DataSplitter.train_test_split": {"tf": 1}, "ifri_mini_ml_lib.preprocessing.preparation.DataSplitter.stratified_train_test_split": {"tf": 1}, "ifri_mini_ml_lib.preprocessing.preparation.DataSplitter.temporal_train_test_split": {"tf": 1}, "ifri_mini_ml_lib.preprocessing.preparation.DataSplitter.k_fold_split": {"tf": 1}}, "df": 16, "s": {"docs": {"ifri_mini_ml_lib": {"tf": 1}, "ifri_mini_ml_lib.classification.DecisionTree.fit": {"tf": 1}, "ifri_mini_ml_lib.classification.DecisionTree.predict": {"tf": 1}, "ifri_mini_ml_lib.classification.KNN.fit": {"tf": 1}, "ifri_mini_ml_lib.classification.KNN.predict": {"tf": 1}, "ifri_mini_ml_lib.classification.LogisticRegression.fit": {"tf": 1.4142135623730951}, "ifri_mini_ml_lib.classification.LogisticRegression.predict_proba": {"tf": 1}, "ifri_mini_ml_lib.classification.LogisticRegression.predict": {"tf": 1}, "ifri_mini_ml_lib.clustering.KMeans.fit": {"tf": 1}, "ifri_mini_ml_lib.clustering.KMeans.predict": {"tf": 1}, "ifri_mini_ml_lib.clustering.DBSCAN.fit_predict": {"tf": 1}, "ifri_mini_ml_lib.clustering.DBSCAN.plot_clusters": {"tf": 1.4142135623730951}, "ifri_mini_ml_lib.clustering.HierarchicalClustering.fit_predict": {"tf": 1}, "ifri_mini_ml_lib.metrics.bias_evaluation.selection_rate_per_group": {"tf": 1}, "ifri_mini_ml_lib.metrics.bias_evaluation.demographic_parity_ratio": {"tf": 1}, "ifri_mini_ml_lib.metrics.bias_evaluation.demographic_parity_difference": {"tf": 1}, "ifri_mini_ml_lib.metrics.bias_evaluation.tpr_fpr_by_group": {"tf": 1}, "ifri_mini_ml_lib.metrics.bias_evaluation.equalized_odds_ratio": {"tf": 1}, "ifri_mini_ml_lib.metrics.bias_evaluation.equalized_odds_difference": {"tf": 1}, "ifri_mini_ml_lib.metrics.evaluation_metrics.calculate_inertia": {"tf": 1.4142135623730951}, "ifri_mini_ml_lib.metrics.evaluation_metrics.calculate_silhouette": {"tf": 1}, "ifri_mini_ml_lib.model_selection.BaggingClassifier.fit": {"tf": 1}, "ifri_mini_ml_lib.model_selection.BaggingClassifier.predict": {"tf": 1}, "ifri_mini_ml_lib.model_selection.BaggingRegressor.fit": {"tf": 1}, "ifri_mini_ml_lib.model_selection.BaggingRegressor.predict": {"tf": 1}, "ifri_mini_ml_lib.model_selection.BayesianSearchCV.fit": {"tf": 1}, "ifri_mini_ml_lib.model_selection.GridSearchCV.fit": {"tf": 1.4142135623730951}, "ifri_mini_ml_lib.neural_networks.MLPClassifier.fit": {"tf": 1}, "ifri_mini_ml_lib.neural_networks.MLPClassifier.predict": {"tf": 1}, "ifri_mini_ml_lib.neural_networks.MLPClassifier.predict_proba": {"tf": 1}, "ifri_mini_ml_lib.neural_networks.MLPClassifier.score": {"tf": 1}, "ifri_mini_ml_lib.neural_networks.MLPRegressor.fit": {"tf": 1}, "ifri_mini_ml_lib.neural_networks.MLPRegressor.predict": {"tf": 1}, "ifri_mini_ml_lib.neural_networks.MLPRegressor.score": {"tf": 1}, "ifri_mini_ml_lib.preprocessing.dimensionality_reduction.PCA": {"tf": 1.4142135623730951}, "ifri_mini_ml_lib.preprocessing.dimensionality_reduction.PCA.fit": {"tf": 1}, "ifri_mini_ml_lib.preprocessing.dimensionality_reduction.PCA.transform": {"tf": 1}, "ifri_mini_ml_lib.preprocessing.dimensionality_reduction.TSNE.fit": {"tf": 1}, "ifri_mini_ml_lib.preprocessing.preparation.MinMaxScaler": {"tf": 1}, "ifri_mini_ml_lib.preprocessing.preparation.MinMaxScaler.fit": {"tf": 1}, "ifri_mini_ml_lib.preprocessing.preparation.MinMaxScaler.transform": {"tf": 1}, "ifri_mini_ml_lib.preprocessing.preparation.CategoricalEncoder.fit": {"tf": 1}, "ifri_mini_ml_lib.preprocessing.preparation.CategoricalEncoder.transform": {"tf": 1}, "ifri_mini_ml_lib.preprocessing.preparation.CategoricalEncoder.fit_transform": {"tf": 1}, "ifri_mini_ml_lib.regression.LinearRegression.fit": {"tf": 1}, "ifri_mini_ml_lib.regression.LinearRegression.predict": {"tf": 1}, "ifri_mini_ml_lib.regression.PolynomialRegression.fit": {"tf": 1}, "ifri_mini_ml_lib.regression.PolynomialRegression.predict": {"tf": 1}, "ifri_mini_ml_lib.regression.SVR.fit": {"tf": 1}, "ifri_mini_ml_lib.regression.SVR.predict": {"tf": 1}}, "df": 50}}}}}}}, "p": {"docs": {"ifri_mini_ml_lib": {"tf": 1}, "ifri_mini_ml_lib.association_rules.FPGrowth": {"tf": 2.6457513110645907}, "ifri_mini_ml_lib.association_rules.FPGrowth.fit": {"tf": 1}}, "df": 3, "g": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "w": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "h": {"docs": {"ifri_mini_ml_lib.association_rules.FPGrowth": {"tf": 1.7320508075688772}}, "df": 1}}}}}}, "r": {"docs": {"ifri_mini_ml_lib.metrics.bias_evaluation.tpr_fpr_by_group": {"tf": 1.4142135623730951}, "ifri_mini_ml_lib.metrics.bias_evaluation.equalized_odds_ratio": {"tf": 1.4142135623730951}, "ifri_mini_ml_lib.metrics.bias_evaluation.equalized_odds_difference": {"tf": 1.4142135623730951}}, "df": 3}}, "o": {"docs": {}, "df": 0, "r": {"docs": {"ifri_mini_ml_lib.association_rules.Apriori": {"tf": 2.23606797749979}, "ifri_mini_ml_lib.association_rules.Apriori.fit": {"tf": 1.4142135623730951}, "ifri_mini_ml_lib.association_rules.Eclat": {"tf": 2.449489742783178}, "ifri_mini_ml_lib.association_rules.Eclat.fit": {"tf": 1.4142135623730951}, "ifri_mini_ml_lib.association_rules.Eclat.get_single_items_TIDset": {"tf": 1}, "ifri_mini_ml_lib.association_rules.FPGrowth": {"tf": 2.449489742783178}, "ifri_mini_ml_lib.association_rules.FPGrowth.fit": {"tf": 1}, "ifri_mini_ml_lib.association_rules.DataAdapter": {"tf": 2}, "ifri_mini_ml_lib.association_rules.DataAdapter.convert_to_transactions": {"tf": 1.4142135623730951}, "ifri_mini_ml_lib.classification.DecisionTree": {"tf": 1}, "ifri_mini_ml_lib.classification.DecisionTree.predict": {"tf": 1}, "ifri_mini_ml_lib.classification.KNN": {"tf": 2.23606797749979}, "ifri_mini_ml_lib.classification.KNN.fit": {"tf": 1}, "ifri_mini_ml_lib.classification.KNN.predict": {"tf": 1.7320508075688772}, "ifri_mini_ml_lib.classification.LogisticRegression": {"tf": 1.4142135623730951}, "ifri_mini_ml_lib.classification.LogisticRegression.__init__": {"tf": 1}, "ifri_mini_ml_lib.classification.LogisticRegression.fit": {"tf": 2}, "ifri_mini_ml_lib.classification.LogisticRegression.predict_proba": {"tf": 1.4142135623730951}, "ifri_mini_ml_lib.classification.LogisticRegression.predict": {"tf": 1.4142135623730951}, "ifri_mini_ml_lib.clustering.KMeans": {"tf": 1.4142135623730951}, "ifri_mini_ml_lib.clustering.KMeans.__init__": {"tf": 1}, "ifri_mini_ml_lib.clustering.KMeans.predict": {"tf": 1.4142135623730951}, "ifri_mini_ml_lib.clustering.KMeans.plot_clusters": {"tf": 1.7320508075688772}, "ifri_mini_ml_lib.clustering.DBSCAN.plot_clusters": {"tf": 1}, "ifri_mini_ml_lib.clustering.HierarchicalClustering": {"tf": 1.4142135623730951}, "ifri_mini_ml_lib.clustering.HierarchicalClustering.__init__": {"tf": 1}, "ifri_mini_ml_lib.clustering.HierarchicalClustering.fit_predict": {"tf": 1}, "ifri_mini_ml_lib.clustering.HierarchicalClustering.plot_dendrogram": {"tf": 1.4142135623730951}, "ifri_mini_ml_lib.clustering.HierarchicalClustering.plot_clusters": {"tf": 1}, "ifri_mini_ml_lib.metrics.bias_evaluation.selection_rate": {"tf": 1}, "ifri_mini_ml_lib.metrics.bias_evaluation.selection_rate_per_group": {"tf": 1.4142135623730951}, "ifri_mini_ml_lib.metrics.bias_evaluation.tpr_fpr_by_group": {"tf": 1}, "ifri_mini_ml_lib.metrics.evaluation_metrics.precision": {"tf": 1}, "ifri_mini_ml_lib.metrics.evaluation_metrics.recall": {"tf": 1}, "ifri_mini_ml_lib.metrics.evaluation_metrics.f1_score": {"tf": 1}, "ifri_mini_ml_lib.metrics.evaluation_metrics.calculate_inertia": {"tf": 1}, "ifri_mini_ml_lib.metrics.evaluation_metrics.calculate_silhouette": {"tf": 1.4142135623730951}, "ifri_mini_ml_lib.model_selection.BaggingClassifier": {"tf": 1.4142135623730951}, "ifri_mini_ml_lib.model_selection.BaggingClassifier.predict": {"tf": 1.4142135623730951}, "ifri_mini_ml_lib.model_selection.BaggingRegressor": {"tf": 1.4142135623730951}, "ifri_mini_ml_lib.model_selection.BaggingRegressor.predict": {"tf": 1.4142135623730951}, "ifri_mini_ml_lib.model_selection.BayesianSearchCV": {"tf": 1.4142135623730951}, "ifri_mini_ml_lib.model_selection.BayesianSearchCV.__init__": {"tf": 1.4142135623730951}, "ifri_mini_ml_lib.model_selection.GridSearchCV": {"tf": 1.4142135623730951}, "ifri_mini_ml_lib.model_selection.GridSearchCV.fit": {"tf": 1}, "ifri_mini_ml_lib.model_selection.RandomSearchCV": {"tf": 1.7320508075688772}, "ifri_mini_ml_lib.neural_networks.MLPClassifier.__init__": {"tf": 2.6457513110645907}, "ifri_mini_ml_lib.neural_networks.MLPClassifier.predict": {"tf": 1.4142135623730951}, "ifri_mini_ml_lib.neural_networks.MLPClassifier.predict_proba": {"tf": 1.7320508075688772}, "ifri_mini_ml_lib.neural_networks.MLPRegressor": {"tf": 1}, "ifri_mini_ml_lib.neural_networks.MLPRegressor.__init__": {"tf": 3}, "ifri_mini_ml_lib.neural_networks.MLPRegressor.predict": {"tf": 1}, "ifri_mini_ml_lib.preprocessing.dimensionality_reduction.PCA": {"tf": 1}, "ifri_mini_ml_lib.preprocessing.dimensionality_reduction.TSNE": {"tf": 1.7320508075688772}, "ifri_mini_ml_lib.preprocessing.dimensionality_reduction.TSNE.generate_test_data": {"tf": 1}, "ifri_mini_ml_lib.preprocessing.dimensionality_reduction.TSNE.plot_results": {"tf": 1.4142135623730951}, "ifri_mini_ml_lib.preprocessing.preparation.MinMaxScaler": {"tf": 1.4142135623730951}, "ifri_mini_ml_lib.preprocessing.preparation.MinMaxScaler.fit": {"tf": 1}, "ifri_mini_ml_lib.preprocessing.preparation.MissingValueHandler.remove_missing": {"tf": 1.4142135623730951}, "ifri_mini_ml_lib.preprocessing.preparation.CategoricalEncoder": {"tf": 2}, "ifri_mini_ml_lib.preprocessing.preparation.CategoricalEncoder.fit": {"tf": 1}, "ifri_mini_ml_lib.preprocessing.preparation.CategoricalEncoder.fit_transform": {"tf": 1}, "ifri_mini_ml_lib.preprocessing.preparation.DataSplitter.__init__": {"tf": 1}, "ifri_mini_ml_lib.preprocessing.preparation.DataSplitter.stratified_train_test_split": {"tf": 1}, "ifri_mini_ml_lib.preprocessing.preparation.DataSplitter.k_fold_split": {"tf": 1.4142135623730951}, "ifri_mini_ml_lib.regression.LinearRegression": {"tf": 1.4142135623730951}, "ifri_mini_ml_lib.regression.PolynomialRegression": {"tf": 1.4142135623730951}, "ifri_mini_ml_lib.regression.SVR": {"tf": 1.4142135623730951}, "ifri_mini_ml_lib.regression.SVR.predict": {"tf": 1}}, "df": 69, "m": {"docs": {"ifri_mini_ml_lib.clustering.KMeans": {"tf": 1}, "ifri_mini_ml_lib.clustering.KMeans.__init__": {"tf": 1}, "ifri_mini_ml_lib.clustering.DBSCAN": {"tf": 1}, "ifri_mini_ml_lib.clustering.DBSCAN.__init__": {"tf": 1}, "ifri_mini_ml_lib.metrics.evaluation_metrics.confusion_matrix": {"tf": 1}}, "df": 5, "a": {"docs": {}, "df": 0, "t": {"docs": {"ifri_mini_ml_lib.model_selection.RandomSearchCV": {"tf": 1}}, "df": 1, "s": {"docs": {"ifri_mini_ml_lib.association_rules.DataAdapter": {"tf": 1}}, "df": 1}}}}}, "l": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "w": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"ifri_mini_ml_lib.association_rules.FPGrowth": {"tf": 1}}, "df": 1}}}}}}, "d": {"docs": {"ifri_mini_ml_lib.model_selection.GridSearchCV": {"tf": 1}, "ifri_mini_ml_lib.model_selection.RandomSearchCV": {"tf": 1.4142135623730951}, "ifri_mini_ml_lib.preprocessing.preparation.DataSplitter.k_fold_split": {"tf": 1}}, "df": 3, "s": {"docs": {"ifri_mini_ml_lib.model_selection.BayesianSearchCV.__init__": {"tf": 1}, "ifri_mini_ml_lib.model_selection.GridSearchCV": {"tf": 1}, "ifri_mini_ml_lib.model_selection.RandomSearchCV": {"tf": 1.4142135623730951}, "ifri_mini_ml_lib.preprocessing.preparation.DataSplitter.k_fold_split": {"tf": 2}}, "df": 4}}}, "u": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "d": {"docs": {"ifri_mini_ml_lib.model_selection.BayesianSearchCV.get_best_params": {"tf": 1}, "ifri_mini_ml_lib.model_selection.RandomSearchCV": {"tf": 1}}, "df": 2}}}}, "l": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {"ifri_mini_ml_lib.association_rules.Apriori": {"tf": 1.4142135623730951}, "ifri_mini_ml_lib.association_rules.Eclat": {"tf": 1.4142135623730951}, "ifri_mini_ml_lib.association_rules.FPGrowth": {"tf": 1.4142135623730951}, "ifri_mini_ml_lib.classification.DecisionTree": {"tf": 1}, "ifri_mini_ml_lib.classification.LogisticRegression": {"tf": 1.7320508075688772}, "ifri_mini_ml_lib.classification.LogisticRegression.__init__": {"tf": 1.4142135623730951}, "ifri_mini_ml_lib.classification.LogisticRegression.predict": {"tf": 1}, "ifri_mini_ml_lib.clustering.KMeans": {"tf": 1}, "ifri_mini_ml_lib.clustering.KMeans.__init__": {"tf": 1}, "ifri_mini_ml_lib.clustering.DBSCAN": {"tf": 1}, "ifri_mini_ml_lib.clustering.DBSCAN.__init__": {"tf": 1}, "ifri_mini_ml_lib.metrics.bias_evaluation.selection_rate": {"tf": 1}, "ifri_mini_ml_lib.metrics.bias_evaluation.selection_rate_per_group": {"tf": 1}, "ifri_mini_ml_lib.metrics.bias_evaluation.demographic_parity_ratio": {"tf": 1}, "ifri_mini_ml_lib.metrics.bias_evaluation.demographic_parity_difference": {"tf": 1}, "ifri_mini_ml_lib.metrics.bias_evaluation.tpr_fpr_by_group": {"tf": 1.4142135623730951}, "ifri_mini_ml_lib.metrics.bias_evaluation.equalized_odds_ratio": {"tf": 1.4142135623730951}, "ifri_mini_ml_lib.metrics.bias_evaluation.equalized_odds_difference": {"tf": 1.4142135623730951}, "ifri_mini_ml_lib.metrics.evaluation_metrics.accuracy": {"tf": 1}, "ifri_mini_ml_lib.metrics.evaluation_metrics.precision": {"tf": 1}, "ifri_mini_ml_lib.metrics.evaluation_metrics.recall": {"tf": 1}, "ifri_mini_ml_lib.metrics.evaluation_metrics.f1_score": {"tf": 1}, "ifri_mini_ml_lib.metrics.evaluation_metrics.calculate_inertia": {"tf": 1}, "ifri_mini_ml_lib.metrics.evaluation_metrics.calculate_silhouette": {"tf": 1}, "ifri_mini_ml_lib.model_selection.RandomSearchCV": {"tf": 1}, "ifri_mini_ml_lib.neural_networks.MLPClassifier.__init__": {"tf": 2.8284271247461903}, "ifri_mini_ml_lib.neural_networks.MLPClassifier.score": {"tf": 1}, "ifri_mini_ml_lib.neural_networks.MLPRegressor.__init__": {"tf": 2.8284271247461903}, "ifri_mini_ml_lib.neural_networks.MLPRegressor.score": {"tf": 1}, "ifri_mini_ml_lib.preprocessing.dimensionality_reduction.TSNE": {"tf": 2}, "ifri_mini_ml_lib.preprocessing.dimensionality_reduction.TSNE.__init__": {"tf": 2}, "ifri_mini_ml_lib.preprocessing.preparation.MissingValueHandler.remove_missing": {"tf": 1}, "ifri_mini_ml_lib.preprocessing.preparation.MissingValueHandler.impute_default": {"tf": 1}, "ifri_mini_ml_lib.preprocessing.preparation.DataSplitter.train_test_split": {"tf": 1.4142135623730951}, "ifri_mini_ml_lib.preprocessing.preparation.DataSplitter.stratified_train_test_split": {"tf": 1.4142135623730951}, "ifri_mini_ml_lib.preprocessing.preparation.DataSplitter.temporal_train_test_split": {"tf": 1.4142135623730951}, "ifri_mini_ml_lib.regression.LinearRegression": {"tf": 1}, "ifri_mini_ml_lib.regression.PolynomialRegression": {"tf": 1}, "ifri_mini_ml_lib.regression.SVR": {"tf": 2.449489742783178}}, "df": 39}}}, "e": {"docs": {}, "df": 0, "x": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "b": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "e": {"docs": {"ifri_mini_ml_lib.preprocessing.preparation.CategoricalEncoder": {"tf": 1}}, "df": 1}}}}}}}, "r": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "m": {"docs": {"ifri_mini_ml_lib.association_rules.Apriori": {"tf": 1}, "ifri_mini_ml_lib.association_rules.Eclat": {"tf": 1}, "ifri_mini_ml_lib.association_rules.FPGrowth": {"tf": 1}, "ifri_mini_ml_lib.association_rules.DataAdapter": {"tf": 2}, "ifri_mini_ml_lib.classification.DecisionTree.fit": {"tf": 1}, "ifri_mini_ml_lib.clustering.KMeans": {"tf": 1}, "ifri_mini_ml_lib.clustering.DBSCAN": {"tf": 1}, "ifri_mini_ml_lib.clustering.HierarchicalClustering": {"tf": 1}, "ifri_mini_ml_lib.metrics.evaluation_metrics.confusion_matrix": {"tf": 1}, "ifri_mini_ml_lib.metrics.evaluation_metrics.calculate_inertia": {"tf": 1}, "ifri_mini_ml_lib.metrics.evaluation_metrics.calculate_silhouette": {"tf": 1}, "ifri_mini_ml_lib.model_selection.BayesianSearchCV.__init__": {"tf": 1.4142135623730951}, "ifri_mini_ml_lib.model_selection.GridSearchCV": {"tf": 1.4142135623730951}, "ifri_mini_ml_lib.model_selection.RandomSearchCV": {"tf": 1.4142135623730951}, "ifri_mini_ml_lib.preprocessing.preparation.MinMaxScaler.fit": {"tf": 1.4142135623730951}, "ifri_mini_ml_lib.preprocessing.preparation.StandardScaler.fit": {"tf": 1}, "ifri_mini_ml_lib.preprocessing.preparation.CategoricalEncoder.fit": {"tf": 1}}, "df": 17}}, "e": {"docs": {}, "df": 0, "q": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "t": {"docs": {"ifri_mini_ml_lib.association_rules.Apriori": {"tf": 2}, "ifri_mini_ml_lib.association_rules.Apriori.fit": {"tf": 1}, "ifri_mini_ml_lib.association_rules.Apriori.get_frequent_itemsets": {"tf": 1.4142135623730951}, "ifri_mini_ml_lib.association_rules.Eclat": {"tf": 2.449489742783178}, "ifri_mini_ml_lib.association_rules.Eclat.fit": {"tf": 1}, "ifri_mini_ml_lib.association_rules.Eclat.get_frequent_itemsets": {"tf": 1.4142135623730951}, "ifri_mini_ml_lib.association_rules.FPGrowth": {"tf": 2.23606797749979}, "ifri_mini_ml_lib.association_rules.FPGrowth.fit": {"tf": 1}, "ifri_mini_ml_lib.association_rules.FPGrowth.get_frequent_itemsets": {"tf": 1.4142135623730951}}, "df": 9, "s": {"docs": {"ifri_mini_ml_lib.association_rules.Apriori": {"tf": 1}, "ifri_mini_ml_lib.association_rules.Eclat": {"tf": 1}, "ifri_mini_ml_lib.association_rules.FPGrowth": {"tf": 1}}, "df": 3}}, "c": {"docs": {}, "df": 0, "y": {"docs": {"ifri_mini_ml_lib.preprocessing.preparation.CategoricalEncoder": {"tf": 1.7320508075688772}}, "df": 1}}}}}}}, "a": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"ifri_mini_ml_lib.metrics.bias_evaluation.selection_rate": {"tf": 1}, "ifri_mini_ml_lib.neural_networks.MLPClassifier.__init__": {"tf": 1.4142135623730951}, "ifri_mini_ml_lib.neural_networks.MLPRegressor.__init__": {"tf": 1.4142135623730951}}, "df": 3}}}}}}}, "i": {"docs": {}, "df": 0, "t": {"docs": {"ifri_mini_ml_lib.association_rules.Apriori": {"tf": 1}, "ifri_mini_ml_lib.association_rules.Eclat": {"tf": 1}, "ifri_mini_ml_lib.association_rules.FPGrowth": {"tf": 1}, "ifri_mini_ml_lib.classification.KNN": {"tf": 1.4142135623730951}, "ifri_mini_ml_lib.classification.LogisticRegression": {"tf": 1}, "ifri_mini_ml_lib.clustering.KMeans": {"tf": 1}, "ifri_mini_ml_lib.clustering.KMeans.fit": {"tf": 1}, "ifri_mini_ml_lib.clustering.KMeans.fit_predict": {"tf": 1.4142135623730951}, "ifri_mini_ml_lib.clustering.DBSCAN": {"tf": 1}, "ifri_mini_ml_lib.clustering.DBSCAN.fit_predict": {"tf": 1}, "ifri_mini_ml_lib.clustering.DBSCAN.plot_clusters": {"tf": 1}, "ifri_mini_ml_lib.clustering.HierarchicalClustering": {"tf": 1}, "ifri_mini_ml_lib.clustering.HierarchicalClustering.plot_dendrogram": {"tf": 1}, "ifri_mini_ml_lib.model_selection.BaggingClassifier": {"tf": 1.4142135623730951}, "ifri_mini_ml_lib.model_selection.BaggingClassifier.fit": {"tf": 1}, "ifri_mini_ml_lib.model_selection.BaggingRegressor": {"tf": 1.4142135623730951}, "ifri_mini_ml_lib.model_selection.BaggingRegressor.fit": {"tf": 1}, "ifri_mini_ml_lib.model_selection.BayesianSearchCV.__init__": {"tf": 1}, "ifri_mini_ml_lib.model_selection.BayesianSearchCV.fit": {"tf": 1}, "ifri_mini_ml_lib.model_selection.GridSearchCV": {"tf": 1}, "ifri_mini_ml_lib.model_selection.GridSearchCV.fit": {"tf": 1}, "ifri_mini_ml_lib.model_selection.RandomSearchCV": {"tf": 1.4142135623730951}, "ifri_mini_ml_lib.model_selection.RandomSearchCV.fit": {"tf": 1}, "ifri_mini_ml_lib.preprocessing.dimensionality_reduction.PCA.fit": {"tf": 1}, "ifri_mini_ml_lib.preprocessing.dimensionality_reduction.PCA.fit_transform": {"tf": 1}, "ifri_mini_ml_lib.preprocessing.dimensionality_reduction.TSNE.fit": {"tf": 1}, "ifri_mini_ml_lib.preprocessing.dimensionality_reduction.TSNE.fit_transform": {"tf": 1}, "ifri_mini_ml_lib.preprocessing.preparation.MinMaxScaler.fit": {"tf": 1.4142135623730951}, "ifri_mini_ml_lib.preprocessing.preparation.MinMaxScaler.transform": {"tf": 1.4142135623730951}, "ifri_mini_ml_lib.preprocessing.preparation.MinMaxScaler.fit_transform": {"tf": 1.7320508075688772}, "ifri_mini_ml_lib.preprocessing.preparation.MinMaxScaler.inverse_transform": {"tf": 1}, "ifri_mini_ml_lib.preprocessing.preparation.StandardScaler.fit": {"tf": 1}, "ifri_mini_ml_lib.preprocessing.preparation.StandardScaler.transform": {"tf": 1}, "ifri_mini_ml_lib.preprocessing.preparation.StandardScaler.fit_transform": {"tf": 1.4142135623730951}, "ifri_mini_ml_lib.preprocessing.preparation.StandardScaler.inverse_transform": {"tf": 1}, "ifri_mini_ml_lib.preprocessing.preparation.CategoricalEncoder.transform": {"tf": 1}, "ifri_mini_ml_lib.preprocessing.preparation.CategoricalEncoder.fit_transform": {"tf": 1.4142135623730951}, "ifri_mini_ml_lib.regression.LinearRegression.fit": {"tf": 1}, "ifri_mini_ml_lib.regression.PolynomialRegression.fit": {"tf": 1}, "ifri_mini_ml_lib.regression.SVR.fit": {"tf": 1}}, "df": 40, "s": {"docs": {"ifri_mini_ml_lib.clustering.KMeans.fit": {"tf": 1}, "ifri_mini_ml_lib.clustering.KMeans.fit_predict": {"tf": 1}, "ifri_mini_ml_lib.metrics.evaluation_metrics.calculate_silhouette": {"tf": 1}, "ifri_mini_ml_lib.preprocessing.preparation.StandardScaler.fit_transform": {"tf": 1}}, "df": 4}, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"ifri_mini_ml_lib.model_selection.BaggingClassifier": {"tf": 1.4142135623730951}, "ifri_mini_ml_lib.model_selection.BaggingRegressor": {"tf": 1.4142135623730951}, "ifri_mini_ml_lib.preprocessing.preparation.MinMaxScaler": {"tf": 1}}, "df": 3}}}, "e": {"docs": {}, "df": 0, "d": {"docs": {"ifri_mini_ml_lib.preprocessing.preparation.MinMaxScaler.fit": {"tf": 1}}, "df": 1}}}}, "r": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "t": {"docs": {"ifri_mini_ml_lib.association_rules.Eclat": {"tf": 1}, "ifri_mini_ml_lib.neural_networks.MLPClassifier.__init__": {"tf": 1}, "ifri_mini_ml_lib.neural_networks.MLPRegressor.__init__": {"tf": 1}, "ifri_mini_ml_lib.preprocessing.preparation.MinMaxScaler.transform": {"tf": 1}, "ifri_mini_ml_lib.preprocessing.preparation.MinMaxScaler.inverse_transform": {"tf": 1}, "ifri_mini_ml_lib.preprocessing.preparation.CategoricalEncoder": {"tf": 1}, "ifri_mini_ml_lib.regression.SVR.linear_kernel": {"tf": 1}, "ifri_mini_ml_lib.regression.SVR.polynomial_kernel": {"tf": 1}, "ifri_mini_ml_lib.regression.SVR.rbf_kernel": {"tf": 1}, "ifri_mini_ml_lib.regression.SVR.sigmoid_kernel": {"tf": 1}}, "df": 10}}}, "l": {"docs": {}, "df": 0, "e": {"docs": {"ifri_mini_ml_lib.association_rules.DataAdapter.load_csv_to_transactions": {"tf": 2.449489742783178}}, "df": 1, "n": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "f": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {"ifri_mini_ml_lib.association_rules.DataAdapter.load_csv_to_transactions": {"tf": 1}}, "df": 1}}}}}}}}}}}}}}}, "n": {"docs": {}, "df": 0, "d": {"docs": {"ifri_mini_ml_lib.model_selection.BayesianSearchCV.fit": {"tf": 1}}, "df": 1, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"ifri_mini_ml_lib.classification.DecisionTree.fit": {"tf": 1}}, "df": 1}}}, "s": {"docs": {"ifri_mini_ml_lib.classification.KNN": {"tf": 1}, "ifri_mini_ml_lib.classification.KNN.predict": {"tf": 1}, "ifri_mini_ml_lib.model_selection.GridSearchCV.fit": {"tf": 1}}, "df": 3}}, "a": {"docs": {}, "df": 0, "l": {"docs": {"ifri_mini_ml_lib.clustering.HierarchicalClustering.plot_dendrogram": {"tf": 1}}, "df": 1}}}}, "a": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "e": {"docs": {"ifri_mini_ml_lib.association_rules.DataAdapter": {"tf": 1}, "ifri_mini_ml_lib.metrics.bias_evaluation.tpr_fpr_by_group": {"tf": 1}, "ifri_mini_ml_lib.metrics.evaluation_metrics.precision": {"tf": 1}, "ifri_mini_ml_lib.metrics.evaluation_metrics.recall": {"tf": 1}, "ifri_mini_ml_lib.model_selection.GridSearchCV": {"tf": 1}, "ifri_mini_ml_lib.model_selection.RandomSearchCV": {"tf": 1}, "ifri_mini_ml_lib.preprocessing.preparation.DataSplitter.train_test_split": {"tf": 1}, "ifri_mini_ml_lib.preprocessing.preparation.DataSplitter.stratified_train_test_split": {"tf": 1.4142135623730951}, "ifri_mini_ml_lib.preprocessing.preparation.DataSplitter.temporal_train_test_split": {"tf": 1}}, "df": 9}}}, "s": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"ifri_mini_ml_lib.classification.LogisticRegression.fit": {"tf": 1}}, "df": 1}}}}, "c": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {"ifri_mini_ml_lib.preprocessing.dimensionality_reduction.TSNE": {"tf": 1}, "ifri_mini_ml_lib.preprocessing.dimensionality_reduction.TSNE.__init__": {"tf": 1}, "ifri_mini_ml_lib.regression.SVR": {"tf": 1}}, "df": 3}}}}}, "u": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"ifri_mini_ml_lib.model_selection.BayesianSearchCV": {"tf": 1}, "ifri_mini_ml_lib.model_selection.BayesianSearchCV.__init__": {"tf": 1}, "ifri_mini_ml_lib.model_selection.GridSearchCV": {"tf": 1}, "ifri_mini_ml_lib.model_selection.RandomSearchCV": {"tf": 1.7320508075688772}, "ifri_mini_ml_lib.neural_networks.MLPClassifier.__init__": {"tf": 1}, "ifri_mini_ml_lib.neural_networks.MLPRegressor.__init__": {"tf": 1}, "ifri_mini_ml_lib.regression.SVR": {"tf": 1}, "ifri_mini_ml_lib.regression.SVR.rbf_kernel": {"tf": 1}, "ifri_mini_ml_lib.regression.SVR.get_kernel": {"tf": 1.7320508075688772}}, "df": 9, "s": {"docs": {"ifri_mini_ml_lib.clustering.KMeans.__init__": {"tf": 1}, "ifri_mini_ml_lib.clustering.KMeans.fit": {"tf": 1}, "ifri_mini_ml_lib.clustering.KMeans.predict": {"tf": 1}, "ifri_mini_ml_lib.clustering.KMeans.fit_predict": {"tf": 1}, "ifri_mini_ml_lib.clustering.KMeans.plot_clusters": {"tf": 1}, "ifri_mini_ml_lib.neural_networks.MLPClassifier": {"tf": 1}, "ifri_mini_ml_lib.neural_networks.MLPRegressor": {"tf": 1}}, "df": 7}, "a": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "y": {"docs": {"ifri_mini_ml_lib.preprocessing.preparation.CategoricalEncoder": {"tf": 1}}, "df": 1}}}}}}}}}}}}}, "d": {"docs": {"ifri_mini_ml_lib.regression.SVR": {"tf": 1}}, "df": 1, "e": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"ifri_mini_ml_lib": {"tf": 1}, "ifri_mini_ml_lib.classification.DecisionTree": {"tf": 1}, "ifri_mini_ml_lib.classification.DecisionTree.fit": {"tf": 2}, "ifri_mini_ml_lib.classification.LogisticRegression.predict": {"tf": 1}}, "df": 4, "t": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "f": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"ifri_mini_ml_lib.model_selection.BaggingClassifier": {"tf": 1}, "ifri_mini_ml_lib.model_selection.RandomSearchCV": {"tf": 1.4142135623730951}}, "df": 2}}}}}}}}}}, "r": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {"ifri_mini_ml_lib.model_selection.BaggingRegressor": {"tf": 1}}, "df": 1}}}}}}}}}}}}}}}}}}, "r": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "e": {"docs": {"ifri_mini_ml_lib.classification.DecisionTree": {"tf": 1.4142135623730951}}, "df": 1}}}}}, "l": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "e": {"docs": {"ifri_mini_ml_lib.clustering.KMeans": {"tf": 1}}, "df": 1}}}}, "a": {"docs": {}, "df": 0, "y": {"docs": {"ifri_mini_ml_lib.neural_networks.MLPClassifier.__init__": {"tf": 1.4142135623730951}, "ifri_mini_ml_lib.neural_networks.MLPRegressor.__init__": {"tf": 1.4142135623730951}}, "df": 2}}}, "t": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "s": {"docs": {"ifri_mini_ml_lib.association_rules.Apriori": {"tf": 1}, "ifri_mini_ml_lib.association_rules.Eclat": {"tf": 1}, "ifri_mini_ml_lib.association_rules.FPGrowth": {"tf": 1}}, "df": 3}}}}, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"ifri_mini_ml_lib.neural_networks.MLPRegressor.score": {"tf": 1}}, "df": 1}}}}}}}}}}}, "p": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "h": {"docs": {"ifri_mini_ml_lib.association_rules.Eclat": {"tf": 1}, "ifri_mini_ml_lib.classification.DecisionTree": {"tf": 1.7320508075688772}, "ifri_mini_ml_lib.classification.DecisionTree.fit": {"tf": 1.4142135623730951}, "ifri_mini_ml_lib.model_selection.RandomSearchCV": {"tf": 1}}, "df": 4}}}, "s": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"ifri_mini_ml_lib.classification.DecisionTree": {"tf": 1}, "ifri_mini_ml_lib.classification.DecisionTree.fit": {"tf": 1}, "ifri_mini_ml_lib.classification.KNN": {"tf": 1}, "ifri_mini_ml_lib.classification.KNN.fit": {"tf": 1}, "ifri_mini_ml_lib.classification.KNN.predict": {"tf": 1}, "ifri_mini_ml_lib.classification.LogisticRegression": {"tf": 1}, "ifri_mini_ml_lib.classification.LogisticRegression.fit": {"tf": 1}, "ifri_mini_ml_lib.classification.LogisticRegression.predict": {"tf": 1}, "ifri_mini_ml_lib.clustering.KMeans": {"tf": 1}, "ifri_mini_ml_lib.clustering.KMeans.__init__": {"tf": 1}, "ifri_mini_ml_lib.clustering.KMeans.fit": {"tf": 1}, "ifri_mini_ml_lib.clustering.KMeans.predict": {"tf": 1}, "ifri_mini_ml_lib.clustering.KMeans.fit_predict": {"tf": 1}, "ifri_mini_ml_lib.clustering.KMeans.plot_clusters": {"tf": 1}, "ifri_mini_ml_lib.clustering.DBSCAN": {"tf": 1}, "ifri_mini_ml_lib.clustering.HierarchicalClustering": {"tf": 1}, "ifri_mini_ml_lib.metrics.bias_evaluation.selection_rate": {"tf": 1}, "ifri_mini_ml_lib.metrics.bias_evaluation.selection_rate_per_group": {"tf": 1}, "ifri_mini_ml_lib.metrics.bias_evaluation.demographic_parity_ratio": {"tf": 1}, "ifri_mini_ml_lib.metrics.bias_evaluation.demographic_parity_difference": {"tf": 1}, "ifri_mini_ml_lib.metrics.bias_evaluation.tpr_fpr_by_group": {"tf": 1}, "ifri_mini_ml_lib.metrics.bias_evaluation.equalized_odds_ratio": {"tf": 1}, "ifri_mini_ml_lib.metrics.bias_evaluation.equalized_odds_difference": {"tf": 1}, "ifri_mini_ml_lib.model_selection.BaggingClassifier": {"tf": 1}, "ifri_mini_ml_lib.model_selection.BaggingClassifier.fit": {"tf": 1}, "ifri_mini_ml_lib.model_selection.BaggingClassifier.predict": {"tf": 1}, "ifri_mini_ml_lib.model_selection.BaggingRegressor": {"tf": 1}, "ifri_mini_ml_lib.model_selection.BaggingRegressor.fit": {"tf": 1}, "ifri_mini_ml_lib.model_selection.BaggingRegressor.predict": {"tf": 1}, "ifri_mini_ml_lib.model_selection.BayesianSearchCV.__init__": {"tf": 1}, "ifri_mini_ml_lib.model_selection.BayesianSearchCV.fit": {"tf": 1}, "ifri_mini_ml_lib.model_selection.BayesianSearchCV.get_best_params": {"tf": 1}, "ifri_mini_ml_lib.model_selection.GridSearchCV.fit": {"tf": 1}, "ifri_mini_ml_lib.model_selection.RandomSearchCV": {"tf": 1}, "ifri_mini_ml_lib.model_selection.RandomSearchCV.fit": {"tf": 1}, "ifri_mini_ml_lib.preprocessing.dimensionality_reduction.PCA.__init__": {"tf": 1}, "ifri_mini_ml_lib.preprocessing.dimensionality_reduction.PCA.fit": {"tf": 1}, "ifri_mini_ml_lib.preprocessing.dimensionality_reduction.PCA.transform": {"tf": 1}, "ifri_mini_ml_lib.preprocessing.dimensionality_reduction.PCA.fit_transform": {"tf": 1}, "ifri_mini_ml_lib.preprocessing.dimensionality_reduction.PCA.plot_cov_matrix": {"tf": 1}, "ifri_mini_ml_lib.preprocessing.dimensionality_reduction.PCA.explained_variances": {"tf": 1}, "ifri_mini_ml_lib.preprocessing.dimensionality_reduction.PCA.explained_variances_ratio": {"tf": 1}, "ifri_mini_ml_lib.preprocessing.dimensionality_reduction.PCA.plot_cumulative_explained_variance_ratio": {"tf": 1}, "ifri_mini_ml_lib.preprocessing.dimensionality_reduction.TSNE.__init__": {"tf": 1}, "ifri_mini_ml_lib.preprocessing.dimensionality_reduction.TSNE.fit": {"tf": 1}, "ifri_mini_ml_lib.preprocessing.dimensionality_reduction.TSNE.fit_transform": {"tf": 1}, "ifri_mini_ml_lib.preprocessing.dimensionality_reduction.TSNE.generate_test_data": {"tf": 1}, "ifri_mini_ml_lib.preprocessing.dimensionality_reduction.TSNE.plot_results": {"tf": 1}, "ifri_mini_ml_lib.preprocessing.preparation.MissingValueHandler.remove_missing": {"tf": 1}, "ifri_mini_ml_lib.preprocessing.preparation.MissingValueHandler.impute_statistical": {"tf": 1}, "ifri_mini_ml_lib.preprocessing.preparation.MissingValueHandler.impute_default": {"tf": 1}, "ifri_mini_ml_lib.preprocessing.preparation.MissingValueHandler.impute_knn": {"tf": 1}, "ifri_mini_ml_lib.preprocessing.preparation.MissingValueHandler.impute_regression": {"tf": 1}, "ifri_mini_ml_lib.preprocessing.preparation.StandardScaler": {"tf": 1}, "ifri_mini_ml_lib.preprocessing.preparation.StandardScaler.__init__": {"tf": 1}, "ifri_mini_ml_lib.preprocessing.preparation.StandardScaler.fit": {"tf": 1}, "ifri_mini_ml_lib.preprocessing.preparation.StandardScaler.transform": {"tf": 1}, "ifri_mini_ml_lib.preprocessing.preparation.StandardScaler.fit_transform": {"tf": 1}, "ifri_mini_ml_lib.preprocessing.preparation.StandardScaler.inverse_transform": {"tf": 1}, "ifri_mini_ml_lib.preprocessing.preparation.CategoricalEncoder": {"tf": 1}, "ifri_mini_ml_lib.preprocessing.preparation.CategoricalEncoder.fit": {"tf": 1}, "ifri_mini_ml_lib.preprocessing.preparation.CategoricalEncoder.transform": {"tf": 1}, "ifri_mini_ml_lib.preprocessing.preparation.CategoricalEncoder.fit_transform": {"tf": 1}}, "df": 63}}}}}}}, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "t": {"docs": {"ifri_mini_ml_lib.classification.LogisticRegression": {"tf": 1.7320508075688772}, "ifri_mini_ml_lib.classification.LogisticRegression.__init__": {"tf": 1}, "ifri_mini_ml_lib.classification.LogisticRegression.fit": {"tf": 1}, "ifri_mini_ml_lib.preprocessing.dimensionality_reduction.TSNE": {"tf": 1}, "ifri_mini_ml_lib.regression.LinearRegression": {"tf": 1.7320508075688772}, "ifri_mini_ml_lib.regression.PolynomialRegression": {"tf": 1.7320508075688772}}, "df": 6}}}}, "i": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "d": {"docs": {"ifri_mini_ml_lib.clustering.HierarchicalClustering": {"tf": 1}, "ifri_mini_ml_lib.clustering.HierarchicalClustering.__init__": {"tf": 1}, "ifri_mini_ml_lib.preprocessing.preparation.MinMaxScaler.__init__": {"tf": 1.4142135623730951}}, "df": 3}}}}}, "f": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "t": {"docs": {"ifri_mini_ml_lib.classification.KNN": {"tf": 1.4142135623730951}, "ifri_mini_ml_lib.classification.LogisticRegression.__init__": {"tf": 1.7320508075688772}, "ifri_mini_ml_lib.classification.LogisticRegression.predict": {"tf": 1}, "ifri_mini_ml_lib.clustering.KMeans.__init__": {"tf": 2.23606797749979}, "ifri_mini_ml_lib.metrics.bias_evaluation.selection_rate": {"tf": 1}, "ifri_mini_ml_lib.metrics.evaluation_metrics.precision": {"tf": 1}, "ifri_mini_ml_lib.metrics.evaluation_metrics.recall": {"tf": 1}, "ifri_mini_ml_lib.metrics.evaluation_metrics.f1_score": {"tf": 1}, "ifri_mini_ml_lib.model_selection.BaggingClassifier": {"tf": 1.4142135623730951}, "ifri_mini_ml_lib.model_selection.BaggingRegressor": {"tf": 1.4142135623730951}, "ifri_mini_ml_lib.model_selection.BayesianSearchCV.__init__": {"tf": 2.23606797749979}, "ifri_mini_ml_lib.model_selection.GridSearchCV": {"tf": 1.4142135623730951}, "ifri_mini_ml_lib.model_selection.RandomSearchCV": {"tf": 1.7320508075688772}, "ifri_mini_ml_lib.preprocessing.dimensionality_reduction.TSNE.__init__": {"tf": 3}, "ifri_mini_ml_lib.preprocessing.dimensionality_reduction.TSNE.generate_test_data": {"tf": 1.7320508075688772}, "ifri_mini_ml_lib.preprocessing.preparation.MinMaxScaler": {"tf": 1}, "ifri_mini_ml_lib.preprocessing.preparation.MinMaxScaler.__init__": {"tf": 1}, "ifri_mini_ml_lib.preprocessing.preparation.MissingValueHandler": {"tf": 1}, "ifri_mini_ml_lib.preprocessing.preparation.MissingValueHandler.impute_default": {"tf": 1}, "ifri_mini_ml_lib.preprocessing.preparation.StandardScaler.__init__": {"tf": 1}, "ifri_mini_ml_lib.preprocessing.preparation.CategoricalEncoder": {"tf": 1.4142135623730951}, "ifri_mini_ml_lib.regression.LinearRegression": {"tf": 1.4142135623730951}, "ifri_mini_ml_lib.regression.PolynomialRegression": {"tf": 1.7320508075688772}, "ifri_mini_ml_lib.regression.SVR": {"tf": 2.23606797749979}}, "df": 24, "s": {"docs": {"ifri_mini_ml_lib.classification.DecisionTree": {"tf": 2}, "ifri_mini_ml_lib.preprocessing.preparation.DataSplitter.__init__": {"tf": 1}, "ifri_mini_ml_lib.preprocessing.preparation.DataSplitter.train_test_split": {"tf": 2}, "ifri_mini_ml_lib.preprocessing.preparation.DataSplitter.stratified_train_test_split": {"tf": 1.7320508075688772}, "ifri_mini_ml_lib.preprocessing.preparation.DataSplitter.temporal_train_test_split": {"tf": 1.7320508075688772}, "ifri_mini_ml_lib.preprocessing.preparation.DataSplitter.k_fold_split": {"tf": 1.4142135623730951}}, "df": 6}}}}}, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "d": {"docs": {"ifri_mini_ml_lib.clustering.DBSCAN": {"tf": 1}}, "df": 1}}}}}, "n": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "y": {"docs": {"ifri_mini_ml_lib.clustering.DBSCAN": {"tf": 1.4142135623730951}, "ifri_mini_ml_lib.metrics.evaluation_metrics.calculate_inertia": {"tf": 1}}, "df": 2}}}}, "d": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "m": {"docs": {"ifri_mini_ml_lib.clustering.HierarchicalClustering.plot_dendrogram": {"tf": 1.4142135623730951}}, "df": 1}}}}}}}}, "m": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "h": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "c": {"docs": {"ifri_mini_ml_lib.metrics.bias_evaluation.demographic_parity_ratio": {"tf": 1.4142135623730951}, "ifri_mini_ml_lib.metrics.bias_evaluation.demographic_parity_difference": {"tf": 1}}, "df": 2}}}}}}}}}, "v": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"ifri_mini_ml_lib.preprocessing.dimensionality_reduction.PCA": {"tf": 1}, "ifri_mini_ml_lib.preprocessing.preparation.StandardScaler": {"tf": 1.4142135623730951}, "ifri_mini_ml_lib.preprocessing.preparation.StandardScaler.fit": {"tf": 1}}, "df": 3}}}}}}}, "l": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"ifri_mini_ml_lib.preprocessing.preparation.MissingValueHandler": {"tf": 1}, "ifri_mini_ml_lib.preprocessing.preparation.MissingValueHandler.remove_missing": {"tf": 1.4142135623730951}}, "df": 2}}}}}}, "g": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "e": {"docs": {"ifri_mini_ml_lib.regression.PolynomialRegression": {"tf": 1.4142135623730951}, "ifri_mini_ml_lib.regression.PolynomialRegression.fit": {"tf": 1}, "ifri_mini_ml_lib.regression.SVR": {"tf": 1}}, "df": 3}}}}}, "b": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "n": {"docs": {"ifri_mini_ml_lib": {"tf": 1}, "ifri_mini_ml_lib.clustering.DBSCAN": {"tf": 2.449489742783178}, "ifri_mini_ml_lib.clustering.DBSCAN.__init__": {"tf": 1.7320508075688772}, "ifri_mini_ml_lib.clustering.DBSCAN.fit_predict": {"tf": 1.4142135623730951}, "ifri_mini_ml_lib.clustering.DBSCAN.plot_clusters": {"tf": 1}}, "df": 5}}}}}, "i": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "v": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"ifri_mini_ml_lib.association_rules.Apriori": {"tf": 1}}, "df": 1, "e": {"docs": {}, "df": 0, "d": {"docs": {"ifri_mini_ml_lib.association_rules.Apriori.get_frequent_itemsets": {"tf": 1}, "ifri_mini_ml_lib.association_rules.Eclat.get_frequent_itemsets": {"tf": 1}, "ifri_mini_ml_lib.association_rules.FPGrowth.get_frequent_itemsets": {"tf": 1}}, "df": 3}}}}}}}, "p": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "y": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"ifri_mini_ml_lib.association_rules.Apriori": {"tf": 1.4142135623730951}, "ifri_mini_ml_lib.association_rules.Eclat": {"tf": 1.4142135623730951}, "ifri_mini_ml_lib.association_rules.FPGrowth": {"tf": 1}}, "df": 3}}}, "s": {"docs": {"ifri_mini_ml_lib.preprocessing.dimensionality_reduction.PCA.plot_cov_matrix": {"tf": 1}, "ifri_mini_ml_lib.preprocessing.dimensionality_reduction.PCA.plot_cumulative_explained_variance_ratio": {"tf": 1}}, "df": 2}}}}}, "t": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {"ifri_mini_ml_lib.clustering.KMeans": {"tf": 1}, "ifri_mini_ml_lib.clustering.KMeans.predict": {"tf": 1}, "ifri_mini_ml_lib.metrics.evaluation_metrics.calculate_inertia": {"tf": 1}}, "df": 3}}}}}, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "t": {"docs": {"ifri_mini_ml_lib.clustering.KMeans.plot_clusters": {"tf": 1}}, "df": 1}}}}, "r": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "b": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "d": {"docs": {"ifri_mini_ml_lib.preprocessing.dimensionality_reduction.TSNE": {"tf": 1}}, "df": 1}}, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"ifri_mini_ml_lib.preprocessing.preparation.DataSplitter.stratified_train_test_split": {"tf": 1}}, "df": 1}}}}}}}}}}, "c": {"docs": {}, "df": 0, "t": {"docs": {"ifri_mini_ml_lib.association_rules.Apriori.get_frequent_itemsets": {"tf": 1}, "ifri_mini_ml_lib.association_rules.Eclat.get_frequent_itemsets": {"tf": 1}, "ifri_mini_ml_lib.classification.DecisionTree.fit": {"tf": 1}, "ifri_mini_ml_lib.metrics.evaluation_metrics.confusion_matrix": {"tf": 1}, "ifri_mini_ml_lib.model_selection.BayesianSearchCV.get_best_params": {"tf": 1}, "ifri_mini_ml_lib.model_selection.RandomSearchCV": {"tf": 1.4142135623730951}, "ifri_mini_ml_lib.regression.SVR.set_params": {"tf": 1}}, "df": 7, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "y": {"docs": {"ifri_mini_ml_lib.association_rules.Apriori.get_frequent_itemsets": {"tf": 1}, "ifri_mini_ml_lib.association_rules.Eclat.get_frequent_itemsets": {"tf": 1}, "ifri_mini_ml_lib.metrics.bias_evaluation.selection_rate_per_group": {"tf": 1}, "ifri_mini_ml_lib.metrics.evaluation_metrics.confusion_matrix": {"tf": 1}, "ifri_mini_ml_lib.model_selection.BayesianSearchCV.__init__": {"tf": 1}, "ifri_mini_ml_lib.model_selection.BayesianSearchCV.get_best_params": {"tf": 1}, "ifri_mini_ml_lib.model_selection.GridSearchCV": {"tf": 1}, "ifri_mini_ml_lib.model_selection.RandomSearchCV": {"tf": 1}, "ifri_mini_ml_lib.regression.SVR.set_params": {"tf": 1}}, "df": 9}}}}}}, "[": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "y": {"docs": {"ifri_mini_ml_lib.metrics.bias_evaluation.selection_rate_per_group": {"tf": 1}, "ifri_mini_ml_lib.metrics.bias_evaluation.demographic_parity_ratio": {"tf": 1}, "ifri_mini_ml_lib.metrics.bias_evaluation.demographic_parity_difference": {"tf": 1}, "ifri_mini_ml_lib.metrics.bias_evaluation.tpr_fpr_by_group": {"tf": 1}, "ifri_mini_ml_lib.metrics.bias_evaluation.equalized_odds_ratio": {"tf": 1.4142135623730951}, "ifri_mini_ml_lib.metrics.bias_evaluation.equalized_odds_difference": {"tf": 1.4142135623730951}}, "df": 6}}}}}}, "f": {"docs": {}, "df": 0, "f": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "t": {"docs": {"ifri_mini_ml_lib.association_rules.DataAdapter": {"tf": 1}, "ifri_mini_ml_lib.association_rules.DataAdapter.convert_to_transactions": {"tf": 1}, "ifri_mini_ml_lib.model_selection.BaggingRegressor": {"tf": 1}, "ifri_mini_ml_lib.model_selection.GridSearchCV": {"tf": 1}, "ifri_mini_ml_lib.neural_networks.MLPClassifier": {"tf": 1}}, "df": 5, "l": {"docs": {}, "df": 0, "y": {"docs": {"ifri_mini_ml_lib.clustering.HierarchicalClustering.plot_dendrogram": {"tf": 1}}, "df": 1}}}, "c": {"docs": {}, "df": 0, "e": {"docs": {"ifri_mini_ml_lib.metrics.bias_evaluation.demographic_parity_difference": {"tf": 1.4142135623730951}, "ifri_mini_ml_lib.metrics.bias_evaluation.equalized_odds_difference": {"tf": 1.4142135623730951}}, "df": 2}}}}}}}}, "a": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"ifri_mini_ml_lib.association_rules.DataAdapter": {"tf": 1.7320508075688772}}, "df": 1}}}}, "r": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "y": {"docs": {"ifri_mini_ml_lib.association_rules.DataAdapter.load_csv_to_transactions": {"tf": 1}}, "df": 1}}}}}}, "m": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"ifri_mini_ml_lib.preprocessing.dimensionality_reduction.TSNE": {"tf": 1}, "ifri_mini_ml_lib.preprocessing.dimensionality_reduction.TSNE.__init__": {"tf": 1}}, "df": 2, "s": {"docs": {"ifri_mini_ml_lib.clustering.KMeans.plot_clusters": {"tf": 1}, "ifri_mini_ml_lib.clustering.HierarchicalClustering.plot_clusters": {"tf": 1}}, "df": 2}, "a": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "y": {"docs": {"ifri_mini_ml_lib.clustering.KMeans.plot_clusters": {"tf": 1}, "ifri_mini_ml_lib.preprocessing.dimensionality_reduction.PCA": {"tf": 1}, "ifri_mini_ml_lib.preprocessing.dimensionality_reduction.TSNE": {"tf": 1}}, "df": 3}}}}}}}}}}}}, "v": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "v": {"docs": {}, "df": 0, "e": {"docs": {"ifri_mini_ml_lib.clustering.HierarchicalClustering": {"tf": 1.7320508075688772}, "ifri_mini_ml_lib.clustering.HierarchicalClustering.__init__": {"tf": 1.4142135623730951}, "ifri_mini_ml_lib.clustering.HierarchicalClustering.fit_predict": {"tf": 1}}, "df": 3}}, "o": {"docs": {}, "df": 0, "n": {"docs": {"ifri_mini_ml_lib.neural_networks.MLPClassifier.__init__": {"tf": 1}, "ifri_mini_ml_lib.neural_networks.MLPRegressor.__init__": {"tf": 1}}, "df": 2}}}}}, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "e": {"docs": {"ifri_mini_ml_lib.preprocessing.dimensionality_reduction.TSNE": {"tf": 1.4142135623730951}}, "df": 1}}}}}}}}}, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "a": {"docs": {"ifri_mini_ml_lib.association_rules.Apriori.fit": {"tf": 1}, "ifri_mini_ml_lib.association_rules.FPGrowth": {"tf": 2}, "ifri_mini_ml_lib.association_rules.DataAdapter": {"tf": 2.23606797749979}, "ifri_mini_ml_lib.association_rules.DataAdapter.convert_to_transactions": {"tf": 2.23606797749979}, "ifri_mini_ml_lib.classification.DecisionTree.fit": {"tf": 1.4142135623730951}, "ifri_mini_ml_lib.classification.KNN": {"tf": 1}, "ifri_mini_ml_lib.classification.KNN.fit": {"tf": 1}, "ifri_mini_ml_lib.classification.KNN.predict": {"tf": 1}, "ifri_mini_ml_lib.classification.LogisticRegression.fit": {"tf": 1.7320508075688772}, "ifri_mini_ml_lib.classification.LogisticRegression.predict_proba": {"tf": 1}, "ifri_mini_ml_lib.classification.LogisticRegression.predict": {"tf": 1}, "ifri_mini_ml_lib.clustering.KMeans": {"tf": 1}, "ifri_mini_ml_lib.clustering.KMeans.fit": {"tf": 1.4142135623730951}, "ifri_mini_ml_lib.clustering.KMeans.predict": {"tf": 1}, "ifri_mini_ml_lib.clustering.KMeans.fit_predict": {"tf": 1}, "ifri_mini_ml_lib.clustering.KMeans.plot_clusters": {"tf": 1.7320508075688772}, "ifri_mini_ml_lib.clustering.DBSCAN": {"tf": 1.4142135623730951}, "ifri_mini_ml_lib.clustering.DBSCAN.fit_predict": {"tf": 2}, "ifri_mini_ml_lib.clustering.DBSCAN.plot_clusters": {"tf": 2.23606797749979}, "ifri_mini_ml_lib.clustering.HierarchicalClustering": {"tf": 1.4142135623730951}, "ifri_mini_ml_lib.clustering.HierarchicalClustering.fit_predict": {"tf": 1.7320508075688772}, "ifri_mini_ml_lib.clustering.HierarchicalClustering.plot_dendrogram": {"tf": 1.7320508075688772}, "ifri_mini_ml_lib.clustering.HierarchicalClustering.plot_clusters": {"tf": 2.23606797749979}, "ifri_mini_ml_lib.metrics.evaluation_metrics.confusion_matrix": {"tf": 1}, "ifri_mini_ml_lib.metrics.evaluation_metrics.calculate_inertia": {"tf": 2.23606797749979}, "ifri_mini_ml_lib.metrics.evaluation_metrics.calculate_silhouette": {"tf": 2.23606797749979}, "ifri_mini_ml_lib.model_selection.BaggingClassifier.fit": {"tf": 1}, "ifri_mini_ml_lib.model_selection.BaggingRegressor.fit": {"tf": 1}, "ifri_mini_ml_lib.model_selection.BayesianSearchCV.fit": {"tf": 1}, "ifri_mini_ml_lib.model_selection.GridSearchCV.fit": {"tf": 1}, "ifri_mini_ml_lib.neural_networks.MLPClassifier.__init__": {"tf": 1.4142135623730951}, "ifri_mini_ml_lib.neural_networks.MLPClassifier.fit": {"tf": 1.4142135623730951}, "ifri_mini_ml_lib.neural_networks.MLPClassifier.predict": {"tf": 1}, "ifri_mini_ml_lib.neural_networks.MLPClassifier.predict_proba": {"tf": 1}, "ifri_mini_ml_lib.neural_networks.MLPClassifier.score": {"tf": 1.4142135623730951}, "ifri_mini_ml_lib.neural_networks.MLPRegressor.__init__": {"tf": 1.4142135623730951}, "ifri_mini_ml_lib.neural_networks.MLPRegressor.fit": {"tf": 1.4142135623730951}, "ifri_mini_ml_lib.neural_networks.MLPRegressor.predict": {"tf": 1}, "ifri_mini_ml_lib.neural_networks.MLPRegressor.score": {"tf": 1}, "ifri_mini_ml_lib.preprocessing.dimensionality_reduction.PCA.fit": {"tf": 1.7320508075688772}, "ifri_mini_ml_lib.preprocessing.dimensionality_reduction.PCA.transform": {"tf": 2.449489742783178}, "ifri_mini_ml_lib.preprocessing.dimensionality_reduction.PCA.fit_transform": {"tf": 1.7320508075688772}, "ifri_mini_ml_lib.preprocessing.dimensionality_reduction.TSNE": {"tf": 1}, "ifri_mini_ml_lib.preprocessing.dimensionality_reduction.TSNE.fit": {"tf": 1.7320508075688772}, "ifri_mini_ml_lib.preprocessing.dimensionality_reduction.TSNE.fit_transform": {"tf": 2}, "ifri_mini_ml_lib.preprocessing.dimensionality_reduction.TSNE.generate_test_data": {"tf": 2}, "ifri_mini_ml_lib.preprocessing.dimensionality_reduction.TSNE.plot_results": {"tf": 1}, "ifri_mini_ml_lib.preprocessing.preparation.MinMaxScaler": {"tf": 1}, "ifri_mini_ml_lib.preprocessing.preparation.MinMaxScaler.__init__": {"tf": 1}, "ifri_mini_ml_lib.preprocessing.preparation.MinMaxScaler.fit": {"tf": 1.7320508075688772}, "ifri_mini_ml_lib.preprocessing.preparation.MinMaxScaler.transform": {"tf": 2.23606797749979}, "ifri_mini_ml_lib.preprocessing.preparation.MinMaxScaler.fit_transform": {"tf": 2.23606797749979}, "ifri_mini_ml_lib.preprocessing.preparation.MinMaxScaler.inverse_transform": {"tf": 2.23606797749979}, "ifri_mini_ml_lib.preprocessing.preparation.MissingValueHandler.remove_missing": {"tf": 1.4142135623730951}, "ifri_mini_ml_lib.preprocessing.preparation.MissingValueHandler.impute_statistical": {"tf": 1.4142135623730951}, "ifri_mini_ml_lib.preprocessing.preparation.MissingValueHandler.impute_default": {"tf": 1.4142135623730951}, "ifri_mini_ml_lib.preprocessing.preparation.MissingValueHandler.impute_knn": {"tf": 1.4142135623730951}, "ifri_mini_ml_lib.preprocessing.preparation.MissingValueHandler.impute_regression": {"tf": 1.4142135623730951}, "ifri_mini_ml_lib.preprocessing.preparation.StandardScaler": {"tf": 1.7320508075688772}, "ifri_mini_ml_lib.preprocessing.preparation.StandardScaler.fit": {"tf": 1.7320508075688772}, "ifri_mini_ml_lib.preprocessing.preparation.StandardScaler.transform": {"tf": 2}, "ifri_mini_ml_lib.preprocessing.preparation.StandardScaler.fit_transform": {"tf": 2}, "ifri_mini_ml_lib.preprocessing.preparation.StandardScaler.inverse_transform": {"tf": 2}, "ifri_mini_ml_lib.preprocessing.preparation.CategoricalEncoder.fit": {"tf": 1.7320508075688772}, "ifri_mini_ml_lib.preprocessing.preparation.CategoricalEncoder.transform": {"tf": 2}, "ifri_mini_ml_lib.preprocessing.preparation.CategoricalEncoder.fit_transform": {"tf": 1.7320508075688772}, "ifri_mini_ml_lib.preprocessing.preparation.DataSplitter.train_test_split": {"tf": 1.7320508075688772}, "ifri_mini_ml_lib.preprocessing.preparation.DataSplitter.stratified_train_test_split": {"tf": 1.7320508075688772}, "ifri_mini_ml_lib.preprocessing.preparation.DataSplitter.temporal_train_test_split": {"tf": 1.7320508075688772}, "ifri_mini_ml_lib.preprocessing.preparation.DataSplitter.k_fold_split": {"tf": 1.4142135623730951}, "ifri_mini_ml_lib.regression.LinearRegression.fit": {"tf": 1}, "ifri_mini_ml_lib.regression.LinearRegression.predict": {"tf": 1}, "ifri_mini_ml_lib.regression.PolynomialRegression.fit": {"tf": 1}, "ifri_mini_ml_lib.regression.PolynomialRegression.predict": {"tf": 1}, "ifri_mini_ml_lib.regression.SVR.predict": {"tf": 1}}, "df": 75, "s": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "t": {"docs": {"ifri_mini_ml_lib.classification.KNN.fit": {"tf": 1}, "ifri_mini_ml_lib.clustering.HierarchicalClustering.plot_dendrogram": {"tf": 1}, "ifri_mini_ml_lib.model_selection.RandomSearchCV.fit": {"tf": 1}, "ifri_mini_ml_lib.preprocessing.preparation.CategoricalEncoder": {"tf": 1}, "ifri_mini_ml_lib.preprocessing.preparation.DataSplitter.train_test_split": {"tf": 1}, "ifri_mini_ml_lib.preprocessing.preparation.DataSplitter.stratified_train_test_split": {"tf": 1}, "ifri_mini_ml_lib.preprocessing.preparation.DataSplitter.temporal_train_test_split": {"tf": 1}, "ifri_mini_ml_lib.regression.SVR": {"tf": 1}}, "df": 8, "s": {"docs": {"ifri_mini_ml_lib.association_rules.Apriori": {"tf": 1}, "ifri_mini_ml_lib.association_rules.Eclat": {"tf": 1}, "ifri_mini_ml_lib.preprocessing.preparation.MissingValueHandler": {"tf": 1}}, "df": 3}}}, "p": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"ifri_mini_ml_lib.preprocessing.preparation.DataSplitter.__init__": {"tf": 1}, "ifri_mini_ml_lib.preprocessing.preparation.DataSplitter.train_test_split": {"tf": 1}, "ifri_mini_ml_lib.preprocessing.preparation.DataSplitter.stratified_train_test_split": {"tf": 1}, "ifri_mini_ml_lib.preprocessing.preparation.DataSplitter.temporal_train_test_split": {"tf": 1}, "ifri_mini_ml_lib.preprocessing.preparation.DataSplitter.k_fold_split": {"tf": 1}}, "df": 5}}}}}}}}, "b": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "e": {"docs": {"ifri_mini_ml_lib.association_rules.Eclat": {"tf": 1}}, "df": 1}}}}, "f": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "e": {"docs": {"ifri_mini_ml_lib.association_rules.DataAdapter": {"tf": 2}, "ifri_mini_ml_lib.association_rules.DataAdapter.convert_to_transactions": {"tf": 1.4142135623730951}, "ifri_mini_ml_lib.preprocessing.preparation.MinMaxScaler.fit": {"tf": 1}, "ifri_mini_ml_lib.preprocessing.preparation.MinMaxScaler.transform": {"tf": 1}, "ifri_mini_ml_lib.preprocessing.preparation.MissingValueHandler.remove_missing": {"tf": 1.4142135623730951}, "ifri_mini_ml_lib.preprocessing.preparation.MissingValueHandler.impute_statistical": {"tf": 1.4142135623730951}, "ifri_mini_ml_lib.preprocessing.preparation.MissingValueHandler.impute_default": {"tf": 1.4142135623730951}, "ifri_mini_ml_lib.preprocessing.preparation.MissingValueHandler.impute_knn": {"tf": 1.4142135623730951}, "ifri_mini_ml_lib.preprocessing.preparation.MissingValueHandler.impute_regression": {"tf": 1.7320508075688772}, "ifri_mini_ml_lib.preprocessing.preparation.StandardScaler": {"tf": 1.7320508075688772}, "ifri_mini_ml_lib.preprocessing.preparation.StandardScaler.fit": {"tf": 1}, "ifri_mini_ml_lib.preprocessing.preparation.StandardScaler.transform": {"tf": 1.4142135623730951}, "ifri_mini_ml_lib.preprocessing.preparation.StandardScaler.fit_transform": {"tf": 1.4142135623730951}, "ifri_mini_ml_lib.preprocessing.preparation.StandardScaler.inverse_transform": {"tf": 1.4142135623730951}, "ifri_mini_ml_lib.preprocessing.preparation.CategoricalEncoder.fit": {"tf": 1}, "ifri_mini_ml_lib.preprocessing.preparation.CategoricalEncoder.transform": {"tf": 1.4142135623730951}, "ifri_mini_ml_lib.preprocessing.preparation.CategoricalEncoder.fit_transform": {"tf": 1.4142135623730951}, "ifri_mini_ml_lib.preprocessing.preparation.DataSplitter.train_test_split": {"tf": 1}, "ifri_mini_ml_lib.preprocessing.preparation.DataSplitter.stratified_train_test_split": {"tf": 1}, "ifri_mini_ml_lib.preprocessing.preparation.DataSplitter.temporal_train_test_split": {"tf": 1}, "ifri_mini_ml_lib.preprocessing.preparation.DataSplitter.k_fold_split": {"tf": 1}, "ifri_mini_ml_lib.regression.SVR.predict": {"tf": 1}}, "df": 22, "s": {"docs": {"ifri_mini_ml_lib.preprocessing.preparation.StandardScaler": {"tf": 1}}, "df": 1}}}}}}, "a": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"ifri_mini_ml_lib.association_rules.DataAdapter": {"tf": 2}}, "df": 1}}}}}}}}}}, "f": {"docs": {"ifri_mini_ml_lib.association_rules.DataAdapter": {"tf": 2}, "ifri_mini_ml_lib.preprocessing.preparation.MissingValueHandler.remove_missing": {"tf": 1}, "ifri_mini_ml_lib.preprocessing.preparation.MissingValueHandler.impute_statistical": {"tf": 1}, "ifri_mini_ml_lib.preprocessing.preparation.MissingValueHandler.impute_default": {"tf": 1}, "ifri_mini_ml_lib.preprocessing.preparation.MissingValueHandler.impute_knn": {"tf": 1}, "ifri_mini_ml_lib.preprocessing.preparation.MissingValueHandler.impute_regression": {"tf": 1}}, "df": 6}, "o": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "n": {"docs": {"ifri_mini_ml_lib.association_rules.DataAdapter.load_csv_to_transactions": {"tf": 1}, "ifri_mini_ml_lib.classification.KNN.fit": {"tf": 1}, "ifri_mini_ml_lib.preprocessing.preparation.MissingValueHandler.impute_regression": {"tf": 1}}, "df": 3}}}, "w": {"docs": {}, "df": 0, "n": {"docs": {"ifri_mini_ml_lib.clustering.HierarchicalClustering": {"tf": 1}}, "df": 1}}, "n": {"docs": {"ifri_mini_ml_lib.model_selection.BaggingClassifier": {"tf": 1}, "ifri_mini_ml_lib.model_selection.BaggingRegressor": {"tf": 1}}, "df": 2}}, "u": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"ifri_mini_ml_lib.classification.DecisionTree.fit": {"tf": 1}, "ifri_mini_ml_lib.classification.KNN.fit": {"tf": 1}, "ifri_mini_ml_lib.classification.LogisticRegression": {"tf": 1}, "ifri_mini_ml_lib.clustering.HierarchicalClustering.plot_dendrogram": {"tf": 1}, "ifri_mini_ml_lib.model_selection.BayesianSearchCV.get_best_params": {"tf": 1}, "ifri_mini_ml_lib.model_selection.RandomSearchCV": {"tf": 1}, "ifri_mini_ml_lib.preprocessing.dimensionality_reduction.PCA": {"tf": 1.4142135623730951}, "ifri_mini_ml_lib.preprocessing.preparation.MinMaxScaler": {"tf": 1.4142135623730951}, "ifri_mini_ml_lib.preprocessing.preparation.CategoricalEncoder.transform": {"tf": 1}}, "df": 9}}}}}, "y": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "y": {"docs": {"ifri_mini_ml_lib.regression.SVR.set_params": {"tf": 1}}, "df": 1}}}}}}}}}}}, "t": {"docs": {"ifri_mini_ml_lib": {"tf": 1}, "ifri_mini_ml_lib.association_rules.DataAdapter": {"tf": 2}, "ifri_mini_ml_lib.association_rules.DataAdapter.load_csv_to_transactions": {"tf": 1}, "ifri_mini_ml_lib.classification.DecisionTree.predict": {"tf": 1}, "ifri_mini_ml_lib.classification.KNN.fit": {"tf": 1}, "ifri_mini_ml_lib.model_selection.BaggingClassifier": {"tf": 1}, "ifri_mini_ml_lib.model_selection.BaggingRegressor": {"tf": 1}, "ifri_mini_ml_lib.preprocessing.dimensionality_reduction.TSNE": {"tf": 1.4142135623730951}, "ifri_mini_ml_lib.preprocessing.dimensionality_reduction.TSNE.__init__": {"tf": 1}, "ifri_mini_ml_lib.preprocessing.dimensionality_reduction.TSNE.fit": {"tf": 1}, "ifri_mini_ml_lib.preprocessing.dimensionality_reduction.TSNE.plot_results": {"tf": 1}, "ifri_mini_ml_lib.preprocessing.preparation.MinMaxScaler.transform": {"tf": 1}, "ifri_mini_ml_lib.preprocessing.preparation.MinMaxScaler.inverse_transform": {"tf": 1}, "ifri_mini_ml_lib.preprocessing.preparation.MissingValueHandler.impute_regression": {"tf": 1}}, "df": 14, "r": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "e": {"docs": {"ifri_mini_ml_lib.association_rules.FPGrowth": {"tf": 1}, "ifri_mini_ml_lib.association_rules.FPGrowth.fit": {"tf": 1}, "ifri_mini_ml_lib.classification.DecisionTree": {"tf": 1.4142135623730951}, "ifri_mini_ml_lib.classification.DecisionTree.fit": {"tf": 2}}, "df": 4, "s": {"docs": {"ifri_mini_ml_lib": {"tf": 1}}, "df": 1}}}, "a": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"ifri_mini_ml_lib.association_rules.Eclat.fit": {"tf": 1}, "ifri_mini_ml_lib.association_rules.FPGrowth.fit": {"tf": 1}, "ifri_mini_ml_lib.association_rules.DataAdapter.convert_to_transactions": {"tf": 1}}, "df": 3, "a": {"docs": {}, "df": 0, "l": {"docs": {"ifri_mini_ml_lib.association_rules.Apriori": {"tf": 1}}, "df": 1}}, "s": {"docs": {"ifri_mini_ml_lib.association_rules.Apriori": {"tf": 1.4142135623730951}, "ifri_mini_ml_lib.association_rules.Apriori.fit": {"tf": 1}, "ifri_mini_ml_lib.association_rules.Eclat": {"tf": 2.23606797749979}, "ifri_mini_ml_lib.association_rules.Eclat.fit": {"tf": 1.4142135623730951}, "ifri_mini_ml_lib.association_rules.FPGrowth": {"tf": 1.4142135623730951}, "ifri_mini_ml_lib.association_rules.FPGrowth.fit": {"tf": 1.4142135623730951}, "ifri_mini_ml_lib.association_rules.DataAdapter": {"tf": 3.605551275463989}, "ifri_mini_ml_lib.association_rules.DataAdapter.convert_to_transactions": {"tf": 1.4142135623730951}, "ifri_mini_ml_lib.association_rules.DataAdapter.load_csv_to_transactions": {"tf": 1.4142135623730951}}, "df": 9}}}}}}}, "f": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "m": {"docs": {"ifri_mini_ml_lib.preprocessing.dimensionality_reduction.PCA.transform": {"tf": 1.4142135623730951}, "ifri_mini_ml_lib.preprocessing.dimensionality_reduction.PCA.fit_transform": {"tf": 1}, "ifri_mini_ml_lib.preprocessing.dimensionality_reduction.TSNE.fit_transform": {"tf": 1.4142135623730951}, "ifri_mini_ml_lib.preprocessing.preparation.MinMaxScaler.transform": {"tf": 1.4142135623730951}, "ifri_mini_ml_lib.preprocessing.preparation.MinMaxScaler.fit_transform": {"tf": 1.7320508075688772}, "ifri_mini_ml_lib.preprocessing.preparation.MinMaxScaler.inverse_transform": {"tf": 1.7320508075688772}, "ifri_mini_ml_lib.preprocessing.preparation.StandardScaler.transform": {"tf": 1.4142135623730951}, "ifri_mini_ml_lib.preprocessing.preparation.StandardScaler.fit_transform": {"tf": 1.4142135623730951}, "ifri_mini_ml_lib.preprocessing.preparation.StandardScaler.inverse_transform": {"tf": 1.4142135623730951}, "ifri_mini_ml_lib.preprocessing.preparation.CategoricalEncoder.fit_transform": {"tf": 1.4142135623730951}}, "df": 10, "e": {"docs": {}, "df": 0, "d": {"docs": {"ifri_mini_ml_lib.preprocessing.dimensionality_reduction.PCA.transform": {"tf": 1.4142135623730951}, "ifri_mini_ml_lib.preprocessing.preparation.MinMaxScaler.__init__": {"tf": 1}, "ifri_mini_ml_lib.preprocessing.preparation.MinMaxScaler.transform": {"tf": 1.4142135623730951}, "ifri_mini_ml_lib.preprocessing.preparation.MinMaxScaler.fit_transform": {"tf": 1}, "ifri_mini_ml_lib.preprocessing.preparation.CategoricalEncoder.transform": {"tf": 1}, "ifri_mini_ml_lib.preprocessing.preparation.CategoricalEncoder.fit_transform": {"tf": 1}}, "df": 6}}, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"ifri_mini_ml_lib.preprocessing.preparation.MinMaxScaler": {"tf": 1}}, "df": 1}}}, "s": {"docs": {"ifri_mini_ml_lib.preprocessing.preparation.StandardScaler.fit_transform": {"tf": 1}, "ifri_mini_ml_lib.preprocessing.preparation.CategoricalEncoder.transform": {"tf": 1}}, "df": 2}}}}}}}, "v": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "l": {"docs": {"ifri_mini_ml_lib.association_rules.Eclat": {"tf": 1}}, "df": 1}}}}}}, "i": {"docs": {}, "df": 0, "n": {"docs": {"ifri_mini_ml_lib.classification.KNN": {"tf": 2}, "ifri_mini_ml_lib.classification.KNN.fit": {"tf": 1}, "ifri_mini_ml_lib.classification.LogisticRegression": {"tf": 1.4142135623730951}, "ifri_mini_ml_lib.model_selection.BaggingClassifier": {"tf": 1.7320508075688772}, "ifri_mini_ml_lib.model_selection.BaggingClassifier.fit": {"tf": 1.4142135623730951}, "ifri_mini_ml_lib.model_selection.BaggingRegressor": {"tf": 1.7320508075688772}, "ifri_mini_ml_lib.model_selection.BaggingRegressor.fit": {"tf": 1.4142135623730951}, "ifri_mini_ml_lib.model_selection.BayesianSearchCV.fit": {"tf": 1.4142135623730951}, "ifri_mini_ml_lib.model_selection.GridSearchCV.fit": {"tf": 1.4142135623730951}, "ifri_mini_ml_lib.model_selection.RandomSearchCV": {"tf": 1.4142135623730951}, "ifri_mini_ml_lib.model_selection.RandomSearchCV.fit": {"tf": 1.4142135623730951}, "ifri_mini_ml_lib.neural_networks.MLPClassifier.fit": {"tf": 1}, "ifri_mini_ml_lib.neural_networks.MLPRegressor.fit": {"tf": 1}, "ifri_mini_ml_lib.preprocessing.preparation.DataSplitter.train_test_split": {"tf": 3.605551275463989}, "ifri_mini_ml_lib.preprocessing.preparation.DataSplitter.stratified_train_test_split": {"tf": 3.4641016151377544}, "ifri_mini_ml_lib.preprocessing.preparation.DataSplitter.temporal_train_test_split": {"tf": 3.605551275463989}, "ifri_mini_ml_lib.preprocessing.preparation.DataSplitter.k_fold_split": {"tf": 2.6457513110645907}, "ifri_mini_ml_lib.regression.LinearRegression.fit": {"tf": 1}, "ifri_mini_ml_lib.regression.PolynomialRegression.fit": {"tf": 1}, "ifri_mini_ml_lib.regression.SVR.fit": {"tf": 1.4142135623730951}}, "df": 20, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"ifri_mini_ml_lib.classification.DecisionTree.fit": {"tf": 1.4142135623730951}, "ifri_mini_ml_lib.classification.KNN": {"tf": 1}, "ifri_mini_ml_lib.classification.KNN.fit": {"tf": 1.7320508075688772}, "ifri_mini_ml_lib.classification.KNN.predict": {"tf": 1}, "ifri_mini_ml_lib.classification.LogisticRegression": {"tf": 1.4142135623730951}, "ifri_mini_ml_lib.classification.LogisticRegression.__init__": {"tf": 1.7320508075688772}, "ifri_mini_ml_lib.classification.LogisticRegression.fit": {"tf": 1}, "ifri_mini_ml_lib.model_selection.BaggingClassifier": {"tf": 1.4142135623730951}, "ifri_mini_ml_lib.model_selection.BaggingClassifier.fit": {"tf": 1}, "ifri_mini_ml_lib.model_selection.BaggingRegressor": {"tf": 1.4142135623730951}, "ifri_mini_ml_lib.model_selection.BaggingRegressor.fit": {"tf": 1}, "ifri_mini_ml_lib.neural_networks.MLPClassifier.__init__": {"tf": 1.4142135623730951}, "ifri_mini_ml_lib.neural_networks.MLPClassifier.fit": {"tf": 1}, "ifri_mini_ml_lib.neural_networks.MLPRegressor.__init__": {"tf": 1.4142135623730951}, "ifri_mini_ml_lib.neural_networks.MLPRegressor.fit": {"tf": 1}, "ifri_mini_ml_lib.preprocessing.dimensionality_reduction.PCA": {"tf": 1.4142135623730951}, "ifri_mini_ml_lib.preprocessing.dimensionality_reduction.PCA.fit": {"tf": 1}, "ifri_mini_ml_lib.preprocessing.dimensionality_reduction.TSNE.fit": {"tf": 1}, "ifri_mini_ml_lib.preprocessing.dimensionality_reduction.TSNE.fit_transform": {"tf": 1}, "ifri_mini_ml_lib.preprocessing.preparation.MinMaxScaler.fit": {"tf": 1.7320508075688772}, "ifri_mini_ml_lib.preprocessing.preparation.StandardScaler": {"tf": 1.4142135623730951}, "ifri_mini_ml_lib.preprocessing.preparation.CategoricalEncoder.fit": {"tf": 1}, "ifri_mini_ml_lib.preprocessing.preparation.CategoricalEncoder.fit_transform": {"tf": 1.4142135623730951}, "ifri_mini_ml_lib.regression.LinearRegression.fit": {"tf": 1}, "ifri_mini_ml_lib.regression.PolynomialRegression.fit": {"tf": 1}, "ifri_mini_ml_lib.regression.SVR": {"tf": 1}, "ifri_mini_ml_lib.regression.SVR.fit": {"tf": 1.4142135623730951}}, "df": 27}}}, "e": {"docs": {}, "df": 0, "d": {"docs": {"ifri_mini_ml_lib.classification.DecisionTree.predict": {"tf": 1}, "ifri_mini_ml_lib.clustering.KMeans.predict": {"tf": 1}, "ifri_mini_ml_lib.model_selection.BaggingClassifier": {"tf": 2.6457513110645907}, "ifri_mini_ml_lib.model_selection.BaggingRegressor": {"tf": 2.6457513110645907}, "ifri_mini_ml_lib.neural_networks.MLPClassifier.fit": {"tf": 1}, "ifri_mini_ml_lib.neural_networks.MLPRegressor.fit": {"tf": 1}, "ifri_mini_ml_lib.preprocessing.dimensionality_reduction.PCA.fit": {"tf": 1}, "ifri_mini_ml_lib.preprocessing.dimensionality_reduction.TSNE.fit": {"tf": 1}}, "df": 8}}, "s": {"docs": {"ifri_mini_ml_lib.classification.LogisticRegression.fit": {"tf": 1}, "ifri_mini_ml_lib.model_selection.BaggingClassifier": {"tf": 1}, "ifri_mini_ml_lib.model_selection.BaggingClassifier.fit": {"tf": 1}, "ifri_mini_ml_lib.model_selection.BaggingRegressor": {"tf": 1}, "ifri_mini_ml_lib.model_selection.BaggingRegressor.fit": {"tf": 1}, "ifri_mini_ml_lib.regression.SVR.fit": {"tf": 1}}, "df": 6}}}, "d": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "l": {"docs": {"ifri_mini_ml_lib.classification.KNN.fit": {"tf": 1}}, "df": 1}}}}}}}}}, "u": {"docs": {}, "df": 0, "e": {"docs": {"ifri_mini_ml_lib.association_rules.DataAdapter": {"tf": 1}, "ifri_mini_ml_lib.association_rules.DataAdapter.convert_to_transactions": {"tf": 1}, "ifri_mini_ml_lib.metrics.bias_evaluation.selection_rate": {"tf": 1}, "ifri_mini_ml_lib.metrics.bias_evaluation.selection_rate_per_group": {"tf": 1}, "ifri_mini_ml_lib.metrics.bias_evaluation.tpr_fpr_by_group": {"tf": 1.4142135623730951}, "ifri_mini_ml_lib.metrics.bias_evaluation.equalized_odds_ratio": {"tf": 1}, "ifri_mini_ml_lib.metrics.bias_evaluation.equalized_odds_difference": {"tf": 1}, "ifri_mini_ml_lib.metrics.evaluation_metrics.confusion_matrix": {"tf": 1.7320508075688772}, "ifri_mini_ml_lib.metrics.evaluation_metrics.accuracy": {"tf": 1.4142135623730951}, "ifri_mini_ml_lib.metrics.evaluation_metrics.precision": {"tf": 2}, "ifri_mini_ml_lib.metrics.evaluation_metrics.recall": {"tf": 2}, "ifri_mini_ml_lib.metrics.evaluation_metrics.f1_score": {"tf": 1.4142135623730951}, "ifri_mini_ml_lib.model_selection.RandomSearchCV": {"tf": 1}, "ifri_mini_ml_lib.neural_networks.MLPClassifier.__init__": {"tf": 1.4142135623730951}, "ifri_mini_ml_lib.neural_networks.MLPClassifier.score": {"tf": 1}, "ifri_mini_ml_lib.neural_networks.MLPRegressor.__init__": {"tf": 1.4142135623730951}, "ifri_mini_ml_lib.neural_networks.MLPRegressor.score": {"tf": 1}, "ifri_mini_ml_lib.preprocessing.preparation.DataSplitter.train_test_split": {"tf": 1.7320508075688772}, "ifri_mini_ml_lib.preprocessing.preparation.DataSplitter.stratified_train_test_split": {"tf": 1.4142135623730951}, "ifri_mini_ml_lib.preprocessing.preparation.DataSplitter.temporal_train_test_split": {"tf": 1.7320508075688772}}, "df": 20}, "t": {"docs": {}, "df": 0, "h": {"docs": {"ifri_mini_ml_lib.metrics.bias_evaluation.tpr_fpr_by_group": {"tf": 1}, "ifri_mini_ml_lib.metrics.bias_evaluation.equalized_odds_ratio": {"tf": 1}, "ifri_mini_ml_lib.metrics.bias_evaluation.equalized_odds_difference": {"tf": 1}}, "df": 3}}}, "y": {"docs": {"ifri_mini_ml_lib.model_selection.GridSearchCV": {"tf": 1}, "ifri_mini_ml_lib.model_selection.RandomSearchCV": {"tf": 1}}, "df": 2}}, "h": {"docs": {}, "df": 0, "e": {"docs": {"ifri_mini_ml_lib.association_rules.Apriori": {"tf": 1}, "ifri_mini_ml_lib.association_rules.Apriori.fit": {"tf": 1}, "ifri_mini_ml_lib.association_rules.Apriori.get_frequent_itemsets": {"tf": 1}, "ifri_mini_ml_lib.association_rules.Apriori.get_rules": {"tf": 1}, "ifri_mini_ml_lib.association_rules.Eclat": {"tf": 2}, "ifri_mini_ml_lib.association_rules.Eclat.fit": {"tf": 1}, "ifri_mini_ml_lib.association_rules.Eclat.get_frequent_itemsets": {"tf": 1}, "ifri_mini_ml_lib.association_rules.Eclat.get_rules": {"tf": 1}, "ifri_mini_ml_lib.association_rules.FPGrowth": {"tf": 1}, "ifri_mini_ml_lib.association_rules.FPGrowth.fit": {"tf": 1.4142135623730951}, "ifri_mini_ml_lib.association_rules.FPGrowth.get_frequent_itemsets": {"tf": 1}, "ifri_mini_ml_lib.association_rules.FPGrowth.get_rules": {"tf": 1}, "ifri_mini_ml_lib.association_rules.DataAdapter.convert_to_transactions": {"tf": 1}, "ifri_mini_ml_lib.association_rules.DataAdapter.load_csv_to_transactions": {"tf": 2}, "ifri_mini_ml_lib.classification.DecisionTree": {"tf": 1.4142135623730951}, "ifri_mini_ml_lib.classification.DecisionTree.fit": {"tf": 2.6457513110645907}, "ifri_mini_ml_lib.classification.DecisionTree.predict": {"tf": 1}, "ifri_mini_ml_lib.classification.KNN": {"tf": 1.7320508075688772}, "ifri_mini_ml_lib.classification.KNN.__init__": {"tf": 1}, "ifri_mini_ml_lib.classification.KNN.fit": {"tf": 2.23606797749979}, "ifri_mini_ml_lib.classification.KNN.predict": {"tf": 2.449489742783178}, "ifri_mini_ml_lib.classification.LogisticRegression": {"tf": 1}, "ifri_mini_ml_lib.classification.LogisticRegression.__init__": {"tf": 1}, "ifri_mini_ml_lib.classification.LogisticRegression.fit": {"tf": 1.4142135623730951}, "ifri_mini_ml_lib.classification.LogisticRegression.predict": {"tf": 1}, "ifri_mini_ml_lib.clustering.KMeans": {"tf": 1.7320508075688772}, "ifri_mini_ml_lib.clustering.KMeans.__init__": {"tf": 1.4142135623730951}, "ifri_mini_ml_lib.clustering.KMeans.fit": {"tf": 1}, "ifri_mini_ml_lib.clustering.KMeans.predict": {"tf": 1}, "ifri_mini_ml_lib.clustering.KMeans.fit_predict": {"tf": 1.4142135623730951}, "ifri_mini_ml_lib.clustering.KMeans.plot_clusters": {"tf": 1}, "ifri_mini_ml_lib.clustering.DBSCAN": {"tf": 1.7320508075688772}, "ifri_mini_ml_lib.clustering.DBSCAN.__init__": {"tf": 1.7320508075688772}, "ifri_mini_ml_lib.clustering.DBSCAN.fit_predict": {"tf": 1.4142135623730951}, "ifri_mini_ml_lib.clustering.DBSCAN.plot_clusters": {"tf": 1}, "ifri_mini_ml_lib.clustering.HierarchicalClustering": {"tf": 1}, "ifri_mini_ml_lib.clustering.HierarchicalClustering.__init__": {"tf": 1.4142135623730951}, "ifri_mini_ml_lib.clustering.HierarchicalClustering.fit_predict": {"tf": 1.4142135623730951}, "ifri_mini_ml_lib.clustering.HierarchicalClustering.plot_dendrogram": {"tf": 2}, "ifri_mini_ml_lib.clustering.HierarchicalClustering.plot_clusters": {"tf": 1}, "ifri_mini_ml_lib.metrics.bias_evaluation.selection_rate": {"tf": 2.23606797749979}, "ifri_mini_ml_lib.metrics.bias_evaluation.selection_rate_per_group": {"tf": 1.4142135623730951}, "ifri_mini_ml_lib.metrics.bias_evaluation.demographic_parity_ratio": {"tf": 1}, "ifri_mini_ml_lib.metrics.bias_evaluation.demographic_parity_difference": {"tf": 1}, "ifri_mini_ml_lib.metrics.bias_evaluation.equalized_odds_ratio": {"tf": 1}, "ifri_mini_ml_lib.metrics.bias_evaluation.equalized_odds_difference": {"tf": 1}, "ifri_mini_ml_lib.metrics.evaluation_metrics.confusion_matrix": {"tf": 1.7320508075688772}, "ifri_mini_ml_lib.metrics.evaluation_metrics.accuracy": {"tf": 1}, "ifri_mini_ml_lib.metrics.evaluation_metrics.precision": {"tf": 1}, "ifri_mini_ml_lib.metrics.evaluation_metrics.recall": {"tf": 1}, "ifri_mini_ml_lib.metrics.evaluation_metrics.f1_score": {"tf": 1.4142135623730951}, "ifri_mini_ml_lib.metrics.evaluation_metrics.calculate_inertia": {"tf": 1.7320508075688772}, "ifri_mini_ml_lib.metrics.evaluation_metrics.calculate_silhouette": {"tf": 1.4142135623730951}, "ifri_mini_ml_lib.model_selection.BaggingClassifier": {"tf": 1.4142135623730951}, "ifri_mini_ml_lib.model_selection.BaggingClassifier.fit": {"tf": 1.4142135623730951}, "ifri_mini_ml_lib.model_selection.BaggingRegressor": {"tf": 1.4142135623730951}, "ifri_mini_ml_lib.model_selection.BaggingRegressor.fit": {"tf": 1.4142135623730951}, "ifri_mini_ml_lib.model_selection.BaggingRegressor.predict": {"tf": 1}, "ifri_mini_ml_lib.model_selection.BayesianSearchCV": {"tf": 1}, "ifri_mini_ml_lib.model_selection.BayesianSearchCV.__init__": {"tf": 1}, "ifri_mini_ml_lib.model_selection.BayesianSearchCV.fit": {"tf": 1}, "ifri_mini_ml_lib.model_selection.BayesianSearchCV.get_best_params": {"tf": 1}, "ifri_mini_ml_lib.model_selection.GridSearchCV": {"tf": 1}, "ifri_mini_ml_lib.model_selection.GridSearchCV.fit": {"tf": 1.7320508075688772}, "ifri_mini_ml_lib.model_selection.RandomSearchCV": {"tf": 2.8284271247461903}, "ifri_mini_ml_lib.model_selection.RandomSearchCV.fit": {"tf": 1.4142135623730951}, "ifri_mini_ml_lib.neural_networks.MLPClassifier.__init__": {"tf": 1}, "ifri_mini_ml_lib.neural_networks.MLPClassifier.fit": {"tf": 1.7320508075688772}, "ifri_mini_ml_lib.neural_networks.MLPClassifier.score": {"tf": 1.7320508075688772}, "ifri_mini_ml_lib.neural_networks.MLPRegressor.__init__": {"tf": 1.7320508075688772}, "ifri_mini_ml_lib.neural_networks.MLPRegressor.fit": {"tf": 1.4142135623730951}, "ifri_mini_ml_lib.neural_networks.MLPRegressor.predict": {"tf": 1.4142135623730951}, "ifri_mini_ml_lib.neural_networks.MLPRegressor.score": {"tf": 1.4142135623730951}, "ifri_mini_ml_lib.preprocessing.dimensionality_reduction.PCA": {"tf": 1.4142135623730951}, "ifri_mini_ml_lib.preprocessing.dimensionality_reduction.PCA.__init__": {"tf": 1}, "ifri_mini_ml_lib.preprocessing.dimensionality_reduction.PCA.transform": {"tf": 1}, "ifri_mini_ml_lib.preprocessing.dimensionality_reduction.PCA.plot_cov_matrix": {"tf": 1}, "ifri_mini_ml_lib.preprocessing.dimensionality_reduction.PCA.explained_variances": {"tf": 1}, "ifri_mini_ml_lib.preprocessing.dimensionality_reduction.PCA.explained_variances_ratio": {"tf": 1}, "ifri_mini_ml_lib.preprocessing.dimensionality_reduction.PCA.plot_cumulative_explained_variance_ratio": {"tf": 1}, "ifri_mini_ml_lib.preprocessing.dimensionality_reduction.TSNE": {"tf": 1.4142135623730951}, "ifri_mini_ml_lib.preprocessing.dimensionality_reduction.TSNE.__init__": {"tf": 1}, "ifri_mini_ml_lib.preprocessing.dimensionality_reduction.TSNE.fit": {"tf": 1}, "ifri_mini_ml_lib.preprocessing.dimensionality_reduction.TSNE.plot_results": {"tf": 1.4142135623730951}, "ifri_mini_ml_lib.preprocessing.preparation.MinMaxScaler": {"tf": 1.4142135623730951}, "ifri_mini_ml_lib.preprocessing.preparation.MinMaxScaler.__init__": {"tf": 1}, "ifri_mini_ml_lib.preprocessing.preparation.StandardScaler": {"tf": 2}, "ifri_mini_ml_lib.preprocessing.preparation.StandardScaler.__init__": {"tf": 1}, "ifri_mini_ml_lib.preprocessing.preparation.StandardScaler.fit": {"tf": 1.4142135623730951}, "ifri_mini_ml_lib.preprocessing.preparation.StandardScaler.transform": {"tf": 1.4142135623730951}, "ifri_mini_ml_lib.preprocessing.preparation.StandardScaler.fit_transform": {"tf": 1.4142135623730951}, "ifri_mini_ml_lib.preprocessing.preparation.StandardScaler.inverse_transform": {"tf": 1}, "ifri_mini_ml_lib.preprocessing.preparation.CategoricalEncoder": {"tf": 2}, "ifri_mini_ml_lib.preprocessing.preparation.CategoricalEncoder.fit": {"tf": 2}, "ifri_mini_ml_lib.preprocessing.preparation.CategoricalEncoder.transform": {"tf": 2.23606797749979}, "ifri_mini_ml_lib.preprocessing.preparation.CategoricalEncoder.fit_transform": {"tf": 1.4142135623730951}, "ifri_mini_ml_lib.preprocessing.preparation.DataSplitter.__init__": {"tf": 1}, "ifri_mini_ml_lib.regression.LinearRegression.fit": {"tf": 1}, "ifri_mini_ml_lib.regression.PolynomialRegression.fit": {"tf": 1}, "ifri_mini_ml_lib.regression.SVR": {"tf": 2.23606797749979}, "ifri_mini_ml_lib.regression.SVR.linear_kernel": {"tf": 1}, "ifri_mini_ml_lib.regression.SVR.polynomial_kernel": {"tf": 1}, "ifri_mini_ml_lib.regression.SVR.rbf_kernel": {"tf": 1}, "ifri_mini_ml_lib.regression.SVR.sigmoid_kernel": {"tf": 1}, "ifri_mini_ml_lib.regression.SVR.get_kernel": {"tf": 1}, "ifri_mini_ml_lib.regression.SVR.fit": {"tf": 1}}, "df": 106, "i": {"docs": {}, "df": 0, "r": {"docs": {"ifri_mini_ml_lib.association_rules.FPGrowth.get_frequent_itemsets": {"tf": 1}, "ifri_mini_ml_lib.association_rules.DataAdapter.convert_to_transactions": {"tf": 1}, "ifri_mini_ml_lib.clustering.HierarchicalClustering.plot_clusters": {"tf": 1}, "ifri_mini_ml_lib.metrics.bias_evaluation.selection_rate_per_group": {"tf": 1}, "ifri_mini_ml_lib.preprocessing.preparation.CategoricalEncoder": {"tf": 1}}, "df": 5}}, "n": {"docs": {"ifri_mini_ml_lib.clustering.KMeans.fit_predict": {"tf": 1}, "ifri_mini_ml_lib.preprocessing.preparation.MinMaxScaler.fit_transform": {"tf": 1}, "ifri_mini_ml_lib.preprocessing.preparation.StandardScaler.fit_transform": {"tf": 1}}, "df": 3}, "r": {"docs": {}, "df": 0, "e": {"docs": {"ifri_mini_ml_lib.metrics.evaluation_metrics.precision": {"tf": 1}, "ifri_mini_ml_lib.metrics.evaluation_metrics.recall": {"tf": 1}}, "df": 2}}, "m": {"docs": {"ifri_mini_ml_lib.model_selection.BaggingRegressor": {"tf": 1}, "ifri_mini_ml_lib.model_selection.RandomSearchCV.fit": {"tf": 1}}, "df": 2}}, "r": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "h": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "d": {"docs": {"ifri_mini_ml_lib.association_rules.Apriori": {"tf": 1.4142135623730951}, "ifri_mini_ml_lib.association_rules.Eclat": {"tf": 1.4142135623730951}, "ifri_mini_ml_lib.association_rules.FPGrowth": {"tf": 1.4142135623730951}, "ifri_mini_ml_lib.classification.LogisticRegression.predict": {"tf": 1.7320508075688772}, "ifri_mini_ml_lib.clustering.KMeans": {"tf": 1}, "ifri_mini_ml_lib.preprocessing.dimensionality_reduction.TSNE.__init__": {"tf": 1}, "ifri_mini_ml_lib.preprocessing.preparation.MissingValueHandler.remove_missing": {"tf": 1.7320508075688772}}, "df": 7}}}}}}}, "a": {"docs": {}, "df": 0, "t": {"docs": {"ifri_mini_ml_lib.association_rules.Eclat": {"tf": 1.4142135623730951}, "ifri_mini_ml_lib.association_rules.FPGrowth": {"tf": 1}, "ifri_mini_ml_lib.clustering.KMeans.fit_predict": {"tf": 1}, "ifri_mini_ml_lib.clustering.DBSCAN": {"tf": 1}, "ifri_mini_ml_lib.preprocessing.preparation.StandardScaler": {"tf": 1}, "ifri_mini_ml_lib.preprocessing.preparation.CategoricalEncoder": {"tf": 1.4142135623730951}, "ifri_mini_ml_lib.preprocessing.preparation.CategoricalEncoder.fit_transform": {"tf": 1}}, "df": 7}, "n": {"docs": {"ifri_mini_ml_lib.association_rules.Eclat": {"tf": 1.4142135623730951}, "ifri_mini_ml_lib.clustering.DBSCAN.plot_clusters": {"tf": 1}}, "df": 2}}, "i": {"docs": {}, "df": 0, "s": {"docs": {"ifri_mini_ml_lib.association_rules.Eclat": {"tf": 1}, "ifri_mini_ml_lib.classification.DecisionTree": {"tf": 1}, "ifri_mini_ml_lib.classification.KNN.fit": {"tf": 1}, "ifri_mini_ml_lib.model_selection.GridSearchCV": {"tf": 1}, "ifri_mini_ml_lib.model_selection.RandomSearchCV": {"tf": 1}, "ifri_mini_ml_lib.preprocessing.preparation.MinMaxScaler": {"tf": 1}, "ifri_mini_ml_lib.preprocessing.preparation.StandardScaler": {"tf": 1}, "ifri_mini_ml_lib.preprocessing.preparation.CategoricalEncoder": {"tf": 1}}, "df": 8}}}, "o": {"docs": {"ifri_mini_ml_lib.association_rules.Apriori": {"tf": 1}, "ifri_mini_ml_lib.association_rules.Eclat": {"tf": 1.4142135623730951}, "ifri_mini_ml_lib.association_rules.Eclat.get_rules": {"tf": 1}, "ifri_mini_ml_lib.association_rules.DataAdapter": {"tf": 2}, "ifri_mini_ml_lib.association_rules.DataAdapter.convert_to_transactions": {"tf": 1.4142135623730951}, "ifri_mini_ml_lib.association_rules.DataAdapter.load_csv_to_transactions": {"tf": 1}, "ifri_mini_ml_lib.classification.DecisionTree": {"tf": 2.449489742783178}, "ifri_mini_ml_lib.classification.DecisionTree.fit": {"tf": 1}, "ifri_mini_ml_lib.classification.KNN": {"tf": 1.4142135623730951}, "ifri_mini_ml_lib.classification.KNN.__init__": {"tf": 1}, "ifri_mini_ml_lib.classification.KNN.fit": {"tf": 1}, "ifri_mini_ml_lib.classification.LogisticRegression.__init__": {"tf": 1}, "ifri_mini_ml_lib.classification.LogisticRegression.fit": {"tf": 1}, "ifri_mini_ml_lib.classification.LogisticRegression.predict": {"tf": 1}, "ifri_mini_ml_lib.clustering.KMeans": {"tf": 1.7320508075688772}, "ifri_mini_ml_lib.clustering.KMeans.__init__": {"tf": 1.4142135623730951}, "ifri_mini_ml_lib.clustering.KMeans.fit": {"tf": 1.7320508075688772}, "ifri_mini_ml_lib.clustering.KMeans.predict": {"tf": 1.4142135623730951}, "ifri_mini_ml_lib.clustering.KMeans.fit_predict": {"tf": 1}, "ifri_mini_ml_lib.clustering.KMeans.plot_clusters": {"tf": 1.4142135623730951}, "ifri_mini_ml_lib.clustering.DBSCAN": {"tf": 1.4142135623730951}, "ifri_mini_ml_lib.clustering.DBSCAN.__init__": {"tf": 1.4142135623730951}, "ifri_mini_ml_lib.clustering.DBSCAN.fit_predict": {"tf": 1}, "ifri_mini_ml_lib.clustering.DBSCAN.plot_clusters": {"tf": 1}, "ifri_mini_ml_lib.clustering.HierarchicalClustering": {"tf": 1}, "ifri_mini_ml_lib.clustering.HierarchicalClustering.__init__": {"tf": 1.4142135623730951}, "ifri_mini_ml_lib.clustering.HierarchicalClustering.fit_predict": {"tf": 1}, "ifri_mini_ml_lib.clustering.HierarchicalClustering.plot_dendrogram": {"tf": 1}, "ifri_mini_ml_lib.clustering.HierarchicalClustering.plot_clusters": {"tf": 1.4142135623730951}, "ifri_mini_ml_lib.metrics.bias_evaluation.selection_rate": {"tf": 1}, "ifri_mini_ml_lib.metrics.bias_evaluation.selection_rate_per_group": {"tf": 1}, "ifri_mini_ml_lib.metrics.bias_evaluation.demographic_parity_ratio": {"tf": 1}, "ifri_mini_ml_lib.metrics.evaluation_metrics.calculate_inertia": {"tf": 1}, "ifri_mini_ml_lib.metrics.evaluation_metrics.calculate_silhouette": {"tf": 1.4142135623730951}, "ifri_mini_ml_lib.model_selection.BaggingClassifier": {"tf": 1.4142135623730951}, "ifri_mini_ml_lib.model_selection.BaggingRegressor": {"tf": 1.4142135623730951}, "ifri_mini_ml_lib.model_selection.BayesianSearchCV": {"tf": 1}, "ifri_mini_ml_lib.model_selection.BayesianSearchCV.__init__": {"tf": 1.4142135623730951}, "ifri_mini_ml_lib.model_selection.BayesianSearchCV.fit": {"tf": 1}, "ifri_mini_ml_lib.model_selection.GridSearchCV": {"tf": 2.449489742783178}, "ifri_mini_ml_lib.model_selection.RandomSearchCV": {"tf": 2.23606797749979}, "ifri_mini_ml_lib.neural_networks.MLPClassifier.__init__": {"tf": 1.4142135623730951}, "ifri_mini_ml_lib.neural_networks.MLPClassifier.predict": {"tf": 1}, "ifri_mini_ml_lib.neural_networks.MLPClassifier.predict_proba": {"tf": 1}, "ifri_mini_ml_lib.neural_networks.MLPRegressor.__init__": {"tf": 1.4142135623730951}, "ifri_mini_ml_lib.neural_networks.MLPRegressor.predict": {"tf": 1}, "ifri_mini_ml_lib.preprocessing.dimensionality_reduction.PCA": {"tf": 1}, "ifri_mini_ml_lib.preprocessing.dimensionality_reduction.PCA.__init__": {"tf": 1}, "ifri_mini_ml_lib.preprocessing.dimensionality_reduction.PCA.transform": {"tf": 1}, "ifri_mini_ml_lib.preprocessing.dimensionality_reduction.PCA.explained_variances_ratio": {"tf": 1}, "ifri_mini_ml_lib.preprocessing.dimensionality_reduction.TSNE.fit": {"tf": 1}, "ifri_mini_ml_lib.preprocessing.dimensionality_reduction.TSNE.fit_transform": {"tf": 1}, "ifri_mini_ml_lib.preprocessing.preparation.MinMaxScaler": {"tf": 1.4142135623730951}, "ifri_mini_ml_lib.preprocessing.preparation.MinMaxScaler.fit": {"tf": 1}, "ifri_mini_ml_lib.preprocessing.preparation.MinMaxScaler.transform": {"tf": 1}, "ifri_mini_ml_lib.preprocessing.preparation.MinMaxScaler.fit_transform": {"tf": 1.4142135623730951}, "ifri_mini_ml_lib.preprocessing.preparation.MinMaxScaler.inverse_transform": {"tf": 1.7320508075688772}, "ifri_mini_ml_lib.preprocessing.preparation.MissingValueHandler": {"tf": 1}, "ifri_mini_ml_lib.preprocessing.preparation.MissingValueHandler.remove_missing": {"tf": 1}, "ifri_mini_ml_lib.preprocessing.preparation.MissingValueHandler.impute_default": {"tf": 1}, "ifri_mini_ml_lib.preprocessing.preparation.MissingValueHandler.impute_knn": {"tf": 1}, "ifri_mini_ml_lib.preprocessing.preparation.MissingValueHandler.impute_regression": {"tf": 1}, "ifri_mini_ml_lib.preprocessing.preparation.StandardScaler": {"tf": 1}, "ifri_mini_ml_lib.preprocessing.preparation.StandardScaler.transform": {"tf": 1.4142135623730951}, "ifri_mini_ml_lib.preprocessing.preparation.StandardScaler.fit_transform": {"tf": 1.4142135623730951}, "ifri_mini_ml_lib.preprocessing.preparation.StandardScaler.inverse_transform": {"tf": 1.4142135623730951}, "ifri_mini_ml_lib.preprocessing.preparation.CategoricalEncoder": {"tf": 1.7320508075688772}, "ifri_mini_ml_lib.preprocessing.preparation.CategoricalEncoder.fit": {"tf": 1}, "ifri_mini_ml_lib.preprocessing.preparation.CategoricalEncoder.transform": {"tf": 1.7320508075688772}, "ifri_mini_ml_lib.preprocessing.preparation.CategoricalEncoder.fit_transform": {"tf": 1.4142135623730951}, "ifri_mini_ml_lib.preprocessing.preparation.DataSplitter.__init__": {"tf": 1}, "ifri_mini_ml_lib.preprocessing.preparation.DataSplitter.train_test_split": {"tf": 2.6457513110645907}, "ifri_mini_ml_lib.preprocessing.preparation.DataSplitter.stratified_train_test_split": {"tf": 2.449489742783178}, "ifri_mini_ml_lib.preprocessing.preparation.DataSplitter.temporal_train_test_split": {"tf": 2.449489742783178}, "ifri_mini_ml_lib.preprocessing.preparation.DataSplitter.k_fold_split": {"tf": 1.4142135623730951}, "ifri_mini_ml_lib.regression.SVR": {"tf": 1}, "ifri_mini_ml_lib.regression.SVR.set_params": {"tf": 1}}, "df": 77, "l": {"docs": {"ifri_mini_ml_lib.classification.LogisticRegression": {"tf": 1}, "ifri_mini_ml_lib.classification.LogisticRegression.__init__": {"tf": 1}, "ifri_mini_ml_lib.clustering.KMeans": {"tf": 1.4142135623730951}, "ifri_mini_ml_lib.clustering.KMeans.__init__": {"tf": 1}, "ifri_mini_ml_lib.neural_networks.MLPClassifier.__init__": {"tf": 1}, "ifri_mini_ml_lib.neural_networks.MLPRegressor.__init__": {"tf": 1}}, "df": 6, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "e": {"docs": {"ifri_mini_ml_lib.classification.LogisticRegression": {"tf": 1}, "ifri_mini_ml_lib.clustering.KMeans.__init__": {"tf": 1}, "ifri_mini_ml_lib.clustering.KMeans.fit": {"tf": 1}, "ifri_mini_ml_lib.neural_networks.MLPClassifier.__init__": {"tf": 1}, "ifri_mini_ml_lib.neural_networks.MLPRegressor.__init__": {"tf": 1}}, "df": 5}}}}}}}, "p": {"docs": {"ifri_mini_ml_lib.clustering.HierarchicalClustering": {"tf": 1}}, "df": 1}, "t": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "l": {"docs": {"ifri_mini_ml_lib.metrics.evaluation_metrics.accuracy": {"tf": 1}, "ifri_mini_ml_lib.metrics.evaluation_metrics.calculate_inertia": {"tf": 1}}, "df": 2}}}, "o": {"docs": {"ifri_mini_ml_lib.preprocessing.preparation.MissingValueHandler.remove_missing": {"tf": 1}}, "df": 1}}, "i": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "e": {"docs": {"ifri_mini_ml_lib.association_rules.Eclat": {"tf": 1}, "ifri_mini_ml_lib.preprocessing.preparation.DataSplitter.temporal_train_test_split": {"tf": 1.7320508075688772}}, "df": 2}}, "d": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "t": {"docs": {"ifri_mini_ml_lib.association_rules.Eclat": {"tf": 1.4142135623730951}}, "df": 1, "s": {"docs": {"ifri_mini_ml_lib.association_rules.Eclat.get_single_items_TIDset": {"tf": 1}}, "df": 1}}}}}, "t": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "e": {"docs": {"ifri_mini_ml_lib.preprocessing.dimensionality_reduction.TSNE.plot_results": {"tf": 1.4142135623730951}}, "df": 1}}}}, "y": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "e": {"docs": {"ifri_mini_ml_lib.association_rules.DataAdapter.convert_to_transactions": {"tf": 1}, "ifri_mini_ml_lib.classification.KNN": {"tf": 1}, "ifri_mini_ml_lib.classification.KNN.__init__": {"tf": 1}, "ifri_mini_ml_lib.preprocessing.dimensionality_reduction.TSNE.generate_test_data": {"tf": 1}, "ifri_mini_ml_lib.preprocessing.preparation.MinMaxScaler.transform": {"tf": 1}, "ifri_mini_ml_lib.preprocessing.preparation.MinMaxScaler.inverse_transform": {"tf": 1}, "ifri_mini_ml_lib.preprocessing.preparation.CategoricalEncoder": {"tf": 1.4142135623730951}, "ifri_mini_ml_lib.regression.SVR": {"tf": 1}}, "df": 8, "s": {"docs": {"ifri_mini_ml_lib.association_rules.DataAdapter.convert_to_transactions": {"tf": 1}, "ifri_mini_ml_lib.model_selection.BayesianSearchCV.__init__": {"tf": 1.4142135623730951}}, "df": 2}, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {"ifri_mini_ml_lib.association_rules.DataAdapter.convert_to_transactions": {"tf": 1}}, "df": 1}}}}}}, "i": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "y": {"docs": {"ifri_mini_ml_lib.preprocessing.dimensionality_reduction.TSNE": {"tf": 1}}, "df": 1}}}}}}}}, "a": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "k": {"docs": {"ifri_mini_ml_lib.classification.KNN": {"tf": 2}, "ifri_mini_ml_lib.classification.KNN.__init__": {"tf": 1.4142135623730951}}, "df": 2, "s": {"docs": {"ifri_mini_ml_lib.classification.DecisionTree": {"tf": 1}, "ifri_mini_ml_lib.classification.KNN": {"tf": 1}, "ifri_mini_ml_lib.model_selection.BaggingClassifier": {"tf": 1}, "ifri_mini_ml_lib.model_selection.BaggingRegressor": {"tf": 1}, "ifri_mini_ml_lib.neural_networks.MLPRegressor": {"tf": 1}}, "df": 5}}}, "r": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "t": {"docs": {"ifri_mini_ml_lib.classification.DecisionTree.fit": {"tf": 1}, "ifri_mini_ml_lib.classification.KNN.fit": {"tf": 1}, "ifri_mini_ml_lib.classification.KNN.predict": {"tf": 1.4142135623730951}, "ifri_mini_ml_lib.classification.LogisticRegression.fit": {"tf": 1}, "ifri_mini_ml_lib.model_selection.BaggingClassifier.fit": {"tf": 1}, "ifri_mini_ml_lib.model_selection.BaggingClassifier.predict": {"tf": 1}, "ifri_mini_ml_lib.model_selection.BaggingRegressor.fit": {"tf": 1}, "ifri_mini_ml_lib.model_selection.BaggingRegressor.predict": {"tf": 1}, "ifri_mini_ml_lib.model_selection.BayesianSearchCV.fit": {"tf": 1}, "ifri_mini_ml_lib.model_selection.GridSearchCV.fit": {"tf": 1}, "ifri_mini_ml_lib.model_selection.RandomSearchCV.fit": {"tf": 1}, "ifri_mini_ml_lib.neural_networks.MLPClassifier.fit": {"tf": 1}, "ifri_mini_ml_lib.neural_networks.MLPRegressor.fit": {"tf": 1}, "ifri_mini_ml_lib.neural_networks.MLPRegressor.predict": {"tf": 1}, "ifri_mini_ml_lib.preprocessing.preparation.MinMaxScaler": {"tf": 1}, "ifri_mini_ml_lib.preprocessing.preparation.MissingValueHandler.impute_regression": {"tf": 2}, "ifri_mini_ml_lib.preprocessing.preparation.CategoricalEncoder": {"tf": 2.449489742783178}, "ifri_mini_ml_lib.preprocessing.preparation.CategoricalEncoder.fit": {"tf": 2}, "ifri_mini_ml_lib.preprocessing.preparation.CategoricalEncoder.fit_transform": {"tf": 1.4142135623730951}, "ifri_mini_ml_lib.preprocessing.preparation.DataSplitter.train_test_split": {"tf": 1}, "ifri_mini_ml_lib.preprocessing.preparation.DataSplitter.stratified_train_test_split": {"tf": 1}, "ifri_mini_ml_lib.preprocessing.preparation.DataSplitter.temporal_train_test_split": {"tf": 1}, "ifri_mini_ml_lib.preprocessing.preparation.DataSplitter.k_fold_split": {"tf": 1}, "ifri_mini_ml_lib.regression.LinearRegression.fit": {"tf": 1}, "ifri_mini_ml_lib.regression.PolynomialRegression.fit": {"tf": 1}, "ifri_mini_ml_lib.regression.SVR.predict": {"tf": 1}}, "df": 26, "s": {"docs": {"ifri_mini_ml_lib.regression.SVR.fit": {"tf": 1}}, "df": 1}}}}}, "n": {"docs": {}, "df": 0, "h": {"docs": {"ifri_mini_ml_lib.neural_networks.MLPClassifier.__init__": {"tf": 1}, "ifri_mini_ml_lib.neural_networks.MLPRegressor.__init__": {"tf": 1}}, "df": 2}}}, "e": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "h": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "q": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "e": {"docs": {"ifri_mini_ml_lib.model_selection.BaggingClassifier": {"tf": 1}, "ifri_mini_ml_lib.model_selection.BaggingRegressor": {"tf": 1}}, "df": 2, "s": {"docs": {"ifri_mini_ml_lib.classification.DecisionTree": {"tf": 1}, "ifri_mini_ml_lib.preprocessing.preparation.MissingValueHandler": {"tf": 1}, "ifri_mini_ml_lib.preprocessing.preparation.CategoricalEncoder": {"tf": 1.4142135623730951}}, "df": 3}}}}}}}}, "s": {"docs": {}, "df": 0, "t": {"docs": {"ifri_mini_ml_lib.classification.KNN": {"tf": 1.4142135623730951}, "ifri_mini_ml_lib.classification.KNN.predict": {"tf": 1}, "ifri_mini_ml_lib.classification.LogisticRegression": {"tf": 1.4142135623730951}, "ifri_mini_ml_lib.model_selection.BaggingClassifier": {"tf": 1.4142135623730951}, "ifri_mini_ml_lib.model_selection.BaggingClassifier.predict": {"tf": 1}, "ifri_mini_ml_lib.model_selection.BaggingRegressor": {"tf": 1.4142135623730951}, "ifri_mini_ml_lib.model_selection.BaggingRegressor.predict": {"tf": 1}, "ifri_mini_ml_lib.model_selection.GridSearchCV": {"tf": 1.4142135623730951}, "ifri_mini_ml_lib.model_selection.RandomSearchCV": {"tf": 1}, "ifri_mini_ml_lib.neural_networks.MLPClassifier.score": {"tf": 1}, "ifri_mini_ml_lib.neural_networks.MLPRegressor.score": {"tf": 1}, "ifri_mini_ml_lib.preprocessing.dimensionality_reduction.TSNE.generate_test_data": {"tf": 1.4142135623730951}, "ifri_mini_ml_lib.preprocessing.preparation.DataSplitter.train_test_split": {"tf": 3.872983346207417}, "ifri_mini_ml_lib.preprocessing.preparation.DataSplitter.stratified_train_test_split": {"tf": 3.605551275463989}, "ifri_mini_ml_lib.preprocessing.preparation.DataSplitter.temporal_train_test_split": {"tf": 3.7416573867739413}, "ifri_mini_ml_lib.preprocessing.preparation.DataSplitter.k_fold_split": {"tf": 2.449489742783178}, "ifri_mini_ml_lib.regression.SVR": {"tf": 1.4142135623730951}, "ifri_mini_ml_lib.regression.SVR.predict": {"tf": 1.7320508075688772}}, "df": 18, "s": {"docs": {"ifri_mini_ml_lib.model_selection.GridSearchCV.fit": {"tf": 1}}, "df": 1}}}, "r": {"docs": {}, "df": 0, "m": {"docs": {"ifri_mini_ml_lib.classification.LogisticRegression": {"tf": 1}}, "df": 1}}, "m": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "l": {"docs": {"ifri_mini_ml_lib.preprocessing.preparation.DataSplitter.temporal_train_test_split": {"tf": 1.7320508075688772}}, "df": 1}}}}}}}, "w": {"docs": {}, "df": 0, "o": {"docs": {"ifri_mini_ml_lib.clustering.DBSCAN": {"tf": 1}, "ifri_mini_ml_lib.clustering.DBSCAN.__init__": {"tf": 1}}, "df": 2}}, "u": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "e": {"docs": {"ifri_mini_ml_lib.neural_networks.MLPClassifier.__init__": {"tf": 1}, "ifri_mini_ml_lib.neural_networks.MLPRegressor.__init__": {"tf": 1}, "ifri_mini_ml_lib.preprocessing.dimensionality_reduction.TSNE.generate_test_data": {"tf": 1}, "ifri_mini_ml_lib.preprocessing.preparation.MinMaxScaler.__init__": {"tf": 1}, "ifri_mini_ml_lib.preprocessing.preparation.DataSplitter.k_fold_split": {"tf": 1}}, "df": 5, "[": {"docs": {}, "df": 0, "f": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {"ifri_mini_ml_lib.metrics.bias_evaluation.demographic_parity_ratio": {"tf": 1}, "ifri_mini_ml_lib.metrics.bias_evaluation.demographic_parity_difference": {"tf": 1}, "ifri_mini_ml_lib.metrics.bias_evaluation.equalized_odds_ratio": {"tf": 1}, "ifri_mini_ml_lib.metrics.bias_evaluation.equalized_odds_difference": {"tf": 1}}, "df": 4}}}}}, "d": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "[": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "y": {"docs": {"ifri_mini_ml_lib.metrics.bias_evaluation.tpr_fpr_by_group": {"tf": 1}}, "df": 1}}}}}}}}}, "s": {"docs": {"ifri_mini_ml_lib.model_selection.BayesianSearchCV.__init__": {"tf": 1}, "ifri_mini_ml_lib.preprocessing.preparation.DataSplitter.k_fold_split": {"tf": 1}}, "df": 2}}}}, "b": {"docs": {}, "df": 0, "e": {"docs": {"ifri_mini_ml_lib.regression.SVR": {"tf": 1}}, "df": 1}}}, "p": {"docs": {}, "df": 0, "r": {"docs": {"ifri_mini_ml_lib.metrics.bias_evaluation.tpr_fpr_by_group": {"tf": 1.4142135623730951}, "ifri_mini_ml_lib.metrics.bias_evaluation.equalized_odds_ratio": {"tf": 1.4142135623730951}, "ifri_mini_ml_lib.metrics.bias_evaluation.equalized_odds_difference": {"tf": 1.4142135623730951}}, "df": 3}}, "s": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "e": {"docs": {"ifri_mini_ml_lib.preprocessing.dimensionality_reduction.TSNE.__init__": {"tf": 1.4142135623730951}, "ifri_mini_ml_lib.preprocessing.dimensionality_reduction.TSNE.fit": {"tf": 1.4142135623730951}, "ifri_mini_ml_lib.preprocessing.dimensionality_reduction.TSNE.fit_transform": {"tf": 1}, "ifri_mini_ml_lib.preprocessing.dimensionality_reduction.TSNE.generate_test_data": {"tf": 1}, "ifri_mini_ml_lib.preprocessing.dimensionality_reduction.TSNE.plot_results": {"tf": 1}}, "df": 5}}}}, "k": {"docs": {"ifri_mini_ml_lib": {"tf": 1}, "ifri_mini_ml_lib.classification.KNN": {"tf": 2.23606797749979}, "ifri_mini_ml_lib.classification.KNN.__init__": {"tf": 1}, "ifri_mini_ml_lib.classification.KNN.predict": {"tf": 1}, "ifri_mini_ml_lib.clustering.KMeans": {"tf": 2.23606797749979}, "ifri_mini_ml_lib.clustering.KMeans.__init__": {"tf": 1.4142135623730951}, "ifri_mini_ml_lib.model_selection.GridSearchCV": {"tf": 1.7320508075688772}, "ifri_mini_ml_lib.model_selection.RandomSearchCV": {"tf": 2.23606797749979}, "ifri_mini_ml_lib.preprocessing.preparation.MissingValueHandler.impute_knn": {"tf": 1.7320508075688772}, "ifri_mini_ml_lib.preprocessing.preparation.DataSplitter.k_fold_split": {"tf": 2}}, "df": 10, "n": {"docs": {}, "df": 0, "n": {"docs": {"ifri_mini_ml_lib": {"tf": 1}, "ifri_mini_ml_lib.classification.KNN": {"tf": 3.1622776601683795}, "ifri_mini_ml_lib.classification.KNN.__init__": {"tf": 1}, "ifri_mini_ml_lib.classification.KNN.fit": {"tf": 1}, "ifri_mini_ml_lib.preprocessing.preparation.MissingValueHandler": {"tf": 1}, "ifri_mini_ml_lib.preprocessing.preparation.MissingValueHandler.impute_knn": {"tf": 1}}, "df": 6}}, "e": {"docs": {}, "df": 0, "y": {"docs": {}, "df": 0, "s": {"docs": {"ifri_mini_ml_lib.association_rules.Apriori.get_frequent_itemsets": {"tf": 1}, "ifri_mini_ml_lib.association_rules.Eclat.get_frequent_itemsets": {"tf": 1}, "ifri_mini_ml_lib.metrics.bias_evaluation.selection_rate_per_group": {"tf": 1}, "ifri_mini_ml_lib.model_selection.BayesianSearchCV.__init__": {"tf": 1}, "ifri_mini_ml_lib.model_selection.GridSearchCV": {"tf": 1}}, "df": 5}}, "p": {"docs": {}, "df": 0, "t": {"docs": {"ifri_mini_ml_lib.metrics.bias_evaluation.selection_rate": {"tf": 1}}, "df": 1}}, "r": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "l": {"docs": {"ifri_mini_ml_lib.model_selection.GridSearchCV": {"tf": 1}, "ifri_mini_ml_lib.regression.SVR": {"tf": 2.23606797749979}, "ifri_mini_ml_lib.regression.SVR.ker": {"tf": 1.4142135623730951}, "ifri_mini_ml_lib.regression.SVR.linear_kernel": {"tf": 1.4142135623730951}, "ifri_mini_ml_lib.regression.SVR.polynomial_kernel": {"tf": 1.4142135623730951}, "ifri_mini_ml_lib.regression.SVR.rbf_kernel": {"tf": 1.4142135623730951}, "ifri_mini_ml_lib.regression.SVR.sigmoid_kernel": {"tf": 1.4142135623730951}, "ifri_mini_ml_lib.regression.SVR.get_kernel": {"tf": 1.4142135623730951}}, "df": 8, "s": {"docs": {"ifri_mini_ml_lib.regression.SVR": {"tf": 1.7320508075688772}}, "df": 1}}}}}, "e": {"docs": {}, "df": 0, "p": {"docs": {"ifri_mini_ml_lib.preprocessing.dimensionality_reduction.PCA.__init__": {"tf": 1}}, "df": 1}}}, "m": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "s": {"docs": {"ifri_mini_ml_lib.clustering.KMeans": {"tf": 2.6457513110645907}, "ifri_mini_ml_lib.clustering.KMeans.__init__": {"tf": 1.7320508075688772}, "ifri_mini_ml_lib.clustering.KMeans.fit": {"tf": 1.4142135623730951}, "ifri_mini_ml_lib.clustering.KMeans.predict": {"tf": 1}, "ifri_mini_ml_lib.clustering.KMeans.fit_predict": {"tf": 1}, "ifri_mini_ml_lib.clustering.KMeans.plot_clusters": {"tf": 1.4142135623730951}, "ifri_mini_ml_lib.clustering.HierarchicalClustering.fit_predict": {"tf": 1.7320508075688772}}, "df": 7}}}}}, "l": {"docs": {"ifri_mini_ml_lib.preprocessing.dimensionality_reduction.TSNE": {"tf": 1.4142135623730951}}, "df": 1}, "w": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "s": {"docs": {"ifri_mini_ml_lib.regression.SVR.set_params": {"tf": 1}}, "df": 1}}}}}}, "r": {"docs": {"ifri_mini_ml_lib.association_rules.Apriori": {"tf": 1.4142135623730951}, "ifri_mini_ml_lib.metrics.evaluation_metrics.evaluate_model": {"tf": 1}}, "df": 2, "e": {"docs": {}, "df": 0, "g": {"docs": {"ifri_mini_ml_lib.classification.KNN": {"tf": 1.7320508075688772}, "ifri_mini_ml_lib.regression.SVR": {"tf": 1.4142135623730951}, "ifri_mini_ml_lib.regression.SVR.set_params": {"tf": 1}}, "df": 3, "r": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"ifri_mini_ml_lib": {"tf": 1.4142135623730951}, "ifri_mini_ml_lib.classification.KNN": {"tf": 2.23606797749979}, "ifri_mini_ml_lib.classification.KNN.__init__": {"tf": 1}, "ifri_mini_ml_lib.classification.KNN.predict": {"tf": 1}, "ifri_mini_ml_lib.classification.LogisticRegression": {"tf": 1.4142135623730951}, "ifri_mini_ml_lib.classification.LogisticRegression.__init__": {"tf": 1}, "ifri_mini_ml_lib.classification.LogisticRegression.fit": {"tf": 1}, "ifri_mini_ml_lib.model_selection.BaggingRegressor": {"tf": 1.4142135623730951}, "ifri_mini_ml_lib.neural_networks.MLPRegressor": {"tf": 1}, "ifri_mini_ml_lib.preprocessing.preparation.MissingValueHandler": {"tf": 1}, "ifri_mini_ml_lib.preprocessing.preparation.MissingValueHandler.impute_regression": {"tf": 1.4142135623730951}, "ifri_mini_ml_lib.regression.LinearRegression": {"tf": 1}, "ifri_mini_ml_lib.regression.LinearRegression.fit": {"tf": 1}, "ifri_mini_ml_lib.regression.PolynomialRegression": {"tf": 1}, "ifri_mini_ml_lib.regression.PolynomialRegression.fit": {"tf": 1}, "ifri_mini_ml_lib.regression.SVR": {"tf": 1}}, "df": 16}}}, "o": {"docs": {}, "df": 0, "r": {"docs": {"ifri_mini_ml_lib": {"tf": 1}, "ifri_mini_ml_lib.neural_networks.MLPRegressor.__init__": {"tf": 1}}, "df": 2}}}}}}, "u": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "z": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"ifri_mini_ml_lib.classification.DecisionTree": {"tf": 1.4142135623730951}, "ifri_mini_ml_lib.classification.DecisionTree.fit": {"tf": 1}, "ifri_mini_ml_lib.neural_networks.MLPClassifier.__init__": {"tf": 1}, "ifri_mini_ml_lib.neural_networks.MLPRegressor.__init__": {"tf": 1}, "ifri_mini_ml_lib.regression.SVR": {"tf": 1}}, "df": 5}}}}}}}}}}}}, "c": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "l": {"docs": {"ifri_mini_ml_lib": {"tf": 1}, "ifri_mini_ml_lib.metrics.evaluation_metrics.recall": {"tf": 1.4142135623730951}, "ifri_mini_ml_lib.metrics.evaluation_metrics.f1_score": {"tf": 1.7320508075688772}}, "df": 3}}}, "u": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "v": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "y": {"docs": {"ifri_mini_ml_lib.classification.DecisionTree.fit": {"tf": 1}}, "df": 1}}}}, "o": {"docs": {}, "df": 0, "n": {"docs": {"ifri_mini_ml_lib.classification.DecisionTree.fit": {"tf": 1}}, "df": 1}}}}}}, "o": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "s": {"docs": {"ifri_mini_ml_lib.classification.LogisticRegression": {"tf": 1}}, "df": 1}}}}}, "t": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "n": {"docs": {"ifri_mini_ml_lib.model_selection.BayesianSearchCV.get_best_params": {"tf": 1}, "ifri_mini_ml_lib.neural_networks.MLPClassifier.score": {"tf": 1}, "ifri_mini_ml_lib.neural_networks.MLPRegressor.score": {"tf": 1}}, "df": 3, "s": {"docs": {"ifri_mini_ml_lib.association_rules.Apriori.fit": {"tf": 1}, "ifri_mini_ml_lib.association_rules.Apriori.get_frequent_itemsets": {"tf": 1}, "ifri_mini_ml_lib.association_rules.Apriori.get_rules": {"tf": 1}, "ifri_mini_ml_lib.association_rules.Eclat.fit": {"tf": 1}, "ifri_mini_ml_lib.association_rules.Eclat.get_frequent_itemsets": {"tf": 1}, "ifri_mini_ml_lib.association_rules.Eclat.get_rules": {"tf": 1}, "ifri_mini_ml_lib.association_rules.FPGrowth.fit": {"tf": 1}, "ifri_mini_ml_lib.association_rules.FPGrowth.get_frequent_itemsets": {"tf": 1}, "ifri_mini_ml_lib.association_rules.FPGrowth.get_rules": {"tf": 1}, "ifri_mini_ml_lib.association_rules.DataAdapter.convert_to_transactions": {"tf": 1}, "ifri_mini_ml_lib.association_rules.DataAdapter.load_csv_to_transactions": {"tf": 1}, "ifri_mini_ml_lib.classification.DecisionTree.fit": {"tf": 1}, "ifri_mini_ml_lib.classification.DecisionTree.predict": {"tf": 1}, "ifri_mini_ml_lib.classification.KNN.predict": {"tf": 1.4142135623730951}, "ifri_mini_ml_lib.classification.LogisticRegression.predict_proba": {"tf": 1}, "ifri_mini_ml_lib.classification.LogisticRegression.predict": {"tf": 1}, "ifri_mini_ml_lib.clustering.KMeans.predict": {"tf": 1}, "ifri_mini_ml_lib.clustering.KMeans.fit_predict": {"tf": 1}, "ifri_mini_ml_lib.metrics.bias_evaluation.selection_rate": {"tf": 1}, "ifri_mini_ml_lib.metrics.bias_evaluation.selection_rate_per_group": {"tf": 1}, "ifri_mini_ml_lib.metrics.bias_evaluation.demographic_parity_ratio": {"tf": 1}, "ifri_mini_ml_lib.metrics.bias_evaluation.demographic_parity_difference": {"tf": 1}, "ifri_mini_ml_lib.metrics.bias_evaluation.tpr_fpr_by_group": {"tf": 1}, "ifri_mini_ml_lib.metrics.bias_evaluation.equalized_odds_ratio": {"tf": 1}, "ifri_mini_ml_lib.metrics.bias_evaluation.equalized_odds_difference": {"tf": 1}, "ifri_mini_ml_lib.metrics.evaluation_metrics.confusion_matrix": {"tf": 1}, "ifri_mini_ml_lib.metrics.evaluation_metrics.accuracy": {"tf": 1}, "ifri_mini_ml_lib.metrics.evaluation_metrics.precision": {"tf": 1.4142135623730951}, "ifri_mini_ml_lib.metrics.evaluation_metrics.recall": {"tf": 1.4142135623730951}, "ifri_mini_ml_lib.metrics.evaluation_metrics.f1_score": {"tf": 1.4142135623730951}, "ifri_mini_ml_lib.metrics.evaluation_metrics.calculate_inertia": {"tf": 1}, "ifri_mini_ml_lib.metrics.evaluation_metrics.calculate_silhouette": {"tf": 1}, "ifri_mini_ml_lib.model_selection.BaggingClassifier": {"tf": 1}, "ifri_mini_ml_lib.model_selection.BaggingClassifier.fit": {"tf": 1}, "ifri_mini_ml_lib.model_selection.BaggingClassifier.predict": {"tf": 1}, "ifri_mini_ml_lib.model_selection.BaggingRegressor": {"tf": 1}, "ifri_mini_ml_lib.model_selection.BaggingRegressor.fit": {"tf": 1}, "ifri_mini_ml_lib.model_selection.BaggingRegressor.predict": {"tf": 1}, "ifri_mini_ml_lib.model_selection.BayesianSearchCV.__init__": {"tf": 1}, "ifri_mini_ml_lib.model_selection.BayesianSearchCV.fit": {"tf": 1}, "ifri_mini_ml_lib.model_selection.BayesianSearchCV.get_best_params": {"tf": 1}, "ifri_mini_ml_lib.model_selection.GridSearchCV": {"tf": 1}, "ifri_mini_ml_lib.model_selection.GridSearchCV.fit": {"tf": 1}, "ifri_mini_ml_lib.model_selection.RandomSearchCV.fit": {"tf": 1}, "ifri_mini_ml_lib.neural_networks.MLPClassifier.fit": {"tf": 1}, "ifri_mini_ml_lib.neural_networks.MLPClassifier.predict": {"tf": 1}, "ifri_mini_ml_lib.neural_networks.MLPClassifier.predict_proba": {"tf": 1}, "ifri_mini_ml_lib.neural_networks.MLPClassifier.score": {"tf": 1}, "ifri_mini_ml_lib.neural_networks.MLPRegressor.fit": {"tf": 1}, "ifri_mini_ml_lib.neural_networks.MLPRegressor.predict": {"tf": 1}, "ifri_mini_ml_lib.neural_networks.MLPRegressor.score": {"tf": 1}, "ifri_mini_ml_lib.preprocessing.dimensionality_reduction.PCA.fit": {"tf": 1}, "ifri_mini_ml_lib.preprocessing.dimensionality_reduction.PCA.transform": {"tf": 1}, "ifri_mini_ml_lib.preprocessing.dimensionality_reduction.PCA.fit_transform": {"tf": 1}, "ifri_mini_ml_lib.preprocessing.dimensionality_reduction.PCA.explained_variances": {"tf": 1.4142135623730951}, "ifri_mini_ml_lib.preprocessing.dimensionality_reduction.PCA.explained_variances_ratio": {"tf": 1}, "ifri_mini_ml_lib.preprocessing.dimensionality_reduction.TSNE.fit": {"tf": 1}, "ifri_mini_ml_lib.preprocessing.dimensionality_reduction.TSNE.fit_transform": {"tf": 1}, "ifri_mini_ml_lib.preprocessing.dimensionality_reduction.TSNE.generate_test_data": {"tf": 1}, "ifri_mini_ml_lib.preprocessing.preparation.MinMaxScaler.__init__": {"tf": 1}, "ifri_mini_ml_lib.preprocessing.preparation.MinMaxScaler.fit": {"tf": 1}, "ifri_mini_ml_lib.preprocessing.preparation.MinMaxScaler.transform": {"tf": 1.4142135623730951}, "ifri_mini_ml_lib.preprocessing.preparation.MinMaxScaler.fit_transform": {"tf": 1}, "ifri_mini_ml_lib.preprocessing.preparation.MinMaxScaler.inverse_transform": {"tf": 1}, "ifri_mini_ml_lib.preprocessing.preparation.MissingValueHandler.remove_missing": {"tf": 1}, "ifri_mini_ml_lib.preprocessing.preparation.MissingValueHandler.impute_statistical": {"tf": 1}, "ifri_mini_ml_lib.preprocessing.preparation.MissingValueHandler.impute_default": {"tf": 1}, "ifri_mini_ml_lib.preprocessing.preparation.MissingValueHandler.impute_knn": {"tf": 1}, "ifri_mini_ml_lib.preprocessing.preparation.MissingValueHandler.impute_regression": {"tf": 1}, "ifri_mini_ml_lib.preprocessing.preparation.StandardScaler.transform": {"tf": 1}, "ifri_mini_ml_lib.preprocessing.preparation.StandardScaler.fit_transform": {"tf": 1}, "ifri_mini_ml_lib.preprocessing.preparation.StandardScaler.inverse_transform": {"tf": 1.4142135623730951}, "ifri_mini_ml_lib.preprocessing.preparation.CategoricalEncoder.transform": {"tf": 1}, "ifri_mini_ml_lib.preprocessing.preparation.CategoricalEncoder.fit_transform": {"tf": 1}, "ifri_mini_ml_lib.preprocessing.preparation.DataSplitter.train_test_split": {"tf": 1}, "ifri_mini_ml_lib.preprocessing.preparation.DataSplitter.stratified_train_test_split": {"tf": 1}, "ifri_mini_ml_lib.preprocessing.preparation.DataSplitter.temporal_train_test_split": {"tf": 1}, "ifri_mini_ml_lib.preprocessing.preparation.DataSplitter.k_fold_split": {"tf": 1}, "ifri_mini_ml_lib.regression.LinearRegression.predict": {"tf": 1}, "ifri_mini_ml_lib.regression.PolynomialRegression.predict": {"tf": 1}, "ifri_mini_ml_lib.regression.SVR.ker": {"tf": 1}, "ifri_mini_ml_lib.regression.SVR.linear_kernel": {"tf": 1}, "ifri_mini_ml_lib.regression.SVR.polynomial_kernel": {"tf": 1}, "ifri_mini_ml_lib.regression.SVR.rbf_kernel": {"tf": 1}, "ifri_mini_ml_lib.regression.SVR.sigmoid_kernel": {"tf": 1}, "ifri_mini_ml_lib.regression.SVR.get_kernel": {"tf": 1.4142135623730951}, "ifri_mini_ml_lib.regression.SVR.fit": {"tf": 1}, "ifri_mini_ml_lib.regression.SVR.predict": {"tf": 1}, "ifri_mini_ml_lib.regression.SVR.set_params": {"tf": 1}}, "df": 89}}}}, "r": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "v": {"docs": {}, "df": 0, "e": {"docs": {"ifri_mini_ml_lib.association_rules.Apriori.get_frequent_itemsets": {"tf": 1}, "ifri_mini_ml_lib.association_rules.Apriori.get_rules": {"tf": 1}, "ifri_mini_ml_lib.association_rules.Eclat.get_frequent_itemsets": {"tf": 1}, "ifri_mini_ml_lib.association_rules.Eclat.get_rules": {"tf": 1}, "ifri_mini_ml_lib.association_rules.FPGrowth.get_frequent_itemsets": {"tf": 1}, "ifri_mini_ml_lib.association_rules.FPGrowth.get_rules": {"tf": 1}}, "df": 6}}}}}, "a": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {"ifri_mini_ml_lib.preprocessing.dimensionality_reduction.PCA": {"tf": 1}}, "df": 1}}}}, "q": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {"ifri_mini_ml_lib.association_rules.Eclat": {"tf": 1}}, "df": 1}, "d": {"docs": {"ifri_mini_ml_lib.classification.DecisionTree": {"tf": 1.7320508075688772}, "ifri_mini_ml_lib.clustering.HierarchicalClustering": {"tf": 1}, "ifri_mini_ml_lib.clustering.HierarchicalClustering.__init__": {"tf": 1}, "ifri_mini_ml_lib.clustering.HierarchicalClustering.fit_predict": {"tf": 1}, "ifri_mini_ml_lib.preprocessing.preparation.CategoricalEncoder": {"tf": 1}, "ifri_mini_ml_lib.preprocessing.preparation.CategoricalEncoder.fit": {"tf": 1}, "ifri_mini_ml_lib.preprocessing.preparation.CategoricalEncoder.fit_transform": {"tf": 1}, "ifri_mini_ml_lib.preprocessing.preparation.DataSplitter.stratified_train_test_split": {"tf": 1}}, "df": 8}}}}}}, "s": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "h": {"docs": {"ifri_mini_ml_lib.association_rules.Eclat": {"tf": 1}}, "df": 1}}}}}, "p": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"ifri_mini_ml_lib.classification.DecisionTree.fit": {"tf": 1}}, "df": 1}}}}}}}, "u": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "t": {"docs": {"ifri_mini_ml_lib.preprocessing.dimensionality_reduction.PCA.fit_transform": {"tf": 1}, "ifri_mini_ml_lib.preprocessing.dimensionality_reduction.TSNE": {"tf": 1}}, "df": 2, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"ifri_mini_ml_lib.clustering.DBSCAN.plot_clusters": {"tf": 1}}, "df": 1}}}, "s": {"docs": {"ifri_mini_ml_lib.preprocessing.dimensionality_reduction.TSNE.plot_results": {"tf": 1.4142135623730951}}, "df": 1}}}}, "t": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "d": {"docs": {"ifri_mini_ml_lib.preprocessing.preparation.StandardScaler.inverse_transform": {"tf": 1}}, "df": 1}}}}}}, "d": {"docs": {"ifri_mini_ml_lib.association_rules.DataAdapter": {"tf": 1.7320508075688772}}, "df": 1, "u": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "e": {"docs": {"ifri_mini_ml_lib.clustering.KMeans.plot_clusters": {"tf": 1}, "ifri_mini_ml_lib.clustering.HierarchicalClustering.plot_clusters": {"tf": 1}}, "df": 2, "d": {"docs": {"ifri_mini_ml_lib.preprocessing.dimensionality_reduction.PCA.transform": {"tf": 1}}, "df": 1}}, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"ifri_mini_ml_lib.clustering.KMeans.plot_clusters": {"tf": 1}, "ifri_mini_ml_lib.clustering.DBSCAN.plot_clusters": {"tf": 1}, "ifri_mini_ml_lib.preprocessing.dimensionality_reduction.PCA": {"tf": 1}, "ifri_mini_ml_lib.preprocessing.dimensionality_reduction.TSNE": {"tf": 1}}, "df": 4}}}}}}}, "l": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "h": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "s": {"docs": {"ifri_mini_ml_lib.classification.LogisticRegression.fit": {"tf": 1}}, "df": 1}}}}}}}}}}, "u": {"docs": {"ifri_mini_ml_lib.neural_networks.MLPClassifier.__init__": {"tf": 1.4142135623730951}, "ifri_mini_ml_lib.neural_networks.MLPRegressor.__init__": {"tf": 1.4142135623730951}}, "df": 2}}, "p": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "b": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "y": {"docs": {"ifri_mini_ml_lib.clustering.KMeans": {"tf": 1}, "ifri_mini_ml_lib.model_selection.BaggingClassifier": {"tf": 1}, "ifri_mini_ml_lib.model_selection.BaggingRegressor": {"tf": 1}, "ifri_mini_ml_lib.model_selection.RandomSearchCV": {"tf": 1}, "ifri_mini_ml_lib.neural_networks.MLPClassifier.__init__": {"tf": 1}, "ifri_mini_ml_lib.neural_networks.MLPRegressor.__init__": {"tf": 1}, "ifri_mini_ml_lib.preprocessing.dimensionality_reduction.TSNE.__init__": {"tf": 1}}, "df": 7}}}}}, "l": {"docs": {}, "df": 0, "e": {"docs": {"ifri_mini_ml_lib.preprocessing.preparation.DataSplitter.__init__": {"tf": 1}}, "df": 1}}}}}}}}}, "l": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "e": {"docs": {"ifri_mini_ml_lib.preprocessing.preparation.MissingValueHandler.impute_default": {"tf": 1}}, "df": 1, "s": {"docs": {"ifri_mini_ml_lib.preprocessing.preparation.MissingValueHandler.impute_default": {"tf": 1}, "ifri_mini_ml_lib.preprocessing.preparation.CategoricalEncoder": {"tf": 1.4142135623730951}}, "df": 2}}}}}}, "a": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "h": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "d": {"docs": {"ifri_mini_ml_lib.clustering.KMeans.fit": {"tf": 1}}, "df": 1}}}}}, "m": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "v": {"docs": {}, "df": 0, "e": {"docs": {"ifri_mini_ml_lib.preprocessing.preparation.MissingValueHandler.remove_missing": {"tf": 1}}, "df": 1, "s": {"docs": {"ifri_mini_ml_lib.preprocessing.preparation.MissingValueHandler.remove_missing": {"tf": 1}}, "df": 1}}}}}, "v": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {"ifri_mini_ml_lib.preprocessing.preparation.StandardScaler.inverse_transform": {"tf": 1}}, "df": 1}}}}}}}, "u": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "e": {"docs": {"ifri_mini_ml_lib.association_rules.Apriori": {"tf": 2.449489742783178}, "ifri_mini_ml_lib.association_rules.Eclat": {"tf": 2.23606797749979}, "ifri_mini_ml_lib.association_rules.FPGrowth": {"tf": 2.23606797749979}, "ifri_mini_ml_lib.association_rules.DataAdapter": {"tf": 1}, "ifri_mini_ml_lib.association_rules.DataAdapter.convert_to_transactions": {"tf": 1}}, "df": 5, "s": {"docs": {"ifri_mini_ml_lib": {"tf": 1}, "ifri_mini_ml_lib.association_rules.Apriori": {"tf": 3}, "ifri_mini_ml_lib.association_rules.Apriori.fit": {"tf": 1}, "ifri_mini_ml_lib.association_rules.Apriori.get_rules": {"tf": 1.4142135623730951}, "ifri_mini_ml_lib.association_rules.Eclat": {"tf": 3}, "ifri_mini_ml_lib.association_rules.Eclat.get_rules": {"tf": 1.4142135623730951}, "ifri_mini_ml_lib.association_rules.FPGrowth": {"tf": 2.8284271247461903}, "ifri_mini_ml_lib.association_rules.FPGrowth.get_rules": {"tf": 1.4142135623730951}, "ifri_mini_ml_lib.association_rules.DataAdapter": {"tf": 1}}, "df": 9, "[": {"docs": {}, "df": 0, ":": {"2": {"docs": {"ifri_mini_ml_lib.association_rules.FPGrowth": {"tf": 1}}, "df": 1}, "docs": {}, "df": 0}}}}}, "n": {"docs": {"ifri_mini_ml_lib.model_selection.BayesianSearchCV.fit": {"tf": 1}, "ifri_mini_ml_lib.model_selection.GridSearchCV.fit": {"tf": 1}}, "df": 2, "s": {"docs": {"ifri_mini_ml_lib.model_selection.RandomSearchCV.fit": {"tf": 1}}, "df": 1}}}, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "h": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"ifri_mini_ml_lib.association_rules.Eclat": {"tf": 1}}, "df": 1}}}, "e": {"docs": {"ifri_mini_ml_lib.classification.LogisticRegression": {"tf": 1.4142135623730951}, "ifri_mini_ml_lib.classification.LogisticRegression.__init__": {"tf": 1.4142135623730951}, "ifri_mini_ml_lib.metrics.bias_evaluation.selection_rate": {"tf": 1.4142135623730951}, "ifri_mini_ml_lib.metrics.bias_evaluation.selection_rate_per_group": {"tf": 1.4142135623730951}, "ifri_mini_ml_lib.metrics.bias_evaluation.demographic_parity_ratio": {"tf": 1.4142135623730951}, "ifri_mini_ml_lib.metrics.bias_evaluation.tpr_fpr_by_group": {"tf": 1.4142135623730951}, "ifri_mini_ml_lib.neural_networks.MLPClassifier.__init__": {"tf": 1.4142135623730951}, "ifri_mini_ml_lib.neural_networks.MLPRegressor.__init__": {"tf": 2}, "ifri_mini_ml_lib.preprocessing.dimensionality_reduction.TSNE": {"tf": 1.4142135623730951}, "ifri_mini_ml_lib.preprocessing.dimensionality_reduction.TSNE.__init__": {"tf": 1.4142135623730951}, "ifri_mini_ml_lib.regression.LinearRegression": {"tf": 1.4142135623730951}, "ifri_mini_ml_lib.regression.PolynomialRegression": {"tf": 1.4142135623730951}}, "df": 12, "s": {"docs": {"ifri_mini_ml_lib.metrics.bias_evaluation.demographic_parity_ratio": {"tf": 1}, "ifri_mini_ml_lib.metrics.bias_evaluation.demographic_parity_difference": {"tf": 1.4142135623730951}}, "df": 2}}, "i": {"docs": {}, "df": 0, "o": {"docs": {"ifri_mini_ml_lib.metrics.bias_evaluation.demographic_parity_ratio": {"tf": 1.7320508075688772}, "ifri_mini_ml_lib.metrics.bias_evaluation.equalized_odds_ratio": {"tf": 1}, "ifri_mini_ml_lib.preprocessing.dimensionality_reduction.PCA.explained_variances_ratio": {"tf": 1.4142135623730951}, "ifri_mini_ml_lib.preprocessing.dimensionality_reduction.PCA.plot_cumulative_explained_variance_ratio": {"tf": 1.4142135623730951}}, "df": 4, "s": {"docs": {"ifri_mini_ml_lib.preprocessing.dimensionality_reduction.PCA.explained_variances_ratio": {"tf": 1}}, "df": 1}}}}, "i": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {"ifri_mini_ml_lib.association_rules.DataAdapter.convert_to_transactions": {"tf": 1}, "ifri_mini_ml_lib.association_rules.DataAdapter.load_csv_to_transactions": {"tf": 1}, "ifri_mini_ml_lib.classification.DecisionTree.predict": {"tf": 1}, "ifri_mini_ml_lib.preprocessing.dimensionality_reduction.TSNE.fit": {"tf": 1}, "ifri_mini_ml_lib.preprocessing.preparation.MinMaxScaler.transform": {"tf": 1}, "ifri_mini_ml_lib.preprocessing.preparation.MinMaxScaler.inverse_transform": {"tf": 1}, "ifri_mini_ml_lib.preprocessing.preparation.MissingValueHandler.impute_regression": {"tf": 1}, "ifri_mini_ml_lib.preprocessing.preparation.StandardScaler.transform": {"tf": 1}, "ifri_mini_ml_lib.preprocessing.preparation.StandardScaler.inverse_transform": {"tf": 1}, "ifri_mini_ml_lib.preprocessing.preparation.CategoricalEncoder.fit": {"tf": 1}}, "df": 10}}}}, "n": {"docs": {}, "df": 0, "d": {"docs": {"ifri_mini_ml_lib.preprocessing.dimensionality_reduction.TSNE.fit": {"tf": 1}}, "df": 1, "o": {"docs": {}, "df": 0, "m": {"docs": {"ifri_mini_ml_lib.clustering.KMeans": {"tf": 1.7320508075688772}, "ifri_mini_ml_lib.clustering.KMeans.__init__": {"tf": 2.23606797749979}, "ifri_mini_ml_lib.model_selection.BaggingClassifier": {"tf": 1.4142135623730951}, "ifri_mini_ml_lib.model_selection.BaggingRegressor": {"tf": 1.4142135623730951}, "ifri_mini_ml_lib.model_selection.BayesianSearchCV.__init__": {"tf": 1}, "ifri_mini_ml_lib.model_selection.RandomSearchCV": {"tf": 2.23606797749979}, "ifri_mini_ml_lib.model_selection.RandomSearchCV.fit": {"tf": 1}, "ifri_mini_ml_lib.neural_networks.MLPClassifier.__init__": {"tf": 1}, "ifri_mini_ml_lib.neural_networks.MLPRegressor.__init__": {"tf": 1}, "ifri_mini_ml_lib.preprocessing.dimensionality_reduction.TSNE.__init__": {"tf": 1.4142135623730951}, "ifri_mini_ml_lib.preprocessing.dimensionality_reduction.TSNE.fit": {"tf": 1}, "ifri_mini_ml_lib.preprocessing.dimensionality_reduction.TSNE.generate_test_data": {"tf": 1.4142135623730951}, "ifri_mini_ml_lib.preprocessing.preparation.DataSplitter.__init__": {"tf": 1.4142135623730951}}, "df": 13, "l": {"docs": {}, "df": 0, "y": {"docs": {"ifri_mini_ml_lib.model_selection.RandomSearchCV": {"tf": 1}, "ifri_mini_ml_lib.model_selection.RandomSearchCV.fit": {"tf": 1}, "ifri_mini_ml_lib.preprocessing.preparation.DataSplitter.train_test_split": {"tf": 1}}, "df": 3}}, "s": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "h": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "v": {"docs": {"ifri_mini_ml_lib.model_selection.RandomSearchCV": {"tf": 1}}, "df": 1}}}}}}}}}}}, "g": {"docs": {}, "df": 0, "e": {"docs": {"ifri_mini_ml_lib.preprocessing.preparation.MinMaxScaler": {"tf": 1.4142135623730951}, "ifri_mini_ml_lib.preprocessing.preparation.MinMaxScaler.__init__": {"tf": 2.449489742783178}, "ifri_mini_ml_lib.preprocessing.preparation.MinMaxScaler.transform": {"tf": 1.7320508075688772}, "ifri_mini_ml_lib.preprocessing.preparation.MinMaxScaler.fit_transform": {"tf": 1}}, "df": 4, "s": {"docs": {"ifri_mini_ml_lib.metrics.evaluation_metrics.calculate_silhouette": {"tf": 1}}, "df": 1}}}}, "d": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "s": {"docs": {"ifri_mini_ml_lib.clustering.DBSCAN": {"tf": 1}, "ifri_mini_ml_lib.clustering.DBSCAN.__init__": {"tf": 1}}, "df": 2}}, "a": {"docs": {}, "df": 0, "l": {"docs": {"ifri_mini_ml_lib.regression.SVR.rbf_kernel": {"tf": 1}}, "df": 1}}}}}, "o": {"docs": {}, "df": 0, "w": {"docs": {"ifri_mini_ml_lib.association_rules.DataAdapter.load_csv_to_transactions": {"tf": 1}, "ifri_mini_ml_lib.preprocessing.preparation.StandardScaler.fit": {"tf": 1}}, "df": 2, "s": {"docs": {"ifri_mini_ml_lib.preprocessing.preparation.MissingValueHandler.remove_missing": {"tf": 1.4142135623730951}}, "df": 1}}, "l": {"docs": {}, "df": 0, "l": {"docs": {"ifri_mini_ml_lib.preprocessing.dimensionality_reduction.TSNE.generate_test_data": {"tf": 1.4142135623730951}}, "df": 1}}, "b": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "t": {"docs": {"ifri_mini_ml_lib.preprocessing.preparation.MinMaxScaler": {"tf": 1}}, "df": 1, "s": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"ifri_mini_ml_lib.preprocessing.preparation.MinMaxScaler": {"tf": 1}}, "df": 1}}}}}}}}}}}, "m": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "e": {"docs": {"ifri_mini_ml_lib.metrics.evaluation_metrics.evaluate_model": {"tf": 1}}, "df": 1}, "p": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "p": {"docs": {"ifri_mini_ml_lib.neural_networks.MLPClassifier.__init__": {"tf": 1}, "ifri_mini_ml_lib.neural_networks.MLPRegressor.__init__": {"tf": 1}}, "df": 2}}}}}}, "b": {"docs": {}, "df": 0, "f": {"docs": {"ifri_mini_ml_lib.model_selection.GridSearchCV": {"tf": 1}, "ifri_mini_ml_lib.regression.SVR": {"tf": 1.7320508075688772}, "ifri_mini_ml_lib.regression.SVR.rbf_kernel": {"tf": 1}}, "df": 3}}, "^": {"2": {"docs": {"ifri_mini_ml_lib.neural_networks.MLPRegressor.score": {"tf": 1.4142135623730951}}, "df": 1}, "docs": {}, "df": 0}}, "h": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "h": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "l": {"docs": {"ifri_mini_ml_lib": {"tf": 1}, "ifri_mini_ml_lib.clustering.HierarchicalClustering": {"tf": 2}, "ifri_mini_ml_lib.clustering.HierarchicalClustering.__init__": {"tf": 1}, "ifri_mini_ml_lib.clustering.HierarchicalClustering.fit_predict": {"tf": 1}, "ifri_mini_ml_lib.clustering.HierarchicalClustering.plot_dendrogram": {"tf": 2}, "ifri_mini_ml_lib.clustering.HierarchicalClustering.plot_clusters": {"tf": 1}}, "df": 6, "c": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"ifri_mini_ml_lib.clustering.HierarchicalClustering": {"tf": 1.7320508075688772}, "ifri_mini_ml_lib.clustering.HierarchicalClustering.plot_dendrogram": {"tf": 1}}, "df": 2}}}}}}}}}}}}}}}}}}}}, "s": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "y": {"docs": {"ifri_mini_ml_lib.classification.LogisticRegression": {"tf": 1}}, "df": 1}}}}}, "g": {"docs": {}, "df": 0, "h": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"ifri_mini_ml_lib.clustering.KMeans.plot_clusters": {"tf": 1}, "ifri_mini_ml_lib.clustering.HierarchicalClustering.plot_clusters": {"tf": 1}, "ifri_mini_ml_lib.metrics.evaluation_metrics.calculate_silhouette": {"tf": 1}}, "df": 3}}}}, "d": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {"ifri_mini_ml_lib.neural_networks.MLPClassifier.__init__": {"tf": 1.4142135623730951}, "ifri_mini_ml_lib.neural_networks.MLPRegressor.__init__": {"tf": 1.4142135623730951}}, "df": 2}}}}}, "e": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"ifri_mini_ml_lib.association_rules.DataAdapter.load_csv_to_transactions": {"tf": 1.7320508075688772}}, "df": 1}}}}, "r": {"docs": {}, "df": 0, "e": {"docs": {"ifri_mini_ml_lib.metrics.bias_evaluation.selection_rate": {"tf": 1}}, "df": 1}}}, "a": {"docs": {}, "df": 0, "s": {"docs": {"ifri_mini_ml_lib.preprocessing.preparation.StandardScaler": {"tf": 1}}, "df": 1, "n": {"docs": {"ifri_mini_ml_lib.classification.DecisionTree.predict": {"tf": 1}, "ifri_mini_ml_lib.preprocessing.preparation.MinMaxScaler.transform": {"tf": 1}, "ifri_mini_ml_lib.preprocessing.preparation.MinMaxScaler.inverse_transform": {"tf": 1}}, "df": 3}}, "n": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "e": {"docs": {"ifri_mini_ml_lib.preprocessing.preparation.MissingValueHandler": {"tf": 1}}, "df": 1, "s": {"docs": {"ifri_mini_ml_lib.classification.LogisticRegression": {"tf": 1}}, "df": 1}, "r": {"docs": {"ifri_mini_ml_lib.preprocessing.preparation.MissingValueHandler.remove_missing": {"tf": 1}, "ifri_mini_ml_lib.preprocessing.preparation.MissingValueHandler.impute_statistical": {"tf": 1}, "ifri_mini_ml_lib.preprocessing.preparation.MissingValueHandler.impute_default": {"tf": 1}, "ifri_mini_ml_lib.preprocessing.preparation.MissingValueHandler.impute_knn": {"tf": 1}, "ifri_mini_ml_lib.preprocessing.preparation.MissingValueHandler.impute_regression": {"tf": 1}}, "df": 5}}, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"ifri_mini_ml_lib.classification.LogisticRegression.fit": {"tf": 1}, "ifri_mini_ml_lib.classification.LogisticRegression.predict": {"tf": 1}}, "df": 2}}}}}}}, "o": {"docs": {}, "df": 0, "w": {"docs": {"ifri_mini_ml_lib.metrics.evaluation_metrics.calculate_silhouette": {"tf": 1}}, "df": 1}, "t": {"docs": {"ifri_mini_ml_lib.preprocessing.preparation.CategoricalEncoder": {"tf": 1}}, "df": 1}}, "y": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"ifri_mini_ml_lib.model_selection.BayesianSearchCV": {"tf": 1}, "ifri_mini_ml_lib.model_selection.BayesianSearchCV.__init__": {"tf": 1}, "ifri_mini_ml_lib.model_selection.BayesianSearchCV.get_best_params": {"tf": 1}, "ifri_mini_ml_lib.model_selection.GridSearchCV": {"tf": 1.4142135623730951}, "ifri_mini_ml_lib.model_selection.RandomSearchCV": {"tf": 1}, "ifri_mini_ml_lib.model_selection.RandomSearchCV.fit": {"tf": 1}}, "df": 6, "s": {"docs": {"ifri_mini_ml_lib.model_selection.BayesianSearchCV.fit": {"tf": 1}, "ifri_mini_ml_lib.model_selection.BayesianSearchCV.get_best_params": {"tf": 1}, "ifri_mini_ml_lib.model_selection.GridSearchCV": {"tf": 1.4142135623730951}, "ifri_mini_ml_lib.model_selection.GridSearchCV.fit": {"tf": 1}, "ifri_mini_ml_lib.model_selection.RandomSearchCV": {"tf": 1.7320508075688772}}, "df": 5}}}}}}}}}}}}}}}, "p": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "y": {"docs": {"ifri_mini_ml_lib.regression.SVR": {"tf": 1}}, "df": 1, "n": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "l": {"docs": {"ifri_mini_ml_lib": {"tf": 1}, "ifri_mini_ml_lib.classification.LogisticRegression": {"tf": 1}, "ifri_mini_ml_lib.classification.LogisticRegression.fit": {"tf": 1.4142135623730951}, "ifri_mini_ml_lib.regression.PolynomialRegression": {"tf": 1.4142135623730951}, "ifri_mini_ml_lib.regression.PolynomialRegression.fit": {"tf": 1}, "ifri_mini_ml_lib.regression.PolynomialRegression.predict": {"tf": 1}, "ifri_mini_ml_lib.regression.SVR": {"tf": 1.4142135623730951}, "ifri_mini_ml_lib.regression.SVR.polynomial_kernel": {"tf": 1}}, "df": 8, "r": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"ifri_mini_ml_lib.regression.PolynomialRegression.fit": {"tf": 1}}, "df": 1}}}}}}}}}}}}}}}}}}, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "t": {"docs": {"ifri_mini_ml_lib.clustering.KMeans.fit": {"tf": 1}, "ifri_mini_ml_lib.metrics.evaluation_metrics.calculate_inertia": {"tf": 1.4142135623730951}, "ifri_mini_ml_lib.metrics.evaluation_metrics.calculate_silhouette": {"tf": 1.4142135623730951}}, "df": 3, "s": {"docs": {"ifri_mini_ml_lib.classification.KNN": {"tf": 1}, "ifri_mini_ml_lib.clustering.KMeans": {"tf": 1}, "ifri_mini_ml_lib.clustering.KMeans.fit": {"tf": 1.4142135623730951}, "ifri_mini_ml_lib.clustering.KMeans.plot_clusters": {"tf": 1}, "ifri_mini_ml_lib.clustering.DBSCAN": {"tf": 2}, "ifri_mini_ml_lib.clustering.DBSCAN.__init__": {"tf": 1.4142135623730951}, "ifri_mini_ml_lib.clustering.HierarchicalClustering.__init__": {"tf": 1}, "ifri_mini_ml_lib.clustering.HierarchicalClustering.plot_clusters": {"tf": 1}, "ifri_mini_ml_lib.model_selection.BayesianSearchCV.__init__": {"tf": 1.4142135623730951}}, "df": 9}}}}, "s": {"docs": {"ifri_mini_ml_lib.metrics.bias_evaluation.selection_rate": {"tf": 1.7320508075688772}, "ifri_mini_ml_lib.metrics.bias_evaluation.selection_rate_per_group": {"tf": 1}, "ifri_mini_ml_lib.metrics.bias_evaluation.demographic_parity_ratio": {"tf": 1}, "ifri_mini_ml_lib.metrics.bias_evaluation.demographic_parity_difference": {"tf": 1}, "ifri_mini_ml_lib.metrics.bias_evaluation.tpr_fpr_by_group": {"tf": 1}, "ifri_mini_ml_lib.metrics.bias_evaluation.equalized_odds_ratio": {"tf": 1}, "ifri_mini_ml_lib.metrics.bias_evaluation.equalized_odds_difference": {"tf": 1}}, "df": 7, "i": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "v": {"docs": {}, "df": 0, "e": {"docs": {"ifri_mini_ml_lib.metrics.bias_evaluation.selection_rate": {"tf": 1.7320508075688772}, "ifri_mini_ml_lib.metrics.bias_evaluation.selection_rate_per_group": {"tf": 1}, "ifri_mini_ml_lib.metrics.bias_evaluation.demographic_parity_ratio": {"tf": 1}, "ifri_mini_ml_lib.metrics.bias_evaluation.demographic_parity_difference": {"tf": 1}, "ifri_mini_ml_lib.metrics.bias_evaluation.tpr_fpr_by_group": {"tf": 1.7320508075688772}, "ifri_mini_ml_lib.metrics.bias_evaluation.equalized_odds_ratio": {"tf": 1}, "ifri_mini_ml_lib.metrics.bias_evaluation.equalized_odds_difference": {"tf": 1}, "ifri_mini_ml_lib.metrics.evaluation_metrics.precision": {"tf": 1.4142135623730951}, "ifri_mini_ml_lib.metrics.evaluation_metrics.recall": {"tf": 1.4142135623730951}, "ifri_mini_ml_lib.metrics.evaluation_metrics.f1_score": {"tf": 1.4142135623730951}}, "df": 10, "s": {"docs": {"ifri_mini_ml_lib.metrics.evaluation_metrics.precision": {"tf": 2}, "ifri_mini_ml_lib.metrics.evaluation_metrics.recall": {"tf": 1.7320508075688772}}, "df": 2}}}}}}, "s": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "b": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "e": {"docs": {"ifri_mini_ml_lib.metrics.evaluation_metrics.confusion_matrix": {"tf": 1}, "ifri_mini_ml_lib.model_selection.GridSearchCV.fit": {"tf": 1}}, "df": 2}}}}}}}, "r": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"ifri_mini_ml_lib": {"tf": 1}}, "df": 1}}}}}}}}}}, "c": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"ifri_mini_ml_lib": {"tf": 1}, "ifri_mini_ml_lib.metrics.evaluation_metrics.precision": {"tf": 1.4142135623730951}, "ifri_mini_ml_lib.metrics.evaluation_metrics.f1_score": {"tf": 1.7320508075688772}}, "df": 3}}}}}}, "s": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "e": {"docs": {"ifri_mini_ml_lib.association_rules.DataAdapter.convert_to_transactions": {"tf": 1}}, "df": 1}}}, "r": {"docs": {}, "df": 0, "v": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"ifri_mini_ml_lib.preprocessing.preparation.DataSplitter.stratified_train_test_split": {"tf": 1}, "ifri_mini_ml_lib.preprocessing.preparation.DataSplitter.temporal_train_test_split": {"tf": 1}}, "df": 2}}}}}}}, "v": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "t": {"docs": {"ifri_mini_ml_lib.classification.DecisionTree": {"tf": 1}}, "df": 1}}}, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "y": {"docs": {"ifri_mini_ml_lib.preprocessing.preparation.MinMaxScaler.transform": {"tf": 1}, "ifri_mini_ml_lib.preprocessing.preparation.StandardScaler.transform": {"tf": 1}}, "df": 2}}}}}}}, "d": {"docs": {"ifri_mini_ml_lib.metrics.bias_evaluation.selection_rate": {"tf": 1}, "ifri_mini_ml_lib.metrics.bias_evaluation.selection_rate_per_group": {"tf": 1}, "ifri_mini_ml_lib.metrics.bias_evaluation.demographic_parity_ratio": {"tf": 1}, "ifri_mini_ml_lib.metrics.bias_evaluation.demographic_parity_difference": {"tf": 1}, "ifri_mini_ml_lib.metrics.bias_evaluation.tpr_fpr_by_group": {"tf": 1}, "ifri_mini_ml_lib.metrics.bias_evaluation.equalized_odds_ratio": {"tf": 1}, "ifri_mini_ml_lib.metrics.bias_evaluation.equalized_odds_difference": {"tf": 1}, "ifri_mini_ml_lib.metrics.evaluation_metrics.confusion_matrix": {"tf": 1}, "ifri_mini_ml_lib.metrics.evaluation_metrics.accuracy": {"tf": 1}, "ifri_mini_ml_lib.metrics.evaluation_metrics.precision": {"tf": 1}, "ifri_mini_ml_lib.metrics.evaluation_metrics.recall": {"tf": 1}, "ifri_mini_ml_lib.metrics.evaluation_metrics.f1_score": {"tf": 1}, "ifri_mini_ml_lib.model_selection.BaggingClassifier": {"tf": 1.4142135623730951}, "ifri_mini_ml_lib.model_selection.BaggingClassifier.predict": {"tf": 1}, "ifri_mini_ml_lib.model_selection.BaggingRegressor": {"tf": 1.4142135623730951}, "ifri_mini_ml_lib.model_selection.BaggingRegressor.predict": {"tf": 1}, "ifri_mini_ml_lib.neural_networks.MLPClassifier.predict": {"tf": 1}, "ifri_mini_ml_lib.neural_networks.MLPRegressor.predict": {"tf": 1}, "ifri_mini_ml_lib.regression.SVR.predict": {"tf": 1}}, "df": 19, "i": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "t": {"docs": {"ifri_mini_ml_lib.classification.KNN": {"tf": 1.4142135623730951}, "ifri_mini_ml_lib.classification.LogisticRegression": {"tf": 1.4142135623730951}, "ifri_mini_ml_lib.clustering.KMeans": {"tf": 1}, "ifri_mini_ml_lib.clustering.KMeans.predict": {"tf": 1.4142135623730951}, "ifri_mini_ml_lib.clustering.KMeans.fit_predict": {"tf": 1.4142135623730951}, "ifri_mini_ml_lib.clustering.DBSCAN": {"tf": 1}, "ifri_mini_ml_lib.clustering.DBSCAN.fit_predict": {"tf": 1}, "ifri_mini_ml_lib.clustering.DBSCAN.plot_clusters": {"tf": 1}, "ifri_mini_ml_lib.clustering.HierarchicalClustering": {"tf": 1}, "ifri_mini_ml_lib.clustering.HierarchicalClustering.plot_dendrogram": {"tf": 1}, "ifri_mini_ml_lib.model_selection.BaggingClassifier": {"tf": 1.7320508075688772}, "ifri_mini_ml_lib.model_selection.BaggingClassifier.predict": {"tf": 1}, "ifri_mini_ml_lib.model_selection.BaggingRegressor": {"tf": 1.7320508075688772}, "ifri_mini_ml_lib.model_selection.BaggingRegressor.predict": {"tf": 1}, "ifri_mini_ml_lib.model_selection.BayesianSearchCV.__init__": {"tf": 1}, "ifri_mini_ml_lib.model_selection.GridSearchCV": {"tf": 1}, "ifri_mini_ml_lib.model_selection.RandomSearchCV": {"tf": 1.4142135623730951}, "ifri_mini_ml_lib.neural_networks.MLPClassifier.predict": {"tf": 1}, "ifri_mini_ml_lib.neural_networks.MLPClassifier.predict_proba": {"tf": 1}, "ifri_mini_ml_lib.neural_networks.MLPRegressor.predict": {"tf": 1.4142135623730951}, "ifri_mini_ml_lib.regression.LinearRegression.predict": {"tf": 1}, "ifri_mini_ml_lib.regression.PolynomialRegression.predict": {"tf": 1}, "ifri_mini_ml_lib.regression.SVR.predict": {"tf": 1}}, "df": 23, "s": {"docs": {"ifri_mini_ml_lib.classification.DecisionTree.predict": {"tf": 1}, "ifri_mini_ml_lib.classification.KNN.predict": {"tf": 1}, "ifri_mini_ml_lib.classification.LogisticRegression.predict_proba": {"tf": 1}, "ifri_mini_ml_lib.classification.LogisticRegression.predict": {"tf": 1}, "ifri_mini_ml_lib.clustering.KMeans.predict": {"tf": 1}, "ifri_mini_ml_lib.model_selection.BaggingClassifier.predict": {"tf": 1}, "ifri_mini_ml_lib.model_selection.BaggingRegressor.predict": {"tf": 1}, "ifri_mini_ml_lib.regression.SVR.predict": {"tf": 1}}, "df": 8}, "e": {"docs": {}, "df": 0, "d": {"docs": {"ifri_mini_ml_lib.classification.DecisionTree.predict": {"tf": 1}, "ifri_mini_ml_lib.classification.KNN.predict": {"tf": 1}, "ifri_mini_ml_lib.classification.LogisticRegression.predict": {"tf": 1}, "ifri_mini_ml_lib.metrics.bias_evaluation.selection_rate": {"tf": 1.4142135623730951}, "ifri_mini_ml_lib.metrics.bias_evaluation.selection_rate_per_group": {"tf": 1}, "ifri_mini_ml_lib.metrics.bias_evaluation.demographic_parity_ratio": {"tf": 1}, "ifri_mini_ml_lib.metrics.bias_evaluation.demographic_parity_difference": {"tf": 1}, "ifri_mini_ml_lib.metrics.bias_evaluation.tpr_fpr_by_group": {"tf": 1}, "ifri_mini_ml_lib.metrics.bias_evaluation.equalized_odds_ratio": {"tf": 1}, "ifri_mini_ml_lib.metrics.evaluation_metrics.confusion_matrix": {"tf": 1.4142135623730951}, "ifri_mini_ml_lib.metrics.evaluation_metrics.accuracy": {"tf": 1}, "ifri_mini_ml_lib.metrics.evaluation_metrics.precision": {"tf": 1.4142135623730951}, "ifri_mini_ml_lib.metrics.evaluation_metrics.recall": {"tf": 1}, "ifri_mini_ml_lib.metrics.evaluation_metrics.f1_score": {"tf": 1}, "ifri_mini_ml_lib.model_selection.BaggingClassifier.predict": {"tf": 1}, "ifri_mini_ml_lib.neural_networks.MLPClassifier.predict": {"tf": 1}, "ifri_mini_ml_lib.neural_networks.MLPRegressor.predict": {"tf": 1}, "ifri_mini_ml_lib.regression.LinearRegression.predict": {"tf": 1}, "ifri_mini_ml_lib.regression.PolynomialRegression.predict": {"tf": 1}, "ifri_mini_ml_lib.regression.SVR.predict": {"tf": 1}}, "df": 20}}, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"ifri_mini_ml_lib.classification.KNN.fit": {"tf": 1}, "ifri_mini_ml_lib.neural_networks.MLPRegressor.score": {"tf": 1}}, "df": 2, "s": {"docs": {"ifri_mini_ml_lib.classification.KNN": {"tf": 1.7320508075688772}, "ifri_mini_ml_lib.classification.KNN.fit": {"tf": 1}, "ifri_mini_ml_lib.classification.LogisticRegression": {"tf": 1}, "ifri_mini_ml_lib.classification.LogisticRegression.predict": {"tf": 1}, "ifri_mini_ml_lib.metrics.bias_evaluation.selection_rate": {"tf": 1}, "ifri_mini_ml_lib.metrics.bias_evaluation.equalized_odds_difference": {"tf": 1}, "ifri_mini_ml_lib.metrics.evaluation_metrics.accuracy": {"tf": 1.7320508075688772}, "ifri_mini_ml_lib.model_selection.BaggingClassifier": {"tf": 1}, "ifri_mini_ml_lib.model_selection.BaggingRegressor": {"tf": 1}, "ifri_mini_ml_lib.model_selection.BaggingRegressor.predict": {"tf": 1.4142135623730951}, "ifri_mini_ml_lib.model_selection.RandomSearchCV": {"tf": 1}, "ifri_mini_ml_lib.neural_networks.MLPClassifier.predict": {"tf": 1}, "ifri_mini_ml_lib.neural_networks.MLPClassifier.predict_proba": {"tf": 1}, "ifri_mini_ml_lib.regression.LinearRegression.predict": {"tf": 1}, "ifri_mini_ml_lib.regression.PolynomialRegression.predict": {"tf": 1}}, "df": 15}}}, "n": {"docs": {}, "df": 0, "g": {"docs": {"ifri_mini_ml_lib.preprocessing.preparation.MissingValueHandler.impute_regression": {"tf": 1}}, "df": 1}}}}}}}, "t": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "d": {"docs": {"ifri_mini_ml_lib.model_selection.BaggingClassifier": {"tf": 1.4142135623730951}, "ifri_mini_ml_lib.model_selection.BaggingRegressor": {"tf": 1.4142135623730951}}, "df": 2}}}}}}}}, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "t": {"docs": {"ifri_mini_ml_lib.association_rules.Apriori": {"tf": 1.4142135623730951}, "ifri_mini_ml_lib.association_rules.Eclat": {"tf": 1.4142135623730951}, "ifri_mini_ml_lib.association_rules.FPGrowth": {"tf": 1.4142135623730951}, "ifri_mini_ml_lib.association_rules.DataAdapter": {"tf": 1.7320508075688772}, "ifri_mini_ml_lib.metrics.evaluation_metrics.calculate_inertia": {"tf": 1}, "ifri_mini_ml_lib.metrics.evaluation_metrics.calculate_silhouette": {"tf": 1}, "ifri_mini_ml_lib.model_selection.BayesianSearchCV.get_best_params": {"tf": 1}, "ifri_mini_ml_lib.preprocessing.dimensionality_reduction.PCA.transform": {"tf": 1}, "ifri_mini_ml_lib.preprocessing.dimensionality_reduction.PCA.explained_variances": {"tf": 1}, "ifri_mini_ml_lib.preprocessing.dimensionality_reduction.PCA.explained_variances_ratio": {"tf": 1}}, "df": 10}, "c": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "l": {"docs": {"ifri_mini_ml_lib.preprocessing.dimensionality_reduction.PCA": {"tf": 1.7320508075688772}, "ifri_mini_ml_lib.preprocessing.dimensionality_reduction.PCA.__init__": {"tf": 1}}, "df": 2}}}}}}}, "o": {"docs": {}, "df": 0, "v": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "d": {"docs": {"ifri_mini_ml_lib.classification.KNN.predict": {"tf": 1}, "ifri_mini_ml_lib.clustering.DBSCAN.fit_predict": {"tf": 1}, "ifri_mini_ml_lib.model_selection.RandomSearchCV": {"tf": 1}, "ifri_mini_ml_lib.neural_networks.MLPClassifier.fit": {"tf": 1}, "ifri_mini_ml_lib.neural_networks.MLPClassifier.score": {"tf": 1}, "ifri_mini_ml_lib.neural_networks.MLPRegressor.fit": {"tf": 1}, "ifri_mini_ml_lib.preprocessing.preparation.CategoricalEncoder.fit": {"tf": 1}, "ifri_mini_ml_lib.preprocessing.preparation.DataSplitter.train_test_split": {"tf": 1}, "ifri_mini_ml_lib.preprocessing.preparation.DataSplitter.temporal_train_test_split": {"tf": 1}, "ifri_mini_ml_lib.preprocessing.preparation.DataSplitter.k_fold_split": {"tf": 1}}, "df": 10}, "s": {"docs": {"ifri_mini_ml_lib.preprocessing.preparation.CategoricalEncoder": {"tf": 1}}, "df": 1}}, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"ifri_mini_ml_lib.metrics.evaluation_metrics.calculate_inertia": {"tf": 1}}, "df": 1}}}}}}, "b": {"docs": {}, "df": 0, "a": {"docs": {"ifri_mini_ml_lib.classification.LogisticRegression": {"tf": 1}}, "df": 1, "b": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "y": {"docs": {"ifri_mini_ml_lib.classification.LogisticRegression": {"tf": 1}, "ifri_mini_ml_lib.classification.LogisticRegression.predict_proba": {"tf": 1}, "ifri_mini_ml_lib.classification.LogisticRegression.predict": {"tf": 1}}, "df": 3}, "i": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {"ifri_mini_ml_lib.classification.LogisticRegression": {"tf": 1}, "ifri_mini_ml_lib.classification.LogisticRegression.predict_proba": {"tf": 1}, "ifri_mini_ml_lib.neural_networks.MLPClassifier.predict_proba": {"tf": 1.4142135623730951}}, "df": 3}}}}}}}}, "s": {"docs": {"ifri_mini_ml_lib.neural_networks.MLPClassifier.predict_proba": {"tf": 1}}, "df": 1}}}, "c": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "s": {"docs": {"ifri_mini_ml_lib.clustering.HierarchicalClustering.__init__": {"tf": 1}}, "df": 1}}}, "s": {"docs": {}, "df": 0, "s": {"docs": {"ifri_mini_ml_lib.model_selection.BayesianSearchCV": {"tf": 1}, "ifri_mini_ml_lib.preprocessing.preparation.MissingValueHandler.remove_missing": {"tf": 1}, "ifri_mini_ml_lib.preprocessing.preparation.StandardScaler.inverse_transform": {"tf": 1}}, "df": 3}}}}, "p": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"ifri_mini_ml_lib.metrics.bias_evaluation.selection_rate": {"tf": 1}, "ifri_mini_ml_lib.preprocessing.preparation.MissingValueHandler.remove_missing": {"tf": 1}, "ifri_mini_ml_lib.preprocessing.preparation.DataSplitter.train_test_split": {"tf": 1.4142135623730951}, "ifri_mini_ml_lib.preprocessing.preparation.DataSplitter.stratified_train_test_split": {"tf": 1.4142135623730951}, "ifri_mini_ml_lib.preprocessing.preparation.DataSplitter.temporal_train_test_split": {"tf": 1.4142135623730951}, "ifri_mini_ml_lib.regression.SVR": {"tf": 1}}, "df": 6}}}}}}}, "j": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "t": {"docs": {"ifri_mini_ml_lib.preprocessing.dimensionality_reduction.TSNE.fit": {"tf": 1}}, "df": 1, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"ifri_mini_ml_lib.preprocessing.dimensionality_reduction.PCA.transform": {"tf": 1}, "ifri_mini_ml_lib.preprocessing.dimensionality_reduction.PCA.fit_transform": {"tf": 1}, "ifri_mini_ml_lib.preprocessing.dimensionality_reduction.TSNE": {"tf": 1.4142135623730951}, "ifri_mini_ml_lib.preprocessing.dimensionality_reduction.TSNE.fit_transform": {"tf": 1}, "ifri_mini_ml_lib.preprocessing.dimensionality_reduction.TSNE.plot_results": {"tf": 1.4142135623730951}}, "df": 5}}}, "e": {"docs": {}, "df": 0, "d": {"docs": {"ifri_mini_ml_lib.preprocessing.dimensionality_reduction.PCA.transform": {"tf": 1}, "ifri_mini_ml_lib.preprocessing.dimensionality_reduction.PCA.fit_transform": {"tf": 1}, "ifri_mini_ml_lib.preprocessing.dimensionality_reduction.TSNE.fit_transform": {"tf": 1}, "ifri_mini_ml_lib.preprocessing.dimensionality_reduction.TSNE.plot_results": {"tf": 1}}, "df": 4}}}}}}}}, "c": {"docs": {}, "df": 0, "a": {"docs": {"ifri_mini_ml_lib": {"tf": 1}, "ifri_mini_ml_lib.clustering.KMeans.plot_clusters": {"tf": 1.4142135623730951}, "ifri_mini_ml_lib.clustering.DBSCAN.plot_clusters": {"tf": 1}, "ifri_mini_ml_lib.clustering.HierarchicalClustering.plot_clusters": {"tf": 1}, "ifri_mini_ml_lib.preprocessing.dimensionality_reduction.PCA": {"tf": 1}, "ifri_mini_ml_lib.preprocessing.dimensionality_reduction.PCA.__init__": {"tf": 1.4142135623730951}, "ifri_mini_ml_lib.preprocessing.dimensionality_reduction.PCA.fit": {"tf": 1}, "ifri_mini_ml_lib.preprocessing.dimensionality_reduction.TSNE.__init__": {"tf": 1.4142135623730951}}, "df": 8}}, "a": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "y": {"docs": {"ifri_mini_ml_lib.association_rules.Eclat": {"tf": 1}}, "df": 1}}}}}}}, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "s": {"docs": {"ifri_mini_ml_lib.clustering.KMeans": {"tf": 1}}, "df": 1}}}}}}}, "a": {"docs": {}, "df": 0, "m": {"1": {"docs": {"ifri_mini_ml_lib.model_selection.RandomSearchCV": {"tf": 1}}, "df": 1}, "2": {"docs": {"ifri_mini_ml_lib.model_selection.RandomSearchCV": {"tf": 1}}, "df": 1}, "docs": {"ifri_mini_ml_lib.model_selection.BayesianSearchCV.__init__": {"tf": 2}, "ifri_mini_ml_lib.model_selection.GridSearchCV": {"tf": 1.7320508075688772}, "ifri_mini_ml_lib.model_selection.RandomSearchCV": {"tf": 2}}, "df": 3, "e": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"ifri_mini_ml_lib.model_selection.BayesianSearchCV.__init__": {"tf": 1}, "ifri_mini_ml_lib.model_selection.GridSearchCV": {"tf": 1.4142135623730951}, "ifri_mini_ml_lib.model_selection.RandomSearchCV": {"tf": 1}, "ifri_mini_ml_lib.neural_networks.MLPClassifier.__init__": {"tf": 2}, "ifri_mini_ml_lib.neural_networks.MLPRegressor.__init__": {"tf": 2}, "ifri_mini_ml_lib.regression.SVR": {"tf": 1.4142135623730951}}, "df": 6, "s": {"docs": {"ifri_mini_ml_lib.classification.DecisionTree": {"tf": 1}, "ifri_mini_ml_lib.classification.LogisticRegression.__init__": {"tf": 1}, "ifri_mini_ml_lib.classification.LogisticRegression.fit": {"tf": 1}, "ifri_mini_ml_lib.clustering.KMeans.__init__": {"tf": 1.4142135623730951}, "ifri_mini_ml_lib.clustering.DBSCAN.__init__": {"tf": 1}, "ifri_mini_ml_lib.clustering.HierarchicalClustering.__init__": {"tf": 1}, "ifri_mini_ml_lib.model_selection.BayesianSearchCV.__init__": {"tf": 1}, "ifri_mini_ml_lib.neural_networks.MLPClassifier.__init__": {"tf": 1}, "ifri_mini_ml_lib.neural_networks.MLPClassifier.fit": {"tf": 1}, "ifri_mini_ml_lib.neural_networks.MLPClassifier.predict": {"tf": 1}, "ifri_mini_ml_lib.neural_networks.MLPClassifier.predict_proba": {"tf": 1}, "ifri_mini_ml_lib.neural_networks.MLPClassifier.score": {"tf": 1}, "ifri_mini_ml_lib.neural_networks.MLPRegressor.__init__": {"tf": 1}, "ifri_mini_ml_lib.neural_networks.MLPRegressor.fit": {"tf": 1}, "ifri_mini_ml_lib.neural_networks.MLPRegressor.predict": {"tf": 1}, "ifri_mini_ml_lib.neural_networks.MLPRegressor.score": {"tf": 1}, "ifri_mini_ml_lib.preprocessing.dimensionality_reduction.TSNE.__init__": {"tf": 1}, "ifri_mini_ml_lib.regression.SVR.set_params": {"tf": 1.4142135623730951}}, "df": 18}}}}}, "s": {"docs": {"ifri_mini_ml_lib.model_selection.BayesianSearchCV.fit": {"tf": 1.4142135623730951}, "ifri_mini_ml_lib.model_selection.BayesianSearchCV.get_best_params": {"tf": 1.7320508075688772}, "ifri_mini_ml_lib.model_selection.GridSearchCV.fit": {"tf": 1.4142135623730951}, "ifri_mini_ml_lib.model_selection.RandomSearchCV": {"tf": 1.4142135623730951}, "ifri_mini_ml_lib.regression.SVR.set_params": {"tf": 1}}, "df": 5}}}, "i": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "y": {"docs": {"ifri_mini_ml_lib.metrics.bias_evaluation.demographic_parity_ratio": {"tf": 1.4142135623730951}, "ifri_mini_ml_lib.metrics.bias_evaluation.demographic_parity_difference": {"tf": 1}}, "df": 2}}}}, "t": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "s": {"docs": {"ifri_mini_ml_lib.association_rules.Eclat": {"tf": 1}, "ifri_mini_ml_lib.association_rules.FPGrowth": {"tf": 1}}, "df": 2}}}}}, "h": {"docs": {"ifri_mini_ml_lib.association_rules.DataAdapter.load_csv_to_transactions": {"tf": 1.4142135623730951}}, "df": 1}}, "p": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"ifri_mini_ml_lib.association_rules.Eclat": {"tf": 1}}, "df": 1}}}, "n": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "s": {"docs": {"ifri_mini_ml_lib.association_rules.DataAdapter": {"tf": 1.4142135623730951}, "ifri_mini_ml_lib.preprocessing.preparation.MinMaxScaler.fit": {"tf": 1.4142135623730951}, "ifri_mini_ml_lib.preprocessing.preparation.StandardScaler": {"tf": 1.4142135623730951}}, "df": 3}}}}}, "d": {"docs": {"ifri_mini_ml_lib.association_rules.DataAdapter": {"tf": 1.7320508075688772}, "ifri_mini_ml_lib.preprocessing.preparation.MissingValueHandler.remove_missing": {"tf": 1.4142135623730951}, "ifri_mini_ml_lib.preprocessing.preparation.MissingValueHandler.impute_statistical": {"tf": 1.4142135623730951}, "ifri_mini_ml_lib.preprocessing.preparation.MissingValueHandler.impute_default": {"tf": 1.4142135623730951}, "ifri_mini_ml_lib.preprocessing.preparation.MissingValueHandler.impute_knn": {"tf": 1.4142135623730951}, "ifri_mini_ml_lib.preprocessing.preparation.MissingValueHandler.impute_regression": {"tf": 1.4142135623730951}, "ifri_mini_ml_lib.preprocessing.preparation.StandardScaler.fit": {"tf": 1}, "ifri_mini_ml_lib.preprocessing.preparation.StandardScaler.transform": {"tf": 1.4142135623730951}, "ifri_mini_ml_lib.preprocessing.preparation.StandardScaler.fit_transform": {"tf": 1.4142135623730951}, "ifri_mini_ml_lib.preprocessing.preparation.StandardScaler.inverse_transform": {"tf": 1.4142135623730951}, "ifri_mini_ml_lib.preprocessing.preparation.CategoricalEncoder.fit": {"tf": 1.4142135623730951}, "ifri_mini_ml_lib.preprocessing.preparation.CategoricalEncoder.transform": {"tf": 1.4142135623730951}, "ifri_mini_ml_lib.preprocessing.preparation.CategoricalEncoder.fit_transform": {"tf": 1.7320508075688772}, "ifri_mini_ml_lib.preprocessing.preparation.DataSplitter.train_test_split": {"tf": 1.4142135623730951}, "ifri_mini_ml_lib.preprocessing.preparation.DataSplitter.stratified_train_test_split": {"tf": 1.4142135623730951}, "ifri_mini_ml_lib.preprocessing.preparation.DataSplitter.temporal_train_test_split": {"tf": 1.4142135623730951}, "ifri_mini_ml_lib.preprocessing.preparation.DataSplitter.k_fold_split": {"tf": 1.4142135623730951}}, "df": 17}, "e": {"docs": {}, "df": 0, "r": {"docs": {"ifri_mini_ml_lib.classification.DecisionTree": {"tf": 1.4142135623730951}, "ifri_mini_ml_lib.metrics.bias_evaluation.selection_rate_per_group": {"tf": 1}, "ifri_mini_ml_lib.metrics.bias_evaluation.demographic_parity_ratio": {"tf": 1}, "ifri_mini_ml_lib.metrics.bias_evaluation.demographic_parity_difference": {"tf": 1}, "ifri_mini_ml_lib.metrics.bias_evaluation.tpr_fpr_by_group": {"tf": 1}, "ifri_mini_ml_lib.metrics.bias_evaluation.equalized_odds_ratio": {"tf": 1.4142135623730951}, "ifri_mini_ml_lib.metrics.bias_evaluation.equalized_odds_difference": {"tf": 1.4142135623730951}}, "df": 7, "f": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "s": {"docs": {"ifri_mini_ml_lib.classification.LogisticRegression.fit": {"tf": 1}, "ifri_mini_ml_lib.clustering.DBSCAN.fit_predict": {"tf": 1}, "ifri_mini_ml_lib.clustering.HierarchicalClustering": {"tf": 1}, "ifri_mini_ml_lib.clustering.HierarchicalClustering.fit_predict": {"tf": 1}}, "df": 4}, "a": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "e": {"docs": {"ifri_mini_ml_lib.model_selection.RandomSearchCV": {"tf": 1}}, "df": 1}}}}, "e": {"docs": {}, "df": 0, "d": {"docs": {"ifri_mini_ml_lib.preprocessing.dimensionality_reduction.TSNE": {"tf": 1}}, "df": 1}}}}}}, "c": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"ifri_mini_ml_lib.neural_networks.MLPClassifier": {"tf": 1}, "ifri_mini_ml_lib.neural_networks.MLPRegressor": {"tf": 1}}, "df": 2}}}}}}}, "p": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "x": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "y": {"docs": {"ifri_mini_ml_lib.preprocessing.dimensionality_reduction.TSNE": {"tf": 1}, "ifri_mini_ml_lib.preprocessing.dimensionality_reduction.TSNE.__init__": {"tf": 1.7320508075688772}, "ifri_mini_ml_lib.preprocessing.dimensionality_reduction.TSNE.fit": {"tf": 1}}, "df": 3}}}}}}}}, "n": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "y": {"docs": {"ifri_mini_ml_lib.regression.SVR": {"tf": 1}}, "df": 1}}}}}}, "h": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "e": {"docs": {"ifri_mini_ml_lib.classification.KNN.fit": {"tf": 1}}, "df": 1}}}}, "l": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "t": {"docs": {"ifri_mini_ml_lib.clustering.KMeans": {"tf": 1}, "ifri_mini_ml_lib.clustering.KMeans.plot_clusters": {"tf": 1}, "ifri_mini_ml_lib.clustering.DBSCAN": {"tf": 1}, "ifri_mini_ml_lib.clustering.DBSCAN.plot_clusters": {"tf": 1}, "ifri_mini_ml_lib.clustering.HierarchicalClustering": {"tf": 1}, "ifri_mini_ml_lib.clustering.HierarchicalClustering.plot_dendrogram": {"tf": 1}, "ifri_mini_ml_lib.clustering.HierarchicalClustering.plot_clusters": {"tf": 1.4142135623730951}, "ifri_mini_ml_lib.preprocessing.dimensionality_reduction.PCA.plot_cov_matrix": {"tf": 1}, "ifri_mini_ml_lib.preprocessing.dimensionality_reduction.PCA.plot_cumulative_explained_variance_ratio": {"tf": 1.4142135623730951}, "ifri_mini_ml_lib.preprocessing.dimensionality_reduction.TSNE.plot_results": {"tf": 1.7320508075688772}}, "df": 10, "s": {"docs": {"ifri_mini_ml_lib.clustering.KMeans.plot_clusters": {"tf": 1}, "ifri_mini_ml_lib.clustering.DBSCAN.plot_clusters": {"tf": 1}, "ifri_mini_ml_lib.clustering.HierarchicalClustering.plot_dendrogram": {"tf": 1}, "ifri_mini_ml_lib.clustering.HierarchicalClustering.plot_clusters": {"tf": 1}}, "df": 4}}}}}, "s": {"docs": {"ifri_mini_ml_lib.metrics.evaluation_metrics.calculate_inertia": {"tf": 1}, "ifri_mini_ml_lib.preprocessing.preparation.StandardScaler": {"tf": 1}}, "df": 2, "v": {"docs": {}, "df": 0, "r": {"docs": {"ifri_mini_ml_lib": {"tf": 1}, "ifri_mini_ml_lib.regression.SVR": {"tf": 1.4142135623730951}, "ifri_mini_ml_lib.regression.SVR.fit": {"tf": 1}}, "df": 3}, "c": {"docs": {"ifri_mini_ml_lib.model_selection.BayesianSearchCV.__init__": {"tf": 1.4142135623730951}, "ifri_mini_ml_lib.model_selection.GridSearchCV": {"tf": 1.4142135623730951}}, "df": 2}}, "c": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "e": {"docs": {"ifri_mini_ml_lib.preprocessing.preparation.MinMaxScaler.transform": {"tf": 1}, "ifri_mini_ml_lib.preprocessing.preparation.MinMaxScaler.inverse_transform": {"tf": 1.7320508075688772}, "ifri_mini_ml_lib.preprocessing.preparation.StandardScaler.inverse_transform": {"tf": 1.4142135623730951}}, "df": 3, "r": {"docs": {"ifri_mini_ml_lib.preprocessing.preparation.MinMaxScaler": {"tf": 1}, "ifri_mini_ml_lib.preprocessing.preparation.MinMaxScaler.__init__": {"tf": 1.7320508075688772}, "ifri_mini_ml_lib.preprocessing.preparation.MinMaxScaler.fit": {"tf": 1.7320508075688772}, "ifri_mini_ml_lib.preprocessing.preparation.MinMaxScaler.transform": {"tf": 1.4142135623730951}, "ifri_mini_ml_lib.preprocessing.preparation.MinMaxScaler.fit_transform": {"tf": 1}, "ifri_mini_ml_lib.preprocessing.preparation.MinMaxScaler.inverse_transform": {"tf": 1}, "ifri_mini_ml_lib.preprocessing.preparation.StandardScaler": {"tf": 1}, "ifri_mini_ml_lib.preprocessing.preparation.StandardScaler.fit": {"tf": 1.4142135623730951}, "ifri_mini_ml_lib.preprocessing.preparation.StandardScaler.transform": {"tf": 1}, "ifri_mini_ml_lib.preprocessing.preparation.StandardScaler.fit_transform": {"tf": 1.4142135623730951}, "ifri_mini_ml_lib.preprocessing.preparation.StandardScaler.inverse_transform": {"tf": 1}}, "df": 11, "s": {"docs": {"ifri_mini_ml_lib": {"tf": 1}}, "df": 1}}, "s": {"docs": {"ifri_mini_ml_lib.preprocessing.preparation.MinMaxScaler": {"tf": 1}, "ifri_mini_ml_lib.preprocessing.preparation.StandardScaler": {"tf": 1}}, "df": 2}, "d": {"docs": {"ifri_mini_ml_lib.preprocessing.preparation.MinMaxScaler.transform": {"tf": 1}, "ifri_mini_ml_lib.preprocessing.preparation.MinMaxScaler.fit_transform": {"tf": 1}, "ifri_mini_ml_lib.preprocessing.preparation.MinMaxScaler.inverse_transform": {"tf": 2}, "ifri_mini_ml_lib.preprocessing.preparation.StandardScaler.transform": {"tf": 1}, "ifri_mini_ml_lib.preprocessing.preparation.StandardScaler.fit_transform": {"tf": 1}, "ifri_mini_ml_lib.preprocessing.preparation.StandardScaler.inverse_transform": {"tf": 1.4142135623730951}}, "df": 6}}, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"ifri_mini_ml_lib.preprocessing.preparation.MinMaxScaler": {"tf": 1.4142135623730951}, "ifri_mini_ml_lib.preprocessing.preparation.MinMaxScaler.fit": {"tf": 1}, "ifri_mini_ml_lib.regression.SVR": {"tf": 1}}, "df": 3}}}}, "t": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"ifri_mini_ml_lib.clustering.HierarchicalClustering.plot_clusters": {"tf": 1}}, "df": 1}}}}}, "o": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "e": {"docs": {"ifri_mini_ml_lib": {"tf": 1.4142135623730951}, "ifri_mini_ml_lib.metrics.evaluation_metrics.accuracy": {"tf": 1}, "ifri_mini_ml_lib.metrics.evaluation_metrics.precision": {"tf": 1}, "ifri_mini_ml_lib.metrics.evaluation_metrics.recall": {"tf": 1}, "ifri_mini_ml_lib.metrics.evaluation_metrics.f1_score": {"tf": 1.4142135623730951}, "ifri_mini_ml_lib.metrics.evaluation_metrics.calculate_silhouette": {"tf": 2}, "ifri_mini_ml_lib.model_selection.BayesianSearchCV.__init__": {"tf": 1.4142135623730951}, "ifri_mini_ml_lib.model_selection.BayesianSearchCV.fit": {"tf": 1.4142135623730951}, "ifri_mini_ml_lib.model_selection.GridSearchCV": {"tf": 1.7320508075688772}, "ifri_mini_ml_lib.model_selection.GridSearchCV.fit": {"tf": 1.4142135623730951}, "ifri_mini_ml_lib.model_selection.RandomSearchCV": {"tf": 2.449489742783178}, "ifri_mini_ml_lib.neural_networks.MLPRegressor.score": {"tf": 1.4142135623730951}}, "df": 12}, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"ifri_mini_ml_lib.model_selection.BayesianSearchCV.__init__": {"tf": 1}, "ifri_mini_ml_lib.model_selection.GridSearchCV": {"tf": 1}, "ifri_mini_ml_lib.model_selection.RandomSearchCV": {"tf": 2}}, "df": 3}}}}}, "r": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "h": {"docs": {"ifri_mini_ml_lib.model_selection.RandomSearchCV": {"tf": 1}}, "df": 1}}}}}, "i": {"docs": {}, "df": 0, "k": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "t": {"docs": {"ifri_mini_ml_lib.preprocessing.preparation.StandardScaler": {"tf": 1}}, "df": 1}}}}}, "n": {"docs": {}, "df": 0, "e": {"docs": {"ifri_mini_ml_lib": {"tf": 1}, "ifri_mini_ml_lib.preprocessing.dimensionality_reduction.TSNE": {"tf": 1}, "ifri_mini_ml_lib.preprocessing.dimensionality_reduction.TSNE.__init__": {"tf": 1}, "ifri_mini_ml_lib.preprocessing.dimensionality_reduction.TSNE.fit": {"tf": 1}, "ifri_mini_ml_lib.preprocessing.dimensionality_reduction.TSNE.plot_results": {"tf": 1}}, "df": 5}}, "e": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "t": {"docs": {"ifri_mini_ml_lib.model_selection.GridSearchCV": {"tf": 1}}, "df": 1, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"ifri_mini_ml_lib": {"tf": 1}, "ifri_mini_ml_lib.metrics.bias_evaluation.selection_rate": {"tf": 1.4142135623730951}, "ifri_mini_ml_lib.metrics.bias_evaluation.selection_rate_per_group": {"tf": 1.4142135623730951}, "ifri_mini_ml_lib.metrics.bias_evaluation.demographic_parity_difference": {"tf": 1.4142135623730951}}, "df": 4}}}, "e": {"docs": {}, "df": 0, "d": {"docs": {"ifri_mini_ml_lib.metrics.bias_evaluation.selection_rate_per_group": {"tf": 1}, "ifri_mini_ml_lib.preprocessing.dimensionality_reduction.PCA": {"tf": 1}, "ifri_mini_ml_lib.preprocessing.preparation.CategoricalEncoder.fit": {"tf": 1}}, "df": 3}}, "s": {"docs": {"ifri_mini_ml_lib.model_selection.RandomSearchCV": {"tf": 1}, "ifri_mini_ml_lib.model_selection.RandomSearchCV.fit": {"tf": 1}}, "df": 2}}}}, "f": {"docs": {"ifri_mini_ml_lib.association_rules.Apriori.fit": {"tf": 1}, "ifri_mini_ml_lib.association_rules.Eclat.fit": {"tf": 1}, "ifri_mini_ml_lib.association_rules.FPGrowth.fit": {"tf": 1}, "ifri_mini_ml_lib.model_selection.BayesianSearchCV.fit": {"tf": 1}, "ifri_mini_ml_lib.model_selection.GridSearchCV.fit": {"tf": 1}, "ifri_mini_ml_lib.neural_networks.MLPClassifier.fit": {"tf": 1}, "ifri_mini_ml_lib.neural_networks.MLPRegressor.fit": {"tf": 1}, "ifri_mini_ml_lib.preprocessing.preparation.MinMaxScaler.fit": {"tf": 1}}, "df": 8}}, "a": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "h": {"docs": {"ifri_mini_ml_lib": {"tf": 1.4142135623730951}, "ifri_mini_ml_lib.association_rules.Eclat": {"tf": 1}, "ifri_mini_ml_lib.model_selection.BayesianSearchCV": {"tf": 1}, "ifri_mini_ml_lib.model_selection.BayesianSearchCV.__init__": {"tf": 1}, "ifri_mini_ml_lib.model_selection.GridSearchCV": {"tf": 1.4142135623730951}, "ifri_mini_ml_lib.model_selection.GridSearchCV.fit": {"tf": 2.23606797749979}, "ifri_mini_ml_lib.model_selection.RandomSearchCV": {"tf": 2.23606797749979}, "ifri_mini_ml_lib.model_selection.RandomSearchCV.fit": {"tf": 1.4142135623730951}}, "df": 8}}}}, "p": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "b": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"ifri_mini_ml_lib.association_rules.Apriori": {"tf": 1}}, "df": 1}}}}}}, "a": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {"ifri_mini_ml_lib.association_rules.DataAdapter.convert_to_transactions": {"tf": 1.4142135623730951}, "ifri_mini_ml_lib.association_rules.DataAdapter.load_csv_to_transactions": {"tf": 1.4142135623730951}}, "df": 2}}, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"ifri_mini_ml_lib.metrics.evaluation_metrics.calculate_inertia": {"tf": 1}}, "df": 1}}}}}}}}, "t": {"docs": {"ifri_mini_ml_lib.association_rules.Apriori": {"tf": 1.4142135623730951}, "ifri_mini_ml_lib.association_rules.Eclat": {"tf": 1.4142135623730951}, "ifri_mini_ml_lib.association_rules.Eclat.fit": {"tf": 1}, "ifri_mini_ml_lib.association_rules.FPGrowth": {"tf": 1.7320508075688772}, "ifri_mini_ml_lib.association_rules.FPGrowth.fit": {"tf": 1}, "ifri_mini_ml_lib.association_rules.DataAdapter.convert_to_transactions": {"tf": 1}, "ifri_mini_ml_lib.classification.KNN.predict": {"tf": 1}, "ifri_mini_ml_lib.model_selection.BaggingClassifier": {"tf": 1}, "ifri_mini_ml_lib.model_selection.BaggingRegressor": {"tf": 1}, "ifri_mini_ml_lib.model_selection.GridSearchCV.fit": {"tf": 1}, "ifri_mini_ml_lib.model_selection.RandomSearchCV": {"tf": 1.4142135623730951}, "ifri_mini_ml_lib.preprocessing.preparation.DataSplitter.train_test_split": {"tf": 2.6457513110645907}, "ifri_mini_ml_lib.preprocessing.preparation.DataSplitter.stratified_train_test_split": {"tf": 2.6457513110645907}, "ifri_mini_ml_lib.preprocessing.preparation.DataSplitter.temporal_train_test_split": {"tf": 2.449489742783178}, "ifri_mini_ml_lib.regression.SVR.set_params": {"tf": 1.4142135623730951}}, "df": 15, "s": {"docs": {"ifri_mini_ml_lib.association_rules.Apriori.get_frequent_itemsets": {"tf": 1}, "ifri_mini_ml_lib.association_rules.Eclat.get_frequent_itemsets": {"tf": 1}, "ifri_mini_ml_lib.association_rules.DataAdapter": {"tf": 1}, "ifri_mini_ml_lib.preprocessing.preparation.DataSplitter.train_test_split": {"tf": 1}, "ifri_mini_ml_lib.preprocessing.preparation.DataSplitter.stratified_train_test_split": {"tf": 1}, "ifri_mini_ml_lib.preprocessing.preparation.DataSplitter.temporal_train_test_split": {"tf": 1}}, "df": 6}, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "s": {"docs": {"ifri_mini_ml_lib.regression.SVR.get_kernel": {"tf": 1}}, "df": 1}}}}}}, "v": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "l": {"docs": {"ifri_mini_ml_lib.classification.DecisionTree": {"tf": 1}}, "df": 1}}}}}, "n": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "e": {"docs": {"ifri_mini_ml_lib.classification.KNN.fit": {"tf": 1}}, "df": 1}, "i": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "v": {"docs": {}, "df": 0, "e": {"docs": {"ifri_mini_ml_lib.metrics.bias_evaluation.selection_rate_per_group": {"tf": 1.4142135623730951}, "ifri_mini_ml_lib.metrics.bias_evaluation.demographic_parity_ratio": {"tf": 1}, "ifri_mini_ml_lib.metrics.bias_evaluation.demographic_parity_difference": {"tf": 1}, "ifri_mini_ml_lib.metrics.bias_evaluation.tpr_fpr_by_group": {"tf": 1}, "ifri_mini_ml_lib.metrics.bias_evaluation.equalized_odds_ratio": {"tf": 1}, "ifri_mini_ml_lib.metrics.bias_evaluation.equalized_odds_difference": {"tf": 1}, "ifri_mini_ml_lib.preprocessing.preparation.MinMaxScaler": {"tf": 1}}, "df": 7}, "i": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "y": {"docs": {"ifri_mini_ml_lib.metrics.evaluation_metrics.recall": {"tf": 1}}, "df": 1}}}}}}}}}, "e": {"docs": {}, "df": 0, "d": {"docs": {"ifri_mini_ml_lib.clustering.KMeans": {"tf": 1}, "ifri_mini_ml_lib.clustering.KMeans.__init__": {"tf": 1}, "ifri_mini_ml_lib.model_selection.BaggingClassifier": {"tf": 1}, "ifri_mini_ml_lib.model_selection.BaggingRegressor": {"tf": 1}, "ifri_mini_ml_lib.model_selection.RandomSearchCV": {"tf": 1}, "ifri_mini_ml_lib.neural_networks.MLPClassifier.__init__": {"tf": 1}, "ifri_mini_ml_lib.neural_networks.MLPRegressor.__init__": {"tf": 1}, "ifri_mini_ml_lib.preprocessing.dimensionality_reduction.TSNE.__init__": {"tf": 1}, "ifri_mini_ml_lib.preprocessing.dimensionality_reduction.TSNE.generate_test_data": {"tf": 1}, "ifri_mini_ml_lib.preprocessing.preparation.DataSplitter.__init__": {"tf": 1.7320508075688772}, "ifri_mini_ml_lib.preprocessing.preparation.DataSplitter.train_test_split": {"tf": 1}, "ifri_mini_ml_lib.preprocessing.preparation.DataSplitter.stratified_train_test_split": {"tf": 1}, "ifri_mini_ml_lib.preprocessing.preparation.DataSplitter.k_fold_split": {"tf": 1}}, "df": 13}}, "c": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "d": {"docs": {"ifri_mini_ml_lib.neural_networks.MLPClassifier.__init__": {"tf": 1}, "ifri_mini_ml_lib.neural_networks.MLPRegressor.__init__": {"tf": 1}, "ifri_mini_ml_lib.regression.SVR.linear_kernel": {"tf": 1}, "ifri_mini_ml_lib.regression.SVR.polynomial_kernel": {"tf": 1}, "ifri_mini_ml_lib.regression.SVR.rbf_kernel": {"tf": 1}, "ifri_mini_ml_lib.regression.SVR.sigmoid_kernel": {"tf": 1}}, "df": 6}}}}, "r": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {"ifri_mini_ml_lib.preprocessing.preparation.MinMaxScaler.fit": {"tf": 1}, "ifri_mini_ml_lib.preprocessing.preparation.MinMaxScaler.transform": {"tf": 1}, "ifri_mini_ml_lib.preprocessing.preparation.CategoricalEncoder.fit": {"tf": 1}, "ifri_mini_ml_lib.preprocessing.preparation.CategoricalEncoder.fit_transform": {"tf": 1}, "ifri_mini_ml_lib.preprocessing.preparation.DataSplitter.train_test_split": {"tf": 1}, "ifri_mini_ml_lib.preprocessing.preparation.DataSplitter.stratified_train_test_split": {"tf": 1}, "ifri_mini_ml_lib.preprocessing.preparation.DataSplitter.temporal_train_test_split": {"tf": 1.4142135623730951}, "ifri_mini_ml_lib.preprocessing.preparation.DataSplitter.k_fold_split": {"tf": 1}}, "df": 8}}}}}, "i": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "h": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {"ifri_mini_ml_lib": {"tf": 1}, "ifri_mini_ml_lib.metrics.evaluation_metrics.calculate_silhouette": {"tf": 2.6457513110645907}}, "df": 2}}}}}}}}, "z": {"docs": {}, "df": 0, "e": {"docs": {"ifri_mini_ml_lib.association_rules.Apriori": {"tf": 1}, "ifri_mini_ml_lib.association_rules.Eclat": {"tf": 1}, "ifri_mini_ml_lib.association_rules.DataAdapter": {"tf": 1.7320508075688772}, "ifri_mini_ml_lib.classification.LogisticRegression": {"tf": 1}, "ifri_mini_ml_lib.neural_networks.MLPClassifier.__init__": {"tf": 1.4142135623730951}, "ifri_mini_ml_lib.neural_networks.MLPRegressor.__init__": {"tf": 1.4142135623730951}, "ifri_mini_ml_lib.preprocessing.preparation.DataSplitter.train_test_split": {"tf": 2}, "ifri_mini_ml_lib.preprocessing.preparation.DataSplitter.stratified_train_test_split": {"tf": 1.7320508075688772}, "ifri_mini_ml_lib.preprocessing.preparation.DataSplitter.temporal_train_test_split": {"tf": 1.4142135623730951}, "ifri_mini_ml_lib.regression.SVR": {"tf": 1}}, "df": 10, "s": {"docs": {"ifri_mini_ml_lib.association_rules.Apriori.get_frequent_itemsets": {"tf": 1}, "ifri_mini_ml_lib.association_rules.Eclat.get_frequent_itemsets": {"tf": 1}, "ifri_mini_ml_lib.neural_networks.MLPClassifier.__init__": {"tf": 1.4142135623730951}, "ifri_mini_ml_lib.neural_networks.MLPRegressor.__init__": {"tf": 1.4142135623730951}}, "df": 4}}}, "n": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "e": {"docs": {"ifri_mini_ml_lib.classification.KNN.fit": {"tf": 1}, "ifri_mini_ml_lib.preprocessing.preparation.MinMaxScaler": {"tf": 1}}, "df": 2}}, "g": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "e": {"docs": {"ifri_mini_ml_lib.clustering.HierarchicalClustering": {"tf": 1}, "ifri_mini_ml_lib.clustering.HierarchicalClustering.__init__": {"tf": 1}}, "df": 2}}}}, "m": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "y": {"docs": {"ifri_mini_ml_lib.classification.KNN.fit": {"tf": 1}}, "df": 1}}}, "i": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "r": {"docs": {"ifri_mini_ml_lib.preprocessing.preparation.StandardScaler": {"tf": 1}, "ifri_mini_ml_lib.preprocessing.preparation.CategoricalEncoder": {"tf": 1}}, "df": 2}}}}}, "g": {"docs": {"ifri_mini_ml_lib.regression.SVR": {"tf": 1}}, "df": 1, "m": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "d": {"docs": {"ifri_mini_ml_lib.neural_networks.MLPClassifier.__init__": {"tf": 1}, "ifri_mini_ml_lib.neural_networks.MLPRegressor.__init__": {"tf": 1}, "ifri_mini_ml_lib.regression.SVR": {"tf": 1.7320508075688772}, "ifri_mini_ml_lib.regression.SVR.sigmoid_kernel": {"tf": 1}}, "df": 4}}}}}}, "r": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "k": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "t": {"docs": {"ifri_mini_ml_lib.association_rules.Apriori": {"tf": 1}}, "df": 1}}}}}}, "u": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "t": {"docs": {"ifri_mini_ml_lib.association_rules.Apriori": {"tf": 2.6457513110645907}, "ifri_mini_ml_lib.association_rules.Eclat": {"tf": 3.1622776601683795}, "ifri_mini_ml_lib.association_rules.FPGrowth": {"tf": 2.8284271247461903}, "ifri_mini_ml_lib.regression.SVR": {"tf": 1}}, "df": 4, "s": {"docs": {"ifri_mini_ml_lib.association_rules.FPGrowth.get_frequent_itemsets": {"tf": 1}, "ifri_mini_ml_lib.classification.DecisionTree": {"tf": 1}, "ifri_mini_ml_lib.clustering.DBSCAN.plot_clusters": {"tf": 1}, "ifri_mini_ml_lib.preprocessing.preparation.StandardScaler": {"tf": 1}, "ifri_mini_ml_lib.preprocessing.preparation.CategoricalEncoder": {"tf": 1}}, "df": 5}, "e": {"docs": {}, "df": 0, "d": {"docs": {"ifri_mini_ml_lib.association_rules.DataAdapter.convert_to_transactions": {"tf": 1}}, "df": 1}}, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"ifri_mini_ml_lib.clustering.KMeans.plot_clusters": {"tf": 1}, "ifri_mini_ml_lib.clustering.HierarchicalClustering.plot_clusters": {"tf": 1}}, "df": 2}}}}}}}, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "v": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "d": {"docs": {"ifri_mini_ml_lib.model_selection.BayesianSearchCV.__init__": {"tf": 1}, "ifri_mini_ml_lib.model_selection.GridSearchCV": {"tf": 1}, "ifri_mini_ml_lib.model_selection.RandomSearchCV": {"tf": 1}}, "df": 3}}}}}}}}, "m": {"docs": {"ifri_mini_ml_lib.metrics.evaluation_metrics.calculate_inertia": {"tf": 1}, "ifri_mini_ml_lib.preprocessing.dimensionality_reduction.PCA.explained_variances_ratio": {"tf": 1}}, "df": 2}, "b": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "t": {"docs": {"ifri_mini_ml_lib.model_selection.RandomSearchCV": {"tf": 1}}, "df": 1}}}}}, "o": {"docs": {"ifri_mini_ml_lib.preprocessing.preparation.StandardScaler": {"tf": 1}}, "df": 1, "m": {"docs": {}, "df": 0, "e": {"docs": {"ifri_mini_ml_lib.association_rules.Apriori": {"tf": 1}, "ifri_mini_ml_lib.association_rules.Eclat": {"tf": 1}, "ifri_mini_ml_lib.association_rules.FPGrowth": {"tf": 1}}, "df": 3}}, "r": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "d": {"docs": {"ifri_mini_ml_lib.association_rules.DataAdapter": {"tf": 1.4142135623730951}, "ifri_mini_ml_lib.preprocessing.dimensionality_reduction.PCA": {"tf": 1.4142135623730951}, "ifri_mini_ml_lib.preprocessing.dimensionality_reduction.PCA.explained_variances": {"tf": 1}, "ifri_mini_ml_lib.preprocessing.preparation.CategoricalEncoder": {"tf": 1}}, "df": 4}}}}, "u": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "e": {"docs": {"ifri_mini_ml_lib.association_rules.DataAdapter.convert_to_transactions": {"tf": 1}}, "df": 1}}}}, "l": {"docs": {}, "df": 0, "v": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"ifri_mini_ml_lib.neural_networks.MLPClassifier.__init__": {"tf": 1}, "ifri_mini_ml_lib.neural_networks.MLPRegressor.__init__": {"tf": 1}}, "df": 2}}}}}, "t": {"docs": {}, "df": 0, "r": {"docs": {"ifri_mini_ml_lib.classification.KNN": {"tf": 1}, "ifri_mini_ml_lib.classification.KNN.__init__": {"tf": 1}, "ifri_mini_ml_lib.clustering.KMeans": {"tf": 1}, "ifri_mini_ml_lib.clustering.KMeans.__init__": {"tf": 1}, "ifri_mini_ml_lib.clustering.HierarchicalClustering": {"tf": 1.4142135623730951}, "ifri_mini_ml_lib.clustering.HierarchicalClustering.__init__": {"tf": 1.4142135623730951}, "ifri_mini_ml_lib.neural_networks.MLPClassifier.__init__": {"tf": 1.4142135623730951}, "ifri_mini_ml_lib.neural_networks.MLPRegressor.__init__": {"tf": 1.4142135623730951}, "ifri_mini_ml_lib.preprocessing.dimensionality_reduction.TSNE.__init__": {"tf": 1}, "ifri_mini_ml_lib.preprocessing.dimensionality_reduction.TSNE.generate_test_data": {"tf": 1}, "ifri_mini_ml_lib.preprocessing.dimensionality_reduction.TSNE.plot_results": {"tf": 1}, "ifri_mini_ml_lib.preprocessing.preparation.MissingValueHandler.impute_statistical": {"tf": 1}, "ifri_mini_ml_lib.preprocessing.preparation.MissingValueHandler.impute_regression": {"tf": 1}, "ifri_mini_ml_lib.preprocessing.preparation.CategoricalEncoder": {"tf": 1.4142135623730951}, "ifri_mini_ml_lib.regression.LinearRegression": {"tf": 1}, "ifri_mini_ml_lib.regression.PolynomialRegression": {"tf": 1}, "ifri_mini_ml_lib.regression.SVR": {"tf": 1}, "ifri_mini_ml_lib.regression.SVR.ker": {"tf": 1}}, "df": 18, "u": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "e": {"docs": {"ifri_mini_ml_lib.association_rules.Eclat": {"tf": 1}, "ifri_mini_ml_lib.association_rules.FPGrowth": {"tf": 1}}, "df": 2}}}}}}, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "y": {"docs": {"ifri_mini_ml_lib.clustering.HierarchicalClustering": {"tf": 1}, "ifri_mini_ml_lib.preprocessing.preparation.MissingValueHandler.impute_statistical": {"tf": 1.7320508075688772}}, "df": 2}}}, "i": {"docs": {}, "df": 0, "f": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "d": {"docs": {"ifri_mini_ml_lib.model_selection.BayesianSearchCV.__init__": {"tf": 1.4142135623730951}, "ifri_mini_ml_lib.model_selection.GridSearchCV": {"tf": 1.4142135623730951}, "ifri_mini_ml_lib.model_selection.RandomSearchCV": {"tf": 1.7320508075688772}, "ifri_mini_ml_lib.preprocessing.preparation.DataSplitter.stratified_train_test_split": {"tf": 1.7320508075688772}}, "df": 4}}}}}}}}, "o": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {"ifri_mini_ml_lib.classification.KNN.fit": {"tf": 1.4142135623730951}, "ifri_mini_ml_lib.clustering.KMeans.__init__": {"tf": 1}, "ifri_mini_ml_lib.preprocessing.preparation.CategoricalEncoder.fit": {"tf": 1}}, "df": 3}}}, "p": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"ifri_mini_ml_lib.classification.LogisticRegression": {"tf": 1.4142135623730951}, "ifri_mini_ml_lib.classification.LogisticRegression.fit": {"tf": 1.4142135623730951}, "ifri_mini_ml_lib.neural_networks.MLPClassifier.__init__": {"tf": 2}, "ifri_mini_ml_lib.neural_networks.MLPRegressor.__init__": {"tf": 2}, "ifri_mini_ml_lib.preprocessing.dimensionality_reduction.TSNE.__init__": {"tf": 1}}, "df": 5}}}}, "s": {"docs": {"ifri_mini_ml_lib.clustering.KMeans.fit": {"tf": 1}}, "df": 1}}, "c": {"docs": {}, "df": 0, "h": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "c": {"docs": {"ifri_mini_ml_lib.preprocessing.dimensionality_reduction.TSNE": {"tf": 1}}, "df": 1}}}}}}}}, "a": {"docs": {}, "df": 0, "b": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "y": {"docs": {"ifri_mini_ml_lib.classification.LogisticRegression": {"tf": 1}}, "df": 1}}}}}}, "t": {"docs": {}, "df": 0, "e": {"docs": {"ifri_mini_ml_lib.clustering.KMeans": {"tf": 1.4142135623730951}, "ifri_mini_ml_lib.clustering.KMeans.__init__": {"tf": 1.4142135623730951}, "ifri_mini_ml_lib.model_selection.BaggingClassifier": {"tf": 1.4142135623730951}, "ifri_mini_ml_lib.model_selection.BaggingRegressor": {"tf": 1.4142135623730951}, "ifri_mini_ml_lib.model_selection.RandomSearchCV": {"tf": 1.4142135623730951}, "ifri_mini_ml_lib.neural_networks.MLPClassifier.__init__": {"tf": 1}, "ifri_mini_ml_lib.neural_networks.MLPRegressor.__init__": {"tf": 1}, "ifri_mini_ml_lib.preprocessing.dimensionality_reduction.TSNE.__init__": {"tf": 1}, "ifri_mini_ml_lib.preprocessing.dimensionality_reduction.TSNE.generate_test_data": {"tf": 1}}, "df": 9}, "i": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "s": {"docs": {"ifri_mini_ml_lib.preprocessing.dimensionality_reduction.PCA.fit": {"tf": 1}}, "df": 1}, "a": {"docs": {}, "df": 0, "l": {"docs": {"ifri_mini_ml_lib.preprocessing.preparation.MissingValueHandler": {"tf": 1}, "ifri_mini_ml_lib.preprocessing.preparation.MissingValueHandler.impute_statistical": {"tf": 1.4142135623730951}}, "df": 2}}}}}}}}, "n": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "d": {"docs": {"ifri_mini_ml_lib.preprocessing.dimensionality_reduction.PCA": {"tf": 1}, "ifri_mini_ml_lib.preprocessing.preparation.StandardScaler": {"tf": 1.7320508075688772}, "ifri_mini_ml_lib.preprocessing.preparation.StandardScaler.fit": {"tf": 1}}, "df": 3, "s": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"ifri_mini_ml_lib.preprocessing.preparation.StandardScaler": {"tf": 1}, "ifri_mini_ml_lib.preprocessing.preparation.StandardScaler.__init__": {"tf": 1}, "ifri_mini_ml_lib.preprocessing.preparation.StandardScaler.fit": {"tf": 1}}, "df": 3}}}}}}, "i": {"docs": {}, "df": 0, "z": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"ifri_mini_ml_lib.preprocessing.preparation.StandardScaler.transform": {"tf": 1}, "ifri_mini_ml_lib.preprocessing.preparation.StandardScaler.inverse_transform": {"tf": 1}}, "df": 2}}}}}, "e": {"docs": {"ifri_mini_ml_lib.preprocessing.preparation.StandardScaler.transform": {"tf": 1}}, "df": 1, "d": {"docs": {"ifri_mini_ml_lib.preprocessing.preparation.StandardScaler.transform": {"tf": 1}, "ifri_mini_ml_lib.preprocessing.preparation.StandardScaler.fit_transform": {"tf": 1}, "ifri_mini_ml_lib.preprocessing.preparation.StandardScaler.inverse_transform": {"tf": 1}}, "df": 3}}}}}}}}}}, "e": {"docs": {}, "df": 0, "p": {"docs": {"ifri_mini_ml_lib.classification.LogisticRegression": {"tf": 1}, "ifri_mini_ml_lib.preprocessing.dimensionality_reduction.PCA.fit_transform": {"tf": 1}, "ifri_mini_ml_lib.preprocessing.dimensionality_reduction.TSNE.fit_transform": {"tf": 1}, "ifri_mini_ml_lib.preprocessing.preparation.MinMaxScaler.fit_transform": {"tf": 1}, "ifri_mini_ml_lib.preprocessing.preparation.CategoricalEncoder.fit_transform": {"tf": 1}}, "df": 5}}, "d": {"docs": {"ifri_mini_ml_lib.preprocessing.dimensionality_reduction.PCA": {"tf": 1}, "ifri_mini_ml_lib.preprocessing.preparation.StandardScaler": {"tf": 1}, "ifri_mini_ml_lib.preprocessing.preparation.StandardScaler.transform": {"tf": 1}}, "df": 3}}, "m": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "l": {"docs": {"ifri_mini_ml_lib.association_rules.Eclat": {"tf": 1}, "ifri_mini_ml_lib.association_rules.DataAdapter": {"tf": 1}}, "df": 2}}}}, "p": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "e": {"docs": {"ifri_mini_ml_lib.association_rules.Eclat": {"tf": 1}, "ifri_mini_ml_lib.preprocessing.dimensionality_reduction.PCA.transform": {"tf": 1}, "ifri_mini_ml_lib.preprocessing.dimensionality_reduction.TSNE": {"tf": 1}}, "df": 3}}, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "l": {"docs": {"ifri_mini_ml_lib.clustering.DBSCAN": {"tf": 1}}, "df": 1}}}}}, "l": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "t": {"docs": {"ifri_mini_ml_lib.classification.DecisionTree": {"tf": 2}, "ifri_mini_ml_lib.model_selection.RandomSearchCV": {"tf": 1}, "ifri_mini_ml_lib.preprocessing.preparation.DataSplitter.train_test_split": {"tf": 2.23606797749979}, "ifri_mini_ml_lib.preprocessing.preparation.DataSplitter.stratified_train_test_split": {"tf": 2.449489742783178}, "ifri_mini_ml_lib.preprocessing.preparation.DataSplitter.temporal_train_test_split": {"tf": 2.23606797749979}, "ifri_mini_ml_lib.preprocessing.preparation.DataSplitter.k_fold_split": {"tf": 1}, "ifri_mini_ml_lib.regression.SVR": {"tf": 1}}, "df": 7, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"ifri_mini_ml_lib.classification.DecisionTree": {"tf": 1}}, "df": 1}}}, "e": {"docs": {}, "df": 0, "r": {"docs": {"ifri_mini_ml_lib.preprocessing.preparation.DataSplitter.train_test_split": {"tf": 1.7320508075688772}, "ifri_mini_ml_lib.preprocessing.preparation.DataSplitter.stratified_train_test_split": {"tf": 1.7320508075688772}, "ifri_mini_ml_lib.preprocessing.preparation.DataSplitter.temporal_train_test_split": {"tf": 1.7320508075688772}, "ifri_mini_ml_lib.preprocessing.preparation.DataSplitter.k_fold_split": {"tf": 1.4142135623730951}}, "df": 4}}}, "s": {"docs": {"ifri_mini_ml_lib.classification.DecisionTree.fit": {"tf": 1}, "ifri_mini_ml_lib.preprocessing.preparation.DataSplitter.__init__": {"tf": 1}, "ifri_mini_ml_lib.preprocessing.preparation.DataSplitter.k_fold_split": {"tf": 1}}, "df": 3}}}}, "e": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "l": {"docs": {"ifri_mini_ml_lib.classification.LogisticRegression.fit": {"tf": 1.4142135623730951}, "ifri_mini_ml_lib.classification.LogisticRegression.predict": {"tf": 1}}, "df": 2}}, "f": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "d": {"docs": {"ifri_mini_ml_lib.classification.LogisticRegression.predict": {"tf": 1}, "ifri_mini_ml_lib.clustering.KMeans.__init__": {"tf": 1}, "ifri_mini_ml_lib.preprocessing.preparation.MinMaxScaler": {"tf": 1}, "ifri_mini_ml_lib.preprocessing.preparation.MinMaxScaler.transform": {"tf": 1}, "ifri_mini_ml_lib.preprocessing.preparation.MinMaxScaler.fit_transform": {"tf": 1}, "ifri_mini_ml_lib.preprocessing.preparation.CategoricalEncoder.transform": {"tf": 1}}, "df": 6}}, "c": {"docs": {"ifri_mini_ml_lib.metrics.evaluation_metrics.precision": {"tf": 1}, "ifri_mini_ml_lib.metrics.evaluation_metrics.recall": {"tf": 1}, "ifri_mini_ml_lib.metrics.evaluation_metrics.f1_score": {"tf": 1}}, "df": 3}}}}}}}, "a": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "e": {"docs": {"ifri_mini_ml_lib.association_rules.DataAdapter": {"tf": 1}, "ifri_mini_ml_lib.classification.KNN.predict": {"tf": 1.4142135623730951}, "ifri_mini_ml_lib.clustering.KMeans.predict": {"tf": 1.4142135623730951}, "ifri_mini_ml_lib.metrics.bias_evaluation.selection_rate": {"tf": 1.4142135623730951}, "ifri_mini_ml_lib.metrics.bias_evaluation.selection_rate_per_group": {"tf": 1.7320508075688772}, "ifri_mini_ml_lib.metrics.bias_evaluation.demographic_parity_ratio": {"tf": 1}, "ifri_mini_ml_lib.metrics.bias_evaluation.demographic_parity_difference": {"tf": 1.4142135623730951}, "ifri_mini_ml_lib.preprocessing.preparation.StandardScaler.fit": {"tf": 1}}, "df": 8, "s": {"docs": {"ifri_mini_ml_lib.classification.DecisionTree": {"tf": 2.449489742783178}, "ifri_mini_ml_lib.classification.DecisionTree.fit": {"tf": 1.4142135623730951}, "ifri_mini_ml_lib.classification.DecisionTree.predict": {"tf": 1.7320508075688772}, "ifri_mini_ml_lib.classification.KNN.fit": {"tf": 1.7320508075688772}, "ifri_mini_ml_lib.classification.KNN.predict": {"tf": 1.4142135623730951}, "ifri_mini_ml_lib.classification.LogisticRegression.fit": {"tf": 1.4142135623730951}, "ifri_mini_ml_lib.classification.LogisticRegression.predict_proba": {"tf": 1.7320508075688772}, "ifri_mini_ml_lib.classification.LogisticRegression.predict": {"tf": 1.4142135623730951}, "ifri_mini_ml_lib.clustering.KMeans.fit": {"tf": 1}, "ifri_mini_ml_lib.clustering.KMeans.predict": {"tf": 1.4142135623730951}, "ifri_mini_ml_lib.clustering.DBSCAN": {"tf": 1.7320508075688772}, "ifri_mini_ml_lib.clustering.DBSCAN.__init__": {"tf": 1.4142135623730951}, "ifri_mini_ml_lib.clustering.DBSCAN.fit_predict": {"tf": 1}, "ifri_mini_ml_lib.clustering.DBSCAN.plot_clusters": {"tf": 1}, "ifri_mini_ml_lib.clustering.HierarchicalClustering.fit_predict": {"tf": 1}, "ifri_mini_ml_lib.metrics.evaluation_metrics.calculate_inertia": {"tf": 1.4142135623730951}, "ifri_mini_ml_lib.metrics.evaluation_metrics.calculate_silhouette": {"tf": 1.4142135623730951}, "ifri_mini_ml_lib.model_selection.BaggingClassifier": {"tf": 1}, "ifri_mini_ml_lib.model_selection.BaggingClassifier.fit": {"tf": 1.7320508075688772}, "ifri_mini_ml_lib.model_selection.BaggingClassifier.predict": {"tf": 1.7320508075688772}, "ifri_mini_ml_lib.model_selection.BaggingRegressor": {"tf": 1}, "ifri_mini_ml_lib.model_selection.BaggingRegressor.fit": {"tf": 1.7320508075688772}, "ifri_mini_ml_lib.model_selection.BaggingRegressor.predict": {"tf": 1.7320508075688772}, "ifri_mini_ml_lib.model_selection.BayesianSearchCV.fit": {"tf": 1.4142135623730951}, "ifri_mini_ml_lib.model_selection.GridSearchCV.fit": {"tf": 1.4142135623730951}, "ifri_mini_ml_lib.model_selection.RandomSearchCV": {"tf": 1.4142135623730951}, "ifri_mini_ml_lib.neural_networks.MLPClassifier.fit": {"tf": 1.4142135623730951}, "ifri_mini_ml_lib.neural_networks.MLPClassifier.predict": {"tf": 1.7320508075688772}, "ifri_mini_ml_lib.neural_networks.MLPClassifier.predict_proba": {"tf": 1.4142135623730951}, "ifri_mini_ml_lib.neural_networks.MLPClassifier.score": {"tf": 1.4142135623730951}, "ifri_mini_ml_lib.neural_networks.MLPRegressor.fit": {"tf": 1.7320508075688772}, "ifri_mini_ml_lib.neural_networks.MLPRegressor.predict": {"tf": 2}, "ifri_mini_ml_lib.neural_networks.MLPRegressor.score": {"tf": 1.7320508075688772}, "ifri_mini_ml_lib.preprocessing.dimensionality_reduction.PCA.fit": {"tf": 1}, "ifri_mini_ml_lib.preprocessing.dimensionality_reduction.PCA.transform": {"tf": 1.4142135623730951}, "ifri_mini_ml_lib.preprocessing.dimensionality_reduction.TSNE": {"tf": 1}, "ifri_mini_ml_lib.preprocessing.dimensionality_reduction.TSNE.fit": {"tf": 1.4142135623730951}, "ifri_mini_ml_lib.preprocessing.dimensionality_reduction.TSNE.fit_transform": {"tf": 1}, "ifri_mini_ml_lib.preprocessing.dimensionality_reduction.TSNE.generate_test_data": {"tf": 1.4142135623730951}, "ifri_mini_ml_lib.preprocessing.preparation.MinMaxScaler.fit": {"tf": 1}, "ifri_mini_ml_lib.regression.LinearRegression.fit": {"tf": 1.4142135623730951}, "ifri_mini_ml_lib.regression.LinearRegression.predict": {"tf": 1.4142135623730951}, "ifri_mini_ml_lib.regression.PolynomialRegression.fit": {"tf": 1.4142135623730951}, "ifri_mini_ml_lib.regression.PolynomialRegression.predict": {"tf": 1.4142135623730951}}, "df": 44}}}}, "e": {"docs": {"ifri_mini_ml_lib.preprocessing.preparation.MinMaxScaler.transform": {"tf": 1.4142135623730951}, "ifri_mini_ml_lib.preprocessing.preparation.MinMaxScaler.inverse_transform": {"tf": 1}}, "df": 2}}}, "h": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "e": {"docs": {"ifri_mini_ml_lib.classification.DecisionTree.fit": {"tf": 1.4142135623730951}, "ifri_mini_ml_lib.classification.DecisionTree.predict": {"tf": 1}, "ifri_mini_ml_lib.classification.KNN.fit": {"tf": 1.4142135623730951}, "ifri_mini_ml_lib.classification.KNN.predict": {"tf": 1}, "ifri_mini_ml_lib.classification.LogisticRegression.fit": {"tf": 1.4142135623730951}, "ifri_mini_ml_lib.classification.LogisticRegression.predict_proba": {"tf": 1.4142135623730951}, "ifri_mini_ml_lib.classification.LogisticRegression.predict": {"tf": 1}, "ifri_mini_ml_lib.clustering.KMeans.fit": {"tf": 1}, "ifri_mini_ml_lib.clustering.KMeans.predict": {"tf": 1}, "ifri_mini_ml_lib.metrics.evaluation_metrics.calculate_inertia": {"tf": 1.7320508075688772}, "ifri_mini_ml_lib.metrics.evaluation_metrics.calculate_silhouette": {"tf": 1.4142135623730951}, "ifri_mini_ml_lib.model_selection.BaggingClassifier.fit": {"tf": 1.4142135623730951}, "ifri_mini_ml_lib.model_selection.BaggingClassifier.predict": {"tf": 1}, "ifri_mini_ml_lib.model_selection.BaggingRegressor.fit": {"tf": 1.4142135623730951}, "ifri_mini_ml_lib.model_selection.BaggingRegressor.predict": {"tf": 1}, "ifri_mini_ml_lib.model_selection.BayesianSearchCV.fit": {"tf": 1.4142135623730951}, "ifri_mini_ml_lib.model_selection.GridSearchCV.fit": {"tf": 1.4142135623730951}, "ifri_mini_ml_lib.neural_networks.MLPClassifier.fit": {"tf": 1.4142135623730951}, "ifri_mini_ml_lib.neural_networks.MLPClassifier.predict": {"tf": 1.4142135623730951}, "ifri_mini_ml_lib.neural_networks.MLPClassifier.predict_proba": {"tf": 1.4142135623730951}, "ifri_mini_ml_lib.neural_networks.MLPClassifier.score": {"tf": 1.4142135623730951}, "ifri_mini_ml_lib.neural_networks.MLPRegressor.fit": {"tf": 1.4142135623730951}, "ifri_mini_ml_lib.neural_networks.MLPRegressor.predict": {"tf": 1.4142135623730951}, "ifri_mini_ml_lib.neural_networks.MLPRegressor.score": {"tf": 1.4142135623730951}, "ifri_mini_ml_lib.preprocessing.dimensionality_reduction.PCA.fit": {"tf": 1}, "ifri_mini_ml_lib.preprocessing.dimensionality_reduction.PCA.transform": {"tf": 1.7320508075688772}, "ifri_mini_ml_lib.preprocessing.dimensionality_reduction.TSNE": {"tf": 1}, "ifri_mini_ml_lib.preprocessing.dimensionality_reduction.TSNE.fit": {"tf": 1}, "ifri_mini_ml_lib.preprocessing.dimensionality_reduction.TSNE.fit_transform": {"tf": 1}, "ifri_mini_ml_lib.preprocessing.preparation.MinMaxScaler.fit": {"tf": 1}, "ifri_mini_ml_lib.preprocessing.preparation.MinMaxScaler.transform": {"tf": 1}, "ifri_mini_ml_lib.regression.LinearRegression.fit": {"tf": 1.4142135623730951}, "ifri_mini_ml_lib.regression.LinearRegression.predict": {"tf": 1.4142135623730951}, "ifri_mini_ml_lib.regression.PolynomialRegression.fit": {"tf": 1.4142135623730951}, "ifri_mini_ml_lib.regression.PolynomialRegression.predict": {"tf": 1.4142135623730951}}, "df": 35}}}, "i": {"docs": {}, "df": 0, "f": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "s": {"docs": {"ifri_mini_ml_lib.clustering.KMeans.fit": {"tf": 1}}, "df": 1}}}}, "u": {"docs": {}, "df": 0, "f": {"docs": {}, "df": 0, "f": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "e": {"docs": {"ifri_mini_ml_lib.neural_networks.MLPClassifier.__init__": {"tf": 1.4142135623730951}, "ifri_mini_ml_lib.neural_networks.MLPRegressor.__init__": {"tf": 1.4142135623730951}}, "df": 2}}}}}, "o": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "d": {"docs": {"ifri_mini_ml_lib.preprocessing.preparation.MinMaxScaler.fit": {"tf": 1}}, "df": 1}}}}}, "y": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "b": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "l": {"docs": {"ifri_mini_ml_lib.clustering.KMeans.plot_clusters": {"tf": 1}}, "df": 1}}}}}, "q": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "d": {"docs": {"ifri_mini_ml_lib.metrics.evaluation_metrics.calculate_inertia": {"tf": 1}, "ifri_mini_ml_lib.model_selection.GridSearchCV": {"tf": 1}}, "df": 2}, "s": {"docs": {"ifri_mini_ml_lib.regression.LinearRegression": {"tf": 1}, "ifri_mini_ml_lib.regression.LinearRegression.fit": {"tf": 1}, "ifri_mini_ml_lib.regression.PolynomialRegression": {"tf": 1}}, "df": 3}}}}}}, "g": {"docs": {}, "df": 0, "d": {"docs": {"ifri_mini_ml_lib.neural_networks.MLPClassifier.__init__": {"tf": 1}, "ifri_mini_ml_lib.neural_networks.MLPRegressor.__init__": {"tf": 1}}, "df": 2}}, "w": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "s": {"docs": {"ifri_mini_ml_lib.preprocessing.dimensionality_reduction.TSNE.generate_test_data": {"tf": 1.4142135623730951}}, "df": 1}}}}}, "n": {"docs": {"ifri_mini_ml_lib.classification.DecisionTree.fit": {"tf": 1.7320508075688772}, "ifri_mini_ml_lib.classification.DecisionTree.predict": {"tf": 1.4142135623730951}, "ifri_mini_ml_lib.classification.KNN.fit": {"tf": 1.7320508075688772}, "ifri_mini_ml_lib.classification.KNN.predict": {"tf": 1.4142135623730951}, "ifri_mini_ml_lib.classification.LogisticRegression.fit": {"tf": 1.7320508075688772}, "ifri_mini_ml_lib.classification.LogisticRegression.predict_proba": {"tf": 1.7320508075688772}, "ifri_mini_ml_lib.classification.LogisticRegression.predict": {"tf": 1.4142135623730951}, "ifri_mini_ml_lib.clustering.KMeans": {"tf": 1.4142135623730951}, "ifri_mini_ml_lib.clustering.KMeans.__init__": {"tf": 1.4142135623730951}, "ifri_mini_ml_lib.clustering.KMeans.fit": {"tf": 1.4142135623730951}, "ifri_mini_ml_lib.clustering.KMeans.predict": {"tf": 1.4142135623730951}, "ifri_mini_ml_lib.clustering.DBSCAN.fit_predict": {"tf": 1.4142135623730951}, "ifri_mini_ml_lib.clustering.DBSCAN.plot_clusters": {"tf": 1.4142135623730951}, "ifri_mini_ml_lib.clustering.HierarchicalClustering": {"tf": 1.4142135623730951}, "ifri_mini_ml_lib.clustering.HierarchicalClustering.__init__": {"tf": 1}, "ifri_mini_ml_lib.clustering.HierarchicalClustering.fit_predict": {"tf": 1.4142135623730951}, "ifri_mini_ml_lib.clustering.HierarchicalClustering.plot_dendrogram": {"tf": 1}, "ifri_mini_ml_lib.metrics.evaluation_metrics.calculate_inertia": {"tf": 2.23606797749979}, "ifri_mini_ml_lib.metrics.evaluation_metrics.calculate_silhouette": {"tf": 1.7320508075688772}, "ifri_mini_ml_lib.model_selection.BaggingClassifier": {"tf": 1.4142135623730951}, "ifri_mini_ml_lib.model_selection.BaggingClassifier.fit": {"tf": 1.7320508075688772}, "ifri_mini_ml_lib.model_selection.BaggingClassifier.predict": {"tf": 1.4142135623730951}, "ifri_mini_ml_lib.model_selection.BaggingRegressor": {"tf": 1.4142135623730951}, "ifri_mini_ml_lib.model_selection.BaggingRegressor.fit": {"tf": 1.7320508075688772}, "ifri_mini_ml_lib.model_selection.BaggingRegressor.predict": {"tf": 1.4142135623730951}, "ifri_mini_ml_lib.model_selection.BayesianSearchCV.__init__": {"tf": 1.4142135623730951}, "ifri_mini_ml_lib.model_selection.BayesianSearchCV.fit": {"tf": 1.7320508075688772}, "ifri_mini_ml_lib.model_selection.GridSearchCV.fit": {"tf": 1.7320508075688772}, "ifri_mini_ml_lib.model_selection.RandomSearchCV": {"tf": 1.4142135623730951}, "ifri_mini_ml_lib.neural_networks.MLPClassifier.__init__": {"tf": 1}, "ifri_mini_ml_lib.neural_networks.MLPClassifier.fit": {"tf": 1.7320508075688772}, "ifri_mini_ml_lib.neural_networks.MLPClassifier.predict": {"tf": 1.7320508075688772}, "ifri_mini_ml_lib.neural_networks.MLPClassifier.predict_proba": {"tf": 2}, "ifri_mini_ml_lib.neural_networks.MLPClassifier.score": {"tf": 1.7320508075688772}, "ifri_mini_ml_lib.neural_networks.MLPRegressor.__init__": {"tf": 1}, "ifri_mini_ml_lib.neural_networks.MLPRegressor.fit": {"tf": 2.23606797749979}, "ifri_mini_ml_lib.neural_networks.MLPRegressor.predict": {"tf": 2.23606797749979}, "ifri_mini_ml_lib.neural_networks.MLPRegressor.score": {"tf": 2.23606797749979}, "ifri_mini_ml_lib.preprocessing.dimensionality_reduction.PCA": {"tf": 1}, "ifri_mini_ml_lib.preprocessing.dimensionality_reduction.PCA.__init__": {"tf": 1.4142135623730951}, "ifri_mini_ml_lib.preprocessing.dimensionality_reduction.PCA.fit": {"tf": 1.4142135623730951}, "ifri_mini_ml_lib.preprocessing.dimensionality_reduction.PCA.transform": {"tf": 2}, "ifri_mini_ml_lib.preprocessing.dimensionality_reduction.TSNE": {"tf": 2.23606797749979}, "ifri_mini_ml_lib.preprocessing.dimensionality_reduction.TSNE.__init__": {"tf": 1.7320508075688772}, "ifri_mini_ml_lib.preprocessing.dimensionality_reduction.TSNE.fit": {"tf": 1.7320508075688772}, "ifri_mini_ml_lib.preprocessing.dimensionality_reduction.TSNE.fit_transform": {"tf": 1.4142135623730951}, "ifri_mini_ml_lib.preprocessing.dimensionality_reduction.TSNE.generate_test_data": {"tf": 1}, "ifri_mini_ml_lib.preprocessing.preparation.MinMaxScaler.fit": {"tf": 1.4142135623730951}, "ifri_mini_ml_lib.regression.LinearRegression.fit": {"tf": 1.7320508075688772}, "ifri_mini_ml_lib.regression.LinearRegression.predict": {"tf": 1.7320508075688772}, "ifri_mini_ml_lib.regression.PolynomialRegression.fit": {"tf": 1.7320508075688772}, "ifri_mini_ml_lib.regression.PolynomialRegression.predict": {"tf": 1.7320508075688772}}, "df": 52, "e": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "l": {"docs": {"ifri_mini_ml_lib": {"tf": 1}}, "df": 1}}}}, "t": {"docs": {}, "df": 0, "w": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "k": {"docs": {"ifri_mini_ml_lib.neural_networks.MLPClassifier.__init__": {"tf": 1}}, "df": 1, "s": {"docs": {"ifri_mini_ml_lib": {"tf": 1}}, "df": 1}}}}}}, "a": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "t": {"docs": {"ifri_mini_ml_lib.classification.KNN": {"tf": 1.4142135623730951}, "ifri_mini_ml_lib.classification.KNN.predict": {"tf": 1}, "ifri_mini_ml_lib.clustering.KMeans": {"tf": 1}, "ifri_mini_ml_lib.clustering.KMeans.fit": {"tf": 1}, "ifri_mini_ml_lib.clustering.KMeans.predict": {"tf": 1}, "ifri_mini_ml_lib.preprocessing.preparation.MissingValueHandler.impute_knn": {"tf": 1}}, "df": 6}}}, "b": {"docs": {}, "df": 0, "y": {"docs": {"ifri_mini_ml_lib.clustering.DBSCAN": {"tf": 1}}, "df": 1}}}}, "i": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "h": {"docs": {}, "df": 0, "b": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {"ifri_mini_ml_lib.preprocessing.dimensionality_reduction.TSNE": {"tf": 1}}, "df": 1, "s": {"docs": {"ifri_mini_ml_lib.classification.KNN": {"tf": 1.4142135623730951}, "ifri_mini_ml_lib.classification.KNN.__init__": {"tf": 1}, "ifri_mini_ml_lib.classification.KNN.predict": {"tf": 1}, "ifri_mini_ml_lib.clustering.DBSCAN": {"tf": 1}, "ifri_mini_ml_lib.clustering.DBSCAN.__init__": {"tf": 1}, "ifri_mini_ml_lib.preprocessing.dimensionality_reduction.TSNE": {"tf": 1}, "ifri_mini_ml_lib.preprocessing.preparation.MissingValueHandler.impute_knn": {"tf": 1.4142135623730951}}, "df": 7}}}}}}}, "w": {"docs": {"ifri_mini_ml_lib.classification.KNN": {"tf": 1}, "ifri_mini_ml_lib.clustering.KMeans.predict": {"tf": 1.4142135623730951}, "ifri_mini_ml_lib.model_selection.BaggingClassifier": {"tf": 1}, "ifri_mini_ml_lib.model_selection.BaggingRegressor": {"tf": 1}, "ifri_mini_ml_lib.preprocessing.preparation.MinMaxScaler.transform": {"tf": 1}, "ifri_mini_ml_lib.preprocessing.preparation.CategoricalEncoder.transform": {"tf": 1}, "ifri_mini_ml_lib.regression.SVR.predict": {"tf": 1}}, "df": 7}, "s": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "d": {"docs": {"ifri_mini_ml_lib.metrics.evaluation_metrics.confusion_matrix": {"tf": 1}}, "df": 1}}}}, "g": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "v": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {"ifri_mini_ml_lib.metrics.evaluation_metrics.recall": {"tf": 1}}, "df": 1}}}}}}}, "e": {"docs": {}, "df": 0, "d": {"docs": {"ifri_mini_ml_lib.model_selection.BaggingClassifier": {"tf": 1.4142135623730951}, "ifri_mini_ml_lib.model_selection.BaggingRegressor": {"tf": 1.4142135623730951}}, "df": 2}}, "c": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "y": {"docs": {"ifri_mini_ml_lib.preprocessing.preparation.CategoricalEncoder.fit": {"tf": 1}}, "df": 1}}}}}}}}, "o": {"docs": {"ifri_mini_ml_lib.association_rules.DataAdapter.load_csv_to_transactions": {"tf": 1}, "ifri_mini_ml_lib.classification.DecisionTree": {"tf": 1}, "ifri_mini_ml_lib.metrics.evaluation_metrics.precision": {"tf": 1}, "ifri_mini_ml_lib.metrics.evaluation_metrics.recall": {"tf": 1}, "ifri_mini_ml_lib.neural_networks.MLPClassifier.__init__": {"tf": 1.4142135623730951}, "ifri_mini_ml_lib.neural_networks.MLPRegressor.__init__": {"tf": 1.4142135623730951}, "ifri_mini_ml_lib.preprocessing.preparation.CategoricalEncoder.fit": {"tf": 1}, "ifri_mini_ml_lib.regression.SVR": {"tf": 1}}, "df": 8, "n": {"docs": {"ifri_mini_ml_lib.association_rules.DataAdapter": {"tf": 1}, "ifri_mini_ml_lib.classification.LogisticRegression.fit": {"tf": 1}}, "df": 2, "e": {"docs": {"ifri_mini_ml_lib.association_rules.DataAdapter.load_csv_to_transactions": {"tf": 1}, "ifri_mini_ml_lib.classification.DecisionTree": {"tf": 1}, "ifri_mini_ml_lib.clustering.KMeans": {"tf": 1}, "ifri_mini_ml_lib.clustering.KMeans.__init__": {"tf": 1.4142135623730951}, "ifri_mini_ml_lib.clustering.HierarchicalClustering": {"tf": 1}, "ifri_mini_ml_lib.clustering.HierarchicalClustering.__init__": {"tf": 1}, "ifri_mini_ml_lib.metrics.bias_evaluation.selection_rate": {"tf": 1.7320508075688772}, "ifri_mini_ml_lib.metrics.bias_evaluation.selection_rate_per_group": {"tf": 1.4142135623730951}, "ifri_mini_ml_lib.metrics.bias_evaluation.demographic_parity_ratio": {"tf": 1}, "ifri_mini_ml_lib.metrics.bias_evaluation.demographic_parity_difference": {"tf": 1}, "ifri_mini_ml_lib.metrics.evaluation_metrics.confusion_matrix": {"tf": 1}, "ifri_mini_ml_lib.model_selection.BaggingClassifier": {"tf": 1.4142135623730951}, "ifri_mini_ml_lib.model_selection.BaggingClassifier.fit": {"tf": 1}, "ifri_mini_ml_lib.model_selection.BaggingRegressor": {"tf": 1.4142135623730951}, "ifri_mini_ml_lib.model_selection.BaggingRegressor.fit": {"tf": 1}, "ifri_mini_ml_lib.model_selection.BayesianSearchCV.__init__": {"tf": 1.7320508075688772}, "ifri_mini_ml_lib.model_selection.BayesianSearchCV.get_best_params": {"tf": 1}, "ifri_mini_ml_lib.model_selection.GridSearchCV": {"tf": 1}, "ifri_mini_ml_lib.model_selection.RandomSearchCV": {"tf": 1}, "ifri_mini_ml_lib.model_selection.RandomSearchCV.fit": {"tf": 1}, "ifri_mini_ml_lib.neural_networks.MLPClassifier.__init__": {"tf": 1}, "ifri_mini_ml_lib.neural_networks.MLPRegressor.__init__": {"tf": 1}, "ifri_mini_ml_lib.preprocessing.dimensionality_reduction.TSNE.__init__": {"tf": 1}, "ifri_mini_ml_lib.preprocessing.dimensionality_reduction.TSNE.generate_test_data": {"tf": 1}, "ifri_mini_ml_lib.preprocessing.preparation.StandardScaler": {"tf": 1}, "ifri_mini_ml_lib.preprocessing.preparation.CategoricalEncoder": {"tf": 1}, "ifri_mini_ml_lib.preprocessing.preparation.DataSplitter.__init__": {"tf": 1}, "ifri_mini_ml_lib.preprocessing.preparation.DataSplitter.train_test_split": {"tf": 1.4142135623730951}, "ifri_mini_ml_lib.preprocessing.preparation.DataSplitter.temporal_train_test_split": {"tf": 1}, "ifri_mini_ml_lib.preprocessing.preparation.DataSplitter.k_fold_split": {"tf": 1.4142135623730951}, "ifri_mini_ml_lib.regression.SVR.fit": {"tf": 1}, "ifri_mini_ml_lib.regression.SVR.set_params": {"tf": 1}}, "df": 32}}, "t": {"docs": {"ifri_mini_ml_lib.association_rules.DataAdapter.convert_to_transactions": {"tf": 1}, "ifri_mini_ml_lib.metrics.bias_evaluation.selection_rate": {"tf": 1}, "ifri_mini_ml_lib.metrics.bias_evaluation.selection_rate_per_group": {"tf": 1}, "ifri_mini_ml_lib.preprocessing.preparation.StandardScaler.transform": {"tf": 1}, "ifri_mini_ml_lib.preprocessing.preparation.StandardScaler.inverse_transform": {"tf": 1}}, "df": 5, "e": {"docs": {}, "df": 0, "s": {"docs": {"ifri_mini_ml_lib.classification.LogisticRegression.fit": {"tf": 1}}, "df": 1}}}, "d": {"docs": {}, "df": 0, "e": {"docs": {"ifri_mini_ml_lib.classification.DecisionTree": {"tf": 1.4142135623730951}, "ifri_mini_ml_lib.classification.DecisionTree.fit": {"tf": 1.4142135623730951}}, "df": 2}}, "i": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "e": {"docs": {"ifri_mini_ml_lib.clustering.DBSCAN": {"tf": 1.4142135623730951}}, "df": 1}}}, "r": {"docs": {}, "df": 0, "m": {"docs": {"ifri_mini_ml_lib.preprocessing.dimensionality_reduction.TSNE.__init__": {"tf": 1.4142135623730951}}, "df": 1, "a": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "z": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"ifri_mini_ml_lib.preprocessing.preparation.MinMaxScaler": {"tf": 1}}, "df": 1}}}}}}}}}}}}, "u": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "y": {"docs": {"ifri_mini_ml_lib.association_rules.DataAdapter.convert_to_transactions": {"tf": 1}, "ifri_mini_ml_lib.clustering.DBSCAN.fit_predict": {"tf": 1}, "ifri_mini_ml_lib.clustering.DBSCAN.plot_clusters": {"tf": 1}, "ifri_mini_ml_lib.clustering.HierarchicalClustering.fit_predict": {"tf": 1}, "ifri_mini_ml_lib.clustering.HierarchicalClustering.plot_dendrogram": {"tf": 1}, "ifri_mini_ml_lib.clustering.HierarchicalClustering.plot_clusters": {"tf": 1}, "ifri_mini_ml_lib.metrics.evaluation_metrics.calculate_inertia": {"tf": 1.7320508075688772}, "ifri_mini_ml_lib.metrics.evaluation_metrics.calculate_silhouette": {"tf": 1.4142135623730951}, "ifri_mini_ml_lib.preprocessing.preparation.MinMaxScaler.fit": {"tf": 1}, "ifri_mini_ml_lib.preprocessing.preparation.StandardScaler": {"tf": 1}}, "df": 10}}, "b": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"ifri_mini_ml_lib.association_rules.DataAdapter.load_csv_to_transactions": {"tf": 1}, "ifri_mini_ml_lib.classification.DecisionTree": {"tf": 1.4142135623730951}, "ifri_mini_ml_lib.classification.KNN": {"tf": 1}, "ifri_mini_ml_lib.classification.KNN.__init__": {"tf": 1}, "ifri_mini_ml_lib.classification.LogisticRegression": {"tf": 1}, "ifri_mini_ml_lib.clustering.KMeans": {"tf": 1}, "ifri_mini_ml_lib.clustering.KMeans.__init__": {"tf": 1.7320508075688772}, "ifri_mini_ml_lib.clustering.DBSCAN": {"tf": 1}, "ifri_mini_ml_lib.clustering.DBSCAN.__init__": {"tf": 1}, "ifri_mini_ml_lib.clustering.HierarchicalClustering": {"tf": 1}, "ifri_mini_ml_lib.clustering.HierarchicalClustering.__init__": {"tf": 1}, "ifri_mini_ml_lib.model_selection.BaggingClassifier": {"tf": 1}, "ifri_mini_ml_lib.model_selection.BaggingRegressor": {"tf": 1}, "ifri_mini_ml_lib.model_selection.BayesianSearchCV.__init__": {"tf": 1.7320508075688772}, "ifri_mini_ml_lib.model_selection.GridSearchCV": {"tf": 1}, "ifri_mini_ml_lib.model_selection.RandomSearchCV": {"tf": 1.4142135623730951}, "ifri_mini_ml_lib.neural_networks.MLPClassifier.__init__": {"tf": 1.4142135623730951}, "ifri_mini_ml_lib.neural_networks.MLPRegressor.__init__": {"tf": 1.4142135623730951}, "ifri_mini_ml_lib.preprocessing.dimensionality_reduction.PCA": {"tf": 1}, "ifri_mini_ml_lib.preprocessing.dimensionality_reduction.PCA.__init__": {"tf": 1}, "ifri_mini_ml_lib.preprocessing.dimensionality_reduction.TSNE": {"tf": 1.7320508075688772}, "ifri_mini_ml_lib.preprocessing.dimensionality_reduction.TSNE.__init__": {"tf": 1}, "ifri_mini_ml_lib.preprocessing.dimensionality_reduction.TSNE.generate_test_data": {"tf": 1}, "ifri_mini_ml_lib.preprocessing.preparation.MissingValueHandler.impute_knn": {"tf": 1}, "ifri_mini_ml_lib.preprocessing.preparation.DataSplitter.k_fold_split": {"tf": 1}, "ifri_mini_ml_lib.regression.LinearRegression": {"tf": 1}, "ifri_mini_ml_lib.regression.PolynomialRegression": {"tf": 1}}, "df": 27}}}, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "l": {"docs": {"ifri_mini_ml_lib.classification.LogisticRegression": {"tf": 1}}, "df": 1}}}}}}}}, "a": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "e": {"docs": {"ifri_mini_ml_lib.preprocessing.preparation.MissingValueHandler.impute_regression": {"tf": 1}, "ifri_mini_ml_lib.preprocessing.preparation.CategoricalEncoder": {"tf": 1}}, "df": 2, "s": {"docs": {"ifri_mini_ml_lib.association_rules.DataAdapter.convert_to_transactions": {"tf": 1}, "ifri_mini_ml_lib.model_selection.BayesianSearchCV.__init__": {"tf": 1}, "ifri_mini_ml_lib.model_selection.GridSearchCV": {"tf": 1}, "ifri_mini_ml_lib.preprocessing.preparation.StandardScaler": {"tf": 1}}, "df": 4}}}, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "v": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "y": {"docs": {"ifri_mini_ml_lib.clustering.DBSCAN.plot_clusters": {"tf": 1}}, "df": 1}}}}}}, "n": {"docs": {"ifri_mini_ml_lib.preprocessing.preparation.MissingValueHandler.remove_missing": {"tf": 1}, "ifri_mini_ml_lib.preprocessing.preparation.MissingValueHandler.impute_default": {"tf": 1}}, "df": 2}}, "d": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "y": {"docs": {"ifri_mini_ml_lib.classification.DecisionTree.fit": {"tf": 1.4142135623730951}, "ifri_mini_ml_lib.classification.DecisionTree.predict": {"tf": 1.4142135623730951}, "ifri_mini_ml_lib.classification.LogisticRegression": {"tf": 1}, "ifri_mini_ml_lib.classification.LogisticRegression.fit": {"tf": 1.4142135623730951}, "ifri_mini_ml_lib.classification.LogisticRegression.predict_proba": {"tf": 1.4142135623730951}, "ifri_mini_ml_lib.classification.LogisticRegression.predict": {"tf": 1.4142135623730951}, "ifri_mini_ml_lib.clustering.KMeans.fit": {"tf": 1}, "ifri_mini_ml_lib.clustering.KMeans.predict": {"tf": 1}, "ifri_mini_ml_lib.clustering.KMeans.fit_predict": {"tf": 1}, "ifri_mini_ml_lib.clustering.KMeans.plot_clusters": {"tf": 1}, "ifri_mini_ml_lib.clustering.DBSCAN.fit_predict": {"tf": 1}, "ifri_mini_ml_lib.clustering.DBSCAN.plot_clusters": {"tf": 1}, "ifri_mini_ml_lib.clustering.HierarchicalClustering.fit_predict": {"tf": 1}, "ifri_mini_ml_lib.clustering.HierarchicalClustering.plot_dendrogram": {"tf": 1}, "ifri_mini_ml_lib.clustering.HierarchicalClustering.plot_clusters": {"tf": 1}, "ifri_mini_ml_lib.metrics.bias_evaluation.selection_rate": {"tf": 1.7320508075688772}, "ifri_mini_ml_lib.metrics.bias_evaluation.selection_rate_per_group": {"tf": 2}, "ifri_mini_ml_lib.metrics.bias_evaluation.demographic_parity_ratio": {"tf": 1.7320508075688772}, "ifri_mini_ml_lib.metrics.bias_evaluation.demographic_parity_difference": {"tf": 1.7320508075688772}, "ifri_mini_ml_lib.metrics.bias_evaluation.tpr_fpr_by_group": {"tf": 1.7320508075688772}, "ifri_mini_ml_lib.metrics.bias_evaluation.equalized_odds_ratio": {"tf": 1.7320508075688772}, "ifri_mini_ml_lib.metrics.bias_evaluation.equalized_odds_difference": {"tf": 1.7320508075688772}, "ifri_mini_ml_lib.metrics.evaluation_metrics.calculate_inertia": {"tf": 1.7320508075688772}, "ifri_mini_ml_lib.metrics.evaluation_metrics.calculate_silhouette": {"tf": 1.4142135623730951}, "ifri_mini_ml_lib.model_selection.BaggingClassifier.predict": {"tf": 1}, "ifri_mini_ml_lib.model_selection.BaggingRegressor.predict": {"tf": 1}, "ifri_mini_ml_lib.neural_networks.MLPClassifier.fit": {"tf": 1.4142135623730951}, "ifri_mini_ml_lib.neural_networks.MLPClassifier.predict": {"tf": 1.4142135623730951}, "ifri_mini_ml_lib.neural_networks.MLPClassifier.predict_proba": {"tf": 1.4142135623730951}, "ifri_mini_ml_lib.neural_networks.MLPClassifier.score": {"tf": 1.4142135623730951}, "ifri_mini_ml_lib.neural_networks.MLPRegressor.fit": {"tf": 1.4142135623730951}, "ifri_mini_ml_lib.neural_networks.MLPRegressor.predict": {"tf": 1.4142135623730951}, "ifri_mini_ml_lib.neural_networks.MLPRegressor.score": {"tf": 1.4142135623730951}, "ifri_mini_ml_lib.preprocessing.dimensionality_reduction.PCA": {"tf": 2.449489742783178}, "ifri_mini_ml_lib.preprocessing.dimensionality_reduction.PCA.fit": {"tf": 1}, "ifri_mini_ml_lib.preprocessing.dimensionality_reduction.PCA.transform": {"tf": 1.4142135623730951}, "ifri_mini_ml_lib.preprocessing.dimensionality_reduction.PCA.fit_transform": {"tf": 1.4142135623730951}, "ifri_mini_ml_lib.preprocessing.dimensionality_reduction.PCA.explained_variances": {"tf": 1}, "ifri_mini_ml_lib.preprocessing.dimensionality_reduction.PCA.explained_variances_ratio": {"tf": 1}, "ifri_mini_ml_lib.preprocessing.dimensionality_reduction.TSNE": {"tf": 1}, "ifri_mini_ml_lib.preprocessing.dimensionality_reduction.TSNE.fit": {"tf": 1}, "ifri_mini_ml_lib.preprocessing.dimensionality_reduction.TSNE.fit_transform": {"tf": 1.4142135623730951}, "ifri_mini_ml_lib.preprocessing.dimensionality_reduction.TSNE.plot_results": {"tf": 1.4142135623730951}, "ifri_mini_ml_lib.preprocessing.preparation.MinMaxScaler.fit": {"tf": 1}, "ifri_mini_ml_lib.preprocessing.preparation.MissingValueHandler.remove_missing": {"tf": 1}, "ifri_mini_ml_lib.preprocessing.preparation.MissingValueHandler.impute_statistical": {"tf": 1}, "ifri_mini_ml_lib.preprocessing.preparation.MissingValueHandler.impute_default": {"tf": 1}, "ifri_mini_ml_lib.preprocessing.preparation.MissingValueHandler.impute_knn": {"tf": 1}, "ifri_mini_ml_lib.preprocessing.preparation.MissingValueHandler.impute_regression": {"tf": 1}, "ifri_mini_ml_lib.preprocessing.preparation.StandardScaler": {"tf": 1.4142135623730951}, "ifri_mini_ml_lib.preprocessing.preparation.StandardScaler.fit": {"tf": 1}, "ifri_mini_ml_lib.preprocessing.preparation.StandardScaler.transform": {"tf": 1.4142135623730951}, "ifri_mini_ml_lib.preprocessing.preparation.StandardScaler.fit_transform": {"tf": 1.4142135623730951}, "ifri_mini_ml_lib.preprocessing.preparation.StandardScaler.inverse_transform": {"tf": 1.4142135623730951}, "ifri_mini_ml_lib.regression.LinearRegression.fit": {"tf": 1.4142135623730951}, "ifri_mini_ml_lib.regression.LinearRegression.predict": {"tf": 1}, "ifri_mini_ml_lib.regression.PolynomialRegression.fit": {"tf": 1.4142135623730951}, "ifri_mini_ml_lib.regression.PolynomialRegression.predict": {"tf": 1}, "ifri_mini_ml_lib.regression.SVR.linear_kernel": {"tf": 1.7320508075688772}, "ifri_mini_ml_lib.regression.SVR.polynomial_kernel": {"tf": 1.7320508075688772}, "ifri_mini_ml_lib.regression.SVR.rbf_kernel": {"tf": 1.7320508075688772}, "ifri_mini_ml_lib.regression.SVR.sigmoid_kernel": {"tf": 1.7320508075688772}, "ifri_mini_ml_lib.regression.SVR.fit": {"tf": 1.4142135623730951}, "ifri_mini_ml_lib.regression.SVR.predict": {"tf": 1.4142135623730951}}, "df": 64}}}}}}, "p": {"docs": {"ifri_mini_ml_lib.classification.LogisticRegression": {"tf": 1}, "ifri_mini_ml_lib.classification.LogisticRegression.fit": {"tf": 1.4142135623730951}, "ifri_mini_ml_lib.classification.LogisticRegression.predict_proba": {"tf": 1.4142135623730951}, "ifri_mini_ml_lib.classification.LogisticRegression.predict": {"tf": 1.4142135623730951}, "ifri_mini_ml_lib.metrics.bias_evaluation.selection_rate": {"tf": 2}, "ifri_mini_ml_lib.metrics.bias_evaluation.selection_rate_per_group": {"tf": 2}, "ifri_mini_ml_lib.metrics.bias_evaluation.demographic_parity_ratio": {"tf": 2.23606797749979}, "ifri_mini_ml_lib.metrics.bias_evaluation.demographic_parity_difference": {"tf": 1.7320508075688772}, "ifri_mini_ml_lib.metrics.bias_evaluation.tpr_fpr_by_group": {"tf": 1.7320508075688772}, "ifri_mini_ml_lib.metrics.bias_evaluation.equalized_odds_ratio": {"tf": 1.7320508075688772}, "ifri_mini_ml_lib.metrics.bias_evaluation.equalized_odds_difference": {"tf": 1.7320508075688772}, "ifri_mini_ml_lib.model_selection.BaggingClassifier.predict": {"tf": 1}, "ifri_mini_ml_lib.model_selection.BaggingRegressor.predict": {"tf": 1}, "ifri_mini_ml_lib.neural_networks.MLPClassifier.fit": {"tf": 1.4142135623730951}, "ifri_mini_ml_lib.neural_networks.MLPClassifier.predict": {"tf": 1.4142135623730951}, "ifri_mini_ml_lib.neural_networks.MLPClassifier.predict_proba": {"tf": 1.4142135623730951}, "ifri_mini_ml_lib.neural_networks.MLPClassifier.score": {"tf": 1.4142135623730951}, "ifri_mini_ml_lib.neural_networks.MLPRegressor.fit": {"tf": 1.4142135623730951}, "ifri_mini_ml_lib.neural_networks.MLPRegressor.predict": {"tf": 1.4142135623730951}, "ifri_mini_ml_lib.neural_networks.MLPRegressor.score": {"tf": 1.4142135623730951}, "ifri_mini_ml_lib.preprocessing.dimensionality_reduction.PCA": {"tf": 2.449489742783178}, "ifri_mini_ml_lib.preprocessing.dimensionality_reduction.PCA.fit": {"tf": 1.4142135623730951}, "ifri_mini_ml_lib.preprocessing.dimensionality_reduction.PCA.transform": {"tf": 1.4142135623730951}, "ifri_mini_ml_lib.preprocessing.dimensionality_reduction.PCA.fit_transform": {"tf": 1.4142135623730951}, "ifri_mini_ml_lib.preprocessing.dimensionality_reduction.PCA.explained_variances": {"tf": 1}, "ifri_mini_ml_lib.preprocessing.dimensionality_reduction.PCA.explained_variances_ratio": {"tf": 1}, "ifri_mini_ml_lib.preprocessing.dimensionality_reduction.TSNE": {"tf": 1}, "ifri_mini_ml_lib.preprocessing.dimensionality_reduction.TSNE.fit": {"tf": 1.4142135623730951}, "ifri_mini_ml_lib.preprocessing.dimensionality_reduction.TSNE.fit_transform": {"tf": 1.4142135623730951}, "ifri_mini_ml_lib.preprocessing.dimensionality_reduction.TSNE.plot_results": {"tf": 1.4142135623730951}, "ifri_mini_ml_lib.preprocessing.preparation.MissingValueHandler.remove_missing": {"tf": 1}, "ifri_mini_ml_lib.preprocessing.preparation.MissingValueHandler.impute_statistical": {"tf": 1}, "ifri_mini_ml_lib.preprocessing.preparation.MissingValueHandler.impute_default": {"tf": 1}, "ifri_mini_ml_lib.preprocessing.preparation.MissingValueHandler.impute_knn": {"tf": 1}, "ifri_mini_ml_lib.preprocessing.preparation.MissingValueHandler.impute_regression": {"tf": 1}, "ifri_mini_ml_lib.preprocessing.preparation.StandardScaler": {"tf": 1.4142135623730951}, "ifri_mini_ml_lib.preprocessing.preparation.StandardScaler.fit": {"tf": 1}, "ifri_mini_ml_lib.preprocessing.preparation.StandardScaler.transform": {"tf": 1.4142135623730951}, "ifri_mini_ml_lib.preprocessing.preparation.StandardScaler.fit_transform": {"tf": 1.4142135623730951}, "ifri_mini_ml_lib.preprocessing.preparation.StandardScaler.inverse_transform": {"tf": 1.4142135623730951}, "ifri_mini_ml_lib.regression.LinearRegression.fit": {"tf": 1.4142135623730951}, "ifri_mini_ml_lib.regression.LinearRegression.predict": {"tf": 1}, "ifri_mini_ml_lib.regression.PolynomialRegression.fit": {"tf": 1.4142135623730951}, "ifri_mini_ml_lib.regression.PolynomialRegression.predict": {"tf": 1}}, "df": 44}}, "v": {"1": {"docs": {"ifri_mini_ml_lib.model_selection.RandomSearchCV": {"tf": 1.4142135623730951}}, "df": 1}, "2": {"docs": {"ifri_mini_ml_lib.model_selection.RandomSearchCV": {"tf": 1.4142135623730951}}, "df": 1}, "3": {"docs": {"ifri_mini_ml_lib.model_selection.RandomSearchCV": {"tf": 1}}, "df": 1}, "docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "l": {"docs": {"ifri_mini_ml_lib.preprocessing.preparation.DataSplitter.train_test_split": {"tf": 3.3166247903554}, "ifri_mini_ml_lib.preprocessing.preparation.DataSplitter.stratified_train_test_split": {"tf": 3.1622776601683795}, "ifri_mini_ml_lib.preprocessing.preparation.DataSplitter.temporal_train_test_split": {"tf": 3.1622776601683795}}, "df": 3, "i": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"ifri_mini_ml_lib": {"tf": 1}, "ifri_mini_ml_lib.model_selection.BayesianSearchCV": {"tf": 1}, "ifri_mini_ml_lib.model_selection.BayesianSearchCV.__init__": {"tf": 1}, "ifri_mini_ml_lib.model_selection.GridSearchCV": {"tf": 2}, "ifri_mini_ml_lib.model_selection.GridSearchCV.fit": {"tf": 1}, "ifri_mini_ml_lib.model_selection.RandomSearchCV": {"tf": 1.7320508075688772}, "ifri_mini_ml_lib.model_selection.RandomSearchCV.fit": {"tf": 1}, "ifri_mini_ml_lib.neural_networks.MLPClassifier.__init__": {"tf": 1.7320508075688772}, "ifri_mini_ml_lib.neural_networks.MLPRegressor.__init__": {"tf": 1.7320508075688772}, "ifri_mini_ml_lib.preprocessing.preparation.DataSplitter.train_test_split": {"tf": 1.7320508075688772}, "ifri_mini_ml_lib.preprocessing.preparation.DataSplitter.stratified_train_test_split": {"tf": 1.7320508075688772}, "ifri_mini_ml_lib.preprocessing.preparation.DataSplitter.temporal_train_test_split": {"tf": 1.7320508075688772}, "ifri_mini_ml_lib.preprocessing.preparation.DataSplitter.k_fold_split": {"tf": 1}}, "df": 13}}}, "e": {"docs": {}, "df": 0, "d": {"docs": {"ifri_mini_ml_lib.model_selection.RandomSearchCV": {"tf": 1}}, "df": 1}}}}}}, "u": {"docs": {}, "df": 0, "e": {"docs": {"ifri_mini_ml_lib.classification.DecisionTree.fit": {"tf": 1}, "ifri_mini_ml_lib.classification.KNN.predict": {"tf": 1}, "ifri_mini_ml_lib.neural_networks.MLPClassifier.__init__": {"tf": 1}, "ifri_mini_ml_lib.neural_networks.MLPRegressor.__init__": {"tf": 1}, "ifri_mini_ml_lib.preprocessing.dimensionality_reduction.TSNE": {"tf": 1}, "ifri_mini_ml_lib.preprocessing.preparation.MissingValueHandler": {"tf": 1}, "ifri_mini_ml_lib.preprocessing.preparation.MissingValueHandler.impute_default": {"tf": 2}, "ifri_mini_ml_lib.preprocessing.preparation.CategoricalEncoder": {"tf": 1}}, "df": 8, "s": {"docs": {"ifri_mini_ml_lib.association_rules.Apriori.get_frequent_itemsets": {"tf": 1}, "ifri_mini_ml_lib.association_rules.Eclat.get_frequent_itemsets": {"tf": 1}, "ifri_mini_ml_lib.association_rules.DataAdapter.convert_to_transactions": {"tf": 1.4142135623730951}, "ifri_mini_ml_lib.classification.DecisionTree.fit": {"tf": 1}, "ifri_mini_ml_lib.classification.KNN.fit": {"tf": 1}, "ifri_mini_ml_lib.classification.KNN.predict": {"tf": 1.4142135623730951}, "ifri_mini_ml_lib.classification.LogisticRegression": {"tf": 1}, "ifri_mini_ml_lib.metrics.bias_evaluation.selection_rate_per_group": {"tf": 1}, "ifri_mini_ml_lib.metrics.evaluation_metrics.calculate_silhouette": {"tf": 1}, "ifri_mini_ml_lib.model_selection.BaggingRegressor.predict": {"tf": 1}, "ifri_mini_ml_lib.model_selection.BayesianSearchCV.__init__": {"tf": 1}, "ifri_mini_ml_lib.model_selection.BayesianSearchCV.fit": {"tf": 1}, "ifri_mini_ml_lib.model_selection.BayesianSearchCV.get_best_params": {"tf": 1}, "ifri_mini_ml_lib.model_selection.GridSearchCV": {"tf": 1.4142135623730951}, "ifri_mini_ml_lib.model_selection.GridSearchCV.fit": {"tf": 1}, "ifri_mini_ml_lib.neural_networks.MLPRegressor.fit": {"tf": 1}, "ifri_mini_ml_lib.neural_networks.MLPRegressor.predict": {"tf": 1.4142135623730951}, "ifri_mini_ml_lib.neural_networks.MLPRegressor.score": {"tf": 1}, "ifri_mini_ml_lib.preprocessing.dimensionality_reduction.PCA": {"tf": 1}, "ifri_mini_ml_lib.preprocessing.preparation.MinMaxScaler": {"tf": 1.4142135623730951}, "ifri_mini_ml_lib.preprocessing.preparation.MinMaxScaler.fit": {"tf": 1.4142135623730951}, "ifri_mini_ml_lib.preprocessing.preparation.MinMaxScaler.transform": {"tf": 1}, "ifri_mini_ml_lib.preprocessing.preparation.MissingValueHandler": {"tf": 1}, "ifri_mini_ml_lib.preprocessing.preparation.MissingValueHandler.remove_missing": {"tf": 1}, "ifri_mini_ml_lib.preprocessing.preparation.MissingValueHandler.impute_statistical": {"tf": 1}, "ifri_mini_ml_lib.preprocessing.preparation.MissingValueHandler.impute_default": {"tf": 1}, "ifri_mini_ml_lib.preprocessing.preparation.MissingValueHandler.impute_knn": {"tf": 1}, "ifri_mini_ml_lib.regression.LinearRegression.fit": {"tf": 1}, "ifri_mini_ml_lib.regression.LinearRegression.predict": {"tf": 1}, "ifri_mini_ml_lib.regression.PolynomialRegression.fit": {"tf": 1}, "ifri_mini_ml_lib.regression.PolynomialRegression.predict": {"tf": 1}, "ifri_mini_ml_lib.regression.SVR.predict": {"tf": 1.4142135623730951}}, "df": 32}, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {"ifri_mini_ml_lib.association_rules.DataAdapter.convert_to_transactions": {"tf": 1}, "ifri_mini_ml_lib.association_rules.DataAdapter.load_csv_to_transactions": {"tf": 1}, "ifri_mini_ml_lib.classification.DecisionTree.predict": {"tf": 1}, "ifri_mini_ml_lib.preprocessing.dimensionality_reduction.TSNE.fit": {"tf": 1}, "ifri_mini_ml_lib.preprocessing.preparation.MinMaxScaler.transform": {"tf": 1}, "ifri_mini_ml_lib.preprocessing.preparation.MinMaxScaler.inverse_transform": {"tf": 1}, "ifri_mini_ml_lib.preprocessing.preparation.MissingValueHandler.impute_regression": {"tf": 1}, "ifri_mini_ml_lib.preprocessing.preparation.StandardScaler.transform": {"tf": 1}, "ifri_mini_ml_lib.preprocessing.preparation.StandardScaler.inverse_transform": {"tf": 1}, "ifri_mini_ml_lib.preprocessing.preparation.CategoricalEncoder.fit": {"tf": 1}}, "df": 10}}}}}}}}, "r": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "s": {"docs": {"ifri_mini_ml_lib.neural_networks.MLPRegressor": {"tf": 1}, "ifri_mini_ml_lib.preprocessing.preparation.MissingValueHandler": {"tf": 1}, "ifri_mini_ml_lib.preprocessing.preparation.CategoricalEncoder": {"tf": 1}, "ifri_mini_ml_lib.regression.SVR": {"tf": 1}}, "df": 4}}}, "a": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "e": {"docs": {"ifri_mini_ml_lib.preprocessing.dimensionality_reduction.PCA.explained_variances_ratio": {"tf": 1}, "ifri_mini_ml_lib.preprocessing.dimensionality_reduction.PCA.plot_cumulative_explained_variance_ratio": {"tf": 1.4142135623730951}}, "df": 2, "s": {"docs": {"ifri_mini_ml_lib.preprocessing.dimensionality_reduction.PCA.explained_variances": {"tf": 1}, "ifri_mini_ml_lib.preprocessing.dimensionality_reduction.PCA.explained_variances_ratio": {"tf": 1}}, "df": 2}}}}, "b": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "e": {"docs": {"ifri_mini_ml_lib.preprocessing.preparation.CategoricalEncoder": {"tf": 1}, "ifri_mini_ml_lib.preprocessing.preparation.CategoricalEncoder.fit": {"tf": 1.4142135623730951}, "ifri_mini_ml_lib.preprocessing.preparation.CategoricalEncoder.fit_transform": {"tf": 1}}, "df": 3, "s": {"docs": {"ifri_mini_ml_lib.preprocessing.preparation.CategoricalEncoder": {"tf": 1.4142135623730951}}, "df": 1}}}}}}}}, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "l": {"docs": {"ifri_mini_ml_lib.association_rules.Eclat": {"tf": 1}}, "df": 1}}}}}, "b": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "e": {"docs": {"ifri_mini_ml_lib.preprocessing.dimensionality_reduction.TSNE.__init__": {"tf": 1}}, "df": 1}, "i": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "y": {"docs": {"ifri_mini_ml_lib.preprocessing.dimensionality_reduction.TSNE.__init__": {"tf": 1}}, "df": 1}}}}}}}, "c": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {"ifri_mini_ml_lib.classification.LogisticRegression": {"tf": 1}, "ifri_mini_ml_lib.model_selection.BaggingClassifier.fit": {"tf": 1}, "ifri_mini_ml_lib.model_selection.BaggingRegressor.fit": {"tf": 1}, "ifri_mini_ml_lib.model_selection.RandomSearchCV.fit": {"tf": 1}, "ifri_mini_ml_lib.preprocessing.dimensionality_reduction.PCA.explained_variances": {"tf": 1}, "ifri_mini_ml_lib.preprocessing.dimensionality_reduction.PCA.explained_variances_ratio": {"tf": 1}, "ifri_mini_ml_lib.regression.SVR": {"tf": 1}}, "df": 7, "s": {"docs": {"ifri_mini_ml_lib.preprocessing.dimensionality_reduction.PCA": {"tf": 1}}, "df": 1}}}}}}, "i": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "z": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {"ifri_mini_ml_lib.clustering.KMeans.plot_clusters": {"tf": 1}}, "df": 1}}, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"ifri_mini_ml_lib.clustering.HierarchicalClustering.plot_dendrogram": {"tf": 1}, "ifri_mini_ml_lib.preprocessing.dimensionality_reduction.TSNE": {"tf": 1}, "ifri_mini_ml_lib.preprocessing.dimensionality_reduction.TSNE.generate_test_data": {"tf": 1}}, "df": 3}}}}}}}}}}}, "e": {"docs": {}, "df": 0, "w": {"docs": {}, "df": 0, "s": {"docs": {"ifri_mini_ml_lib.preprocessing.dimensionality_reduction.TSNE.plot_results": {"tf": 1}}, "df": 1}}}}, "o": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"ifri_mini_ml_lib.model_selection.BaggingClassifier": {"tf": 1}, "ifri_mini_ml_lib.model_selection.BaggingClassifier.predict": {"tf": 1}}, "df": 2}}}}}}, "g": {"docs": {"ifri_mini_ml_lib.model_selection.GridSearchCV": {"tf": 1}}, "df": 1, "r": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "d": {"docs": {"ifri_mini_ml_lib": {"tf": 1}, "ifri_mini_ml_lib.model_selection.GridSearchCV": {"tf": 2.23606797749979}, "ifri_mini_ml_lib.model_selection.GridSearchCV.fit": {"tf": 2.23606797749979}, "ifri_mini_ml_lib.model_selection.RandomSearchCV": {"tf": 2}}, "df": 4, "s": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "h": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "v": {"docs": {"ifri_mini_ml_lib.model_selection.GridSearchCV": {"tf": 1}}, "df": 1}}}}}}}}}}, "o": {"docs": {}, "df": 0, "w": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "h": {"docs": {"ifri_mini_ml_lib": {"tf": 1}, "ifri_mini_ml_lib.association_rules.FPGrowth": {"tf": 2.449489742783178}}, "df": 2}}}, "u": {"docs": {}, "df": 0, "p": {"docs": {"ifri_mini_ml_lib.metrics.bias_evaluation.selection_rate_per_group": {"tf": 1.4142135623730951}, "ifri_mini_ml_lib.metrics.bias_evaluation.demographic_parity_ratio": {"tf": 1.4142135623730951}, "ifri_mini_ml_lib.metrics.bias_evaluation.demographic_parity_difference": {"tf": 1.4142135623730951}, "ifri_mini_ml_lib.metrics.bias_evaluation.tpr_fpr_by_group": {"tf": 1.7320508075688772}, "ifri_mini_ml_lib.metrics.bias_evaluation.equalized_odds_ratio": {"tf": 1.7320508075688772}, "ifri_mini_ml_lib.metrics.bias_evaluation.equalized_odds_difference": {"tf": 1.7320508075688772}}, "df": 6, "s": {"docs": {"ifri_mini_ml_lib.clustering.DBSCAN": {"tf": 1}, "ifri_mini_ml_lib.metrics.bias_evaluation.selection_rate_per_group": {"tf": 1}, "ifri_mini_ml_lib.metrics.bias_evaluation.equalized_odds_ratio": {"tf": 1}, "ifri_mini_ml_lib.metrics.bias_evaluation.equalized_odds_difference": {"tf": 1}}, "df": 4}}, "n": {"docs": {}, "df": 0, "d": {"docs": {"ifri_mini_ml_lib.metrics.bias_evaluation.tpr_fpr_by_group": {"tf": 1}, "ifri_mini_ml_lib.metrics.bias_evaluation.equalized_odds_ratio": {"tf": 1}, "ifri_mini_ml_lib.metrics.bias_evaluation.equalized_odds_difference": {"tf": 1}}, "df": 3}}}}, "e": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {"ifri_mini_ml_lib.association_rules.DataAdapter": {"tf": 1}}, "df": 1}}}, "a": {"docs": {}, "df": 0, "d": {"docs": {"ifri_mini_ml_lib.preprocessing.dimensionality_reduction.TSNE.__init__": {"tf": 1}}, "df": 1, "i": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "t": {"docs": {"ifri_mini_ml_lib.classification.LogisticRegression": {"tf": 1.7320508075688772}, "ifri_mini_ml_lib.classification.LogisticRegression.__init__": {"tf": 1}, "ifri_mini_ml_lib.classification.LogisticRegression.fit": {"tf": 1}, "ifri_mini_ml_lib.preprocessing.dimensionality_reduction.TSNE": {"tf": 1}, "ifri_mini_ml_lib.preprocessing.dimensionality_reduction.TSNE.__init__": {"tf": 1}, "ifri_mini_ml_lib.regression.LinearRegression": {"tf": 1.7320508075688772}, "ifri_mini_ml_lib.regression.PolynomialRegression": {"tf": 1.7320508075688772}}, "df": 7}}}}}}}, "t": {"docs": {"ifri_mini_ml_lib.association_rules.Apriori": {"tf": 5.830951894845301}, "ifri_mini_ml_lib.association_rules.Eclat": {"tf": 5.830951894845301}, "ifri_mini_ml_lib.association_rules.FPGrowth": {"tf": 5.5677643628300215}, "ifri_mini_ml_lib.association_rules.DataAdapter": {"tf": 7.14142842854285}, "ifri_mini_ml_lib.classification.KNN": {"tf": 3.4641016151377544}, "ifri_mini_ml_lib.clustering.KMeans": {"tf": 3.872983346207417}, "ifri_mini_ml_lib.clustering.KMeans.plot_clusters": {"tf": 1}, "ifri_mini_ml_lib.clustering.DBSCAN": {"tf": 3.4641016151377544}, "ifri_mini_ml_lib.clustering.DBSCAN.__init__": {"tf": 1.7320508075688772}, "ifri_mini_ml_lib.clustering.DBSCAN.fit_predict": {"tf": 1.7320508075688772}, "ifri_mini_ml_lib.clustering.DBSCAN.plot_clusters": {"tf": 2}, "ifri_mini_ml_lib.clustering.HierarchicalClustering": {"tf": 3.4641016151377544}, "ifri_mini_ml_lib.clustering.HierarchicalClustering.plot_dendrogram": {"tf": 3}, "ifri_mini_ml_lib.clustering.HierarchicalClustering.plot_clusters": {"tf": 1.7320508075688772}, "ifri_mini_ml_lib.metrics.evaluation_metrics.calculate_silhouette": {"tf": 2.449489742783178}, "ifri_mini_ml_lib.model_selection.BaggingClassifier": {"tf": 3}, "ifri_mini_ml_lib.model_selection.BaggingRegressor": {"tf": 3}, "ifri_mini_ml_lib.model_selection.RandomSearchCV": {"tf": 3.872983346207417}}, "df": 18}, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"ifri_mini_ml_lib.association_rules.Apriori": {"tf": 1}, "ifri_mini_ml_lib.association_rules.Eclat": {"tf": 1}, "ifri_mini_ml_lib.association_rules.FPGrowth": {"tf": 1}}, "df": 3}}, "n": {"docs": {}, "df": 0, "g": {"docs": {"ifri_mini_ml_lib.association_rules.FPGrowth": {"tf": 1}}, "df": 1}}}, "e": {"docs": {"ifri_mini_ml_lib.association_rules.Eclat": {"tf": 1}, "ifri_mini_ml_lib.preprocessing.dimensionality_reduction.TSNE.generate_test_data": {"tf": 1}, "ifri_mini_ml_lib.preprocessing.preparation.DataSplitter.k_fold_split": {"tf": 1}, "ifri_mini_ml_lib.regression.LinearRegression.predict": {"tf": 1}, "ifri_mini_ml_lib.regression.PolynomialRegression.predict": {"tf": 1}}, "df": 5, "d": {"docs": {"ifri_mini_ml_lib.association_rules.Apriori.get_rules": {"tf": 1}, "ifri_mini_ml_lib.association_rules.Eclat.get_rules": {"tf": 1}, "ifri_mini_ml_lib.association_rules.FPGrowth.get_rules": {"tf": 1}}, "df": 3}, "s": {"docs": {"ifri_mini_ml_lib.preprocessing.dimensionality_reduction.TSNE.generate_test_data": {"tf": 1}}, "df": 1}}, "o": {"docs": {}, "df": 0, "r": {"docs": {"ifri_mini_ml_lib.clustering.KMeans.__init__": {"tf": 1}}, "df": 1}}}, "l": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "y": {"docs": {"ifri_mini_ml_lib.metrics.evaluation_metrics.calculate_inertia": {"tf": 1}}, "df": 1}}}}}}}, "t": {"docs": {"ifri_mini_ml_lib.association_rules.Apriori": {"tf": 1.4142135623730951}, "ifri_mini_ml_lib.association_rules.Eclat": {"tf": 1.4142135623730951}, "ifri_mini_ml_lib.association_rules.FPGrowth": {"tf": 1.4142135623730951}, "ifri_mini_ml_lib.model_selection.BayesianSearchCV.get_best_params": {"tf": 1}}, "df": 4, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"ifri_mini_ml_lib.regression.SVR.ker": {"tf": 1}}, "df": 1}}}}}, "a": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {"ifri_mini_ml_lib.classification.DecisionTree": {"tf": 1}, "ifri_mini_ml_lib.classification.DecisionTree.fit": {"tf": 1}}, "df": 2}}, "u": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "n": {"docs": {"ifri_mini_ml_lib.model_selection.BayesianSearchCV": {"tf": 1}}, "df": 1}}}}}}, "m": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "a": {"docs": {"ifri_mini_ml_lib.model_selection.BayesianSearchCV.__init__": {"tf": 1}, "ifri_mini_ml_lib.model_selection.BayesianSearchCV.get_best_params": {"tf": 1}, "ifri_mini_ml_lib.regression.SVR": {"tf": 1.4142135623730951}, "ifri_mini_ml_lib.regression.SVR.set_params": {"tf": 1}}, "df": 4}}}}, "i": {"docs": {}, "df": 0, "v": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {"ifri_mini_ml_lib.clustering.HierarchicalClustering.fit_predict": {"tf": 1}, "ifri_mini_ml_lib.model_selection.BaggingClassifier.predict": {"tf": 1}, "ifri_mini_ml_lib.model_selection.BaggingRegressor.predict": {"tf": 1}, "ifri_mini_ml_lib.model_selection.GridSearchCV.fit": {"tf": 1}, "ifri_mini_ml_lib.model_selection.RandomSearchCV.fit": {"tf": 1}}, "df": 5}}}}}, "b": {"docs": {"ifri_mini_ml_lib.metrics.bias_evaluation.demographic_parity_ratio": {"tf": 1}}, "df": 1, "a": {"docs": {}, "df": 0, "y": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "n": {"docs": {"ifri_mini_ml_lib": {"tf": 1}, "ifri_mini_ml_lib.model_selection.BayesianSearchCV": {"tf": 1}, "ifri_mini_ml_lib.model_selection.BayesianSearchCV.__init__": {"tf": 1}, "ifri_mini_ml_lib.model_selection.BayesianSearchCV.fit": {"tf": 1}}, "df": 4, "s": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "h": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "v": {"docs": {"ifri_mini_ml_lib.model_selection.BayesianSearchCV.__init__": {"tf": 1}}, "df": 1}}}}}}}}}}}}}}, "s": {"docs": {}, "df": 0, "e": {"docs": {"ifri_mini_ml_lib.model_selection.BaggingClassifier": {"tf": 2.23606797749979}, "ifri_mini_ml_lib.model_selection.BaggingClassifier.fit": {"tf": 1}, "ifri_mini_ml_lib.model_selection.BaggingRegressor": {"tf": 2.23606797749979}, "ifri_mini_ml_lib.model_selection.BaggingRegressor.fit": {"tf": 1}}, "df": 4, "d": {"docs": {"ifri_mini_ml_lib.classification.LogisticRegression": {"tf": 1.4142135623730951}, "ifri_mini_ml_lib.classification.LogisticRegression.fit": {"tf": 1}, "ifri_mini_ml_lib.clustering.KMeans": {"tf": 1}, "ifri_mini_ml_lib.clustering.KMeans.__init__": {"tf": 1}, "ifri_mini_ml_lib.clustering.KMeans.predict": {"tf": 1}, "ifri_mini_ml_lib.clustering.DBSCAN": {"tf": 1.4142135623730951}, "ifri_mini_ml_lib.clustering.HierarchicalClustering.plot_dendrogram": {"tf": 1}, "ifri_mini_ml_lib.model_selection.RandomSearchCV": {"tf": 1}, "ifri_mini_ml_lib.neural_networks.MLPClassifier.__init__": {"tf": 1}, "ifri_mini_ml_lib.neural_networks.MLPRegressor.__init__": {"tf": 1}, "ifri_mini_ml_lib.preprocessing.preparation.MinMaxScaler": {"tf": 1}, "ifri_mini_ml_lib.preprocessing.preparation.MissingValueHandler.impute_regression": {"tf": 1}, "ifri_mini_ml_lib.preprocessing.preparation.CategoricalEncoder.fit": {"tf": 1}, "ifri_mini_ml_lib.regression.SVR.get_kernel": {"tf": 1}}, "df": 14}}, "i": {"docs": {}, "df": 0, "c": {"docs": {"ifri_mini_ml_lib.classification.LogisticRegression": {"tf": 1}}, "df": 1}, "s": {"docs": {"ifri_mini_ml_lib.regression.SVR.rbf_kernel": {"tf": 1}}, "df": 1}}}, "g": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"ifri_mini_ml_lib.model_selection.BaggingClassifier": {"tf": 1}, "ifri_mini_ml_lib.model_selection.BaggingRegressor": {"tf": 1}}, "df": 2, "c": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "f": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"ifri_mini_ml_lib.model_selection.BaggingClassifier": {"tf": 1.7320508075688772}}, "df": 1}}}}}}}}}}, "r": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {"ifri_mini_ml_lib.model_selection.BaggingRegressor": {"tf": 1.7320508075688772}}, "df": 1}}}}}}}}}}}}}}, "t": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "h": {"docs": {"ifri_mini_ml_lib.neural_networks.MLPClassifier.__init__": {"tf": 1.4142135623730951}, "ifri_mini_ml_lib.neural_networks.MLPRegressor.__init__": {"tf": 1}}, "df": 2, "e": {"docs": {}, "df": 0, "s": {"docs": {"ifri_mini_ml_lib.neural_networks.MLPRegressor.__init__": {"tf": 1}}, "df": 1}}}}}, "c": {"docs": {}, "df": 0, "k": {"docs": {"ifri_mini_ml_lib.preprocessing.preparation.MinMaxScaler.inverse_transform": {"tf": 1.4142135623730951}}, "df": 1}}}, "r": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "d": {"docs": {"ifri_mini_ml_lib.association_rules.Apriori": {"tf": 2.6457513110645907}, "ifri_mini_ml_lib.association_rules.Eclat": {"tf": 2.6457513110645907}, "ifri_mini_ml_lib.association_rules.FPGrowth": {"tf": 2.6457513110645907}, "ifri_mini_ml_lib.association_rules.DataAdapter": {"tf": 2}}, "df": 4}}}, "a": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "h": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {"ifri_mini_ml_lib.clustering.HierarchicalClustering.plot_dendrogram": {"tf": 1}}, "df": 1}}}}}}}, "u": {"docs": {}, "df": 0, "t": {"docs": {"ifri_mini_ml_lib.metrics.bias_evaluation.selection_rate": {"tf": 1}, "ifri_mini_ml_lib.preprocessing.preparation.MinMaxScaler": {"tf": 1}, "ifri_mini_ml_lib.preprocessing.preparation.CategoricalEncoder": {"tf": 1}, "ifri_mini_ml_lib.preprocessing.preparation.CategoricalEncoder.fit": {"tf": 1}}, "df": 4, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"ifri_mini_ml_lib.association_rules.Apriori": {"tf": 2}, "ifri_mini_ml_lib.association_rules.Eclat": {"tf": 2}, "ifri_mini_ml_lib.association_rules.FPGrowth": {"tf": 2}}, "df": 3}}}}, "i": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "d": {"docs": {"ifri_mini_ml_lib.association_rules.Eclat.get_single_items_TIDset": {"tf": 1}}, "df": 1, "s": {"docs": {"ifri_mini_ml_lib.association_rules.FPGrowth.fit": {"tf": 1}, "ifri_mini_ml_lib.classification.DecisionTree.fit": {"tf": 1.4142135623730951}}, "df": 2}}}}}, "o": {"docs": {"ifri_mini_ml_lib.model_selection.BayesianSearchCV.__init__": {"tf": 1}, "ifri_mini_ml_lib.model_selection.BayesianSearchCV.fit": {"tf": 1.7320508075688772}, "ifri_mini_ml_lib.model_selection.BayesianSearchCV.get_best_params": {"tf": 1}}, "df": 3, "t": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "m": {"docs": {"ifri_mini_ml_lib.association_rules.Eclat": {"tf": 1}, "ifri_mini_ml_lib.clustering.HierarchicalClustering": {"tf": 1}}, "df": 2}}}, "h": {"docs": {"ifri_mini_ml_lib.classification.DecisionTree": {"tf": 1}, "ifri_mini_ml_lib.classification.KNN": {"tf": 1}, "ifri_mini_ml_lib.metrics.evaluation_metrics.f1_score": {"tf": 1}, "ifri_mini_ml_lib.preprocessing.preparation.StandardScaler": {"tf": 1}}, "df": 4}}, "o": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "p": {"docs": {"ifri_mini_ml_lib.model_selection.BaggingClassifier": {"tf": 1.4142135623730951}, "ifri_mini_ml_lib.model_selection.BaggingClassifier.fit": {"tf": 1}, "ifri_mini_ml_lib.model_selection.BaggingRegressor": {"tf": 1.4142135623730951}, "ifri_mini_ml_lib.model_selection.BaggingRegressor.fit": {"tf": 1}}, "df": 4}}}}}}, "l": {"docs": {"ifri_mini_ml_lib.model_selection.RandomSearchCV": {"tf": 1}, "ifri_mini_ml_lib.neural_networks.MLPClassifier.__init__": {"tf": 1.4142135623730951}, "ifri_mini_ml_lib.neural_networks.MLPRegressor.__init__": {"tf": 1.4142135623730951}, "ifri_mini_ml_lib.preprocessing.preparation.StandardScaler": {"tf": 1}, "ifri_mini_ml_lib.preprocessing.preparation.DataSplitter.train_test_split": {"tf": 1}, "ifri_mini_ml_lib.preprocessing.preparation.DataSplitter.stratified_train_test_split": {"tf": 1}, "ifri_mini_ml_lib.preprocessing.preparation.DataSplitter.temporal_train_test_split": {"tf": 1}}, "df": 7}}, "u": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "d": {"docs": {"ifri_mini_ml_lib.model_selection.BayesianSearchCV.__init__": {"tf": 1.4142135623730951}}, "df": 1, "s": {"docs": {"ifri_mini_ml_lib.model_selection.BayesianSearchCV.__init__": {"tf": 2}}, "df": 1}}}}}, "e": {"docs": {"ifri_mini_ml_lib.classification.KNN": {"tf": 1}, "ifri_mini_ml_lib.clustering.HierarchicalClustering.fit_predict": {"tf": 1}, "ifri_mini_ml_lib.preprocessing.preparation.MinMaxScaler": {"tf": 1}, "ifri_mini_ml_lib.preprocessing.preparation.MinMaxScaler.fit": {"tf": 1.4142135623730951}, "ifri_mini_ml_lib.preprocessing.preparation.MinMaxScaler.transform": {"tf": 1}, "ifri_mini_ml_lib.preprocessing.preparation.CategoricalEncoder.transform": {"tf": 1}}, "df": 6, "t": {"docs": {}, "df": 0, "w": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {"ifri_mini_ml_lib.association_rules.Eclat": {"tf": 1.4142135623730951}, "ifri_mini_ml_lib.association_rules.FPGrowth": {"tf": 1.4142135623730951}, "ifri_mini_ml_lib.metrics.bias_evaluation.equalized_odds_ratio": {"tf": 1}, "ifri_mini_ml_lib.metrics.bias_evaluation.equalized_odds_difference": {"tf": 1}, "ifri_mini_ml_lib.preprocessing.dimensionality_reduction.TSNE": {"tf": 1}, "ifri_mini_ml_lib.preprocessing.preparation.MissingValueHandler.remove_missing": {"tf": 1}}, "df": 6}}}}, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"ifri_mini_ml_lib.clustering.HierarchicalClustering.plot_dendrogram": {"tf": 1}, "ifri_mini_ml_lib.metrics.evaluation_metrics.calculate_inertia": {"tf": 1}, "ifri_mini_ml_lib.metrics.evaluation_metrics.calculate_silhouette": {"tf": 1}}, "df": 3}}}, "a": {"1": {"docs": {"ifri_mini_ml_lib.neural_networks.MLPClassifier.__init__": {"tf": 1}, "ifri_mini_ml_lib.neural_networks.MLPRegressor.__init__": {"tf": 1}}, "df": 2}, "2": {"docs": {"ifri_mini_ml_lib.neural_networks.MLPClassifier.__init__": {"tf": 1}, "ifri_mini_ml_lib.neural_networks.MLPRegressor.__init__": {"tf": 1}}, "df": 2}, "docs": {}, "df": 0}}, "e": {"docs": {}, "df": 0, "r": {"docs": {"ifri_mini_ml_lib.association_rules.DataAdapter": {"tf": 1.7320508075688772}}, "df": 1}, "n": {"docs": {"ifri_mini_ml_lib.classification.DecisionTree.predict": {"tf": 1}, "ifri_mini_ml_lib.preprocessing.preparation.MinMaxScaler.transform": {"tf": 1}, "ifri_mini_ml_lib.preprocessing.preparation.MinMaxScaler.inverse_transform": {"tf": 1}}, "df": 3}}, "s": {"docs": {}, "df": 0, "t": {"docs": {"ifri_mini_ml_lib.classification.DecisionTree.fit": {"tf": 1}, "ifri_mini_ml_lib.model_selection.BayesianSearchCV.fit": {"tf": 2}, "ifri_mini_ml_lib.model_selection.BayesianSearchCV.get_best_params": {"tf": 2.23606797749979}, "ifri_mini_ml_lib.model_selection.GridSearchCV": {"tf": 1}, "ifri_mini_ml_lib.model_selection.GridSearchCV.fit": {"tf": 2.6457513110645907}, "ifri_mini_ml_lib.model_selection.RandomSearchCV": {"tf": 3.1622776601683795}}, "df": 6}}, "l": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "w": {"docs": {"ifri_mini_ml_lib.clustering.KMeans.fit": {"tf": 1}}, "df": 1}}}, "f": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "e": {"docs": {"ifri_mini_ml_lib.preprocessing.preparation.MissingValueHandler.remove_missing": {"tf": 1}, "ifri_mini_ml_lib.preprocessing.preparation.StandardScaler.transform": {"tf": 1}, "ifri_mini_ml_lib.preprocessing.preparation.StandardScaler.inverse_transform": {"tf": 1}}, "df": 3}}}}}, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "y": {"docs": {"ifri_mini_ml_lib.association_rules.DataAdapter": {"tf": 2}, "ifri_mini_ml_lib.association_rules.DataAdapter.convert_to_transactions": {"tf": 1}, "ifri_mini_ml_lib.classification.LogisticRegression": {"tf": 1}, "ifri_mini_ml_lib.classification.LogisticRegression.predict": {"tf": 1}, "ifri_mini_ml_lib.preprocessing.preparation.CategoricalEncoder": {"tf": 1}}, "df": 5}}}}, "a": {"docs": {}, "df": 0, "s": {"docs": {"ifri_mini_ml_lib.classification.LogisticRegression": {"tf": 1.4142135623730951}}, "df": 1}}}, "l": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "e": {"docs": {"ifri_mini_ml_lib.association_rules.DataAdapter": {"tf": 1.7320508075688772}}, "df": 1}}, "o": {"docs": {}, "df": 0, "b": {"docs": {}, "df": 0, "s": {"docs": {"ifri_mini_ml_lib.preprocessing.dimensionality_reduction.TSNE.generate_test_data": {"tf": 1.4142135623730951}}, "df": 1}}}}, "y": {"docs": {"ifri_mini_ml_lib.classification.DecisionTree.fit": {"tf": 1}, "ifri_mini_ml_lib.clustering.KMeans": {"tf": 1}, "ifri_mini_ml_lib.clustering.KMeans.fit": {"tf": 1}, "ifri_mini_ml_lib.clustering.KMeans.plot_clusters": {"tf": 1}, "ifri_mini_ml_lib.clustering.DBSCAN": {"tf": 1}, "ifri_mini_ml_lib.clustering.HierarchicalClustering.plot_clusters": {"tf": 1}, "ifri_mini_ml_lib.model_selection.BaggingRegressor": {"tf": 1}, "ifri_mini_ml_lib.model_selection.BaggingRegressor.predict": {"tf": 1}, "ifri_mini_ml_lib.neural_networks.MLPClassifier.__init__": {"tf": 1}, "ifri_mini_ml_lib.neural_networks.MLPRegressor.__init__": {"tf": 1}, "ifri_mini_ml_lib.preprocessing.dimensionality_reduction.PCA.explained_variances_ratio": {"tf": 1}, "ifri_mini_ml_lib.preprocessing.preparation.MinMaxScaler": {"tf": 1}, "ifri_mini_ml_lib.preprocessing.preparation.MissingValueHandler.impute_regression": {"tf": 1}, "ifri_mini_ml_lib.preprocessing.preparation.CategoricalEncoder.transform": {"tf": 1}}, "df": 14}}, "u": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "e": {"docs": {"ifri_mini_ml_lib.classification.KNN.__init__": {"tf": 1}, "ifri_mini_ml_lib.classification.KNN.fit": {"tf": 1}, "ifri_mini_ml_lib.clustering.HierarchicalClustering": {"tf": 1}, "ifri_mini_ml_lib.clustering.HierarchicalClustering.__init__": {"tf": 1}, "ifri_mini_ml_lib.metrics.bias_evaluation.demographic_parity_ratio": {"tf": 1}, "ifri_mini_ml_lib.model_selection.BaggingClassifier": {"tf": 1}, "ifri_mini_ml_lib.model_selection.BaggingRegressor": {"tf": 1}, "ifri_mini_ml_lib.model_selection.BayesianSearchCV.__init__": {"tf": 1}, "ifri_mini_ml_lib.model_selection.GridSearchCV": {"tf": 1}, "ifri_mini_ml_lib.model_selection.RandomSearchCV": {"tf": 1}, "ifri_mini_ml_lib.neural_networks.MLPClassifier.__init__": {"tf": 1.4142135623730951}, "ifri_mini_ml_lib.neural_networks.MLPRegressor.__init__": {"tf": 1.4142135623730951}}, "df": 12, "d": {"docs": {"ifri_mini_ml_lib.association_rules.Apriori": {"tf": 1}, "ifri_mini_ml_lib.association_rules.Eclat": {"tf": 1}, "ifri_mini_ml_lib.association_rules.DataAdapter.convert_to_transactions": {"tf": 1}, "ifri_mini_ml_lib.classification.DecisionTree.fit": {"tf": 1}, "ifri_mini_ml_lib.classification.KNN": {"tf": 1}, "ifri_mini_ml_lib.clustering.HierarchicalClustering.plot_dendrogram": {"tf": 1}, "ifri_mini_ml_lib.metrics.bias_evaluation.selection_rate": {"tf": 1}, "ifri_mini_ml_lib.metrics.bias_evaluation.selection_rate_per_group": {"tf": 1}, "ifri_mini_ml_lib.preprocessing.preparation.MissingValueHandler.impute_default": {"tf": 1}, "ifri_mini_ml_lib.regression.SVR": {"tf": 1}}, "df": 10}, "s": {"docs": {"ifri_mini_ml_lib.association_rules.Eclat": {"tf": 1}, "ifri_mini_ml_lib.classification.LogisticRegression.fit": {"tf": 1}, "ifri_mini_ml_lib.clustering.KMeans.plot_clusters": {"tf": 1}, "ifri_mini_ml_lib.model_selection.BayesianSearchCV": {"tf": 1}}, "df": 4}, "f": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "l": {"docs": {"ifri_mini_ml_lib.model_selection.RandomSearchCV": {"tf": 1}}, "df": 1}}}}, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"ifri_mini_ml_lib.classification.DecisionTree": {"tf": 1}, "ifri_mini_ml_lib.classification.LogisticRegression.predict": {"tf": 1}, "ifri_mini_ml_lib.clustering.HierarchicalClustering": {"tf": 1}, "ifri_mini_ml_lib.model_selection.BaggingClassifier": {"tf": 1}, "ifri_mini_ml_lib.model_selection.BaggingClassifier.predict": {"tf": 1}, "ifri_mini_ml_lib.model_selection.GridSearchCV": {"tf": 1}, "ifri_mini_ml_lib.model_selection.RandomSearchCV": {"tf": 1}, "ifri_mini_ml_lib.preprocessing.preparation.MinMaxScaler": {"tf": 1}, "ifri_mini_ml_lib.preprocessing.preparation.MinMaxScaler.transform": {"tf": 1}, "ifri_mini_ml_lib.preprocessing.preparation.MissingValueHandler": {"tf": 1}, "ifri_mini_ml_lib.preprocessing.preparation.MissingValueHandler.impute_statistical": {"tf": 1}, "ifri_mini_ml_lib.preprocessing.preparation.MissingValueHandler.impute_knn": {"tf": 1}, "ifri_mini_ml_lib.preprocessing.preparation.StandardScaler.transform": {"tf": 1}, "ifri_mini_ml_lib.preprocessing.preparation.CategoricalEncoder": {"tf": 1}, "ifri_mini_ml_lib.preprocessing.preparation.CategoricalEncoder.transform": {"tf": 1}, "ifri_mini_ml_lib.regression.SVR": {"tf": 1}, "ifri_mini_ml_lib.regression.SVR.fit": {"tf": 1}}, "df": 17}}}, "a": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "e": {"docs": {"ifri_mini_ml_lib.classification.LogisticRegression": {"tf": 1}}, "df": 1}}}}, "p": {"docs": {"ifri_mini_ml_lib.association_rules.Eclat": {"tf": 1}, "ifri_mini_ml_lib.clustering.HierarchicalClustering": {"tf": 1}}, "df": 2, "d": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {"ifri_mini_ml_lib.regression.SVR.set_params": {"tf": 1}}, "df": 1, "s": {"docs": {"ifri_mini_ml_lib.classification.LogisticRegression": {"tf": 1}, "ifri_mini_ml_lib.clustering.KMeans.fit": {"tf": 1}}, "df": 2}}, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"ifri_mini_ml_lib.clustering.KMeans": {"tf": 1}, "ifri_mini_ml_lib.clustering.KMeans.fit": {"tf": 1}}, "df": 2}}}}}}}, "n": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "k": {"docs": {}, "df": 0, "e": {"docs": {"ifri_mini_ml_lib.association_rules.FPGrowth": {"tf": 1}}, "df": 1}}}}, "n": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "z": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "d": {"docs": {"ifri_mini_ml_lib.classification.LogisticRegression.fit": {"tf": 1}}, "df": 1}}}}}}}}}}, "s": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "v": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "d": {"docs": {"ifri_mini_ml_lib.clustering.KMeans": {"tf": 1.4142135623730951}}, "df": 1}}}}}}}}}}, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "l": {"docs": {"ifri_mini_ml_lib.clustering.KMeans.fit": {"tf": 1}, "ifri_mini_ml_lib.clustering.HierarchicalClustering.__init__": {"tf": 1}}, "df": 2}}}, "i": {"docs": {}, "df": 0, "q": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "e": {"docs": {"ifri_mini_ml_lib.preprocessing.preparation.CategoricalEncoder": {"tf": 1}}, "df": 1}}}}}, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "y": {"docs": {"ifri_mini_ml_lib.association_rules.DataAdapter": {"tf": 1}}, "df": 1}}}, "s": {"docs": {"ifri_mini_ml_lib.association_rules.DataAdapter": {"tf": 1}}, "df": 1}}}}}, "j": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "m": {"docs": {"ifri_mini_ml_lib.association_rules.Apriori": {"tf": 1.4142135623730951}, "ifri_mini_ml_lib.association_rules.Eclat": {"tf": 1.4142135623730951}, "ifri_mini_ml_lib.association_rules.FPGrowth": {"tf": 1.4142135623730951}}, "df": 3}}, "o": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {"ifri_mini_ml_lib.association_rules.DataAdapter.convert_to_transactions": {"tf": 1}}, "df": 1}}}}, "q": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "t": {"docs": {"ifri_mini_ml_lib.association_rules.Apriori": {"tf": 2.449489742783178}, "ifri_mini_ml_lib.association_rules.Eclat": {"tf": 2.449489742783178}, "ifri_mini_ml_lib.association_rules.DataAdapter": {"tf": 1.4142135623730951}, "ifri_mini_ml_lib.metrics.evaluation_metrics.calculate_silhouette": {"tf": 1.4142135623730951}}, "df": 4}}}}, "w": {"docs": {}, "df": 0, "h": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "e": {"docs": {"ifri_mini_ml_lib.association_rules.Apriori.get_frequent_itemsets": {"tf": 1}, "ifri_mini_ml_lib.association_rules.Eclat.get_frequent_itemsets": {"tf": 1}, "ifri_mini_ml_lib.association_rules.DataAdapter.convert_to_transactions": {"tf": 1}, "ifri_mini_ml_lib.metrics.evaluation_metrics.calculate_silhouette": {"tf": 1}, "ifri_mini_ml_lib.model_selection.BayesianSearchCV.__init__": {"tf": 1}, "ifri_mini_ml_lib.model_selection.GridSearchCV": {"tf": 1}, "ifri_mini_ml_lib.preprocessing.preparation.StandardScaler.fit": {"tf": 1}}, "df": 7}}, "n": {"docs": {"ifri_mini_ml_lib.clustering.KMeans.fit": {"tf": 1}}, "df": 1}, "t": {"docs": {}, "df": 0, "h": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"ifri_mini_ml_lib.model_selection.BayesianSearchCV.__init__": {"tf": 1}, "ifri_mini_ml_lib.model_selection.GridSearchCV": {"tf": 1}, "ifri_mini_ml_lib.model_selection.RandomSearchCV": {"tf": 1}, "ifri_mini_ml_lib.preprocessing.preparation.StandardScaler": {"tf": 1}, "ifri_mini_ml_lib.preprocessing.preparation.DataSplitter.train_test_split": {"tf": 1}, "ifri_mini_ml_lib.preprocessing.preparation.DataSplitter.stratified_train_test_split": {"tf": 1}, "ifri_mini_ml_lib.preprocessing.preparation.DataSplitter.temporal_train_test_split": {"tf": 1}}, "df": 7}}}}}, "i": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "e": {"docs": {"ifri_mini_ml_lib.classification.DecisionTree.fit": {"tf": 1}}, "df": 1}}, "c": {"docs": {}, "df": 0, "h": {"docs": {"ifri_mini_ml_lib.classification.KNN": {"tf": 1}, "ifri_mini_ml_lib.model_selection.BaggingClassifier": {"tf": 1.4142135623730951}, "ifri_mini_ml_lib.model_selection.BaggingRegressor": {"tf": 1.4142135623730951}, "ifri_mini_ml_lib.neural_networks.MLPClassifier.predict": {"tf": 1}, "ifri_mini_ml_lib.neural_networks.MLPClassifier.predict_proba": {"tf": 1}, "ifri_mini_ml_lib.regression.SVR": {"tf": 1}}, "df": 6}}}}, "i": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "h": {"docs": {"ifri_mini_ml_lib.association_rules.Eclat": {"tf": 1}, "ifri_mini_ml_lib.association_rules.FPGrowth.get_frequent_itemsets": {"tf": 1}, "ifri_mini_ml_lib.classification.DecisionTree": {"tf": 1}, "ifri_mini_ml_lib.classification.LogisticRegression": {"tf": 1.7320508075688772}, "ifri_mini_ml_lib.classification.LogisticRegression.__init__": {"tf": 1}, "ifri_mini_ml_lib.classification.LogisticRegression.fit": {"tf": 1}, "ifri_mini_ml_lib.clustering.KMeans.__init__": {"tf": 1}, "ifri_mini_ml_lib.clustering.KMeans.plot_clusters": {"tf": 1}, "ifri_mini_ml_lib.clustering.DBSCAN": {"tf": 1}, "ifri_mini_ml_lib.clustering.DBSCAN.plot_clusters": {"tf": 1}, "ifri_mini_ml_lib.metrics.bias_evaluation.selection_rate_per_group": {"tf": 1}, "ifri_mini_ml_lib.model_selection.BayesianSearchCV": {"tf": 1}, "ifri_mini_ml_lib.model_selection.BayesianSearchCV.get_best_params": {"tf": 1}, "ifri_mini_ml_lib.model_selection.GridSearchCV": {"tf": 1}, "ifri_mini_ml_lib.model_selection.GridSearchCV.fit": {"tf": 1}, "ifri_mini_ml_lib.model_selection.RandomSearchCV": {"tf": 1.7320508075688772}, "ifri_mini_ml_lib.model_selection.RandomSearchCV.fit": {"tf": 1}, "ifri_mini_ml_lib.neural_networks.MLPClassifier": {"tf": 1}, "ifri_mini_ml_lib.neural_networks.MLPClassifier.__init__": {"tf": 1}, "ifri_mini_ml_lib.neural_networks.MLPRegressor": {"tf": 1}, "ifri_mini_ml_lib.neural_networks.MLPRegressor.__init__": {"tf": 1}, "ifri_mini_ml_lib.preprocessing.dimensionality_reduction.PCA.plot_cov_matrix": {"tf": 1}, "ifri_mini_ml_lib.preprocessing.preparation.MinMaxScaler.__init__": {"tf": 1}, "ifri_mini_ml_lib.preprocessing.preparation.MinMaxScaler.fit": {"tf": 1}, "ifri_mini_ml_lib.preprocessing.preparation.MinMaxScaler.transform": {"tf": 1}, "ifri_mini_ml_lib.preprocessing.preparation.MissingValueHandler.impute_default": {"tf": 1}, "ifri_mini_ml_lib.preprocessing.preparation.MissingValueHandler.impute_regression": {"tf": 1}, "ifri_mini_ml_lib.preprocessing.preparation.StandardScaler.__init__": {"tf": 1}, "ifri_mini_ml_lib.preprocessing.preparation.CategoricalEncoder": {"tf": 1.4142135623730951}, "ifri_mini_ml_lib.preprocessing.preparation.CategoricalEncoder.transform": {"tf": 1}, "ifri_mini_ml_lib.preprocessing.preparation.CategoricalEncoder.fit_transform": {"tf": 1}, "ifri_mini_ml_lib.preprocessing.preparation.DataSplitter.__init__": {"tf": 1}, "ifri_mini_ml_lib.preprocessing.preparation.DataSplitter.train_test_split": {"tf": 1}, "ifri_mini_ml_lib.preprocessing.preparation.DataSplitter.stratified_train_test_split": {"tf": 1}}, "df": 34, "o": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "t": {"docs": {"ifri_mini_ml_lib.association_rules.FPGrowth": {"tf": 1}}, "df": 1}}}, "i": {"docs": {}, "df": 0, "n": {"docs": {"ifri_mini_ml_lib.metrics.evaluation_metrics.calculate_silhouette": {"tf": 1}, "ifri_mini_ml_lib.regression.SVR": {"tf": 1}}, "df": 2}}}}}, "e": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "h": {"docs": {}, "df": 0, "t": {"docs": {"ifri_mini_ml_lib.classification.LogisticRegression": {"tf": 1}, "ifri_mini_ml_lib.metrics.bias_evaluation.selection_rate": {"tf": 1}, "ifri_mini_ml_lib.metrics.bias_evaluation.selection_rate_per_group": {"tf": 1}, "ifri_mini_ml_lib.metrics.bias_evaluation.demographic_parity_ratio": {"tf": 1}, "ifri_mini_ml_lib.metrics.bias_evaluation.demographic_parity_difference": {"tf": 1}}, "df": 5, "s": {"docs": {"ifri_mini_ml_lib.classification.LogisticRegression": {"tf": 1}, "ifri_mini_ml_lib.metrics.bias_evaluation.selection_rate": {"tf": 1}, "ifri_mini_ml_lib.metrics.bias_evaluation.selection_rate_per_group": {"tf": 1}, "ifri_mini_ml_lib.metrics.bias_evaluation.demographic_parity_ratio": {"tf": 1}, "ifri_mini_ml_lib.metrics.bias_evaluation.demographic_parity_difference": {"tf": 1}}, "df": 5}}}}}, "l": {"docs": {}, "df": 0, "l": {"docs": {"ifri_mini_ml_lib.metrics.evaluation_metrics.calculate_silhouette": {"tf": 1}}, "df": 1}}}, "a": {"docs": {}, "df": 0, "s": {"docs": {"ifri_mini_ml_lib.preprocessing.preparation.StandardScaler": {"tf": 1}, "ifri_mini_ml_lib.preprocessing.preparation.StandardScaler.transform": {"tf": 1}, "ifri_mini_ml_lib.preprocessing.preparation.StandardScaler.inverse_transform": {"tf": 1}}, "df": 3}}}, "x": {"docs": {"ifri_mini_ml_lib.classification.DecisionTree.fit": {"tf": 1.4142135623730951}, "ifri_mini_ml_lib.classification.DecisionTree.predict": {"tf": 1.4142135623730951}, "ifri_mini_ml_lib.classification.KNN": {"tf": 2}, "ifri_mini_ml_lib.classification.KNN.fit": {"tf": 1}, "ifri_mini_ml_lib.classification.KNN.predict": {"tf": 1}, "ifri_mini_ml_lib.classification.LogisticRegression": {"tf": 1.7320508075688772}, "ifri_mini_ml_lib.classification.LogisticRegression.fit": {"tf": 1}, "ifri_mini_ml_lib.classification.LogisticRegression.predict_proba": {"tf": 1}, "ifri_mini_ml_lib.classification.LogisticRegression.predict": {"tf": 1}, "ifri_mini_ml_lib.clustering.KMeans": {"tf": 1.7320508075688772}, "ifri_mini_ml_lib.clustering.KMeans.fit": {"tf": 1.7320508075688772}, "ifri_mini_ml_lib.clustering.KMeans.predict": {"tf": 1.7320508075688772}, "ifri_mini_ml_lib.clustering.KMeans.fit_predict": {"tf": 2.23606797749979}, "ifri_mini_ml_lib.clustering.KMeans.plot_clusters": {"tf": 1.4142135623730951}, "ifri_mini_ml_lib.model_selection.BaggingClassifier": {"tf": 1.7320508075688772}, "ifri_mini_ml_lib.model_selection.BaggingClassifier.fit": {"tf": 1.4142135623730951}, "ifri_mini_ml_lib.model_selection.BaggingClassifier.predict": {"tf": 1.4142135623730951}, "ifri_mini_ml_lib.model_selection.BaggingRegressor": {"tf": 1.7320508075688772}, "ifri_mini_ml_lib.model_selection.BaggingRegressor.fit": {"tf": 1.4142135623730951}, "ifri_mini_ml_lib.model_selection.BaggingRegressor.predict": {"tf": 1.4142135623730951}, "ifri_mini_ml_lib.model_selection.BayesianSearchCV.fit": {"tf": 1.4142135623730951}, "ifri_mini_ml_lib.model_selection.GridSearchCV.fit": {"tf": 1.4142135623730951}, "ifri_mini_ml_lib.model_selection.RandomSearchCV": {"tf": 1.4142135623730951}, "ifri_mini_ml_lib.model_selection.RandomSearchCV.fit": {"tf": 1.4142135623730951}, "ifri_mini_ml_lib.neural_networks.MLPClassifier.fit": {"tf": 1}, "ifri_mini_ml_lib.neural_networks.MLPClassifier.predict": {"tf": 1.4142135623730951}, "ifri_mini_ml_lib.neural_networks.MLPClassifier.predict_proba": {"tf": 1}, "ifri_mini_ml_lib.neural_networks.MLPClassifier.score": {"tf": 1}, "ifri_mini_ml_lib.neural_networks.MLPRegressor.fit": {"tf": 1}, "ifri_mini_ml_lib.neural_networks.MLPRegressor.predict": {"tf": 1.4142135623730951}, "ifri_mini_ml_lib.neural_networks.MLPRegressor.score": {"tf": 1}, "ifri_mini_ml_lib.preprocessing.dimensionality_reduction.PCA.fit": {"tf": 1}, "ifri_mini_ml_lib.preprocessing.dimensionality_reduction.PCA.transform": {"tf": 1}, "ifri_mini_ml_lib.preprocessing.dimensionality_reduction.PCA.fit_transform": {"tf": 1}, "ifri_mini_ml_lib.preprocessing.dimensionality_reduction.TSNE.fit": {"tf": 1}, "ifri_mini_ml_lib.preprocessing.dimensionality_reduction.TSNE.fit_transform": {"tf": 1}, "ifri_mini_ml_lib.preprocessing.dimensionality_reduction.TSNE.generate_test_data": {"tf": 1.4142135623730951}, "ifri_mini_ml_lib.preprocessing.dimensionality_reduction.TSNE.plot_results": {"tf": 1}, "ifri_mini_ml_lib.preprocessing.preparation.MinMaxScaler.fit": {"tf": 1}, "ifri_mini_ml_lib.preprocessing.preparation.MinMaxScaler.transform": {"tf": 1}, "ifri_mini_ml_lib.preprocessing.preparation.MinMaxScaler.fit_transform": {"tf": 1}, "ifri_mini_ml_lib.preprocessing.preparation.MinMaxScaler.inverse_transform": {"tf": 1}, "ifri_mini_ml_lib.preprocessing.preparation.MissingValueHandler.remove_missing": {"tf": 1}, "ifri_mini_ml_lib.preprocessing.preparation.MissingValueHandler.impute_statistical": {"tf": 1}, "ifri_mini_ml_lib.preprocessing.preparation.MissingValueHandler.impute_default": {"tf": 1}, "ifri_mini_ml_lib.preprocessing.preparation.MissingValueHandler.impute_knn": {"tf": 1}, "ifri_mini_ml_lib.preprocessing.preparation.MissingValueHandler.impute_regression": {"tf": 1}, "ifri_mini_ml_lib.preprocessing.preparation.StandardScaler.fit": {"tf": 1}, "ifri_mini_ml_lib.preprocessing.preparation.StandardScaler.transform": {"tf": 1.4142135623730951}, "ifri_mini_ml_lib.preprocessing.preparation.StandardScaler.fit_transform": {"tf": 1.4142135623730951}, "ifri_mini_ml_lib.preprocessing.preparation.StandardScaler.inverse_transform": {"tf": 1.4142135623730951}, "ifri_mini_ml_lib.preprocessing.preparation.CategoricalEncoder.fit": {"tf": 1}, "ifri_mini_ml_lib.preprocessing.preparation.CategoricalEncoder.transform": {"tf": 1}, "ifri_mini_ml_lib.preprocessing.preparation.CategoricalEncoder.fit_transform": {"tf": 1}, "ifri_mini_ml_lib.preprocessing.preparation.DataSplitter.train_test_split": {"tf": 4.242640687119285}, "ifri_mini_ml_lib.preprocessing.preparation.DataSplitter.stratified_train_test_split": {"tf": 3.605551275463989}, "ifri_mini_ml_lib.preprocessing.preparation.DataSplitter.temporal_train_test_split": {"tf": 4.242640687119285}, "ifri_mini_ml_lib.preprocessing.preparation.DataSplitter.k_fold_split": {"tf": 2.8284271247461903}, "ifri_mini_ml_lib.regression.LinearRegression.fit": {"tf": 1}, "ifri_mini_ml_lib.regression.LinearRegression.predict": {"tf": 1}, "ifri_mini_ml_lib.regression.PolynomialRegression.fit": {"tf": 1}, "ifri_mini_ml_lib.regression.PolynomialRegression.predict": {"tf": 1}, "ifri_mini_ml_lib.regression.SVR.linear_kernel": {"tf": 1}, "ifri_mini_ml_lib.regression.SVR.polynomial_kernel": {"tf": 1}, "ifri_mini_ml_lib.regression.SVR.rbf_kernel": {"tf": 1}, "ifri_mini_ml_lib.regression.SVR.sigmoid_kernel": {"tf": 1}, "ifri_mini_ml_lib.regression.SVR.fit": {"tf": 1.4142135623730951}, "ifri_mini_ml_lib.regression.SVR.predict": {"tf": 1.4142135623730951}}, "df": 68}, "y": {"docs": {"ifri_mini_ml_lib.classification.DecisionTree.fit": {"tf": 1.4142135623730951}, "ifri_mini_ml_lib.classification.KNN": {"tf": 1.4142135623730951}, "ifri_mini_ml_lib.classification.KNN.fit": {"tf": 1}, "ifri_mini_ml_lib.classification.LogisticRegression": {"tf": 1}, "ifri_mini_ml_lib.classification.LogisticRegression.fit": {"tf": 1}, "ifri_mini_ml_lib.metrics.bias_evaluation.selection_rate": {"tf": 1.4142135623730951}, "ifri_mini_ml_lib.metrics.bias_evaluation.selection_rate_per_group": {"tf": 1.4142135623730951}, "ifri_mini_ml_lib.metrics.bias_evaluation.demographic_parity_ratio": {"tf": 1}, "ifri_mini_ml_lib.metrics.bias_evaluation.demographic_parity_difference": {"tf": 1}, "ifri_mini_ml_lib.metrics.bias_evaluation.tpr_fpr_by_group": {"tf": 1.4142135623730951}, "ifri_mini_ml_lib.metrics.bias_evaluation.equalized_odds_ratio": {"tf": 1.4142135623730951}, "ifri_mini_ml_lib.metrics.bias_evaluation.equalized_odds_difference": {"tf": 1.4142135623730951}, "ifri_mini_ml_lib.metrics.evaluation_metrics.confusion_matrix": {"tf": 1.4142135623730951}, "ifri_mini_ml_lib.metrics.evaluation_metrics.accuracy": {"tf": 1.4142135623730951}, "ifri_mini_ml_lib.metrics.evaluation_metrics.precision": {"tf": 1.4142135623730951}, "ifri_mini_ml_lib.metrics.evaluation_metrics.recall": {"tf": 1.4142135623730951}, "ifri_mini_ml_lib.metrics.evaluation_metrics.f1_score": {"tf": 1.4142135623730951}, "ifri_mini_ml_lib.model_selection.BaggingClassifier": {"tf": 1.7320508075688772}, "ifri_mini_ml_lib.model_selection.BaggingClassifier.fit": {"tf": 1.4142135623730951}, "ifri_mini_ml_lib.model_selection.BaggingClassifier.predict": {"tf": 1}, "ifri_mini_ml_lib.model_selection.BaggingRegressor": {"tf": 1.7320508075688772}, "ifri_mini_ml_lib.model_selection.BaggingRegressor.fit": {"tf": 1.4142135623730951}, "ifri_mini_ml_lib.model_selection.BaggingRegressor.predict": {"tf": 1}, "ifri_mini_ml_lib.model_selection.BayesianSearchCV.fit": {"tf": 1.4142135623730951}, "ifri_mini_ml_lib.model_selection.GridSearchCV.fit": {"tf": 1.4142135623730951}, "ifri_mini_ml_lib.model_selection.RandomSearchCV": {"tf": 1}, "ifri_mini_ml_lib.model_selection.RandomSearchCV.fit": {"tf": 1.4142135623730951}, "ifri_mini_ml_lib.neural_networks.MLPClassifier.fit": {"tf": 1}, "ifri_mini_ml_lib.neural_networks.MLPClassifier.predict": {"tf": 1}, "ifri_mini_ml_lib.neural_networks.MLPClassifier.score": {"tf": 1}, "ifri_mini_ml_lib.neural_networks.MLPRegressor.fit": {"tf": 1}, "ifri_mini_ml_lib.neural_networks.MLPRegressor.predict": {"tf": 1}, "ifri_mini_ml_lib.neural_networks.MLPRegressor.score": {"tf": 1}, "ifri_mini_ml_lib.preprocessing.dimensionality_reduction.TSNE.generate_test_data": {"tf": 1.4142135623730951}, "ifri_mini_ml_lib.preprocessing.dimensionality_reduction.TSNE.plot_results": {"tf": 1.4142135623730951}, "ifri_mini_ml_lib.preprocessing.preparation.CategoricalEncoder.fit": {"tf": 1}, "ifri_mini_ml_lib.preprocessing.preparation.CategoricalEncoder.fit_transform": {"tf": 1}, "ifri_mini_ml_lib.preprocessing.preparation.DataSplitter.train_test_split": {"tf": 3.4641016151377544}, "ifri_mini_ml_lib.preprocessing.preparation.DataSplitter.stratified_train_test_split": {"tf": 3.605551275463989}, "ifri_mini_ml_lib.preprocessing.preparation.DataSplitter.temporal_train_test_split": {"tf": 3.4641016151377544}, "ifri_mini_ml_lib.preprocessing.preparation.DataSplitter.k_fold_split": {"tf": 2.8284271247461903}, "ifri_mini_ml_lib.regression.LinearRegression.fit": {"tf": 1}, "ifri_mini_ml_lib.regression.PolynomialRegression.fit": {"tf": 1}, "ifri_mini_ml_lib.regression.SVR.linear_kernel": {"tf": 1}, "ifri_mini_ml_lib.regression.SVR.polynomial_kernel": {"tf": 1}, "ifri_mini_ml_lib.regression.SVR.rbf_kernel": {"tf": 1}, "ifri_mini_ml_lib.regression.SVR.sigmoid_kernel": {"tf": 1}, "ifri_mini_ml_lib.regression.SVR.fit": {"tf": 1.4142135623730951}, "ifri_mini_ml_lib.regression.SVR.predict": {"tf": 1}}, "df": 49, "e": {"docs": {}, "df": 0, "t": {"docs": {"ifri_mini_ml_lib.classification.DecisionTree.predict": {"tf": 1}}, "df": 1}}}, "z": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "o": {"docs": {"ifri_mini_ml_lib.neural_networks.MLPClassifier.__init__": {"tf": 1}, "ifri_mini_ml_lib.neural_networks.MLPRegressor.__init__": {"tf": 1}}, "df": 2}}}}}}}, "pipeline": ["trimmer"], "_isPrebuiltIndex": true};

    // mirrored in build-search-index.js (part 1)
    // Also split on html tags. this is a cheap heuristic, but good enough.
    elasticlunr.tokenizer.setSeperator(/[\s\-.;&_'"=,()]+|<[^>]*>/);

    let searchIndex;
    if (docs._isPrebuiltIndex) {
        console.info("using precompiled search index");
        searchIndex = elasticlunr.Index.load(docs);
    } else {
        console.time("building search index");
        // mirrored in build-search-index.js (part 2)
        searchIndex = elasticlunr(function () {
            this.pipeline.remove(elasticlunr.stemmer);
            this.pipeline.remove(elasticlunr.stopWordFilter);
            this.addField("qualname");
            this.addField("fullname");
            this.addField("annotation");
            this.addField("default_value");
            this.addField("signature");
            this.addField("bases");
            this.addField("doc");
            this.setRef("fullname");
        });
        for (let doc of docs) {
            searchIndex.addDoc(doc);
        }
        console.timeEnd("building search index");
    }

    return (term) => searchIndex.search(term, {
        fields: {
            qualname: {boost: 4},
            fullname: {boost: 2},
            annotation: {boost: 2},
            default_value: {boost: 2},
            signature: {boost: 2},
            bases: {boost: 2},
            doc: {boost: 1},
        },
        expand: true
    });
})();